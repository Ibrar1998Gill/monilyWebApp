{"version":3,"sources":["webpack:///src/app/components/apps/dashboard/dashboard-routing.module.ts","webpack:///src/app/components/apps/dashboard/dashboard.component.html","webpack:///src/app/components/apps/dashboard/dashboard.component.ts","webpack:///src/app/components/apps/dashboard/dashboard.module.ts","webpack:///src/app/shared/services/helper.service.ts"],"names":["routes","path","children","component","dashboardComponent","dashboardRoutingModule","RouterModule","cd","http","localService","helperService","toasterService","secondary_color","localStorage","getItem","primary_color","mutablePieData","totalExpenses","profitAndLoss","otherIncome","otherExpenses","YearlyprofitAndLoss","MonthlyprofitAndLoss","QuaterlyprofitAndLoss","expensesBar","pieArray","pieChart3","chartType","dataTable","options","width","height","colors","backgroundColor","bar","series","name","data","noData","text","chart","type","plotOptions","horizontal","dataLabels","enabled","style","color","formatter","val","opt","toString","replace","xaxis","categories","lastyear","format","startDate","Date","endDate","ccComponent","draw","observe","getJsonValue","companyid","getExpenses","UniversalService","res","getMonilyData","id","subscribe","Rows","Row","map","v","hasOwnProperty","group","Math","round","Summary","ColData","value","loopAppendRows","updateSeries","redrawChart","error","err","key","errors","console","log","length","array","e","push","s","dashboardModule","Ng2GoogleChartsModule","CommonModule","NgxDropzoneModule","NgSelectModule","FormsModule","ReactiveFormsModule","SharedModule","NgApexchartsModule","HelperService","httpService","monthNames","authToken","getYearlyExpenses","expenses","yearlyExpenses","expense","currentYear","getFullYear","year","parseFloat","Amount","toFixed","getQuarterlyExpenses","quarterlyExpenses","month","getMonth","getCurrentMonthExpenses","currentMonthExpenses","dateMomentObject","dateObject","currentMonth","getMonthlyExpenses","frontColor","gradientColor","monthlyExpensesPaid","monthlyExpensesUnpaid","date","TotalAmt","i","chartData","Object","keys","label","spacing","labelWidth","top10ExpensesFunc","sort","a","b","bAmt","aAmt","slice","calculateDays","oldDate","time","floor","formattedDate","day","uploadImage","event","remarks","file","target","files","formData","FormData","append","userId","numberWithCommas","x","inputDate","dd","substring","mm","yyyy"],"mappings":"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","file":"src_app_components_apps_dashboard_dashboard_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { dashboardComponent } from './dashboard.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:dashboardComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class dashboardRoutingModule { }\r\n","<app-breadcrumb [title]=\"'Dashboard'\" [active_item]=\"'Dashboard'\"></app-breadcrumb>\r\n<div class=\"container\" *ngIf=\"this.companyid != null\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6 col-xl-6 col-lg-6\">\r\n      <div class=\"card o-hidden cstmCard\">\r\n        <div class=\"bg-primary b-r-4 card-body minHeight\">\r\n          <div class=\"media static-top-widget\">\r\n            <div class=\"media-body\">\r\n              <div class=\"d-flex flex-wrap align-items-baseline\">\r\n                <h3 class=\"m-0\">Profit And Loss / </h3> <span>Annually</span>\r\n              </div>\r\n              <span class=\"d-flex align-items-center\">\r\n                <!-- <app-feather-icons class=\"margin1 feather-10\" [icon]=\"'dollar-sign'\"></app-feather-icons> -->\r\n                <span class=\"mb-0 counter\">{{profitAndLoss + expensesBar | currency:'USD'}}</span>\r\n              </span>\r\n              <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n              <div id=\"basic-bar\" class=\"mt-3\">\r\n                <apx-chart #chart [series]=\"bar.series\" [chart]=\"bar.chart\" [dataLabels]=\"bar.dataLabels\"\r\n                  [plotOptions]=\"bar.plotOptions\" [xaxis]=\"bar.xaxis\" [colors]=\"bar.colors\"></apx-chart>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-xl-6 col-lg-6\">\r\n      <div class=\"card o-hidden cstmCard\">\r\n        <div class=\"bg-primary b-r-4 card-body minHeight\">\r\n          <div class=\"media static-top-widget\">\r\n            <div class=\"media-body\">\r\n              <div class=\"d-flex flex-wrap align-items-baseline\">\r\n                <h3 class=\"m-0\">Expenses / </h3> <span>Annually</span>\r\n              </div>\r\n              <span class=\"d-flex align-items-center\">\r\n                <!-- <app-feather-icons class=\"margin1\" [icon]=\"'dollar-sign'\"></app-feather-icons> -->\r\n                <span class=\"mb-0 counter\">{{totalExpenses | currency:'USD'}}</span>\r\n              </span>\r\n              <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n              <div class=\"mt-3\">\r\n                <google-chart [data]=\"pieChart3\"></google-chart>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-xl-6 col-lg-6\">\r\n      <div class=\"card o-hidden cstmCard\">\r\n        <div class=\"bg-primary b-r-4 card-body\">\r\n          <div class=\"media static-top-widget flex-column\">\r\n            <div class=\"d-flex w-100 flex-wrap align-items-baseline\">\r\n              <h3>Revenue / </h3> <span>Annually</span>\r\n            </div>\r\n            <div class=\"media-body w-100\">\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Yearly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{YearlyprofitAndLoss == null ? (0 | currency:'USD') : YearlyprofitAndLoss | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Quaterly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{QuaterlyprofitAndLoss == null ? (0 | currency:'USD') : QuaterlyprofitAndLoss | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Monthly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{MonthlyprofitAndLoss == null ? (0 | currency:'USD') : MonthlyprofitAndLoss | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-xl-6 col-lg-6\">\r\n      <div class=\"card o-hidden cstmCard\">\r\n        <div class=\"bg-primary b-r-4 card-body\">\r\n          <div class=\"media static-top-widget flex-column\">\r\n            <div class=\"d-flex w-100 flex-wrap align-items-baseline\">\r\n              <h3>Payments / </h3> <span>Annually</span>\r\n            </div>\r\n            <div class=\"media-body w-100\">\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Yearly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{yearlyDataPayments == null ? (0 | currency:'USD') : yearlyDataPayments | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Quaterly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{quaterlyDataPayments == null ? (0 | currency:'USD') : quaterlyDataPayments | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Monthly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{monthlyDataPayments == null ? (0 | currency:'USD') : monthlyDataPayments | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { UniversalService } from \"src/app/shared/services/universal.service\";\r\nimport * as $ from \"jquery\";\r\nimport { AuthService } from \"src/app/shared/services/firebase/auth.service\";\r\nimport { LocalService } from \"src/app/shared/services/local.service\";\r\nimport { HelperService } from \"../../../shared/services/helper.service\";\r\nimport * as moment from \"moment\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n// import * as top10ExpensesFunc from '../../../../helpers/helper'\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.scss\"],\r\n})\r\nexport class dashboardComponent implements OnInit {\r\n  @ViewChild(\"chart\") chart;\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    private http: AuthService,\r\n    private localService: LocalService,\r\n    private helperService: HelperService,\r\n    private toasterService: ToastrService\r\n  ) { }\r\n  secondary_color = localStorage.getItem(\"secondary_color\") || \"#f73164\";\r\n  primary_color = localStorage.getItem(\"primary_color\") || \"#5330ab\";\r\n  companyid: any;\r\n  mutablePieData: any = {};\r\n  totalExpenses: number = 0;\r\n  profitAndLoss: number = 0;\r\n  otherIncome: number = 0;\r\n  otherExpenses: number = 0;\r\n  YearlyprofitAndLoss: number = 0;\r\n  MonthlyprofitAndLoss: number = 0;\r\n  QuaterlyprofitAndLoss: number = 0;\r\n  expensesBar: number = 0;\r\n  monthlyDataRevenue: any;\r\n  yearlyDataRevenue: any;\r\n  quaterlyDataRevenue: any;\r\n  monthlyDataPayments: any;\r\n  yearlyDataPayments: any;\r\n  quaterlyDataPayments: any;\r\n  pieArray: any = [[\"Task\", \"expenses\"]];\r\n  pieChart3: any = {\r\n    chartType: \"PieChart\",\r\n    dataTable: this.pieArray,\r\n    options: {\r\n      width: \"100%\",\r\n      height: 200,\r\n      colors: [\r\n        \"#f8d62b\",\r\n        \"#51bb25\",\r\n        \"#a927f9\",\r\n        this.secondary_color,\r\n        this.primary_color,\r\n      ],\r\n      backgroundColor: \"#FEF5ED\",\r\n    },\r\n  };\r\n  bar: any = {\r\n    series: [\r\n      {\r\n        name: \"USD\",\r\n        data: [this.profitAndLoss,this.otherIncome, this.expensesBar,this.otherIncome],\r\n      },\r\n    ],\r\n    noData: {\r\n      text: 'Loading...'\r\n    },\r\n    colors: [this.secondary_color],\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 185,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      style: {\r\n        color:\"black\"\r\n      },\r\n      formatter: function(val, opt) {\r\n        return \"$\" + val?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    }\r\n    },\r\n    xaxis: {\r\n      categories: [\"Income\",\"Other Income\", \"Expenses\", \"Other Expenses\"],\r\n    },\r\n  };\r\n  lastyear: any = moment().format('YYYY')\r\n  startDate: any = moment(new Date(this.lastyear, 0, 1)).format('YYYY-MM-DD')\r\n  endDate: any = moment().format('YYYY-MM-DD')\r\n  redrawChart() {\r\n    let ccComponent = this.pieChart3.component;\r\n    //force a redraw\r\n    ccComponent.draw();\r\n  }\r\n  ngOnInit(): void {\r\n    this.observe();\r\n    if (this.localService.getJsonValue(\"company\") != null) {\r\n      this.companyid = this.localService.getJsonValue(\"company\");\r\n    }\r\n    if (this.companyid != null) {\r\n      this.getExpenses();\r\n      // this.dashboardCharts();\r\n      // this.revenueGenerate();\r\n      // this.paymentGenerate();\r\n    } else return;\r\n    \r\n  }\r\n\r\n  // observing company selected or not\r\n  async observe() {\r\n    UniversalService.companySelected.subscribe((res) => {\r\n      if (res) {\r\n        this.companyid = this.localService.getJsonValue(\"company\");\r\n        this.getExpenses();\r\n        // this.dashboardCharts();\r\n        // this.revenueGenerate();\r\n        // this.paymentGenerate();\r\n      } else return;\r\n    });\r\n  }\r\n  getExpenses() {\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`, true).subscribe((res: any) => {\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.profitAndLoss = Math.round(v.Summary.ColData[1].value);\r\n              }\r\n            }\r\n            if (v.group == \"OtherIncome\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.otherIncome = Math.round(v.Summary.ColData[1].value);\r\n              }\r\n            }\r\n            if (v.group == \"OtherExpenses\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.otherExpenses = Math.round(v.Summary.ColData[1].value);\r\n              }\r\n            }\r\n            if (v.group == \"Expenses\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.expensesBar = Math.round(v.Summary.ColData[1].value);\r\n              }\r\n              if (v?.hasOwnProperty('Rows')) {\r\n                this.loopAppendRows(v, this.pieArray)\r\n              }\r\n            }\r\n          }\r\n          \r\n        });\r\n        this.chart?.updateSeries([\r\n          {\r\n            name: \"USD\",\r\n            data: [this.profitAndLoss,this.otherIncome, this.expensesBar,this.otherExpenses],\r\n          },\r\n        ]);\r\n        this.redrawChart()\r\n        this.totalExpenses = this.expensesBar;\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }, err => {\r\n      if (err.hasOwnProperty('error')) {\r\n        if (err?.error?.hasOwnProperty('errors')) {\r\n          for (const key in err?.error?.errors) {\r\n            this.toasterService.error(err?.error?.errors[key])\r\n          }\r\n        }\r\n      }\r\n      console.log('====================================');\r\n      console.log(err, \"error hai\");\r\n      console.log('====================================');\r\n    }),err=>{\r\n      console.log(err);\r\n      \r\n    }\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&summarize_column_by=Quarter&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`,true).subscribe((res:any)=>{\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.YearlyprofitAndLoss = Math.round(v?.Summary?.ColData[v?.Summary?.ColData?.length - 1]?.value);\r\n                this.QuaterlyprofitAndLoss = Math.round(v?.Summary?.ColData[v?.Summary?.ColData?.length - 2]?.value);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }),err=>{\r\n      console.log(err);\r\n    }\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&summarize_column_by=Month&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`,true).subscribe((res:any)=>{\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.MonthlyprofitAndLoss = v?.Summary?.ColData[v?.Summary?.ColData?.length - 2]?.value;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }),err=>{\r\n      console.log(err);\r\n    }\r\n  }\r\n  loopAppendRows(v, array){\r\n    v?.Rows?.Row?.map((e) => {\r\n      if (e?.hasOwnProperty('ColData')) {\r\n        array.push([e?.ColData[0]?.value ? e?.ColData[0]?.value : null, Math.round(e?.ColData[1]?.value ? e?.ColData[1]?.value : 0)]);\r\n      }\r\n      else {\r\n        e?.Rows?.Row?.map((s) => {\r\n          this.loopAppendRows(s, array)\r\n        })\r\n      }\r\n    })\r\n  }\r\n  // revenueGenerate() {\r\n  //   this.http.getMonilyData(`query?id=${this.companyid.id}&_query=select * from invoice startposition 1`, true).subscribe((res: any) => {\r\n  //     let mutableData = [];\r\n  //     if (res?.data != null) {\r\n  //       res.data.QueryResponse.Invoice.map((inv) => {\r\n  //         let txnDate = moment(inv.TxnDate).format(\"MM/DD/YYYY\");\r\n  //         let dueDate = this.helperService.calculateDays(inv.DueDate);\r\n  //         mutableData.push({\r\n  //           Date: txnDate,\r\n  //           num: inv.DocNumber,\r\n  //           Customer: inv.CustomerRef.name,\r\n  //           Amount: inv.Balance,\r\n  //           TotalAmt: inv.TotalAmt,\r\n  //           Status: dueDate,\r\n  //           id: inv.Id,\r\n  //         });\r\n  //       });\r\n  //       this.monthlyDataRevenue =\r\n  //         this.helperService.getCurrentMonthExpenses(mutableData);\r\n  //       this.yearlyDataRevenue = this.helperService.getYearlyExpenses(mutableData);\r\n  //       const mutableQuarterly =\r\n  //         this.helperService.getQuarterlyExpenses(mutableData);\r\n  //       this.quaterlyDataRevenue = parseFloat(\r\n  //         mutableQuarterly[Object.keys(mutableQuarterly).pop()]\r\n  //       ).toFixed(2);\r\n  //     }\r\n  //     else {\r\n  //       this.toasterService.error(\"No data found, please try again after few minutes\")\r\n  //     }\r\n  //   }, err => {\r\n  //     if (err.hasOwnProperty('error')) {\r\n  //       if (err?.error?.hasOwnProperty('errors')) {\r\n  //         for (const key in err?.error?.errors) {\r\n  //           this.toasterService.error(err?.error?.errors[key])\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     console.log(err);\r\n  //   })\r\n  // }\r\n  // paymentGenerate() {\r\n  //   this.http.getMonilyData(`query?id=${this.companyid.id}&_query=select * from Bill startposition 1`, true).subscribe((res: any) => {\r\n  //     let mutableData = [];\r\n  //     if (res?.data != null) {\r\n  //       res.data.QueryResponse.Bill.map((bill) => {\r\n  //         let txnDate = new Date(bill.TxnDate).toLocaleString();\r\n  //         txnDate = txnDate.substring(0, txnDate.indexOf(\",\"));\r\n  //         txnDate = this.helperService.formattedDate(bill.TxnDate);\r\n  //         const vendorName = bill.VendorRef.name;\r\n  //         const pastDue = this.helperService.calculateDays(bill.DueDate);\r\n  //         mutableData.push({\r\n  //           Date: txnDate,\r\n  //           Customer: vendorName,\r\n  //           Status: this.helperService.calculateDays(bill.DueDate),\r\n  //           pastDue,\r\n  //           Amount: bill.Balance,\r\n  //           TotalAmt: bill.TotalAmt,\r\n  //           id: bill.Id,\r\n  //         });\r\n  //       });\r\n  //       this.monthlyDataPayments =\r\n  //         this.helperService.getCurrentMonthExpenses(mutableData);\r\n  //       this.yearlyDataPayments = this.helperService.getYearlyExpenses(mutableData);\r\n  //       const mutableQuarterly =\r\n  //         this.helperService.getQuarterlyExpenses(mutableData);\r\n  //       this.quaterlyDataPayments = parseFloat(\r\n  //         mutableQuarterly[Object.keys(mutableQuarterly).pop()]\r\n  //       ).toFixed(2);\r\n  //     }\r\n  //     else {\r\n  //       this.toasterService.error(\"No data found, please try again after few minutes\")\r\n  //     }\r\n  //   }, err => {\r\n  //     if (err.hasOwnProperty('error')) {\r\n  //       if (err?.error?.hasOwnProperty('errors')) {\r\n  //         for (const key in err?.error?.errors) {\r\n  //           this.toasterService.error(err?.error?.errors[key])\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     console.log(err);\r\n  //   })\r\n  // }\r\n  // dashboardCharts() {\r\n  //   this.http.getMonilyData(`query?id=${this.companyid.id}&_query=select * from purchase startposition 1`, true).subscribe((res: any) => {\r\n  //     let ExpenseDate = []\r\n  //     if (res?.data != null) {\r\n  //       res?.data?.QueryResponse?.Purchase.map(expense => {\r\n  //         ExpenseDate.push(expense)\r\n  //       })\r\n  //       let prices = [];\r\n  //       ExpenseDate.map((expense) => {\r\n  //         let category =\r\n  //           expense.Line[0].AccountBasedExpenseLineDetail.AccountRef.name;\r\n  //         if (this.mutablePieData[category]) {\r\n  //           this.mutablePieData[category] += parseFloat(expense.TotalAmt);\r\n  //         } else {\r\n  //           this.mutablePieData[category] = parseFloat(expense.TotalAmt);\r\n  //         }\r\n  //       });\r\n\r\n  //       var sum = prices.reduce(function (a, b) {\r\n  //         return a + b;\r\n  //       }, 0);\r\n  //       this.totalExpenses = this.expensesBar;\r\n  //       this.redrawChart()\r\n  //     }\r\n  //     else {\r\n  //       this.toasterService.error(\"No data found, please try again after few minutes\")\r\n  //     }\r\n  //   }, err => {\r\n  //     if (err.hasOwnProperty('error')) {\r\n  //       if (err?.error?.hasOwnProperty('errors')) {\r\n  //         for (const key in err?.error?.errors) {\r\n  //           this.toasterService.error(err?.error?.errors[key])\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     console.log(err);\r\n  //   })\r\n  // }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport {NgApexchartsModule } from 'ng-apexcharts'\r\nimport {dashboardComponent} from './dashboard.component'\r\nimport {dashboardRoutingModule} from './dashboard-routing.module'\r\nimport { Ng2GoogleChartsModule } from 'ng2-google-charts';\r\n\r\n@NgModule({\r\n  declarations: [dashboardComponent],\r\n  imports: [\r\n    Ng2GoogleChartsModule,\r\n    CommonModule,\r\n    dashboardRoutingModule,\r\n    NgxDropzoneModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgApexchartsModule\r\n  ],\r\n})\r\nexport class dashboardModule { }\r\n","import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\nimport { AuthService } from './firebase/auth.service';\nimport { LocalService } from './local.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n  monthNames = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ]\n  constructor(private httpService: AuthService, private localService:LocalService) {\n   }\n  public authToken = this.localService.getJsonValue('authUser')\n  // yearly quaterly monthly sepration\n  getYearlyExpenses = expenses => {\n    const yearlyExpenses = {};\n    expenses.map(expense => {\n      const currentYear = new Date().getFullYear();\n      const year = new Date(expense.Date).getFullYear();\n      if (year === currentYear) {\n        if (yearlyExpenses[year]) {\n          yearlyExpenses[year] += parseFloat(expense.Amount);\n        } else {\n          yearlyExpenses[year] = parseFloat(expense.Amount);\n        }\n      }\n    });\n    if (yearlyExpenses == null) {\n      return 0\n    }\n    else {\n      return parseFloat(yearlyExpenses[new Date().getFullYear()]).toFixed(2);\n    }\n  };\n  getQuarterlyExpenses = expenses => {\n    const quarterlyExpenses = {};\n    expenses.map(expense => {\n      const month = new Date(expense.Date).getMonth();\n      const year = new Date(expense.Date).getFullYear();\n      const currentYear = new Date().getFullYear();\n      if (year === currentYear) {\n        if (month <= 2) {\n          if (quarterlyExpenses['Q1']) {\n            quarterlyExpenses['Q1'] += parseFloat(expense.Amount);\n          } else {\n            quarterlyExpenses['Q1'] = parseFloat(expense.Amount);\n          }\n        } else if (month <= 5) {\n          if (quarterlyExpenses['Q2']) {\n            quarterlyExpenses['Q2'] += parseFloat(expense.Amount);\n          } else {\n            quarterlyExpenses['Q2'] = parseFloat(expense.Amount);\n          }\n        } else if (month <= 8) {\n          if (quarterlyExpenses['Q3']) {\n            quarterlyExpenses['Q3'] += parseFloat(expense.Amount);\n          } else {\n            quarterlyExpenses['Q3'] = parseFloat(expense.Amount);\n          }\n        } else {\n          if (quarterlyExpenses['Q4']) {\n            quarterlyExpenses['Q4'] += parseFloat(expense.Amount);\n          } else {\n            quarterlyExpenses['Q4'] = parseFloat(expense.Amount);\n          }\n        }\n      }\n    });\n    return quarterlyExpenses;\n  }\n  getCurrentMonthExpenses = expenses => {\n    const currentMonthExpenses = {};\n    expenses.map(expense => {\n      var dateMomentObject = expense.Date\n      var dateObject = new Date(dateMomentObject)\n      const month = dateObject.getMonth();\n      const currentMonth = new Date().getMonth() + 1;\n      if (month === currentMonth) {\n        if (currentMonthExpenses[month]) {\n          currentMonthExpenses[month] += parseFloat(expense.Amount);\n        } else {\n          currentMonthExpenses[month] = parseFloat(expense.Amount);\n        }\n      }\n    });\n    if (currentMonthExpenses == null) {\n      return 0\n    }\n    else return currentMonthExpenses[new Date().getMonth() - 1]\n  };\n  getMonthlyExpenses = (\n    expenses,\n    frontColor = '#006DFF',\n    gradientColor = '#009FFF',\n  ) => {\n    let monthlyExpensesPaid = {},\n      monthlyExpensesUnpaid = {};\n    expenses.map(expense => {\n      const date = new Date(expense.Date);\n      const month = date.getMonth();\n  \n      if (monthlyExpensesPaid[month]) {\n        monthlyExpensesPaid[month] +=\n          parseFloat(expense.TotalAmt) - parseFloat(expense.Amount);\n      } else if (!monthlyExpensesPaid[month])\n        monthlyExpensesPaid[month] =\n          parseFloat(expense.TotalAmt) - parseFloat(expense.Amount);\n      if (monthlyExpensesUnpaid[month]) {\n        monthlyExpensesUnpaid[month] += parseFloat(expense.Amount);\n      } else monthlyExpensesUnpaid[month] = parseFloat(expense.Amount);\n    });\n    // initialising the empty months with 0\n    for (let i = 0; i < new Date().getMonth(); i++) {\n      if (!monthlyExpensesPaid[i]) monthlyExpensesPaid[i] = 0;\n      if (!monthlyExpensesUnpaid[i]) monthlyExpensesUnpaid[i] = 0;\n    }\n    // yahan se krna hai\n    let chartData = [];\n    Object.keys(monthlyExpensesPaid).map(month => {\n      chartData.push({\n        value: monthlyExpensesPaid[month],\n        frontColor: \"yellow\",\n        gradientColor: \"yellow\",\n        label: this.monthNames[month],\n        spacing: 2,\n        labelWidth: 30,\n      });\n      chartData.push({\n        value: monthlyExpensesUnpaid[month],\n        frontColor: \"orange\",\n        gradientColor: \"orange\",\n      });\n    });\n    return chartData;\n  };\n  // top 10\n  top10ExpensesFunc = expenses => {\n    return expenses\n      .sort((a, b) => {\n        const bAmt = parseFloat(b.Amount);\n        const aAmt = parseFloat(a.Amount);\n        return bAmt - aAmt;\n      })\n      .slice(0, 10);\n  };\n  // calculate days\n  calculateDays = oldDate => {\n    const time = <any>new Date() - <any>new Date(oldDate);\n    return Math.floor(time / (1000 * 3600 * 24));\n  };\n  // format date\n  formattedDate = date => {\n    const dateMomentObject = moment(date, 'YYYY/MM/DD'); // 1st argument - string, 2nd argument - format\n    const day = dateMomentObject.format('DD');\n    const month = dateMomentObject.format('MM');\n    const year = dateMomentObject.format('YYYY');\n    return `${month}/${day}/${year}`;\n  };\n  // upload image\n  uploadImage = (event, remarks) =>{\n    const file:File = event.target.files[0];\n\n        if (file) {\n\n            // this.fileName = file.name;\n\n            const formData = new FormData();\n            formData.append('user_id', this.authToken.userId);\n            formData.append(\"file\", file);\n            this.httpService.uploadImage('uploadFile', formData).subscribe(res=>{\n              console.log('====================================');\n              console.log(res);\n              console.log('====================================');\n            }),err=>{\n              console.log('====================================');\n              console.log(err);\n              console.log('====================================');\n            }\n            // const upload$ = this.http.post(\"/api/thumbnail-upload\", formData);\n\n            // upload$.subscribe();\n        }\n  }\n  numberWithCommas = x => {\n    if (!x) return x;\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n  formatMMDDYY(inputDate) {\n    // var date = new Date(inputDate);\n    const dd = inputDate.substring(8, inputDate.length);\n    const mm = inputDate.substring(5, 7);\n    const yyyy = inputDate.substring(0, 4);\n    return `${mm}/${dd}/${yyyy}`;\n  }\n}\n"]}