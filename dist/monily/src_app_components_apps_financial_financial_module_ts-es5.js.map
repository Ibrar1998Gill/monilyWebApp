{"version":3,"sources":["webpack:///src/app/components/apps/financial/financial-routing.module.ts","webpack:///src/app/components/apps/financial/financial.component.html","webpack:///src/app/components/apps/financial/financial.component.ts","webpack:///src/app/components/apps/financial/financial.module.ts"],"names":["routes","path","children","component","financialComponent","financialRoutingModule","RouterModule","http","localService","toasterService","expenses","bank","AR","otherAsset","AP","CreditCards","equities","companyid","getJsonValue","getFinancial","getMonilyData","id","subscribe","res","console","log","data","Rows","Row","map","e","hasOwnProperty","group","s","salesHead","ColData","value","salesValue","totalIncomeHead","Summary","totalIncomeValue","ex","expenseHead","expenseValue","push","totalExpensesHead","totalExpensesValue","totalNetOperHead","totalNetOperValue","totalNetIncHead","totalNetIncValue","error","err","b","ba","balAss","totalCurrentAssetsHead","totalCurrentAssetsValue","totalAssetsHead","totalAssetsValue","currentLiablities","Ap","totalAPHead","totalAPValue","totalCreditCardsHead","totalCreditCardsValue","totalCurrentLiabilitiesHead","totalCurrentLiabilitiesValue","totalLiabilitiesHead","totalLiabilitiesValue","equity","totalEquityHead","totalEquityValue","totalLiabilitiesandEquityHead","totalLiabilitiesandEquityValue","financialModule","CommonModule","NgxDropzoneModule","CKEditorModule","NgSelectModule","FormsModule","ReactiveFormsModule","SharedModule","NgApexchartsModule"],"mappings":"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","file":"src_app_components_apps_financial_financial_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { financialComponent } from './financial.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:financialComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class financialRoutingModule { }\r\n","<app-breadcrumb [title]=\"'Financial Status'\" [active_item]=\"'Financial Status'\"></app-breadcrumb>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body default-accordion\">\r\n          <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"static-1\">\r\n            <ngb-panel title=\"Profit And Loss\" id=\"static-1\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12 mb-3\">\r\n                    <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"expense-1\">\r\n                      <ngb-panel title=\"Income\" id=\"expense-1\" *ngIf=\"(salesHead && salesValue)\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ salesHead ? salesHead : \"Sales\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                salesValue\r\n                                ? (salesValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Expenses\" id=\"expense-2\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                              *ngFor=\"let expense of expenses\">\r\n                              <p>{{ expense.expenseHead ? expense.expenseHead : \"N/A\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                expense.expenseValue\r\n                                ? (expense.expenseValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Summary\" id=\"expense-3\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalIncomeHead ? totalIncomeHead : \"Total Income\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalIncomeValue\r\n                                ? (totalIncomeValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalExpensesHead ? totalExpensesHead : \"Total Expenses\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalExpensesValue\r\n                                ? (totalExpensesValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalNetOperHead ? totalNetOperHead : \"Total Net Operating\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalNetOperValue\r\n                                ? (totalNetOperValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalNetIncHead ? totalNetIncHead : \"Total Net Incoming\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalNetIncValue\r\n                                ? (totalNetIncValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                    </ngb-accordion>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"Balancesheet\" id=\"static-2\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12 mb-3\">\r\n                    <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"balance-1\">\r\n                      <ngb-panel title=\"Bank\" id=\"balance-1\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                              *ngFor=\"let bank of bank\">\r\n                              <p>{{ bank.ColData[0].value ? bank.ColData[0].value : \"N/A\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                bank.ColData[1].value\r\n                                ? (bank.ColData[1].value | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Accounts Recievable\" id=\"balance-2\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                              *ngFor=\"let ar of AR\">\r\n                              <p>{{ ar.ColData[0].value ? ar.ColData[0].value : \"N/A\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                ar.ColData[1].value\r\n                                ? (ar.ColData[1].value | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Other Current Assets\" id=\"balance-3\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                              *ngFor=\"let otherAsset of otherAsset\">\r\n                              <p>{{ otherAsset.ColData[0].value ? otherAsset.ColData[0].value : \"N/A\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                otherAsset.ColData[1].value\r\n                                ? (otherAsset.ColData[1].value | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Summary\" id=\"expense-3\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalCurrentAssetsHead ? totalCurrentAssetsHead : \"Total Current Assets\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalCurrentAssetsValue\r\n                                ? (totalCurrentAssetsValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalAssetsHead ? totalAssetsHead : \"Total Expenses\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalAssetsValue\r\n                                ? (totalAssetsValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                    </ngb-accordion>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"Liabilitites And Equity\" id=\"static-3\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12 mb-3\">\r\n                    <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"liable-1\">\r\n                      <ngb-panel title=\"Liabilitites\" id=\"liable-1\">\r\n                        <ng-template ngbPanelContent>\r\n                          <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"liablity-1\">\r\n                            <ngb-panel title=\"Account Payable\" id=\"liablity-1\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                                    *ngFor=\"let ap of AP\">\r\n                                    <p>{{ ap.ColData[0].value ? ap.ColData[0].value : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      ap.ColData[1].value\r\n                                      ? (ap.ColData[1].value | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalAPHead ? totalAPHead : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalAPValue\r\n                                      ? (totalAPValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                            <ngb-panel title=\"Credit Cards\" id=\"liablity-2\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                                    *ngFor=\"let CreditCard of CreditCards\">\r\n                                    <p>{{ CreditCard.ColData[0].value ? CreditCard.ColData[0].value : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      CreditCard.ColData[1].value\r\n                                      ? (CreditCard.ColData[1].value | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalCreditCardsHead ? totalCreditCardsHead : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalCreditCardsValue\r\n                                      ? (totalCreditCardsValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                            <ngb-panel title=\"Summary\" id=\"liablity-3\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalCurrentLiabilitiesHead ? totalCurrentLiabilitiesHead : \"Total Current Liabilities\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalCurrentLiabilitiesValue\r\n                                      ? (totalCurrentLiabilitiesValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalLiabilitiesHead ? totalLiabilitiesHead : \"Total Liabilities\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalLiabilitiesValue\r\n                                      ? (totalLiabilitiesValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                          </ngb-accordion>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Equities\" id=\"liable-2\">\r\n                        <ng-template ngbPanelContent>\r\n                          <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"equity1\">\r\n                            <ngb-panel title=\"Equity\" id=\"equity1\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                                    *ngFor=\"let equity of equities\">\r\n                                    <p>{{ equity.ColData[0].value ? equity.ColData[0].value : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      equity.ColData[1].value\r\n                                      ? (equity.ColData[1].value | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                            <ngb-panel title=\"Summary\" id=\"equity2\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalEquityHead ? totalEquityHead : \"Total Equity\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalEquityValue\r\n                                      ? (totalEquityValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                          </ngb-accordion>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Summary\" id=\"liable-2\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalLiabilitiesandEquityHead ? totalLiabilitiesandEquityHead : \"Total Current Assets\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalLiabilitiesandEquityValue\r\n                                ? (totalLiabilitiesandEquityValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                    </ngb-accordion>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n          </ngb-accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from 'src/app/shared/services/firebase/auth.service';\r\nimport { LocalService } from 'src/app/shared/services/local.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-financial',\r\n  templateUrl: './financial.component.html',\r\n  styleUrls: ['./financial.component.scss']\r\n})\r\n\r\nexport class financialComponent implements OnInit {\r\n  companyid: any;\r\n  totalIncomeHead: string;\r\n  totalIncomeValue: number;\r\n  totalExpensesHead: string;\r\n  totalExpensesValue: number;\r\n  totalNetOperHead: string;\r\n  totalNetOperValue: number;\r\n  totalNetIncHead: string;\r\n  totalNetIncValue: number;\r\n  salesHead: string;\r\n  salesValue: number;\r\n  expenses: any = [];\r\n  bank: any = [];\r\n  AR: any = [];\r\n  otherAsset: any = [];\r\n  totalCurrentAssetsHead: string;\r\n  totalCurrentAssetsValue: number;\r\n  totalAssetsHead: string;\r\n  totalAssetsValue: number;\r\n  AP: any = [];\r\n  totalAPHead: string;\r\n  totalAPValue: number;\r\n  CreditCards: any = [];\r\n  totalCreditCardsHead: string;\r\n  totalCreditCardsValue: number;\r\n  totalLiabilitiesHead: string;\r\n  totalLiabilitiesValue: number;\r\n  totalCurrentLiabilitiesHead: string;\r\n  totalCurrentLiabilitiesValue: number;\r\n  equities: any = [];\r\n  totalEquityHead: string;\r\n  totalEquityValue: number;\r\n  totalLiabilitiesandEquityHead: string;\r\n  totalLiabilitiesandEquityValue: number;\r\n  constructor(private http: AuthService, private localService: LocalService, private toasterService: ToastrService) { }\r\n  ngOnInit(): void {\r\n    this.companyid = this.localService.getJsonValue(\"company\");\r\n    this.getFinancial()\r\n  }\r\n  getFinancial() {\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}`, true).subscribe((res: any) => {\r\n      console.log(res, \"hello financial response\");\r\n      if (res?.data != null) {\r\n        res?.data?.Rows.Row.map(e => {\r\n          if (e.hasOwnProperty('group')) {\r\n            if (e.group == \"Income\") {\r\n              e.Rows.Row.map(s => {\r\n                this.salesHead = s.ColData[0].value\r\n                this.salesValue = s.ColData[1].value\r\n              })\r\n              this.totalIncomeHead = e.Summary.ColData[0].value\r\n              this.totalIncomeValue = e.Summary.ColData[1].value\r\n            }\r\n            if (e.group == \"Expenses\") {\r\n              e.Rows.Row.map(ex => {\r\n                const expenseHead = ex.ColData[0].value\r\n                const expenseValue = ex.ColData[1].value\r\n                this.expenses.push({ expenseHead, expenseValue })\r\n              })\r\n              this.totalExpensesHead = e.Summary.ColData[0].value\r\n              this.totalExpensesValue = e.Summary.ColData[1].value\r\n            }\r\n            if (e.group == \"NetOperatingIncome\") {\r\n              this.totalNetOperHead = e.Summary.ColData[0].value\r\n              this.totalNetOperValue = e.Summary.ColData[1].value\r\n            }\r\n            if (e.group == \"NetIncome\") {\r\n              this.totalNetIncHead = e.Summary.ColData[0].value\r\n              this.totalNetIncValue = e.Summary.ColData[1].value\r\n            }\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n    this.http.getMonilyData(`report?entity=BalanceSheet&id=${this.companyid.id}`, true).subscribe((res: any) => {\r\n      console.log(res, \"hello financial response\");\r\n      if (res?.data != null) {\r\n        res?.data?.Rows.Row.map(b => {\r\n          if (b.hasOwnProperty('group')) {\r\n            if (b.group == \"TotalAssets\") {\r\n              b.Rows.Row.map(ba => {\r\n                ba.Rows.Row.map(balAss => {\r\n                  if (balAss.group == \"BankAccounts\") {\r\n                    balAss.Rows.Row.map(bank => {\r\n                      this.bank.push(bank)\r\n                    })\r\n                  }\r\n                  if (balAss.group == \"AR\") {\r\n                    balAss.Rows.Row.map(AR => {\r\n                      this.AR.push(AR)\r\n                    })\r\n                  }\r\n                  if (balAss.group == \"OtherCurrentAssets\") {\r\n                    balAss.Rows.Row.map(otherAsset => {\r\n                      this.otherAsset.push(otherAsset)\r\n                    })\r\n                  }\r\n                })\r\n                if (ba.group == 'CurrentAssets') {\r\n                  this.totalCurrentAssetsHead = ba.Summary.ColData[0].value;\r\n                  this.totalCurrentAssetsValue = ba.Summary.ColData[1].value;\r\n                }\r\n              })\r\n              if (b.group == 'TotalAssets') {\r\n                this.totalAssetsHead = b.Summary.ColData[0].value;\r\n                this.totalAssetsValue = b.Summary.ColData[1].value;\r\n              }\r\n            }\r\n            if (b.group == \"TotalLiabilitiesAndEquity\") {\r\n              b.Rows.Row.map(ba => {\r\n                if (ba.group == \"Liabilities\") {\r\n                  ba.Rows.Row.map(balAss => {\r\n                    if (balAss.group == \"CurrentLiabilities\") {\r\n                      balAss.Rows.Row.map(currentLiablities => {\r\n                        if (currentLiablities.group == \"AP\") {\r\n                          currentLiablities.Rows.Row.map(Ap => {\r\n                            this.AP.push(Ap)\r\n                          })\r\n                          this.totalAPHead = currentLiablities.Summary.ColData[0].value;\r\n                          this.totalAPValue = currentLiablities.Summary.ColData[1].value;\r\n                        }\r\n                        if (currentLiablities.group == \"CreditCards\") {\r\n                          currentLiablities.Rows.Row.map(CreditCards => {\r\n                            this.CreditCards.push(CreditCards)\r\n                          })\r\n                          this.totalCreditCardsHead = currentLiablities.Summary.ColData[0].value;\r\n                          this.totalCreditCardsValue = currentLiablities.Summary.ColData[1].value;\r\n                        }\r\n                      })\r\n                      this.totalCurrentLiabilitiesHead = balAss.Summary.ColData[0].value\r\n                      this.totalCurrentLiabilitiesValue = balAss.Summary.ColData[1].value\r\n                    }\r\n                  })\r\n                  this.totalLiabilitiesHead = ba.Summary.ColData[0].value\r\n                  this.totalLiabilitiesValue = ba.Summary.ColData[1].value\r\n                }\r\n                if (ba.group == \"Equity\") {\r\n                  ba.Rows.Row.map(equity => {\r\n                    this.equities.push(equity)\r\n                  })\r\n                  this.totalEquityHead = ba.Summary.ColData[0].value\r\n                  this.totalEquityValue = ba.Summary.ColData[1].value\r\n                }\r\n              })\r\n              console.log('====================================');\r\n              console.log(b, \"helloba\");\r\n              console.log('====================================');\r\n              this.totalLiabilitiesandEquityHead = b.Summary.ColData[0].value\r\n              this.totalLiabilitiesandEquityValue = b.Summary.ColData[1].value\r\n            }\r\n          }\r\n          console.log('====================================');\r\n          console.log(b, \"helloeu\");\r\n          console.log('====================================');\r\n        })\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n\r\n    console.log('====================================');\r\n    console.log(this.bank,\r\n      this.CreditCards);\r\n    console.log('====================================');\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport {NgApexchartsModule } from 'ng-apexcharts'\r\nimport {financialComponent} from './financial.component'\r\nimport {financialRoutingModule} from './financial-routing.module'\r\n@NgModule({\r\n  declarations: [financialComponent],\r\n  imports: [\r\n    CommonModule,\r\n    financialRoutingModule,\r\n    NgxDropzoneModule,\r\n    CKEditorModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgApexchartsModule\r\n  ],\r\n})\r\nexport class financialModule { }\r\n"]}