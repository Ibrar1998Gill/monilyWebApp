{"version":3,"sources":["./src/app/components/apps/dashboard/dashboard-routing.module.ts","./src/app/components/apps/dashboard/dashboard.component.ts","./src/app/components/apps/dashboard/dashboard.component.html","./src/app/components/apps/dashboard/dashboard.module.ts","./src/app/shared/services/helper.service.ts"],"names":[],"mappings":"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","file":"src_app_components_apps_dashboard_dashboard_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { dashboardComponent } from './dashboard.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:dashboardComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class dashboardRoutingModule { }\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { UniversalService } from \"src/app/shared/services/universal.service\";\r\nimport * as $ from \"jquery\";\r\nimport { AuthService } from \"src/app/shared/services/firebase/auth.service\";\r\nimport { LocalService } from \"src/app/shared/services/local.service\";\r\nimport { HelperService } from \"../../../shared/services/helper.service\";\r\nimport * as moment from \"moment\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n// import * as top10ExpensesFunc from '../../../../helpers/helper'\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.scss\"],\r\n})\r\nexport class dashboardComponent implements OnInit {\r\n  @ViewChild(\"chart\") chart;\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    private http: AuthService,\r\n    private localService: LocalService,\r\n    private helperService: HelperService,\r\n    private toasterService: ToastrService\r\n  ) { }\r\n  secondary_color = localStorage.getItem(\"secondary_color\") || \"#f73164\";\r\n  primary_color = localStorage.getItem(\"primary_color\") || \"#5330ab\";\r\n  companyid: any;\r\n  mutablePieData: any = {};\r\n  totalExpenses: number = 0;\r\n  profitAndLoss: number = 0;\r\n  otherIncome: number = 0;\r\n  otherExpenses: number = 0;\r\n  YearlyprofitAndLoss: number = 0;\r\n  MonthlyprofitAndLoss: number = 0;\r\n  QuaterlyprofitAndLoss: number = 0;\r\n  expensesBar: number = 0;\r\n  monthlyDataRevenue: any;\r\n  yearlyDataRevenue: any;\r\n  quaterlyDataRevenue: any;\r\n  monthlyDataPayments: any;\r\n  yearlyDataPayments: any;\r\n  quaterlyDataPayments: any;\r\n  pieArray: any = [[\"Task\", \"expenses\"]];\r\n  pieChart3: any = {\r\n    chartType: \"PieChart\",\r\n    dataTable: this.pieArray,\r\n    options: {\r\n      width: \"100%\",\r\n      height: 200,\r\n      colors: [\r\n        \"#f8d62b\",\r\n        \"#51bb25\",\r\n        \"#a927f9\",\r\n        this.secondary_color,\r\n        this.primary_color,\r\n      ],\r\n      backgroundColor: \"#FEF5ED\",\r\n    },\r\n  };\r\n  bar: any = {\r\n    series: [\r\n      {\r\n        name: \"USD\",\r\n        data: [this.profitAndLoss,this.otherIncome, this.expensesBar,this.otherIncome],\r\n      },\r\n    ],\r\n    noData: {\r\n      text: 'Loading...'\r\n    },\r\n    colors: [this.secondary_color],\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 185,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      style: {\r\n        color:\"black\"\r\n      },\r\n      formatter: function(val, opt) {\r\n        return \"$\" + val?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    }\r\n    },\r\n    xaxis: {\r\n      categories: [\"Income\",\"Other Income\", \"Expenses\", \"Other Expenses\"],\r\n    },\r\n  };\r\n  lastyear: any = moment().format('YYYY')\r\n  startDate: any = moment(new Date(this.lastyear, 0, 1)).format('YYYY-MM-DD')\r\n  endDate: any = moment().format('YYYY-MM-DD')\r\n  redrawChart() {\r\n    let ccComponent = this.pieChart3.component;\r\n    //force a redraw\r\n    ccComponent.draw();\r\n  }\r\n  ngOnInit(): void {\r\n    this.observe();\r\n    if (this.localService.getJsonValue(\"company\") != null) {\r\n      this.companyid = this.localService.getJsonValue(\"company\");\r\n    }\r\n    if (this.companyid != null) {\r\n      this.getExpenses();\r\n      // this.dashboardCharts();\r\n      // this.revenueGenerate();\r\n      // this.paymentGenerate();\r\n    } else return;\r\n    \r\n  }\r\n\r\n  // observing company selected or not\r\n  async observe() {\r\n    UniversalService.companySelected.subscribe((res) => {\r\n      if (res) {\r\n        this.companyid = this.localService.getJsonValue(\"company\");\r\n        this.getExpenses();\r\n        // this.dashboardCharts();\r\n        // this.revenueGenerate();\r\n        // this.paymentGenerate();\r\n      } else return;\r\n    });\r\n  }\r\n  getExpenses() {\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`, true).subscribe((res: any) => {\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.profitAndLoss = Math.round(v.Summary.ColData[1].value);\r\n              }\r\n            }\r\n            if (v.group == \"OtherIncome\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.otherIncome = Math.round(v.Summary.ColData[1].value);\r\n              }\r\n            }\r\n            if (v.group == \"OtherExpenses\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.otherExpenses = Math.round(v.Summary.ColData[1].value);\r\n              }\r\n            }\r\n            if (v.group == \"Expenses\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.expensesBar = Math.round(v.Summary.ColData[1].value);\r\n              }\r\n              if (v?.hasOwnProperty('Rows')) {\r\n                this.loopAppendRows(v, this.pieArray)\r\n              }\r\n            }\r\n          }\r\n          \r\n        });\r\n        this.chart?.updateSeries([\r\n          {\r\n            name: \"USD\",\r\n            data: [this.profitAndLoss,this.otherIncome, this.expensesBar,this.otherExpenses],\r\n          },\r\n        ]);\r\n        this.redrawChart()\r\n        this.totalExpenses = this.expensesBar;\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }, err => {\r\n      if (err.hasOwnProperty('error')) {\r\n        if (err?.error?.hasOwnProperty('errors')) {\r\n          for (const key in err?.error?.errors) {\r\n            this.toasterService.error(err?.error?.errors[key])\r\n          }\r\n        }\r\n      }\r\n      console.log('====================================');\r\n      console.log(err, \"error hai\");\r\n      console.log('====================================');\r\n    }),err=>{\r\n      console.log(err);\r\n      \r\n    }\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&summarize_column_by=Quarter&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`,true).subscribe((res:any)=>{\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.YearlyprofitAndLoss = Math.round(v?.Summary?.ColData[v?.Summary?.ColData?.length - 1]?.value);\r\n                this.QuaterlyprofitAndLoss = Math.round(v?.Summary?.ColData[v?.Summary?.ColData?.length - 2]?.value);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }),err=>{\r\n      console.log(err);\r\n    }\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&summarize_column_by=Month&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`,true).subscribe((res:any)=>{\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.MonthlyprofitAndLoss = v?.Summary?.ColData[v?.Summary?.ColData?.length - 2]?.value;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }),err=>{\r\n      console.log(err);\r\n    }\r\n  }\r\n  loopAppendRows(v, array){\r\n    v?.Rows?.Row?.map((e) => {\r\n      if (e?.hasOwnProperty('ColData')) {\r\n        array.push([e?.ColData[0]?.value ? e?.ColData[0]?.value : null, Math.round(e?.ColData[1]?.value ? e?.ColData[1]?.value : 0)]);\r\n      }\r\n      else {\r\n        e?.Rows?.Row?.map((s) => {\r\n          this.loopAppendRows(s, array)\r\n        })\r\n      }\r\n    })\r\n  }\r\n  // revenueGenerate() {\r\n  //   this.http.getMonilyData(`query?id=${this.companyid.id}&_query=select * from invoice startposition 1`, true).subscribe((res: any) => {\r\n  //     let mutableData = [];\r\n  //     if (res?.data != null) {\r\n  //       res.data.QueryResponse.Invoice.map((inv) => {\r\n  //         let txnDate = moment(inv.TxnDate).format(\"MM/DD/YYYY\");\r\n  //         let dueDate = this.helperService.calculateDays(inv.DueDate);\r\n  //         mutableData.push({\r\n  //           Date: txnDate,\r\n  //           num: inv.DocNumber,\r\n  //           Customer: inv.CustomerRef.name,\r\n  //           Amount: inv.Balance,\r\n  //           TotalAmt: inv.TotalAmt,\r\n  //           Status: dueDate,\r\n  //           id: inv.Id,\r\n  //         });\r\n  //       });\r\n  //       this.monthlyDataRevenue =\r\n  //         this.helperService.getCurrentMonthExpenses(mutableData);\r\n  //       this.yearlyDataRevenue = this.helperService.getYearlyExpenses(mutableData);\r\n  //       const mutableQuarterly =\r\n  //         this.helperService.getQuarterlyExpenses(mutableData);\r\n  //       this.quaterlyDataRevenue = parseFloat(\r\n  //         mutableQuarterly[Object.keys(mutableQuarterly).pop()]\r\n  //       ).toFixed(2);\r\n  //     }\r\n  //     else {\r\n  //       this.toasterService.error(\"No data found, please try again after few minutes\")\r\n  //     }\r\n  //   }, err => {\r\n  //     if (err.hasOwnProperty('error')) {\r\n  //       if (err?.error?.hasOwnProperty('errors')) {\r\n  //         for (const key in err?.error?.errors) {\r\n  //           this.toasterService.error(err?.error?.errors[key])\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     console.log(err);\r\n  //   })\r\n  // }\r\n  // paymentGenerate() {\r\n  //   this.http.getMonilyData(`query?id=${this.companyid.id}&_query=select * from Bill startposition 1`, true).subscribe((res: any) => {\r\n  //     let mutableData = [];\r\n  //     if (res?.data != null) {\r\n  //       res.data.QueryResponse.Bill.map((bill) => {\r\n  //         let txnDate = new Date(bill.TxnDate).toLocaleString();\r\n  //         txnDate = txnDate.substring(0, txnDate.indexOf(\",\"));\r\n  //         txnDate = this.helperService.formattedDate(bill.TxnDate);\r\n  //         const vendorName = bill.VendorRef.name;\r\n  //         const pastDue = this.helperService.calculateDays(bill.DueDate);\r\n  //         mutableData.push({\r\n  //           Date: txnDate,\r\n  //           Customer: vendorName,\r\n  //           Status: this.helperService.calculateDays(bill.DueDate),\r\n  //           pastDue,\r\n  //           Amount: bill.Balance,\r\n  //           TotalAmt: bill.TotalAmt,\r\n  //           id: bill.Id,\r\n  //         });\r\n  //       });\r\n  //       this.monthlyDataPayments =\r\n  //         this.helperService.getCurrentMonthExpenses(mutableData);\r\n  //       this.yearlyDataPayments = this.helperService.getYearlyExpenses(mutableData);\r\n  //       const mutableQuarterly =\r\n  //         this.helperService.getQuarterlyExpenses(mutableData);\r\n  //       this.quaterlyDataPayments = parseFloat(\r\n  //         mutableQuarterly[Object.keys(mutableQuarterly).pop()]\r\n  //       ).toFixed(2);\r\n  //     }\r\n  //     else {\r\n  //       this.toasterService.error(\"No data found, please try again after few minutes\")\r\n  //     }\r\n  //   }, err => {\r\n  //     if (err.hasOwnProperty('error')) {\r\n  //       if (err?.error?.hasOwnProperty('errors')) {\r\n  //         for (const key in err?.error?.errors) {\r\n  //           this.toasterService.error(err?.error?.errors[key])\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     console.log(err);\r\n  //   })\r\n  // }\r\n  // dashboardCharts() {\r\n  //   this.http.getMonilyData(`query?id=${this.companyid.id}&_query=select * from purchase startposition 1`, true).subscribe((res: any) => {\r\n  //     let ExpenseDate = []\r\n  //     if (res?.data != null) {\r\n  //       res?.data?.QueryResponse?.Purchase.map(expense => {\r\n  //         ExpenseDate.push(expense)\r\n  //       })\r\n  //       let prices = [];\r\n  //       ExpenseDate.map((expense) => {\r\n  //         let category =\r\n  //           expense.Line[0].AccountBasedExpenseLineDetail.AccountRef.name;\r\n  //         if (this.mutablePieData[category]) {\r\n  //           this.mutablePieData[category] += parseFloat(expense.TotalAmt);\r\n  //         } else {\r\n  //           this.mutablePieData[category] = parseFloat(expense.TotalAmt);\r\n  //         }\r\n  //       });\r\n\r\n  //       var sum = prices.reduce(function (a, b) {\r\n  //         return a + b;\r\n  //       }, 0);\r\n  //       this.totalExpenses = this.expensesBar;\r\n  //       this.redrawChart()\r\n  //     }\r\n  //     else {\r\n  //       this.toasterService.error(\"No data found, please try again after few minutes\")\r\n  //     }\r\n  //   }, err => {\r\n  //     if (err.hasOwnProperty('error')) {\r\n  //       if (err?.error?.hasOwnProperty('errors')) {\r\n  //         for (const key in err?.error?.errors) {\r\n  //           this.toasterService.error(err?.error?.errors[key])\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     console.log(err);\r\n  //   })\r\n  // }\r\n}\r\n","<app-breadcrumb [title]=\"'Dashboard'\" [active_item]=\"'Dashboard'\"></app-breadcrumb>\r\n<div class=\"container\" *ngIf=\"this.companyid != null\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6 col-xl-6 col-lg-6\">\r\n      <div class=\"card o-hidden cstmCard\">\r\n        <div class=\"bg-primary b-r-4 card-body minHeight\">\r\n          <div class=\"media static-top-widget\">\r\n            <div class=\"media-body\">\r\n              <div class=\"d-flex flex-wrap align-items-baseline\">\r\n                <h3 class=\"m-0\">Profit And Loss / </h3> <span>Annually</span>\r\n              </div>\r\n              <span class=\"d-flex align-items-center\">\r\n                <!-- <app-feather-icons class=\"margin1 feather-10\" [icon]=\"'dollar-sign'\"></app-feather-icons> -->\r\n                <span class=\"mb-0 counter\">{{profitAndLoss + expensesBar | currency:'USD'}}</span>\r\n              </span>\r\n              <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n              <div id=\"basic-bar\" class=\"mt-3\">\r\n                <apx-chart #chart [series]=\"bar.series\" [chart]=\"bar.chart\" [dataLabels]=\"bar.dataLabels\"\r\n                  [plotOptions]=\"bar.plotOptions\" [xaxis]=\"bar.xaxis\" [colors]=\"bar.colors\"></apx-chart>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-xl-6 col-lg-6\">\r\n      <div class=\"card o-hidden cstmCard\">\r\n        <div class=\"bg-primary b-r-4 card-body minHeight\">\r\n          <div class=\"media static-top-widget\">\r\n            <div class=\"media-body\">\r\n              <div class=\"d-flex flex-wrap align-items-baseline\">\r\n                <h3 class=\"m-0\">Expenses / </h3> <span>Annually</span>\r\n              </div>\r\n              <span class=\"d-flex align-items-center\">\r\n                <!-- <app-feather-icons class=\"margin1\" [icon]=\"'dollar-sign'\"></app-feather-icons> -->\r\n                <span class=\"mb-0 counter\">{{totalExpenses | currency:'USD'}}</span>\r\n              </span>\r\n              <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n              <div class=\"mt-3\">\r\n                <google-chart [data]=\"pieChart3\"></google-chart>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-xl-6 col-lg-6\">\r\n      <div class=\"card o-hidden cstmCard\">\r\n        <div class=\"bg-primary b-r-4 card-body\">\r\n          <div class=\"media static-top-widget flex-column\">\r\n            <div class=\"d-flex w-100 flex-wrap align-items-baseline\">\r\n              <h3>Revenue / </h3> <span>Annually</span>\r\n            </div>\r\n            <div class=\"media-body w-100\">\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Yearly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{YearlyprofitAndLoss == null ? (0 | currency:'USD') : YearlyprofitAndLoss | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Quaterly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{QuaterlyprofitAndLoss == null ? (0 | currency:'USD') : QuaterlyprofitAndLoss | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Monthly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{MonthlyprofitAndLoss == null ? (0 | currency:'USD') : MonthlyprofitAndLoss | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 col-xl-6 col-lg-6\">\r\n      <div class=\"card o-hidden cstmCard\">\r\n        <div class=\"bg-primary b-r-4 card-body\">\r\n          <div class=\"media static-top-widget flex-column\">\r\n            <div class=\"d-flex w-100 flex-wrap align-items-baseline\">\r\n              <h3>Payments / </h3> <span>Annually</span>\r\n            </div>\r\n            <div class=\"media-body w-100\">\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Yearly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{yearlyDataPayments == null ? (0 | currency:'USD') : yearlyDataPayments | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Quaterly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{quaterlyDataPayments == null ? (0 | currency:'USD') : quaterlyDataPayments | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row mt-3 mb-3\">\r\n                <div class=\"col-sm-6\">\r\n                  <span class=\"m-0\">Monthly</span>\r\n                </div>\r\n                <div class=\"col-sm-6\">\r\n                  \r\n                  <span class=\"mb-0 counter\">{{monthlyDataPayments == null ? (0 | currency:'USD') : monthlyDataPayments | currency:'USD'}}</span>\r\n                </div>\r\n              </div>\r\n              <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport {NgApexchartsModule } from 'ng-apexcharts'\r\nimport {dashboardComponent} from './dashboard.component'\r\nimport {dashboardRoutingModule} from './dashboard-routing.module'\r\nimport { Ng2GoogleChartsModule } from 'ng2-google-charts';\r\n\r\n@NgModule({\r\n  declarations: [dashboardComponent],\r\n  imports: [\r\n    Ng2GoogleChartsModule,\r\n    CommonModule,\r\n    dashboardRoutingModule,\r\n    NgxDropzoneModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgApexchartsModule\r\n  ],\r\n})\r\nexport class dashboardModule { }\r\n","import { Injectable } from '@angular/core';\nimport * as moment from 'moment';\nimport { AuthService } from './firebase/auth.service';\nimport { LocalService } from './local.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n  monthNames = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ]\n  constructor(private httpService: AuthService, private localService:LocalService) {\n   }\n  public authToken = this.localService.getJsonValue('authUser')\n  // yearly quaterly monthly sepration\n  getYearlyExpenses = expenses => {\n    const yearlyExpenses = {};\n    expenses.map(expense => {\n      const currentYear = new Date().getFullYear();\n      const year = new Date(expense.Date).getFullYear();\n      if (year === currentYear) {\n        if (yearlyExpenses[year]) {\n          yearlyExpenses[year] += parseFloat(expense.Amount);\n        } else {\n          yearlyExpenses[year] = parseFloat(expense.Amount);\n        }\n      }\n    });\n    if (yearlyExpenses == null) {\n      return 0\n    }\n    else {\n      return parseFloat(yearlyExpenses[new Date().getFullYear()]).toFixed(2);\n    }\n  };\n  getQuarterlyExpenses = expenses => {\n    const quarterlyExpenses = {};\n    expenses.map(expense => {\n      const month = new Date(expense.Date).getMonth();\n      const year = new Date(expense.Date).getFullYear();\n      const currentYear = new Date().getFullYear();\n      if (year === currentYear) {\n        if (month <= 2) {\n          if (quarterlyExpenses['Q1']) {\n            quarterlyExpenses['Q1'] += parseFloat(expense.Amount);\n          } else {\n            quarterlyExpenses['Q1'] = parseFloat(expense.Amount);\n          }\n        } else if (month <= 5) {\n          if (quarterlyExpenses['Q2']) {\n            quarterlyExpenses['Q2'] += parseFloat(expense.Amount);\n          } else {\n            quarterlyExpenses['Q2'] = parseFloat(expense.Amount);\n          }\n        } else if (month <= 8) {\n          if (quarterlyExpenses['Q3']) {\n            quarterlyExpenses['Q3'] += parseFloat(expense.Amount);\n          } else {\n            quarterlyExpenses['Q3'] = parseFloat(expense.Amount);\n          }\n        } else {\n          if (quarterlyExpenses['Q4']) {\n            quarterlyExpenses['Q4'] += parseFloat(expense.Amount);\n          } else {\n            quarterlyExpenses['Q4'] = parseFloat(expense.Amount);\n          }\n        }\n      }\n    });\n    return quarterlyExpenses;\n  }\n  getCurrentMonthExpenses = expenses => {\n    const currentMonthExpenses = {};\n    expenses.map(expense => {\n      var dateMomentObject = expense.Date\n      var dateObject = new Date(dateMomentObject)\n      const month = dateObject.getMonth();\n      const currentMonth = new Date().getMonth() + 1;\n      if (month === currentMonth) {\n        if (currentMonthExpenses[month]) {\n          currentMonthExpenses[month] += parseFloat(expense.Amount);\n        } else {\n          currentMonthExpenses[month] = parseFloat(expense.Amount);\n        }\n      }\n    });\n    if (currentMonthExpenses == null) {\n      return 0\n    }\n    else return currentMonthExpenses[new Date().getMonth() - 1]\n  };\n  getMonthlyExpenses = (\n    expenses,\n    frontColor = '#006DFF',\n    gradientColor = '#009FFF',\n  ) => {\n    let monthlyExpensesPaid = {},\n      monthlyExpensesUnpaid = {};\n    expenses.map(expense => {\n      const date = new Date(expense.Date);\n      const month = date.getMonth();\n  \n      if (monthlyExpensesPaid[month]) {\n        monthlyExpensesPaid[month] +=\n          parseFloat(expense.TotalAmt) - parseFloat(expense.Amount);\n      } else if (!monthlyExpensesPaid[month])\n        monthlyExpensesPaid[month] =\n          parseFloat(expense.TotalAmt) - parseFloat(expense.Amount);\n      if (monthlyExpensesUnpaid[month]) {\n        monthlyExpensesUnpaid[month] += parseFloat(expense.Amount);\n      } else monthlyExpensesUnpaid[month] = parseFloat(expense.Amount);\n    });\n    // initialising the empty months with 0\n    for (let i = 0; i < new Date().getMonth(); i++) {\n      if (!monthlyExpensesPaid[i]) monthlyExpensesPaid[i] = 0;\n      if (!monthlyExpensesUnpaid[i]) monthlyExpensesUnpaid[i] = 0;\n    }\n    // yahan se krna hai\n    let chartData = [];\n    Object.keys(monthlyExpensesPaid).map(month => {\n      chartData.push({\n        value: monthlyExpensesPaid[month],\n        frontColor: \"yellow\",\n        gradientColor: \"yellow\",\n        label: this.monthNames[month],\n        spacing: 2,\n        labelWidth: 30,\n      });\n      chartData.push({\n        value: monthlyExpensesUnpaid[month],\n        frontColor: \"orange\",\n        gradientColor: \"orange\",\n      });\n    });\n    return chartData;\n  };\n  // top 10\n  top10ExpensesFunc = expenses => {\n    return expenses\n      .sort((a, b) => {\n        const bAmt = parseFloat(b.Amount);\n        const aAmt = parseFloat(a.Amount);\n        return bAmt - aAmt;\n      })\n      .slice(0, 10);\n  };\n  // calculate days\n  calculateDays = oldDate => {\n    const time = <any>new Date() - <any>new Date(oldDate);\n    return Math.floor(time / (1000 * 3600 * 24));\n  };\n  // format date\n  formattedDate = date => {\n    const dateMomentObject = moment(date, 'YYYY/MM/DD'); // 1st argument - string, 2nd argument - format\n    const day = dateMomentObject.format('DD');\n    const month = dateMomentObject.format('MM');\n    const year = dateMomentObject.format('YYYY');\n    return `${month}/${day}/${year}`;\n  };\n  // upload image\n  uploadImage = (event, remarks) =>{\n    const file:File = event.target.files[0];\n\n        if (file) {\n\n            // this.fileName = file.name;\n\n            const formData = new FormData();\n            formData.append('user_id', this.authToken.userId);\n            formData.append(\"file\", file);\n            this.httpService.uploadImage('uploadFile', formData).subscribe(res=>{\n              console.log('====================================');\n              console.log(res);\n              console.log('====================================');\n            }),err=>{\n              console.log('====================================');\n              console.log(err);\n              console.log('====================================');\n            }\n            // const upload$ = this.http.post(\"/api/thumbnail-upload\", formData);\n\n            // upload$.subscribe();\n        }\n  }\n  numberWithCommas = x => {\n    if (!x) return x;\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n  formatMMDDYY(inputDate) {\n    // var date = new Date(inputDate);\n    const dd = inputDate.substring(8, inputDate.length);\n    const mm = inputDate.substring(5, 7);\n    const yyyy = inputDate.substring(0, 4);\n    return `${mm}/${dd}/${yyyy}`;\n  }\n}\n"],"sourceRoot":"webpack:///"}