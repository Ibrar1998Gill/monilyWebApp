{"version":3,"sources":["./src/app/components/apps/recievable/recievable-routing.module.ts","./src/app/components/apps/recievable/recievable.component.ts","./src/app/components/apps/recievable/recievable.component.html","./src/app/components/apps/recievable/recievable.module.ts"],"names":[],"mappings":"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","file":"src_app_components_apps_recievable_recievable_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { recievableComponent } from './recievable.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:recievableComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class recievableRoutingModule { }\r\n","import { LocalService } from 'src/app/shared/services/local.service';\r\nimport { HelperService } from 'src/app/shared/services/helper.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as moment from \"moment\";\r\nimport { AuthService } from 'src/app/shared/services/firebase/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-recievable',\r\n  templateUrl: './recievable.component.html',\r\n  styleUrls: ['./recievable.component.scss']\r\n})\r\n\r\nexport class recievableComponent implements OnInit {\r\n  @ViewChild(\"chart\") chart;\r\n  @ViewChild(\"Verticalchart\") Verticalchart;\r\n  secondary_color = localStorage.getItem(\"secondary_color\") || \"#f73164\";\r\n  primary_color = localStorage.getItem(\"primary_color\") || \"#5330ab\";\r\n  companyid;\r\n  Invoice;\r\n  formattedData;\r\n  MTD;\r\n  YTD;\r\n  barData;\r\n  totalSum;\r\n  last30DaysSum;\r\n  last6MonthsSum;\r\n  notDueSum;\r\n  last30DaysNotDue;\r\n  last6MonthsNotDue;\r\n  overDueSum;\r\n  dueDateHead;\r\n  paidHead;\r\n  dueData;\r\n  paidData;\r\n  last30DaysOverDue;\r\n  last6MonthsOverDue;\r\n  currentSum;\r\n  currentNotDue;\r\n  currentOverDue;\r\n  timeSelected;\r\n  MonthlyprofitAndLoss:any = 0\r\n  YearlyprofitAndLoss:any = 0\r\n  QuaterlyprofitAndLoss:any = 0\r\n  lastyear: any = moment().format('YYYY')\r\n  startDate: any = moment(new Date(this.lastyear, 0, 1)).format('YYYY-MM-DD')\r\n  endDate: any = moment().format('YYYY-MM-DD')\r\n  times: any = [\r\n    { value: \"Last 12 months\" },\r\n    { value: \"Last 6 months\" },\r\n    { value: \"Last 30 days\" },\r\n  ];\r\n  bar: any = {\r\n    series: [\r\n      {\r\n        name: \"USD\",\r\n        data: [0, 0],\r\n      },\r\n    ],\r\n    colors: [this.secondary_color],\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 150,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      style: {\r\n        color:\"black\"\r\n      },\r\n      formatter: function(val, opt) {\r\n        return \"$\" + val?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    }},\r\n    xaxis: {\r\n      labels: {\r\n        formatter: function (value) {\r\n          return \"$\" + value;\r\n        },\r\n      },\r\n      categories: [\"Payments Overdue\", \"Payments not due yet\"],\r\n    },\r\n  };\r\n  verticalBar: any = {\r\n    series: [\r\n      {\r\n        name: \"USD\",\r\n        data: [],\r\n      },\r\n    ],\r\n    colors: [this.secondary_color],\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 150,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        vertical: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      style: {\r\n        color:\"black\"\r\n      },\r\n      formatter: function(val, opt) {\r\n        return \"$\" + val?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    }},\r\n    yaxis: {\r\n      labels: {\r\n        formatter: function(value) {\r\n          return '$' + value\r\n        }\r\n      }\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ],\r\n    },\r\n  };\r\n  constructor(\r\n    private helperService: HelperService,\r\n    private localService: LocalService,\r\n    private http:AuthService,\r\n    private toasterService:ToastrService\r\n\r\n  ) {}\r\n  ngOnInit(): void {    \r\n    this.timeSelected = this.times[0].value;\r\n    this.companyid = this.localService.getJsonValue(\"company\");\r\n    // this.observe()\r\n    if (this.companyid != null) {\r\n      this.getpayments();\r\n      // this.selectTime();\r\n    } else return;\r\n  }\r\n  selectTime() {\r\n    if (this.timeSelected == \"Last 12 months\") {\r\n      this.currentSum = this.totalSum;\r\n      this.currentNotDue = this.notDueSum;\r\n      this.currentOverDue = this.overDueSum;\r\n    } else if (this.timeSelected == \"Last 30 days\") {\r\n      this.currentSum = this.last30DaysSum;\r\n      this.currentNotDue = this.last30DaysNotDue;\r\n      this.currentOverDue = this.last30DaysOverDue;\r\n    } else if (this.timeSelected == \"Last 6 months\") {\r\n      this.currentSum = this.last6MonthsSum;\r\n      this.currentNotDue = this.last6MonthsNotDue;\r\n      this.currentOverDue = this.last6MonthsOverDue;\r\n    }\r\n    this.bar.series[0].data[0] = this.currentOverDue;\r\n    this.bar.series[0].data[1] = this.currentNotDue;\r\n    this.chart?.updateSeries([\r\n      {\r\n        name: \"USD\",\r\n        data: [this.currentOverDue, this.currentNotDue],\r\n      },\r\n    ]);\r\n  }\r\n  getpayments() {\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&summarize_column_by=Quarter&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`,true).subscribe((res:any)=>{\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.YearlyprofitAndLoss = Math.round(v?.Summary?.ColData[v?.Summary?.ColData?.length - 1]?.value);\r\n                this.QuaterlyprofitAndLoss = Math.round(v?.Summary?.ColData[v?.Summary?.ColData?.length - 2]?.value);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }),err=>{\r\n      console.log(err);\r\n    }\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&summarize_column_by=Month&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`,true).subscribe((res:any)=>{\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.MonthlyprofitAndLoss = v?.Summary?.ColData[v?.Summary?.ColData?.length - 2]?.value;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }),err=>{\r\n      console.log(err);\r\n    }\r\n  }\r\n    // this.http.getMonilyData(`report?entity=AgedReceivables&id=${this.companyid.id}`,true).subscribe(res=>{\r\n    // }),err=>{\r\n    //   console.log(err);\r\n    // }\r\n    // let mutableData = [];\r\n    // let mutableSum = 0;\r\n    // let mutable30DaysSum = 0;\r\n    // let mutable6MonthsSum = 0;\r\n    // let mutableOverDueSum = 0;\r\n    // let mutable30DaysOverDueSum = 0;\r\n    // let mutable6MonthsOverDueSum = 0;\r\n    // let mutableNotDueSum = 0;\r\n    // let mutable30DaysNotDueSum = 0;\r\n    // let mutable6MonthsNotDueSum = 0;\r\n\r\n    // const today = new Date();\r\n    // let last30Days = new Date();\r\n    // last30Days.setDate(today.getDate() - 30); // date 30 days from now\r\n    // let last6Months = new Date();\r\n    // last6Months.setMonth(today.getMonth() - 6); // data 6 months from now\r\n    // this.http.getMonilyData(`query?id=${this.companyid.id}&_query=select * from invoice startposition 1`, true).subscribe((res: any) => {\r\n    //   if(res?.data != null){\r\n    //     res.data.QueryResponse.Invoice.map(inv => {\r\n    //       let txnDate = moment(inv.TxnDate).format('MM/DD/YYYY');\r\n    //       // txnDate = txnDate.substring(0, txnDate.indexOf(','));\r\n    //       let date = txnDate;\r\n    //       if (new Date(date) >= last30Days && new Date(date) <= today) {\r\n    //         mutable30DaysSum += inv.Balance;\r\n    //         mutable30DaysOverDueSum +=\r\n    //           new Date(inv.DueDate) < new Date() ? inv.Balance : 0;\r\n    //         mutable30DaysNotDueSum +=\r\n    //           new Date(inv.DueDate) > new Date() ? inv.Balance : 0;\r\n    //       }\r\n    //       if (new Date(date) >= last6Months && new Date(date) <= today) {\r\n    //         mutable6MonthsSum += inv.Balance;\r\n    //         mutable6MonthsOverDueSum +=\r\n    //           new Date(inv.DueDate) < new Date() ? inv.Balance : 0;\r\n    //         mutable6MonthsNotDueSum +=\r\n    //           new Date(inv.DueDate) > new Date() ? inv.Balance : 0;\r\n    //       }\r\n    //       mutableSum += inv.Balance;\r\n    \r\n    //       mutableNotDueSum +=\r\n    //         new Date(inv.DueDate) > new Date() ? inv.Balance : 0;\r\n    //       mutableOverDueSum +=\r\n    //         new Date(inv.DueDate) < new Date() ? inv.Balance : 0;\r\n    \r\n    //       let dueDate = this.helperService.calculateDays(inv.DueDate);\r\n    //       mutableData.push({\r\n    //         Date: txnDate,\r\n    //         num: inv.DocNumber,\r\n    //         Customer: inv.CustomerRef.name,\r\n    //         Amount: inv.Balance,\r\n    //         TotalAmt: inv.TotalAmt,\r\n    //         Status: dueDate,\r\n    //         id: inv.Id,\r\n    //       });\r\n    //     });\r\n    //     this.dueData = mutableData.filter((item) => {\r\n    //       return item.Amount != 0;\r\n    //     });\r\n    //     this.paidData = mutableData.filter((item) => {\r\n    //       return item.Amount == 0;\r\n    //     });\r\n    //     this.barData = this.helperService.getMonthlyExpenses(mutableData);\r\n    //     this.MTD = this.helperService.getCurrentMonthExpenses(mutableData);\r\n    //     this.YTD = this.helperService.getYearlyExpenses(mutableData);\r\n    //     const mutableQuarterly =\r\n    //       this.helperService.getQuarterlyExpenses(mutableData);\r\n    //     this.quarter = parseFloat(\r\n    //       mutableQuarterly[Object.keys(mutableQuarterly).pop()]\r\n    //     ).toFixed(2);\r\n    //     this.totalSum = mutableSum;\r\n    //     this.last30DaysSum = mutable30DaysSum;\r\n    //     this.last6MonthsSum = mutable6MonthsSum;\r\n    //     this.notDueSum = mutableNotDueSum;\r\n    //     this.last30DaysNotDue = mutable30DaysNotDueSum;\r\n    //     this.last6MonthsNotDue = mutable6MonthsNotDueSum;\r\n    //     this.overDueSum = mutableOverDueSum;\r\n    //     this.last30DaysOverDue = mutable30DaysOverDueSum;\r\n    //     this.last6MonthsOverDue = mutable6MonthsOverDueSum;\r\n    //     this.formattedData = mutableData;\r\n    //     let arr = [];    \r\n    //     this.barData.map((e) => {\r\n    //       if (e.hasOwnProperty(\"label\")) {\r\n    //         this.verticalBar.xaxis.categories.map((i) => {\r\n    //           if (e.label == i) {\r\n    //             arr.push(e.value);\r\n    //           }\r\n    //         });\r\n    //       }\r\n    //     });\r\n    //     arr.map((v) => {\r\n    //       this.verticalBar.series[0].data.push(v);\r\n    //     });\r\n    //     this.selectTime()\r\n    //   }\r\n    //   else{\r\n    //     this.toasterService.error(\"No data found, please try again after few minutes\")\r\n    //   }\r\n    // },err=>{\r\n    //   console.log(err);\r\n    // })\r\n    \r\n  // }\r\n}\r\n","<app-breadcrumb\r\n  [title]=\"'Accounts Recievable'\"\r\n  [active_item]=\"'Accounts Recievable'\"\r\n></app-breadcrumb>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body default-accordion\">\r\n          <ngb-accordion\r\n            #acc=\"ngbAccordion\"\r\n            [closeOthers]=\"true\"\r\n            activeIds=\"static-1\"\r\n          >\r\n            <ngb-panel title=\"Revenue\" id=\"static-1\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"card o-hidden cstmCard\">\r\n                  <div class=\"bg-primary b-r-4 card-body\">\r\n                    <div class=\"media static-top-widget flex-column\">\r\n                      <div class=\"media-body w-100\">\r\n                        <div class=\"row mt-3 mb-3\">\r\n                          <div class=\"col-sm-6\">\r\n                            <span class=\"m-0\">Yearly</span>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            \r\n                            <span class=\"mb-0 counter\">{{YearlyprofitAndLoss ? (YearlyprofitAndLoss | currency :'USD') : 0}}</span>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row mt-3 mb-3\">\r\n                          <div class=\"col-sm-6\">\r\n                            <span class=\"m-0\">Quaterly</span>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            \r\n                            <span class=\"mb-0 counter\">{{QuaterlyprofitAndLoss ? (QuaterlyprofitAndLoss | currency :'USD') : 0}}</span>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row mt-3 mb-3\">\r\n                          <div class=\"col-sm-6\">\r\n                            <span class=\"m-0\">Monthly</span>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            \r\n                            <span class=\"mb-0 counter\">{{MonthlyprofitAndLoss ? (MonthlyprofitAndLoss | currency :'USD') : 0}}</span>\r\n                          </div>\r\n                        </div>\r\n                        <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <!-- <ngb-panel title=\"Dues\" id=\"static-2\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12 d-flex justify-content-end\">\r\n                  <ng-select [(ngModel)]=\"timeSelected\" placeholder=\"Select\" (change)=\"selectTime()\">\r\n                    <ng-option *ngFor=\"let time of times\" [value]=\"time.value\">{{time.value}}</ng-option>\r\n                 </ng-select>\r\n                </div>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"card o-hidden cstmCard\">\r\n                    <div class=\"bg-primary b-r-4 card-body\">\r\n                      <div class=\"media static-top-widget\">\r\n                        <div class=\"media-body\">\r\n                          <span class=\"d-flex align-items-center\">\r\n                            <span class=\"mb-0 counter\">{{profitAndLoss + expensesBar | currency:'USD'}}</span>\r\n                          </span>\r\n                          <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n                          <div id=\"basic-bar\" class=\"mt-3\">\r\n                            <apx-chart #chart [series]=\"bar.series\" [chart]=\"bar.chart\" [dataLabels]=\"bar.dataLabels\"\r\n                              [plotOptions]=\"bar.plotOptions\" [xaxis]=\"bar.xaxis\" [colors]=\"bar.colors\"></apx-chart>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"AR Aging\" id=\"static-3\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"card o-hidden cstmCard\">\r\n                    <div class=\"bg-primary b-r-4 card-body\">\r\n                      <div class=\"media static-top-widget\">\r\n                        <div class=\"media-body\">\r\n                          <span class=\"d-flex align-items-center\">\r\n                            <span class=\"mb-0 counter\">{{profitAndLoss + expensesBar | currency:'USD'}}</span>\r\n                          </span>\r\n                          <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n                          <div id=\"basic-bar\" class=\"mt-3\">\r\n                            <apx-chart #Verticalchart [series]=\"verticalBar.series\" [chart]=\"verticalBar.chart\" [dataLabels]=\"verticalBar.dataLabels\"\r\n                              [plotOptions]=\"verticalBar.plotOptions\" [xaxis]=\"verticalBar.xaxis\" [colors]=\"verticalBar.colors\"></apx-chart>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"AR Invoices Due For Payment\" id=\"static-4\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">#</th>\r\n                          <th scope=\"col\">Customer</th>\r\n                          <th scope=\"col\">Bill Total</th>\r\n                          <th scope=\"col\">Balance</th>\r\n                          <th scope=\"col\">Bill Date</th>\r\n                          <th scope=\"col\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr\r\n                          *ngFor=\"\r\n                            let due of dueData\r\n                              | paginate\r\n                                : {\r\n                                    itemsPerPage: 5,\r\n                                    currentPage: duePage,\r\n                                    totalItems: total\r\n                                  }\r\n                          \"\r\n                        >\r\n                          <th scope=\"row\">{{ due.id }}</th>\r\n                          <td>\r\n                            {{ due.Customer ? due.Customer : \"N/A\" }}\r\n                          </td>\r\n                          <td>{{ due.TotalAmt ? (due.TotalAmt | currency: \"USD\") : \"N/A\" }}</td>\r\n                          <td>{{ due.Amount ? (due.Amount | currency: \"USD\") : \"N/A\" }}</td>\r\n                          <td>{{ due.Date ? due.Date : \"N/A\" }}</td>\r\n                          <td>{{ due.Status ? (\"Overdue \" + due.Status + \" days\") : \"N/A\" }}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <pagination-controls\r\n                      (pageChange)=\"duePage = $event\"\r\n                    ></pagination-controls>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"AR Invoices Paid\" id=\"static-5\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">#</th>\r\n                          <th scope=\"col\">Customer</th>\r\n                          <th scope=\"col\">Bill Total</th>\r\n                          <th scope=\"col\">Bill Date</th>\r\n                          <th scope=\"col\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr\r\n                          *ngFor=\"\r\n                            let paid of paidData\r\n                              | paginate\r\n                                : {\r\n                                    itemsPerPage: 5,\r\n                                    currentPage: paidPage,\r\n                                    totalItems: total\r\n                                  }\r\n                          \"\r\n                        >\r\n                          <th scope=\"row\">{{ paid.id }}</th>\r\n                          <td>\r\n                            {{ paid.Customer ? paid.Customer : \"N/A\" }}\r\n                          </td>\r\n                          <td>{{ paid.TotalAmt ? (paid.TotalAmt | currency: \"USD\") : \"N/A\" }}</td>\r\n                          <td>{{ paid.Date ? paid.Date : \"N/A\" }}</td>\r\n                          <td>Paid</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <pagination-controls\r\n                      (pageChange)=\"paidPage = $event\"\r\n                    ></pagination-controls>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel> -->\r\n          </ngb-accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { recievableComponent } from './recievable.component'\r\nimport { recievableRoutingModule } from './recievable-routing.module'\r\nimport {NgApexchartsModule } from 'ng-apexcharts'\r\n@NgModule({\r\n  declarations: [recievableComponent],\r\n  imports: [\r\n    CommonModule,\r\n    recievableRoutingModule,\r\n    NgxDropzoneModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgApexchartsModule,\r\n    NgxDatatableModule,\r\n    NgxPaginationModule\r\n  ],\r\n})\r\nexport class recievableModule { }\r\n"],"sourceRoot":"webpack:///"}