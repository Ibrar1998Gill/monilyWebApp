{"version":3,"sources":["webpack:///src/app/components/apps/recievable/recievable-routing.module.ts","webpack:///src/app/components/apps/recievable/recievable.component.html","webpack:///src/app/components/apps/recievable/recievable.component.ts","webpack:///src/app/components/apps/recievable/recievable.module.ts"],"names":["routes","path","children","component","recievableComponent","recievableRoutingModule","RouterModule","helperService","localService","http","toasterService","secondary_color","localStorage","getItem","primary_color","MonthlyprofitAndLoss","YearlyprofitAndLoss","QuaterlyprofitAndLoss","lastyear","format","startDate","Date","endDate","times","value","bar","series","name","data","colors","chart","type","height","plotOptions","horizontal","dataLabels","enabled","style","color","formatter","val","opt","toString","replace","xaxis","labels","categories","verticalBar","vertical","yaxis","timeSelected","companyid","getJsonValue","getpayments","currentSum","totalSum","currentNotDue","notDueSum","currentOverDue","overDueSum","last30DaysSum","last30DaysNotDue","last30DaysOverDue","last6MonthsSum","last6MonthsNotDue","last6MonthsOverDue","updateSeries","getMonilyData","id","subscribe","res","Rows","Row","map","v","hasOwnProperty","group","Math","round","Summary","ColData","length","error","err","console","log","recievableModule","CommonModule","NgxDropzoneModule","NgSelectModule","FormsModule","ReactiveFormsModule","SharedModule","NgApexchartsModule","NgxDatatableModule","NgxPaginationModule"],"mappings":"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","file":"src_app_components_apps_recievable_recievable_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { recievableComponent } from './recievable.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:recievableComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class recievableRoutingModule { }\r\n","<app-breadcrumb\r\n  [title]=\"'Accounts Recievable'\"\r\n  [active_item]=\"'Accounts Recievable'\"\r\n></app-breadcrumb>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body default-accordion\">\r\n          <ngb-accordion\r\n            #acc=\"ngbAccordion\"\r\n            [closeOthers]=\"true\"\r\n            activeIds=\"static-1\"\r\n          >\r\n            <ngb-panel title=\"Revenue\" id=\"static-1\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"card o-hidden cstmCard\">\r\n                  <div class=\"bg-primary b-r-4 card-body\">\r\n                    <div class=\"media static-top-widget flex-column\">\r\n                      <div class=\"media-body w-100\">\r\n                        <div class=\"row mt-3 mb-3\">\r\n                          <div class=\"col-sm-6\">\r\n                            <span class=\"m-0\">Yearly</span>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            \r\n                            <span class=\"mb-0 counter\">{{YearlyprofitAndLoss ? (YearlyprofitAndLoss | currency :'USD') : 0}}</span>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row mt-3 mb-3\">\r\n                          <div class=\"col-sm-6\">\r\n                            <span class=\"m-0\">Quaterly</span>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            \r\n                            <span class=\"mb-0 counter\">{{QuaterlyprofitAndLoss ? (QuaterlyprofitAndLoss | currency :'USD') : 0}}</span>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row mt-3 mb-3\">\r\n                          <div class=\"col-sm-6\">\r\n                            <span class=\"m-0\">Monthly</span>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            \r\n                            <span class=\"mb-0 counter\">{{MonthlyprofitAndLoss ? (MonthlyprofitAndLoss | currency :'USD') : 0}}</span>\r\n                          </div>\r\n                        </div>\r\n                        <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <!-- <ngb-panel title=\"Dues\" id=\"static-2\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12 d-flex justify-content-end\">\r\n                  <ng-select [(ngModel)]=\"timeSelected\" placeholder=\"Select\" (change)=\"selectTime()\">\r\n                    <ng-option *ngFor=\"let time of times\" [value]=\"time.value\">{{time.value}}</ng-option>\r\n                 </ng-select>\r\n                </div>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"card o-hidden cstmCard\">\r\n                    <div class=\"bg-primary b-r-4 card-body\">\r\n                      <div class=\"media static-top-widget\">\r\n                        <div class=\"media-body\">\r\n                          <span class=\"d-flex align-items-center\">\r\n                            <span class=\"mb-0 counter\">{{profitAndLoss + expensesBar | currency:'USD'}}</span>\r\n                          </span>\r\n                          <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n                          <div id=\"basic-bar\" class=\"mt-3\">\r\n                            <apx-chart #chart [series]=\"bar.series\" [chart]=\"bar.chart\" [dataLabels]=\"bar.dataLabels\"\r\n                              [plotOptions]=\"bar.plotOptions\" [xaxis]=\"bar.xaxis\" [colors]=\"bar.colors\"></apx-chart>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"AR Aging\" id=\"static-3\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"card o-hidden cstmCard\">\r\n                    <div class=\"bg-primary b-r-4 card-body\">\r\n                      <div class=\"media static-top-widget\">\r\n                        <div class=\"media-body\">\r\n                          <span class=\"d-flex align-items-center\">\r\n                            <span class=\"mb-0 counter\">{{profitAndLoss + expensesBar | currency:'USD'}}</span>\r\n                          </span>\r\n                          <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n                          <div id=\"basic-bar\" class=\"mt-3\">\r\n                            <apx-chart #Verticalchart [series]=\"verticalBar.series\" [chart]=\"verticalBar.chart\" [dataLabels]=\"verticalBar.dataLabels\"\r\n                              [plotOptions]=\"verticalBar.plotOptions\" [xaxis]=\"verticalBar.xaxis\" [colors]=\"verticalBar.colors\"></apx-chart>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"AR Invoices Due For Payment\" id=\"static-4\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">#</th>\r\n                          <th scope=\"col\">Customer</th>\r\n                          <th scope=\"col\">Bill Total</th>\r\n                          <th scope=\"col\">Balance</th>\r\n                          <th scope=\"col\">Bill Date</th>\r\n                          <th scope=\"col\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr\r\n                          *ngFor=\"\r\n                            let due of dueData\r\n                              | paginate\r\n                                : {\r\n                                    itemsPerPage: 5,\r\n                                    currentPage: duePage,\r\n                                    totalItems: total\r\n                                  }\r\n                          \"\r\n                        >\r\n                          <th scope=\"row\">{{ due.id }}</th>\r\n                          <td>\r\n                            {{ due.Customer ? due.Customer : \"N/A\" }}\r\n                          </td>\r\n                          <td>{{ due.TotalAmt ? (due.TotalAmt | currency: \"USD\") : \"N/A\" }}</td>\r\n                          <td>{{ due.Amount ? (due.Amount | currency: \"USD\") : \"N/A\" }}</td>\r\n                          <td>{{ due.Date ? due.Date : \"N/A\" }}</td>\r\n                          <td>{{ due.Status ? (\"Overdue \" + due.Status + \" days\") : \"N/A\" }}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <pagination-controls\r\n                      (pageChange)=\"duePage = $event\"\r\n                    ></pagination-controls>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"AR Invoices Paid\" id=\"static-5\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">#</th>\r\n                          <th scope=\"col\">Customer</th>\r\n                          <th scope=\"col\">Bill Total</th>\r\n                          <th scope=\"col\">Bill Date</th>\r\n                          <th scope=\"col\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr\r\n                          *ngFor=\"\r\n                            let paid of paidData\r\n                              | paginate\r\n                                : {\r\n                                    itemsPerPage: 5,\r\n                                    currentPage: paidPage,\r\n                                    totalItems: total\r\n                                  }\r\n                          \"\r\n                        >\r\n                          <th scope=\"row\">{{ paid.id }}</th>\r\n                          <td>\r\n                            {{ paid.Customer ? paid.Customer : \"N/A\" }}\r\n                          </td>\r\n                          <td>{{ paid.TotalAmt ? (paid.TotalAmt | currency: \"USD\") : \"N/A\" }}</td>\r\n                          <td>{{ paid.Date ? paid.Date : \"N/A\" }}</td>\r\n                          <td>Paid</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <pagination-controls\r\n                      (pageChange)=\"paidPage = $event\"\r\n                    ></pagination-controls>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel> -->\r\n          </ngb-accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { LocalService } from 'src/app/shared/services/local.service';\r\nimport { HelperService } from 'src/app/shared/services/helper.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport * as moment from \"moment\";\r\nimport { AuthService } from 'src/app/shared/services/firebase/auth.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-recievable',\r\n  templateUrl: './recievable.component.html',\r\n  styleUrls: ['./recievable.component.scss']\r\n})\r\n\r\nexport class recievableComponent implements OnInit {\r\n  @ViewChild(\"chart\") chart;\r\n  @ViewChild(\"Verticalchart\") Verticalchart;\r\n  secondary_color = localStorage.getItem(\"secondary_color\") || \"#f73164\";\r\n  primary_color = localStorage.getItem(\"primary_color\") || \"#5330ab\";\r\n  companyid;\r\n  Invoice;\r\n  formattedData;\r\n  MTD;\r\n  YTD;\r\n  barData;\r\n  totalSum;\r\n  last30DaysSum;\r\n  last6MonthsSum;\r\n  notDueSum;\r\n  last30DaysNotDue;\r\n  last6MonthsNotDue;\r\n  overDueSum;\r\n  dueDateHead;\r\n  paidHead;\r\n  dueData;\r\n  paidData;\r\n  last30DaysOverDue;\r\n  last6MonthsOverDue;\r\n  currentSum;\r\n  currentNotDue;\r\n  currentOverDue;\r\n  timeSelected;\r\n  MonthlyprofitAndLoss:any = 0\r\n  YearlyprofitAndLoss:any = 0\r\n  QuaterlyprofitAndLoss:any = 0\r\n  lastyear: any = moment().format('YYYY')\r\n  startDate: any = moment(new Date(this.lastyear, 0, 1)).format('YYYY-MM-DD')\r\n  endDate: any = moment().format('YYYY-MM-DD')\r\n  times: any = [\r\n    { value: \"Last 12 months\" },\r\n    { value: \"Last 6 months\" },\r\n    { value: \"Last 30 days\" },\r\n  ];\r\n  bar: any = {\r\n    series: [\r\n      {\r\n        name: \"USD\",\r\n        data: [0, 0],\r\n      },\r\n    ],\r\n    colors: [this.secondary_color],\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 150,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      style: {\r\n        color:\"black\"\r\n      },\r\n      formatter: function(val, opt) {\r\n        return \"$\" + val?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    }},\r\n    xaxis: {\r\n      labels: {\r\n        formatter: function (value) {\r\n          return \"$\" + value;\r\n        },\r\n      },\r\n      categories: [\"Payments Overdue\", \"Payments not due yet\"],\r\n    },\r\n  };\r\n  verticalBar: any = {\r\n    series: [\r\n      {\r\n        name: \"USD\",\r\n        data: [],\r\n      },\r\n    ],\r\n    colors: [this.secondary_color],\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 150,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        vertical: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      style: {\r\n        color:\"black\"\r\n      },\r\n      formatter: function(val, opt) {\r\n        return \"$\" + val?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n    }},\r\n    yaxis: {\r\n      labels: {\r\n        formatter: function(value) {\r\n          return '$' + value\r\n        }\r\n      }\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ],\r\n    },\r\n  };\r\n  constructor(\r\n    private helperService: HelperService,\r\n    private localService: LocalService,\r\n    private http:AuthService,\r\n    private toasterService:ToastrService\r\n\r\n  ) {}\r\n  ngOnInit(): void {    \r\n    this.timeSelected = this.times[0].value;\r\n    this.companyid = this.localService.getJsonValue(\"company\");\r\n    // this.observe()\r\n    if (this.companyid != null) {\r\n      this.getpayments();\r\n      // this.selectTime();\r\n    } else return;\r\n  }\r\n  selectTime() {\r\n    if (this.timeSelected == \"Last 12 months\") {\r\n      this.currentSum = this.totalSum;\r\n      this.currentNotDue = this.notDueSum;\r\n      this.currentOverDue = this.overDueSum;\r\n    } else if (this.timeSelected == \"Last 30 days\") {\r\n      this.currentSum = this.last30DaysSum;\r\n      this.currentNotDue = this.last30DaysNotDue;\r\n      this.currentOverDue = this.last30DaysOverDue;\r\n    } else if (this.timeSelected == \"Last 6 months\") {\r\n      this.currentSum = this.last6MonthsSum;\r\n      this.currentNotDue = this.last6MonthsNotDue;\r\n      this.currentOverDue = this.last6MonthsOverDue;\r\n    }\r\n    this.bar.series[0].data[0] = this.currentOverDue;\r\n    this.bar.series[0].data[1] = this.currentNotDue;\r\n    this.chart?.updateSeries([\r\n      {\r\n        name: \"USD\",\r\n        data: [this.currentOverDue, this.currentNotDue],\r\n      },\r\n    ]);\r\n  }\r\n  getpayments() {\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&summarize_column_by=Quarter&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`,true).subscribe((res:any)=>{\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.YearlyprofitAndLoss = Math.round(v?.Summary?.ColData[v?.Summary?.ColData?.length - 1]?.value);\r\n                this.QuaterlyprofitAndLoss = Math.round(v?.Summary?.ColData[v?.Summary?.ColData?.length - 2]?.value);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }),err=>{\r\n      console.log(err);\r\n    }\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}&summarize_column_by=Month&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`,true).subscribe((res:any)=>{\r\n      if (res?.data != null) {\r\n        res.data.Rows.Row.map((v) => {\r\n          if (v.hasOwnProperty(\"group\")) {\r\n            if (v.group == \"Income\") {\r\n              if (v?.hasOwnProperty(\"Summary\")) {\r\n                this.MonthlyprofitAndLoss = v?.Summary?.ColData[v?.Summary?.ColData?.length - 2]?.value;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }),err=>{\r\n      console.log(err);\r\n    }\r\n  }\r\n    // this.http.getMonilyData(`report?entity=AgedReceivables&id=${this.companyid.id}`,true).subscribe(res=>{\r\n    // }),err=>{\r\n    //   console.log(err);\r\n    // }\r\n    // let mutableData = [];\r\n    // let mutableSum = 0;\r\n    // let mutable30DaysSum = 0;\r\n    // let mutable6MonthsSum = 0;\r\n    // let mutableOverDueSum = 0;\r\n    // let mutable30DaysOverDueSum = 0;\r\n    // let mutable6MonthsOverDueSum = 0;\r\n    // let mutableNotDueSum = 0;\r\n    // let mutable30DaysNotDueSum = 0;\r\n    // let mutable6MonthsNotDueSum = 0;\r\n\r\n    // const today = new Date();\r\n    // let last30Days = new Date();\r\n    // last30Days.setDate(today.getDate() - 30); // date 30 days from now\r\n    // let last6Months = new Date();\r\n    // last6Months.setMonth(today.getMonth() - 6); // data 6 months from now\r\n    // this.http.getMonilyData(`query?id=${this.companyid.id}&_query=select * from invoice startposition 1`, true).subscribe((res: any) => {\r\n    //   if(res?.data != null){\r\n    //     res.data.QueryResponse.Invoice.map(inv => {\r\n    //       let txnDate = moment(inv.TxnDate).format('MM/DD/YYYY');\r\n    //       // txnDate = txnDate.substring(0, txnDate.indexOf(','));\r\n    //       let date = txnDate;\r\n    //       if (new Date(date) >= last30Days && new Date(date) <= today) {\r\n    //         mutable30DaysSum += inv.Balance;\r\n    //         mutable30DaysOverDueSum +=\r\n    //           new Date(inv.DueDate) < new Date() ? inv.Balance : 0;\r\n    //         mutable30DaysNotDueSum +=\r\n    //           new Date(inv.DueDate) > new Date() ? inv.Balance : 0;\r\n    //       }\r\n    //       if (new Date(date) >= last6Months && new Date(date) <= today) {\r\n    //         mutable6MonthsSum += inv.Balance;\r\n    //         mutable6MonthsOverDueSum +=\r\n    //           new Date(inv.DueDate) < new Date() ? inv.Balance : 0;\r\n    //         mutable6MonthsNotDueSum +=\r\n    //           new Date(inv.DueDate) > new Date() ? inv.Balance : 0;\r\n    //       }\r\n    //       mutableSum += inv.Balance;\r\n    \r\n    //       mutableNotDueSum +=\r\n    //         new Date(inv.DueDate) > new Date() ? inv.Balance : 0;\r\n    //       mutableOverDueSum +=\r\n    //         new Date(inv.DueDate) < new Date() ? inv.Balance : 0;\r\n    \r\n    //       let dueDate = this.helperService.calculateDays(inv.DueDate);\r\n    //       mutableData.push({\r\n    //         Date: txnDate,\r\n    //         num: inv.DocNumber,\r\n    //         Customer: inv.CustomerRef.name,\r\n    //         Amount: inv.Balance,\r\n    //         TotalAmt: inv.TotalAmt,\r\n    //         Status: dueDate,\r\n    //         id: inv.Id,\r\n    //       });\r\n    //     });\r\n    //     this.dueData = mutableData.filter((item) => {\r\n    //       return item.Amount != 0;\r\n    //     });\r\n    //     this.paidData = mutableData.filter((item) => {\r\n    //       return item.Amount == 0;\r\n    //     });\r\n    //     this.barData = this.helperService.getMonthlyExpenses(mutableData);\r\n    //     this.MTD = this.helperService.getCurrentMonthExpenses(mutableData);\r\n    //     this.YTD = this.helperService.getYearlyExpenses(mutableData);\r\n    //     const mutableQuarterly =\r\n    //       this.helperService.getQuarterlyExpenses(mutableData);\r\n    //     this.quarter = parseFloat(\r\n    //       mutableQuarterly[Object.keys(mutableQuarterly).pop()]\r\n    //     ).toFixed(2);\r\n    //     this.totalSum = mutableSum;\r\n    //     this.last30DaysSum = mutable30DaysSum;\r\n    //     this.last6MonthsSum = mutable6MonthsSum;\r\n    //     this.notDueSum = mutableNotDueSum;\r\n    //     this.last30DaysNotDue = mutable30DaysNotDueSum;\r\n    //     this.last6MonthsNotDue = mutable6MonthsNotDueSum;\r\n    //     this.overDueSum = mutableOverDueSum;\r\n    //     this.last30DaysOverDue = mutable30DaysOverDueSum;\r\n    //     this.last6MonthsOverDue = mutable6MonthsOverDueSum;\r\n    //     this.formattedData = mutableData;\r\n    //     let arr = [];    \r\n    //     this.barData.map((e) => {\r\n    //       if (e.hasOwnProperty(\"label\")) {\r\n    //         this.verticalBar.xaxis.categories.map((i) => {\r\n    //           if (e.label == i) {\r\n    //             arr.push(e.value);\r\n    //           }\r\n    //         });\r\n    //       }\r\n    //     });\r\n    //     arr.map((v) => {\r\n    //       this.verticalBar.series[0].data.push(v);\r\n    //     });\r\n    //     this.selectTime()\r\n    //   }\r\n    //   else{\r\n    //     this.toasterService.error(\"No data found, please try again after few minutes\")\r\n    //   }\r\n    // },err=>{\r\n    //   console.log(err);\r\n    // })\r\n    \r\n  // }\r\n}\r\n","import { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { recievableComponent } from './recievable.component'\r\nimport { recievableRoutingModule } from './recievable-routing.module'\r\nimport {NgApexchartsModule } from 'ng-apexcharts'\r\n@NgModule({\r\n  declarations: [recievableComponent],\r\n  imports: [\r\n    CommonModule,\r\n    recievableRoutingModule,\r\n    NgxDropzoneModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgApexchartsModule,\r\n    NgxDatatableModule,\r\n    NgxPaginationModule\r\n  ],\r\n})\r\nexport class recievableModule { }\r\n"]}