(function () {
  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
  (self["webpackChunkmonily"] = self["webpackChunkmonily"] || []).push([["default-node_modules_ng2-google-charts___ivy_ngcc___fesm2015_ng2-google-charts_js"], {
    /***/46092:
    /*!***********************************************************************************!*\
      !*** ./node_modules/ng2-google-charts/__ivy_ngcc__/fesm2015/ng2-google-charts.js ***!
      \***********************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"ChartHTMLTooltip": function ChartHTMLTooltip() {
          return (/* binding */_ChartHTMLTooltip
          );
        },
        /* harmony export */"GoogleChartComponent": function GoogleChartComponent() {
          return (/* binding */_GoogleChartComponent
          );
        },
        /* harmony export */"GoogleChartEditor": function GoogleChartEditor() {
          return (/* binding */_GoogleChartEditor
          );
        },
        /* harmony export */"GoogleChartType": function GoogleChartType() {
          return (/* binding */_GoogleChartType
          );
        },
        /* harmony export */"GoogleChartsControlComponent": function GoogleChartsControlComponent() {
          return (/* binding */_GoogleChartsControlComponent
          );
        },
        /* harmony export */"GoogleChartsDashboardComponent": function GoogleChartsDashboardComponent() {
          return (/* binding */_GoogleChartsDashboardComponent
          );
        },
        /* harmony export */"GoogleChartsLoaderService": function GoogleChartsLoaderService() {
          return (/* binding */_GoogleChartsLoaderService
          );
        },
        /* harmony export */"Ng2GoogleChartsModule": function Ng2GoogleChartsModule() {
          return (/* binding */_Ng2GoogleChartsModule
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! tslib */90234);
      /* harmony import */
      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @angular/core */37716);
      var _GoogleChartsLoaderService = /*#__PURE__*/function () {
        function GoogleChartsLoaderService(localeId, googleChartsSettings) {
          var _this = this;
          _classCallCheck(this, GoogleChartsLoaderService);
          this.googleChartsSettings = googleChartsSettings;
          this.loadedPackages = [];
          this.loaded = false;
          var defaultSettings = {
            googleChartsVersion: '47',
            language: localeId
          };
          this.googleChartsSettings = Object.assign(Object.assign({}, defaultSettings), this.googleChartsSettings);
          this.googleScriptLoadingNotifier = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.googleChartLoadingNotifier = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.googleScriptIsLoading = false;
          this.googleChartIsLoading = false;
          this.loadGoogleChartsScriptPromise = new Promise(function (resolve, reject) {
            if (typeof google !== 'undefined' && google.charts) {
              resolve();
            } else if (!_this.googleScriptIsLoading) {
              _this.googleScriptIsLoading = true;
              var script = document.createElement('script');
              script.type = 'text/javascript';
              script.src = 'https://www.gstatic.com/charts/loader.js';
              script.async = true;
              script.defer = true;
              script.onload = function () {
                _this.googleScriptIsLoading = false;
                _this.googleScriptLoadingNotifier.emit(true);
                resolve();
              };
              script.onerror = function () {
                _this.googleScriptIsLoading = false;
                _this.googleScriptLoadingNotifier.emit(false);
                reject();
              };
              document.getElementsByTagName('head')[0].appendChild(script);
            } else {
              _this.googleScriptLoadingNotifier.subscribe(function (loaded) {
                if (loaded) {
                  resolve();
                } else {
                  reject();
                }
              });
            }
          });
        }
        _createClass(GoogleChartsLoaderService, [{
          key: "load",
          value: function load(settings) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
              var _this2 = this;
              return _regeneratorRuntime().wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      _context.next = 2;
                      return this.loadGoogleChartsScriptPromise;
                    case 2:
                      _context.next = 4;
                      return new Promise(function (resolve) {
                        if (_this2.googleChartIsLoading) {
                          _this2.googleChartLoadingNotifier.subscribe(function () {
                            _this2.doLoad(resolve, settings);
                          });
                          return;
                        }
                        _this2.doLoad(resolve, settings);
                      });
                    case 4:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee, this);
            }));
          }
        }, {
          key: "doLoad",
          value: function doLoad(resolve, settings) {
            var _this3 = this;
            settings = Object.assign(Object.assign({}, this.googleChartsSettings), settings);
            if (!settings.packages && this.loaded) {
              resolve();
              return;
            }
            if (settings.packages) {
              var pkgs = settings.packages.filter(function (p) {
                return _this3.loadedPackages.indexOf(p) < 0;
              });
              if (pkgs.length == 0 && this.loaded) {
                resolve();
                return;
              }
              settings.packages = pkgs;
            }
            var _settings = settings;
            _settings.callback = function () {
              _this3.googleChartIsLoading = false;
              _this3.loadedPackages = _this3.loadedPackages.concat(_settings.packages);
              _this3.loaded = true;
              _this3.googleChartLoadingNotifier.emit();
              resolve();
            };
            this.googleChartIsLoading = true;
            google.charts.load(settings.googleChartsVersion, _settings);
          }
        }]);
        return GoogleChartsLoaderService;
      }();
      _GoogleChartsLoaderService.ɵfac = function GoogleChartsLoaderService_Factory(t) {
        return new (t || _GoogleChartsLoaderService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.LOCALE_ID), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"]('googleChartsSettings', 8));
      };
      _GoogleChartsLoaderService.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({
        factory: function GoogleChartsLoaderService_Factory() {
          return new _GoogleChartsLoaderService((0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__.LOCALE_ID), (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"])("googleChartsSettings", 8));
        },
        token: _GoogleChartsLoaderService,
        providedIn: "root"
      });
      _GoogleChartsLoaderService = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, tslib__WEBPACK_IMPORTED_MODULE_1__.__param)(0, (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.LOCALE_ID)), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__param)(1, (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject)('googleChartsSettings')), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__param)(1, (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional)()), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:paramtypes", [String, Object])], _GoogleChartsLoaderService);
      var GoogleChartsDataTable = /*#__PURE__*/function () {
        function GoogleChartsDataTable(opt) {
          _classCallCheck(this, GoogleChartsDataTable);
          this.opt = opt;
          this.dataTableChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          if (opt) {
            this._setDataTable(opt.dataTable, opt.firstRowIsData);
          }
        }
        _createClass(GoogleChartsDataTable, [{
          key: "send",
          value: function send() {
            var _this4 = this;
            if (this.query === undefined) {
              return;
            }
            this.query.send(function (queryResponse) {
              _this4.setDataTable(queryResponse.getDataTable());
              if (_this4.opt.queryCallback) {
                _this4.opt.queryCallback(queryResponse);
              }
            });
          }
        }, {
          key: "init",
          value: function init(opt) {
            var _this5 = this;
            if (opt) {
              this.opt = opt;
            }
            if (this.tid !== undefined) {
              // doesn't work, see https://github.com/google/google-visualization-issues/issues/2381
              // this.query.abort();
              window.clearInterval(this.tid);
              this.tid = undefined;
            }
            if (this.opt.dataSourceUrl) {
              this.query = new google.visualization.Query(this.opt.dataSourceUrl);
              if (this.opt.query) {
                this.query.setQuery(this.opt.query);
              }
              if (this.opt.timeout !== undefined) {
                this.query.setTimeout(this.opt.timeout);
              }
              if (this.opt.refreshInterval) {
                // this.query.setRefreshInterval(this.opt.refreshInterval);
                this.tid = window.setInterval(function () {
                  _this5.send();
                }, this.opt.refreshInterval * 1000);
              }
              this.send();
            } else {
              this.setDataTable(this.opt.dataTable);
            }
          }
          /**
           * @returns Underlying google.visualization.DataTable
           */
        }, {
          key: "getDataTable",
          value: function getDataTable() {
            return this.dataTable;
          }
        }, {
          key: "setDataTable",
          value: function setDataTable(dt, firstRowIsData) {
            if (firstRowIsData === undefined) {
              firstRowIsData = this.opt.firstRowIsData;
            }
            this._setDataTable(dt, firstRowIsData);
            this.dataTableChanged.emit(this.dataTable);
          }
        }, {
          key: "_setDataTable",
          value: function _setDataTable(dt, firstRowIsData) {
            if (Array.isArray(dt)) {
              dt = google.visualization.arrayToDataTable(dt, firstRowIsData);
            }
            this.dataTable = dt;
            this.reformat();
          }
          /**
           * Applies formatters to data columns, if defined
           */
        }, {
          key: "reformat",
          value: function reformat() {
            var dt = this.dataTable;
            if (dt === undefined) {
              return;
            }
            if (this.opt.formatters === undefined) {
              return;
            }
            var _iterator = _createForOfIteratorHelper(this.opt.formatters),
              _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                var formatterConfig = _step.value;
                var formatter = void 0;
                if (formatterConfig.type === 'PatternFormat') {
                  var fmtOptions = formatterConfig.options;
                  formatter = new google.visualization.PatternFormat(fmtOptions.pattern);
                  formatter.format(dt, formatterConfig.columns, fmtOptions.dstColumnIndex);
                  continue;
                }
                var formatterConstructor = google.visualization[formatterConfig.type];
                var formatterOptions = formatterConfig.options;
                formatter = new formatterConstructor(formatterOptions);
                if (formatterConfig.type === 'ColorFormat' && formatterOptions) {
                  var _fmtOptions = formatterOptions;
                  var _iterator2 = _createForOfIteratorHelper(_fmtOptions.ranges),
                    _step2;
                  try {
                    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                      var range = _step2.value;
                      if (typeof range.fromBgColor !== 'undefined' && typeof range.toBgColor !== 'undefined') {
                        formatter.addGradientRange(range.from, range.to, range.color, range.fromBgColor, range.toBgColor);
                      } else {
                        formatter.addRange(range.from, range.to, range.color, range.bgcolor);
                      }
                    }
                  } catch (err) {
                    _iterator2.e(err);
                  } finally {
                    _iterator2.f();
                  }
                }
                var _iterator3 = _createForOfIteratorHelper(formatterConfig.columns),
                  _step3;
                try {
                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                    var col = _step3.value;
                    formatter.format(dt, col);
                  }
                } catch (err) {
                  _iterator3.e(err);
                } finally {
                  _iterator3.f();
                }
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
        }]);
        return GoogleChartsDataTable;
      }();
      GoogleChartsDataTable.ɵfac = function GoogleChartsDataTable_Factory(t) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinvalidFactory"]();
      };
      GoogleChartsDataTable.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
        type: GoogleChartsDataTable,
        outputs: {
          dataTableChanged: "dataTableChanged"
        }
      });
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], GoogleChartsDataTable.prototype, "dataTableChanged", void 0);
      var _ChartHTMLTooltip = /*#__PURE__*/function () {
        function _ChartHTMLTooltip(el) {
          _classCallCheck(this, _ChartHTMLTooltip);
          this.el = el;
        }
        _createClass(_ChartHTMLTooltip, [{
          key: "setPosition",
          value: function setPosition(x, y) {
            this.el.nativeElement.style.left = x + _ChartHTMLTooltip.PIXELS;
            this.el.nativeElement.style.top = y + _ChartHTMLTooltip.PIXELS;
          }
        }, {
          key: "getDOMElement",
          value: function getDOMElement() {
            return this.el;
          }
        }]);
        return _ChartHTMLTooltip;
      }();
      _ChartHTMLTooltip.PIXELS = 'px';
      var _GoogleChartType;
      (function (GoogleChartType) {
        GoogleChartType["AnnotationChart"] = "AnnotationChart";
        GoogleChartType["AreaChart"] = "AreaChart";
        GoogleChartType["BarChart"] = "BarChart";
        GoogleChartType["BubbleChart"] = "BubbleChart";
        GoogleChartType["Calendar"] = "Calendar";
        GoogleChartType["CandlestickChart"] = "CandlestickChart";
        GoogleChartType["ColumnChart"] = "ColumnChart";
        GoogleChartType["ComboChart"] = "ComboChart";
        GoogleChartType["Gantt"] = "Gantt";
        GoogleChartType["Gauge"] = "Gauge";
        GoogleChartType["GeoChart"] = "GeoChart";
        GoogleChartType["Histogram"] = "Histogram";
        GoogleChartType["LineChart"] = "LineChart";
        GoogleChartType["Map"] = "Map";
        GoogleChartType["OrgChart"] = "OrgChart";
        GoogleChartType["PieChart"] = "PieChart";
        GoogleChartType["Sankey"] = "Sankey";
        GoogleChartType["ScatterChart"] = "ScatterChart";
        GoogleChartType["SteppedAreaChart"] = "SteppedAreaChart";
        GoogleChartType["Table"] = "Table";
        GoogleChartType["Timeline"] = "Timeline";
        GoogleChartType["TreeMap"] = "TreeMap";
        GoogleChartType["WordTree"] = "WordTree";
      })(_GoogleChartType || (_GoogleChartType = {}));
      var _GoogleChartComponent = /*#__PURE__*/function () {
        function GoogleChartComponent(el, loaderService) {
          var _this6 = this;
          _classCallCheck(this, GoogleChartComponent);
          this.el = el;
          this.loaderService = loaderService;
          this.selectListener = function () {
            var event = {
              message: 'select',
              row: null,
              column: null,
              selectedRowValues: [],
              selectedRowFormattedValues: [],
              columnLabel: ''
            };
            var s = _this6.wrapper.visualization.getSelection();
            var gs = s[s.length - 1];
            if (!gs) {
              event.message = 'deselect';
              return event;
            }
            var selection = gs;
            if (gs.row != null) {
              event.row = selection.row;
              var selectedRowValues = [];
              var selectedRowFormattedValues = [];
              var dataTable = _this6.wrapper.getDataTable();
              var numberOfColumns = dataTable.getNumberOfColumns();
              for (var i = 0; i < numberOfColumns; i++) {
                selectedRowValues.push(dataTable.getValue(selection.row, i));
                selectedRowFormattedValues.push(dataTable.getFormattedValue(selection.row, i));
              }
              event.selectedRowValues = selectedRowValues;
              event.selectedRowFormattedValues = selectedRowFormattedValues;
            }
            if (selection.column != null) {
              event.column = selection.column;
              event.columnLabel = _this6.getColumnLabelAtPosition(selection);
            }
            if (gs.name) {
              event.columnLabel = gs.name;
            }
            return event;
          };
          this.chartSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.chartSelectOneTime = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.chartReady = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.chartReadyOneTime = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.chartError = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.chartErrorOneTime = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.mouseOver = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.mouseOverOneTime = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.mouseOut = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.mouseOutOneTime = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.regionClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.regionClickOneTime = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
        }
        _createClass(GoogleChartComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this7 = this;
            this.HTMLel = this.el.nativeElement.querySelector('div');
            if (Object.isExtensible(this.data)) {
              this.data.component = this;
            }
            this.options = this.data.options;
            this.init().then(function () {
              _this7.draw();
            });
          }
        }, {
          key: "init",
          value: function init() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
              return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      _context2.next = 2;
                      return this.loaderService.load();
                    case 2:
                      this.recreateWrapper();
                    case 3:
                    case "end":
                      return _context2.stop();
                  }
                }
              }, _callee2, this);
            }));
          }
        }, {
          key: "recreateWrapper",
          value: function recreateWrapper() {
            var _this8 = this;
            if (this.wrapper === undefined || this.wrapper.getChartType() !== this.data.chartType) {
              this.dataTable = new GoogleChartsDataTable(this.data);
              this.dataTable.dataTableChanged.subscribe(function (dt) {
                _this8._draw();
              });
              // see dataTable in https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart
              var temp = this.data;
              if (this.data.firstRowIsData) {
                temp = Object.assign(temp, this.data);
                temp.dataTable = this.dataTable.getDataTable();
              }
              this.wrapper = new google.visualization.ChartWrapper(temp);
              this.registerChartWrapperEvents();
              /* Calling draw even without data is the only way to pass the HTMl element
                 when using the chart in a dashboard. Don't do this in all other cases:
                 it breaks formatters with remote data source, hence the conditional. */
              if (temp.dataTable === undefined && temp.dataSourceUrl === undefined) {
                try {
                  this.wrapper.draw(this.HTMLel);
                } catch (err) {}
              }
            }
          }
        }, {
          key: "_draw",
          value: function _draw() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
              var dt;
              return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                while (1) {
                  switch (_context3.prev = _context3.next) {
                    case 0:
                      dt = this.dataTable.getDataTable();
                      if (!(dt === undefined)) {
                        _context3.next = 3;
                        break;
                      }
                      return _context3.abrupt("return");
                    case 3:
                      this.convertOptions();
                      this.recreateWrapper();
                      this.wrapper.setOptions(this.options);
                      this.wrapper.setDataTable(dt);
                      this.wrapper.draw(this.HTMLel);
                    case 8:
                    case "end":
                      return _context3.stop();
                  }
                }
              }, _callee3, this);
            }));
          }
        }, {
          key: "getDataTable",
          value: function getDataTable() {
            return this.dataTable;
          }
        }, {
          key: "draw",
          value: function draw(value) {
            if (value === undefined) {
              value = this.data;
            }
            this.options = value.options;
            this.dataTable.init(value);
          }
        }, {
          key: "getSelectorBySeriesType",
          value: function getSelectorBySeriesType(seriesType) {
            var selectors = {
              bars: 'bar#%s#%r',
              haxis: 'hAxis#0#label',
              line: 'point#%s#%r',
              legend: 'legendentry#%s',
              area: 'point#%s#%r'
            };
            var selector = selectors[seriesType];
            return selector;
          }
          /**
           * Given a column number, counts how many
           * columns have rol=="data". Those are mapped
           * one-to-one to the series array. When rol is not defined
           * a column of type number means a series column.
           * @param column to inspect
           */
        }, {
          key: "getSeriesByColumn",
          value: function getSeriesByColumn(column) {
            var series = 0;
            var dataTable = this.wrapper.getDataTable();
            for (var i = column - 1; i >= 0; i--) {
              var role = dataTable.getColumnRole(i);
              var type = dataTable.getColumnType(i);
              if (role === 'data' || type === 'number') {
                series++;
              }
            }
            return series;
          }
        }, {
          key: "getBoundingBoxForItem",
          value: function getBoundingBoxForItem(item) {
            var boundingBox = {
              top: 0,
              left: 0,
              width: 0,
              height: 0
            };
            if (this.cli) {
              var column = item.column;
              var series = this.getSeriesByColumn(column);
              var row = item.row;
              var seriesType = this.options.seriesType;
              if (this.options.series && this.options.series[series] && this.options.series[series].type) {
                seriesType = this.options.series[series].type;
              }
              if (seriesType) {
                var selector = this.getSelectorBySeriesType(seriesType);
                if (selector) {
                  selector = selector.replace('%s', series + '').replace('%c', column + '').replace('%r', row + '');
                  var box = this.cli.getBoundingBox(selector);
                  if (box) {
                    boundingBox = box;
                  }
                }
              }
            }
            return boundingBox;
          }
        }, {
          key: "getValueAtPosition",
          value: function getValueAtPosition(position) {
            if (position.row == null) {
              return null;
            }
            var dataTable = this.wrapper.getDataTable();
            var value = dataTable.getValue(position.row, position.column);
            return value;
          }
        }, {
          key: "getColumnTypeAtPosition",
          value: function getColumnTypeAtPosition(position) {
            var dataTable = this.wrapper.getDataTable();
            var type = dataTable.getColumnType(position.column) || '';
            return type;
          }
        }, {
          key: "getColumnLabelAtPosition",
          value: function getColumnLabelAtPosition(position) {
            var dataTable = this.wrapper.getDataTable();
            var type = dataTable.getColumnLabel(position.column) || '';
            return type;
          }
        }, {
          key: "getHTMLTooltip",
          value: function getHTMLTooltip() {
            var tooltipER = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef(this.el.nativeElement.querySelector('.google-visualization-tooltip'));
            return new _ChartHTMLTooltip(tooltipER);
          }
        }, {
          key: "parseMouseEvent",
          value: function parseMouseEvent(item) {
            var chartType = this.wrapper.getChartType();
            var eventColumn = item.column;
            if (eventColumn == null) {
              switch (chartType) {
                case 'Timeline':
                  eventColumn = this.wrapper.getDataTable().getNumberOfColumns() === 3 ? 0 : 1;
                  break;
                default:
                  eventColumn = 0;
              }
            }
            var eventRow = item.row;
            var myItem = {
              row: eventRow,
              column: eventColumn
            };
            var event = {
              position: item,
              boundingBox: this.getBoundingBoxForItem(myItem),
              value: this.getValueAtPosition(myItem),
              columnType: this.getColumnTypeAtPosition(myItem),
              columnLabel: this.getColumnLabelAtPosition(myItem)
            };
            return event;
          }
        }, {
          key: "registerChartEvents",
          value: function registerChartEvents() {
            var _this9 = this;
            var chart = this.wrapper.getChart();
            this.cli = chart.getChartLayoutInterface ? chart.getChartLayoutInterface() : null;
            if (this.mouseOver.observers.length > 0) {
              google.visualization.events.addListener(chart, 'onmouseover', function (item) {
                var event = _this9.parseMouseEvent(item);
                event.tooltip = _this9.getHTMLTooltip();
                _this9.mouseOver.emit(event);
              });
            }
            if (this.mouseOverOneTime.observers.length > 0) {
              google.visualization.events.addOneTimeListener(chart, 'onmouseover', function (item) {
                var event = _this9.parseMouseEvent(item);
                event.tooltip = _this9.getHTMLTooltip();
                _this9.mouseOverOneTime.emit(event);
              });
            }
            if (this.mouseOut.observers.length > 0) {
              google.visualization.events.addListener(chart, 'onmouseout', function (item) {
                var event = _this9.parseMouseEvent(item);
                _this9.mouseOut.emit(event);
              });
            }
            if (this.mouseOutOneTime.observers.length > 0) {
              google.visualization.events.addOneTimeListener(chart, 'onmouseout', function (item) {
                var event = _this9.parseMouseEvent(item);
                _this9.mouseOutOneTime.emit(event);
              });
            }
            if (this.data.chartType === 'GeoChart') {
              if (this.regionClick.observers.length > 0) {
                google.visualization.events.addListener(chart, 'regionClick', function (item) {
                  _this9.regionClick.emit(item);
                });
              }
              if (this.regionClickOneTime.observers.length > 0) {
                google.visualization.events.addOneTimeListener(chart, 'regionClick', function (item) {
                  _this9.regionClick.emit(item);
                });
              }
            }
          }
        }, {
          key: "registerChartWrapperEvents",
          value: function registerChartWrapperEvents() {
            var _this10 = this;
            google.visualization.events.addListener(this.wrapper, 'ready', function () {
              _this10.chartReady.emit({
                message: 'Chart ready'
              });
            });
            google.visualization.events.addOneTimeListener(this.wrapper, 'ready', function () {
              _this10.chartReadyOneTime.emit({
                message: 'Chart ready (one time)'
              });
              _this10.registerChartEvents();
            });
            google.visualization.events.addListener(this.wrapper, 'error', function (error) {
              _this10.chartError.emit(error);
            });
            google.visualization.events.addOneTimeListener(this.wrapper, 'error', function (error) {
              _this10.chartErrorOneTime.emit(error);
            });
            this.addListener(this.wrapper, 'select', this.selectListener, this.chartSelect);
            this.addOneTimeListener(this.wrapper, 'select', this.selectListener, this.chartSelectOneTime);
          }
        }, {
          key: "addListener",
          value: function addListener(source, eventType, listenerFn, evEmitter) {
            google.visualization.events.addListener(source, eventType, function () {
              evEmitter.emit(listenerFn());
            });
          }
        }, {
          key: "addOneTimeListener",
          value: function addOneTimeListener(source, eventType, listenerFn, evEmitter) {
            google.visualization.events.addOneTimeListener(source, eventType, function () {
              evEmitter.emit(listenerFn());
            });
          }
        }, {
          key: "convertOptions",
          value: function convertOptions() {
            try {
              this.options = google.charts[this.data.chartType].convertOptions(this.options);
            } catch (error) {
              return;
            }
          }
        }]);
        return GoogleChartComponent;
      }();
      _GoogleChartComponent.ɵfac = function GoogleChartComponent_Factory(t) {
        return new (t || _GoogleChartComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_GoogleChartsLoaderService));
      };
      _GoogleChartComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _GoogleChartComponent,
        selectors: [["google-chart"]],
        inputs: {
          data: "data"
        },
        outputs: {
          chartSelect: "chartSelect",
          chartSelectOneTime: "chartSelectOneTime",
          chartReady: "chartReady",
          chartReadyOneTime: "chartReadyOneTime",
          chartError: "chartError",
          chartErrorOneTime: "chartErrorOneTime",
          mouseOver: "mouseOver",
          mouseOverOneTime: "mouseOverOneTime",
          mouseOut: "mouseOut",
          mouseOutOneTime: "mouseOutOneTime",
          regionClick: "regionClick",
          regionClickOneTime: "regionClickOneTime"
        },
        decls: 1,
        vars: 0,
        template: function GoogleChartComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div");
          }
        },
        encapsulation: 2
      });
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", Object)], _GoogleChartComponent.prototype, "data", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "chartReady", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "chartReadyOneTime", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "chartError", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "chartErrorOneTime", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "chartSelect", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "chartSelectOneTime", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "mouseOver", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "mouseOverOneTime", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "mouseOut", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "mouseOutOneTime", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "regionClick", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter)], _GoogleChartComponent.prototype, "regionClickOneTime", void 0);
      _GoogleChartComponent = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef, _GoogleChartsLoaderService])], _GoogleChartComponent);
      var _GoogleChartsDashboardComponent = /*#__PURE__*/function () {
        function GoogleChartsDashboardComponent(el, loaderService) {
          _classCallCheck(this, GoogleChartsDashboardComponent);
          this.el = el;
          this.loaderService = loaderService;
          this.el = el;
          this.loaderService = loaderService;
        }
        _createClass(GoogleChartsDashboardComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this11 = this;
            this.data.component = this;
            this.init().then(function () {
              if (!_this11.dataTable) {
                _this11.dataTable = new GoogleChartsDataTable(_this11.data);
                _this11.dataTable.dataTableChanged.subscribe(function (dt) {
                  _this11._draw();
                });
              }
              _this11.draw();
            });
          }
        }, {
          key: "init",
          value: function init() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
              var _iterator4, _step4, b, controls, charts, _iterator5, _step5, c, _iterator6, _step6, _c, data;
              return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      _context4.next = 2;
                      return this.loaderService.load({
                        packages: ['controls']
                      });
                    case 2:
                      this.dashboard = new google.visualization.Dashboard(this.el.nativeElement.querySelector('div'));
                      _iterator4 = _createForOfIteratorHelper(this.data.bind);
                      _context4.prev = 4;
                      _iterator4.s();
                    case 6:
                      if ((_step4 = _iterator4.n()).done) {
                        _context4.next = 52;
                        break;
                      }
                      b = _step4.value;
                      controls = b[0];
                      charts = b[1];
                      if (!(controls instanceof Array)) {
                        controls = [controls];
                      }
                      if (!(charts instanceof Array)) {
                        charts = [charts];
                      }
                      _iterator5 = _createForOfIteratorHelper(controls);
                      _context4.prev = 13;
                      _iterator5.s();
                    case 15:
                      if ((_step5 = _iterator5.n()).done) {
                        _context4.next = 21;
                        break;
                      }
                      c = _step5.value;
                      _context4.next = 19;
                      return c.component.ensureInit();
                    case 19:
                      _context4.next = 15;
                      break;
                    case 21:
                      _context4.next = 26;
                      break;
                    case 23:
                      _context4.prev = 23;
                      _context4.t0 = _context4["catch"](13);
                      _iterator5.e(_context4.t0);
                    case 26:
                      _context4.prev = 26;
                      _iterator5.f();
                      return _context4.finish(26);
                    case 29:
                      _iterator6 = _createForOfIteratorHelper(charts);
                      _context4.prev = 30;
                      _iterator6.s();
                    case 32:
                      if ((_step6 = _iterator6.n()).done) {
                        _context4.next = 41;
                        break;
                      }
                      _c = _step6.value;
                      _context4.next = 36;
                      return _c.component.init();
                    case 36:
                      data = _c.component.data;
                      if (!(data.dataTable !== undefined || data.dataSourceUrl !== undefined)) {
                        _context4.next = 39;
                        break;
                      }
                      throw Error('dataTable and dataSourceUrl cannot be specified when ' + 'chart is drawn in a Dashboard');
                    case 39:
                      _context4.next = 32;
                      break;
                    case 41:
                      _context4.next = 46;
                      break;
                    case 43:
                      _context4.prev = 43;
                      _context4.t1 = _context4["catch"](30);
                      _iterator6.e(_context4.t1);
                    case 46:
                      _context4.prev = 46;
                      _iterator6.f();
                      return _context4.finish(46);
                    case 49:
                      this.dashboard.bind(controls.map(function (x) {
                        return x.component.wrapper;
                      }), charts.map(function (x) {
                        return x.component.wrapper;
                      }));
                    case 50:
                      _context4.next = 6;
                      break;
                    case 52:
                      _context4.next = 57;
                      break;
                    case 54:
                      _context4.prev = 54;
                      _context4.t2 = _context4["catch"](4);
                      _iterator4.e(_context4.t2);
                    case 57:
                      _context4.prev = 57;
                      _iterator4.f();
                      return _context4.finish(57);
                    case 60:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, _callee4, this, [[4, 54, 57, 60], [13, 23, 26, 29], [30, 43, 46, 49]]);
            }));
          }
        }, {
          key: "draw",
          value: function draw(value) {
            this.dataTable.init(value);
          }
        }, {
          key: "_draw",
          value: function _draw() {
            this.dashboard.draw(this.dataTable.getDataTable());
          }
        }]);
        return GoogleChartsDashboardComponent;
      }();
      _GoogleChartsDashboardComponent.ɵfac = function GoogleChartsDashboardComponent_Factory(t) {
        return new (t || _GoogleChartsDashboardComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_GoogleChartsLoaderService));
      };
      _GoogleChartsDashboardComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _GoogleChartsDashboardComponent,
        selectors: [["google-charts-dashboard"]],
        inputs: {
          data: "data"
        },
        decls: 1,
        vars: 0,
        template: function GoogleChartsDashboardComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div");
          }
        },
        encapsulation: 2
      });
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", Object)], _GoogleChartsDashboardComponent.prototype, "data", void 0);
      _GoogleChartsDashboardComponent = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef, _GoogleChartsLoaderService])], _GoogleChartsDashboardComponent);
      var _GoogleChartsControlComponent = /*#__PURE__*/function () {
        function GoogleChartsControlComponent(el, loaderService) {
          _classCallCheck(this, GoogleChartsControlComponent);
          this.el = el;
          this.loaderService = loaderService;
          this.el = el;
          this.loaderService = loaderService;
        }
        _createClass(GoogleChartsControlComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.data.component = this;
          }
        }, {
          key: "ensureInit",
          value: function ensureInit() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
              var opt;
              return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                while (1) {
                  switch (_context5.prev = _context5.next) {
                    case 0:
                      if (!this.wrapper) {
                        _context5.next = 2;
                        break;
                      }
                      return _context5.abrupt("return");
                    case 2:
                      _context5.next = 4;
                      return this.loaderService.load({
                        packages: ['controls']
                      });
                    case 4:
                      opt = Object.create(this.data);
                      opt.containerId = this.el.nativeElement.querySelector('div');
                      this.wrapper = new google.visualization.ControlWrapper(opt);
                    case 7:
                    case "end":
                      return _context5.stop();
                  }
                }
              }, _callee5, this);
            }));
          }
        }]);
        return GoogleChartsControlComponent;
      }();
      _GoogleChartsControlComponent.ɵfac = function GoogleChartsControlComponent_Factory(t) {
        return new (t || _GoogleChartsControlComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_GoogleChartsLoaderService));
      };
      _GoogleChartsControlComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _GoogleChartsControlComponent,
        selectors: [["google-charts-control"]],
        inputs: {
          data: "data"
        },
        decls: 1,
        vars: 0,
        template: function GoogleChartsControlComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div");
          }
        },
        encapsulation: 2
      });
      (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)(), (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:type", Object)], _GoogleChartsControlComponent.prototype, "data", void 0);
      _GoogleChartsControlComponent = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef, _GoogleChartsLoaderService])], _GoogleChartsControlComponent);
      var _Ng2GoogleChartsModule = /*#__PURE__*/_createClass(function Ng2GoogleChartsModule() {
        _classCallCheck(this, Ng2GoogleChartsModule);
      });
      _Ng2GoogleChartsModule.ɵfac = function Ng2GoogleChartsModule_Factory(t) {
        return new (t || _Ng2GoogleChartsModule)();
      };
      _Ng2GoogleChartsModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: _Ng2GoogleChartsModule
      });
      _Ng2GoogleChartsModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        providers: [_GoogleChartsLoaderService]
      });
      function isComponent(chart) {
        return chart.wrapper !== undefined;
      }
      var _GoogleChartEditor = /*#__PURE__*/function () {
        function GoogleChartEditor(loaderService) {
          _classCallCheck(this, GoogleChartEditor);
          this.loaderService = loaderService;
        }
        _createClass(GoogleChartEditor, [{
          key: "createEditor",
          value: function createEditor() {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
              var _this12 = this;
              return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                while (1) {
                  switch (_context6.prev = _context6.next) {
                    case 0:
                      if (!(this.chartEditor !== undefined)) {
                        _context6.next = 2;
                        break;
                      }
                      return _context6.abrupt("return");
                    case 2:
                      _context6.next = 4;
                      return this.loaderService.load({
                        packages: ['charteditor']
                      });
                    case 4:
                      this.chartEditor = new google.visualization.ChartEditor();
                      google.visualization.events.addListener(this.chartEditor, 'ok', function () {
                        var wrapper = _this12.chartEditor.getChartWrapper();
                        _this12.comp.wrapper = wrapper;
                        _this12.comp.data.chartType = wrapper.getChartType();
                        if (_this12.comp.data.options !== undefined || Object.isExtensible(_this12.comp.data)) {
                          _this12.comp.data.options = wrapper.getOptions();
                        }
                        _this12.comp.wrapper.draw();
                      });
                    case 6:
                    case "end":
                      return _context6.stop();
                  }
                }
              }, _callee6, this);
            }));
          }
        }, {
          key: "openDialog",
          value: function openDialog(chart, options) {
            return (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
              var _this13 = this;
              return _regeneratorRuntime().wrap(function _callee7$(_context7) {
                while (1) {
                  switch (_context7.prev = _context7.next) {
                    case 0:
                      _context7.next = 2;
                      return this.createEditor();
                    case 2:
                      return _context7.abrupt("return", new Promise(function (resolve, reject) {
                        _this13.comp = isComponent(chart) ? chart : chart.component;
                        _this13.chartEditor.openDialog(_this13.comp.wrapper, options);
                        google.visualization.events.addListener(_this13.chartEditor, 'ok', function () {
                          resolve(_this13.comp.wrapper);
                        });
                        google.visualization.events.addListener(_this13.chartEditor, 'cancel', function () {
                          reject();
                        });
                      }));
                    case 3:
                    case "end":
                      return _context7.stop();
                  }
                }
              }, _callee7, this);
            }));
          }
        }]);
        return GoogleChartEditor;
      }();
      _GoogleChartEditor.ɵfac = function GoogleChartEditor_Factory(t) {
        return new (t || _GoogleChartEditor)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_GoogleChartsLoaderService));
      };
      _GoogleChartEditor.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({
        factory: function GoogleChartEditor_Factory() {
          return new _GoogleChartEditor((0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"])(_GoogleChartsLoaderService));
        },
        token: _GoogleChartEditor,
        providedIn: "root"
      });
      _GoogleChartEditor = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__decorate)([(0, tslib__WEBPACK_IMPORTED_MODULE_1__.__metadata)("design:paramtypes", [_GoogleChartsLoaderService])], _GoogleChartEditor);
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_GoogleChartsLoaderService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: String,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
              args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.LOCALE_ID]
            }]
          }, {
            type: Object,
            decorators: [{
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
              args: ['googleChartsSettings']
            }, {
              type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
            }]
          }];
        }, null);
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_GoogleChartComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'google-chart',
            template: '<div></div>'
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
          }, {
            type: _GoogleChartsLoaderService
          }];
        }, {
          chartSelect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          chartSelectOneTime: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          chartReady: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          chartReadyOneTime: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          chartError: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          chartErrorOneTime: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          mouseOver: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          mouseOverOneTime: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          mouseOut: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          mouseOutOneTime: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          regionClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          regionClickOneTime: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          data: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_GoogleChartsDashboardComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'google-charts-dashboard',
            template: '<div></div>'
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
          }, {
            type: _GoogleChartsLoaderService
          }];
        }, {
          data: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_GoogleChartsControlComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'google-charts-control',
            template: '<div></div>'
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
          }, {
            type: _GoogleChartsLoaderService
          }];
        }, {
          data: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_Ng2GoogleChartsModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
          args: [{
            declarations: [_GoogleChartComponent, _GoogleChartsDashboardComponent, _GoogleChartsControlComponent],
            providers: [_GoogleChartsLoaderService],
            exports: [_GoogleChartComponent, _GoogleChartsDashboardComponent, _GoogleChartsControlComponent]
          }]
        }], null, null);
      })();
      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](_Ng2GoogleChartsModule, {
          declarations: [_GoogleChartComponent, _GoogleChartsDashboardComponent, _GoogleChartsControlComponent],
          exports: [_GoogleChartComponent, _GoogleChartsDashboardComponent, _GoogleChartsControlComponent]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_GoogleChartEditor, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _GoogleChartsLoaderService
          }];
        }, null);
      })();

      /*
       * Public API Surface of ng2-google-charts
       */

      /**
       * Generated bundle index. Do not edit.
       */

      //# sourceMappingURL=ng2-google-charts.js.map

      /***/
    },

    /***/90234:
    /*!*************!*\
      !*** tslib ***!
      \*************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"__extends": function __extends() {
          return (/* binding */_extends
          );
        },
        /* harmony export */"__assign": function __assign() {
          return (/* binding */_assign2
          );
        },
        /* harmony export */"__rest": function __rest() {
          return (/* binding */_rest
          );
        },
        /* harmony export */"__decorate": function __decorate() {
          return (/* binding */_decorate
          );
        },
        /* harmony export */"__param": function __param() {
          return (/* binding */_param
          );
        },
        /* harmony export */"__metadata": function __metadata() {
          return (/* binding */_metadata
          );
        },
        /* harmony export */"__awaiter": function __awaiter() {
          return (/* binding */_awaiter
          );
        },
        /* harmony export */"__generator": function __generator() {
          return (/* binding */_generator
          );
        },
        /* harmony export */"__createBinding": function __createBinding() {
          return (/* binding */_createBinding
          );
        },
        /* harmony export */"__exportStar": function __exportStar() {
          return (/* binding */_exportStar
          );
        },
        /* harmony export */"__values": function __values() {
          return (/* binding */_values
          );
        },
        /* harmony export */"__read": function __read() {
          return (/* binding */_read
          );
        },
        /* harmony export */"__spread": function __spread() {
          return (/* binding */_spread
          );
        },
        /* harmony export */"__spreadArrays": function __spreadArrays() {
          return (/* binding */_spreadArrays
          );
        },
        /* harmony export */"__await": function __await() {
          return (/* binding */_await
          );
        },
        /* harmony export */"__asyncGenerator": function __asyncGenerator() {
          return (/* binding */_asyncGenerator
          );
        },
        /* harmony export */"__asyncDelegator": function __asyncDelegator() {
          return (/* binding */_asyncDelegator
          );
        },
        /* harmony export */"__asyncValues": function __asyncValues() {
          return (/* binding */_asyncValues
          );
        },
        /* harmony export */"__makeTemplateObject": function __makeTemplateObject() {
          return (/* binding */_makeTemplateObject
          );
        },
        /* harmony export */"__importStar": function __importStar() {
          return (/* binding */_importStar
          );
        },
        /* harmony export */"__importDefault": function __importDefault() {
          return (/* binding */_importDefault
          );
        },
        /* harmony export */"__classPrivateFieldGet": function __classPrivateFieldGet() {
          return (/* binding */_classPrivateFieldGet
          );
        },
        /* harmony export */"__classPrivateFieldSet": function __classPrivateFieldSet() {
          return (/* binding */_classPrivateFieldSet
          );
        }
        /* harmony export */
      });
      /*! *****************************************************************************
      Copyright (c) Microsoft Corporation.
      
      Permission to use, copy, modify, and/or distribute this software for any
      purpose with or without fee is hereby granted.
      
      THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
      PERFORMANCE OF THIS SOFTWARE.
      ***************************************************************************** */
      /* global Reflect, Promise */

      var _extendStatics = function extendStatics(d, b) {
        _extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return _extendStatics(d, b);
      };
      function _extends(d, b) {
        _extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      }
      var _assign2 = function _assign() {
        _assign2 = Object.assign || function __assign(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) {
              if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
          }
          return t;
        };
        return _assign2.apply(this, arguments);
      };
      function _rest(s, e) {
        var t = {};
        for (var p in s) {
          if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
        }
        if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
        }
        return t;
      }
      function _decorate(decorators, target, key, desc) {
        var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
          if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        }
        return c > 3 && r && Object.defineProperty(target, key, r), r;
      }
      function _param(paramIndex, decorator) {
        return function (target, key) {
          decorator(target, key, paramIndex);
        };
      }
      function _metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
      }
      function _awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) {
          return value instanceof P ? value : new P(function (resolve) {
            resolve(value);
          });
        }
        return new (P || (P = Promise))(function (resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      }
      function _generator(thisArg, body) {
        var _ = {
            label: 0,
            sent: function sent() {
              if (t[0] & 1) throw t[1];
              return t[1];
            },
            trys: [],
            ops: []
          },
          f,
          y,
          t,
          g;
        return g = {
          next: verb(0),
          "throw": verb(1),
          "return": verb(2)
        }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
          return this;
        }), g;
        function verb(n) {
          return function (v) {
            return step([n, v]);
          };
        }
        function step(op) {
          if (f) throw new TypeError("Generator is already executing.");
          while (_) {
            try {
              if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
              if (y = 0, t) op = [op[0] & 2, t.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t = op;
                  break;
                case 4:
                  _.label++;
                  return {
                    value: op[1],
                    done: false
                  };
                case 5:
                  _.label++;
                  y = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _.ops.pop();
                  _.trys.pop();
                  continue;
                default:
                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _ = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                    _.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _.label < t[1]) {
                    _.label = t[1];
                    t = op;
                    break;
                  }
                  if (t && _.label < t[2]) {
                    _.label = t[2];
                    _.ops.push(op);
                    break;
                  }
                  if (t[2]) _.ops.pop();
                  _.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _);
            } catch (e) {
              op = [6, e];
              y = 0;
            } finally {
              f = t = 0;
            }
          }
          if (op[0] & 5) throw op[1];
          return {
            value: op[0] ? op[1] : void 0,
            done: true
          };
        }
      }
      function _createBinding(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      }
      function _exportStar(m, exports) {
        for (var p in m) {
          if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
        }
      }
      function _values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator,
          m = s && o[s],
          i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
          next: function next() {
            if (o && i >= o.length) o = void 0;
            return {
              value: o && o[i++],
              done: !o
            };
          }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
      }
      function _read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o),
          r,
          ar = [],
          e;
        try {
          while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
            ar.push(r.value);
          }
        } catch (error) {
          e = {
            error: error
          };
        } finally {
          try {
            if (r && !r.done && (m = i["return"])) m.call(i);
          } finally {
            if (e) throw e.error;
          }
        }
        return ar;
      }
      function _spread() {
        for (var ar = [], i = 0; i < arguments.length; i++) {
          ar = ar.concat(_read(arguments[i]));
        }
        return ar;
      }
      function _spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
          s += arguments[i].length;
        }
        for (var r = Array(s), k = 0, i = 0; i < il; i++) {
          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
            r[k] = a[j];
          }
        }
        return r;
      }
      ;
      function _await(v) {
        return this instanceof _await ? (this.v = v, this) : new _await(v);
      }
      function _asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []),
          i,
          q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
          return this;
        }, i;
        function verb(n) {
          if (g[n]) i[n] = function (v) {
            return new Promise(function (a, b) {
              q.push([n, v, a, b]) > 1 || resume(n, v);
            });
          };
        }
        function resume(n, v) {
          try {
            step(g[n](v));
          } catch (e) {
            settle(q[0][3], e);
          }
        }
        function step(r) {
          r.value instanceof _await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f, v) {
          if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
        }
      }
      function _asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) {
          throw e;
        }), verb("return"), i[Symbol.iterator] = function () {
          return this;
        }, i;
        function verb(n, f) {
          i[n] = o[n] ? function (v) {
            return (p = !p) ? {
              value: _await(o[n](v)),
              done: n === "return"
            } : f ? f(v) : v;
          } : f;
        }
      }
      function _asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator],
          i;
        return m ? m.call(o) : (o = typeof _values === "function" ? _values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
          return this;
        }, i);
        function verb(n) {
          i[n] = o[n] && function (v) {
            return new Promise(function (resolve, reject) {
              v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
          };
        }
        function settle(resolve, reject, d, v) {
          Promise.resolve(v).then(function (v) {
            resolve({
              value: v,
              done: d
            });
          }, reject);
        }
      }
      function _makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", {
            value: raw
          });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      }
      ;
      function _importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) {
          if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        }
        result["default"] = mod;
        return result;
      }
      function _importDefault(mod) {
        return mod && mod.__esModule ? mod : {
          "default": mod
        };
      }
      function _classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
      }
      function _classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
          throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
      }

      /***/
    }
  }]);
})();
//# sourceMappingURL=default-node_modules_ng2-google-charts___ivy_ngcc___fesm2015_ng2-google-charts_js-es5.js.map