(function () {
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
  (self["webpackChunkmonily"] = self["webpackChunkmonily"] || []).push([["default-node_modules_ngx-pagination_fesm2020_ngx-pagination_mjs"], {
    /***/82798:
    /*!*****************************************************************!*\
      !*** ./node_modules/ngx-pagination/fesm2020/ngx-pagination.mjs ***!
      \*****************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"NgxPaginationModule": function NgxPaginationModule() {
          return (/* binding */_NgxPaginationModule
          );
        },
        /* harmony export */"PaginatePipe": function PaginatePipe() {
          return (/* binding */_PaginatePipe
          );
        },
        /* harmony export */"PaginationControlsComponent": function PaginationControlsComponent() {
          return (/* binding */_PaginationControlsComponent
          );
        },
        /* harmony export */"PaginationControlsDirective": function PaginationControlsDirective() {
          return (/* binding */_PaginationControlsDirective
          );
        },
        /* harmony export */"PaginationService": function PaginationService() {
          return (/* binding */_PaginationService
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @angular/core */37716);
      /* harmony import */
      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @angular/common */38583);
      function PaginationControlsComponent_ul_3_li_1_a_1_Template(rf, ctx) {
        if (rf & 1) {
          var _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 12);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keyup.enter", function PaginationControlsComponent_ul_3_li_1_a_1_Template_a_keyup_enter_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
            return _r0.previous();
          })("click", function PaginationControlsComponent_ul_3_li_1_a_1_Template_a_click_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
            return _r0.previous();
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "span", 13);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r5.previousLabel, " ");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r5.screenReaderPageLabel);
        }
      }
      function PaginationControlsComponent_ul_3_li_1_span_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 14);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "span", 13);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r6.previousLabel, " ");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r6.screenReaderPageLabel);
        }
      }
      function PaginationControlsComponent_ul_3_li_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 9);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, PaginationControlsComponent_ul_3_li_1_a_1_Template, 4, 2, "a", 10);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, PaginationControlsComponent_ul_3_li_1_span_2_Template, 4, 2, "span", 11);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("disabled", _r0.isFirstPage());
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", 1 < _r0.getCurrent());
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _r0.isFirstPage());
        }
      }
      function PaginationControlsComponent_ul_3_li_4_a_1_Template(rf, ctx) {
        if (rf & 1) {
          var _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 12);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keyup.enter", function PaginationControlsComponent_ul_3_li_4_a_1_Template_a_keyup_enter_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r15);
            var page_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
            return _r0.setCurrent(page_r10.value);
          })("click", function PaginationControlsComponent_ul_3_li_4_a_1_Template_a_click_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r15);
            var page_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
            return _r0.setCurrent(page_r10.value);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 13);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "span");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](5, "number");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var page_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
          var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("", ctx_r11.screenReaderPageLabel, " ");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](page_r10.label === "..." ? page_r10.label : _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](5, 2, page_r10.label, ""));
        }
      }
      function PaginationControlsComponent_ul_3_li_4_ng_container_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 16);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "span", 13);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](6, "number");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
        }
        if (rf & 2) {
          var page_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
          var ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("", ctx_r12.screenReaderCurrentLabel, " ");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](page_r10.label === "..." ? page_r10.label : _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](6, 2, page_r10.label, ""));
        }
      }
      function PaginationControlsComponent_ul_3_li_4_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, PaginationControlsComponent_ul_3_li_4_a_1_Template, 6, 5, "a", 10);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, PaginationControlsComponent_ul_3_li_4_ng_container_2_Template, 7, 5, "ng-container", 15);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var page_r10 = ctx.$implicit;
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("current", _r0.getCurrent() === page_r10.value)("ellipsis", page_r10.label === "...");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _r0.getCurrent() !== page_r10.value);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _r0.getCurrent() === page_r10.value);
        }
      }
      function PaginationControlsComponent_ul_3_li_5_a_1_Template(rf, ctx) {
        if (rf & 1) {
          var _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 12);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keyup.enter", function PaginationControlsComponent_ul_3_li_5_a_1_Template_a_keyup_enter_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r23);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
            return _r0.next();
          })("click", function PaginationControlsComponent_ul_3_li_5_a_1_Template_a_click_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r23);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
            return _r0.next();
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "span", 13);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r20.nextLabel, " ");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r20.screenReaderPageLabel);
        }
      }
      function PaginationControlsComponent_ul_3_li_5_span_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 14);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "span", 13);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r21.nextLabel, " ");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r21.screenReaderPageLabel);
        }
      }
      function PaginationControlsComponent_ul_3_li_5_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 17);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, PaginationControlsComponent_ul_3_li_5_a_1_Template, 4, 2, "a", 10);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, PaginationControlsComponent_ul_3_li_5_span_2_Template, 4, 2, "span", 11);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("disabled", _r0.isLastPage());
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !_r0.isLastPage());
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _r0.isLastPage());
        }
      }
      function PaginationControlsComponent_ul_3_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ul", 4);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, PaginationControlsComponent_ul_3_li_1_Template, 3, 4, "li", 5);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "li", 6);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, PaginationControlsComponent_ul_3_li_4_Template, 3, 6, "li", 7);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, PaginationControlsComponent_ul_3_li_5_Template, 3, 4, "li", 8);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("responsive", ctx_r1.responsive);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.directionLinks);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate2"](" ", _r0.getCurrent(), " / ", _r0.getLastPage(), " ");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", _r0.pages)("ngForTrackBy", ctx_r1.trackByIndex);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.directionLinks);
        }
      }
      var _PaginationService = /*#__PURE__*/function () {
        function _PaginationService() {
          _classCallCheck(this, _PaginationService);
          this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.instances = {};
          this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';
        }
        _createClass(_PaginationService, [{
          key: "defaultId",
          value: function defaultId() {
            return this.DEFAULT_ID;
          }
          /**
           * Register a PaginationInstance with this service. Returns a
           * boolean value signifying whether the instance is new or
           * updated (true = new or updated, false = unchanged).
           */
        }, {
          key: "register",
          value: function register(instance) {
            if (instance.id == null) {
              instance.id = this.DEFAULT_ID;
            }
            if (!this.instances[instance.id]) {
              this.instances[instance.id] = instance;
              return true;
            } else {
              return this.updateInstance(instance);
            }
          }
          /**
           * Check each property of the instance and update any that have changed. Return
           * true if any changes were made, else return false.
           */
        }, {
          key: "updateInstance",
          value: function updateInstance(instance) {
            var changed = false;
            for (var prop in this.instances[instance.id]) {
              if (instance[prop] !== this.instances[instance.id][prop]) {
                this.instances[instance.id][prop] = instance[prop];
                changed = true;
              }
            }
            return changed;
          }
          /**
           * Returns the current page number.
           */
        }, {
          key: "getCurrentPage",
          value: function getCurrentPage(id) {
            if (this.instances[id]) {
              return this.instances[id].currentPage;
            }
            return 1;
          }
          /**
           * Sets the current page number.
           */
        }, {
          key: "setCurrentPage",
          value: function setCurrentPage(id, page) {
            if (this.instances[id]) {
              var instance = this.instances[id];
              var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);
              if (page <= maxPage && 1 <= page) {
                this.instances[id].currentPage = page;
                this.change.emit(id);
              }
            }
          }
          /**
           * Sets the value of instance.totalItems
           */
        }, {
          key: "setTotalItems",
          value: function setTotalItems(id, totalItems) {
            if (this.instances[id] && 0 <= totalItems) {
              this.instances[id].totalItems = totalItems;
              this.change.emit(id);
            }
          }
          /**
           * Sets the value of instance.itemsPerPage.
           */
        }, {
          key: "setItemsPerPage",
          value: function setItemsPerPage(id, itemsPerPage) {
            if (this.instances[id]) {
              this.instances[id].itemsPerPage = itemsPerPage;
              this.change.emit(id);
            }
          }
          /**
           * Returns a clone of the pagination instance object matching the id. If no
           * id specified, returns the instance corresponding to the default id.
           */
        }, {
          key: "getInstance",
          value: function getInstance() {
            var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.DEFAULT_ID;
            if (this.instances[id]) {
              return this.clone(this.instances[id]);
            }
            return {};
          }
          /**
           * Perform a shallow clone of an object.
           */
        }, {
          key: "clone",
          value: function clone(obj) {
            var target = {};
            for (var i in obj) {
              if (obj.hasOwnProperty(i)) {
                target[i] = obj[i];
              }
            }
            return target;
          }
        }]);
        return _PaginationService;
      }();
      var LARGE_NUMBER = Number.MAX_SAFE_INTEGER;
      var _PaginatePipe = /*#__PURE__*/function () {
        function _PaginatePipe(service) {
          _classCallCheck(this, _PaginatePipe);
          this.service = service;
          // store the values from the last time the pipe was invoked
          this.state = {};
        }
        _createClass(_PaginatePipe, [{
          key: "transform",
          value: function transform(collection, args) {
            // When an observable is passed through the AsyncPipe, it will output
            // `null` until the subscription resolves. In this case, we want to
            // use the cached data from the `state` object to prevent the NgFor
            // from flashing empty until the real values arrive.
            if (!(collection instanceof Array)) {
              var _id = args.id || this.service.defaultId();
              if (this.state[_id]) {
                return this.state[_id].slice;
              } else {
                return collection;
              }
            }
            var serverSideMode = args.totalItems && args.totalItems !== collection.length;
            var instance = this.createInstance(collection, args);
            var id = instance.id;
            var start, end;
            var perPage = instance.itemsPerPage;
            var emitChange = this.service.register(instance);
            if (!serverSideMode && collection instanceof Array) {
              perPage = +perPage || LARGE_NUMBER;
              start = (instance.currentPage - 1) * perPage;
              end = start + perPage;
              var isIdentical = this.stateIsIdentical(id, collection, start, end);
              if (isIdentical) {
                return this.state[id].slice;
              } else {
                var slice = collection.slice(start, end);
                this.saveState(id, collection, slice, start, end);
                this.service.change.emit(id);
                return slice;
              }
            } else {
              if (emitChange) {
                this.service.change.emit(id);
              }
              // save the state for server-side collection to avoid null
              // flash as new data loads.
              this.saveState(id, collection, collection, start, end);
              return collection;
            }
          }
          /**
           * Create an PaginationInstance object, using defaults for any optional properties not supplied.
           */
        }, {
          key: "createInstance",
          value: function createInstance(collection, config) {
            this.checkConfig(config);
            return {
              id: config.id != null ? config.id : this.service.defaultId(),
              itemsPerPage: +config.itemsPerPage || 0,
              currentPage: +config.currentPage || 1,
              totalItems: +config.totalItems || collection.length
            };
          }
          /**
           * Ensure the argument passed to the filter contains the required properties.
           */
        }, {
          key: "checkConfig",
          value: function checkConfig(config) {
            var required = ['itemsPerPage', 'currentPage'];
            var missing = required.filter(function (prop) {
              return !(prop in config);
            });
            if (0 < missing.length) {
              throw new Error("PaginatePipe: Argument is missing the following required properties: ".concat(missing.join(', ')));
            }
          }
          /**
           * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced
           * array for a given id. This means that the next time the pipe is run on this collection & id, we just
           * need to check that the collection, start and end points are all identical, and if so, return the
           * last sliced array.
           */
        }, {
          key: "saveState",
          value: function saveState(id, collection, slice, start, end) {
            this.state[id] = {
              collection: collection,
              size: collection.length,
              slice: slice,
              start: start,
              end: end
            };
          }
          /**
           * For a given id, returns true if the collection, size, start and end values are identical.
           */
        }, {
          key: "stateIsIdentical",
          value: function stateIsIdentical(id, collection, start, end) {
            var state = this.state[id];
            if (!state) {
              return false;
            }
            var isMetaDataIdentical = state.size === collection.length && state.start === start && state.end === end;
            if (!isMetaDataIdentical) {
              return false;
            }
            return state.slice.every(function (element, index) {
              return element === collection[start + index];
            });
          }
        }]);
        return _PaginatePipe;
      }();
      _PaginatePipe.ɵfac = function PaginatePipe_Factory(t) {
        return new (t || _PaginatePipe)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_PaginationService, 16));
      };
      _PaginatePipe.ɵpipe = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefinePipe"]({
        name: "paginate",
        type: _PaginatePipe,
        pure: false
      });
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_PaginatePipe, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Pipe,
          args: [{
            name: 'paginate',
            pure: false
          }]
        }], function () {
          return [{
            type: _PaginationService
          }];
        }, null);
      })();

      /**
       * The default template and styles for the pagination links are borrowed directly
       * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html
       */
      var DEFAULT_TEMPLATE = "\n    <pagination-template  #p=\"paginationApi\"\n                         [id]=\"id\"\n                         [maxSize]=\"maxSize\"\n                         (pageChange)=\"pageChange.emit($event)\"\n                         (pageBoundsCorrection)=\"pageBoundsCorrection.emit($event)\">\n    <nav role=\"navigation\" [attr.aria-label]=\"screenReaderPaginationLabel\">\n    <ul class=\"ngx-pagination\" \n        [class.responsive]=\"responsive\"\n        *ngIf=\"!(autoHide && p.pages.length <= 1)\">\n\n        <li class=\"pagination-previous\" [class.disabled]=\"p.isFirstPage()\" *ngIf=\"directionLinks\"> \n            <a tabindex=\"0\" *ngIf=\"1 < p.getCurrent()\" (keyup.enter)=\"p.previous()\" (click)=\"p.previous()\">\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf=\"p.isFirstPage()\" aria-disabled=\"true\">\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li> \n\n        <li class=\"small-screen\">\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\n        </li>\n\n        <li [class.current]=\"p.getCurrent() === page.value\" \n            [class.ellipsis]=\"page.label === '...'\"\n            *ngFor=\"let page of p.pages; trackBy: trackByIndex\">\n            <a tabindex=\"0\" (keyup.enter)=\"p.setCurrent(page.value)\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\n                <span class=\"show-for-sr\">{{ screenReaderPageLabel }} </span>\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\n            </a>\n            <ng-container *ngIf=\"p.getCurrent() === page.value\">\n              <span aria-live=\"polite\">\n                <span class=\"show-for-sr\">{{ screenReaderCurrentLabel }} </span>\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \n              </span>\n            </ng-container>\n        </li>\n\n        <li class=\"pagination-next\" [class.disabled]=\"p.isLastPage()\" *ngIf=\"directionLinks\">\n            <a tabindex=\"0\" *ngIf=\"!p.isLastPage()\" (keyup.enter)=\"p.next()\" (click)=\"p.next()\">\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </a>\n            <span *ngIf=\"p.isLastPage()\" aria-disabled=\"true\">\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n\n    </ul>\n    </nav>\n    </pagination-template>\n    ";
      var DEFAULT_STYLES = "\n.ngx-pagination {\n  margin-left: 0;\n  margin-bottom: 1rem; }\n  .ngx-pagination::before, .ngx-pagination::after {\n    content: ' ';\n    display: table; }\n  .ngx-pagination::after {\n    clear: both; }\n  .ngx-pagination li {\n    -moz-user-select: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n    margin-right: 0.0625rem;\n    border-radius: 0; }\n  .ngx-pagination li {\n    display: inline-block; }\n  .ngx-pagination a,\n  .ngx-pagination button {\n    color: #0a0a0a; \n    display: block;\n    padding: 0.1875rem 0.625rem;\n    border-radius: 0; }\n    .ngx-pagination a:hover,\n    .ngx-pagination button:hover {\n      background: #e6e6e6; }\n  .ngx-pagination .current {\n    padding: 0.1875rem 0.625rem;\n    background: #2199e8;\n    color: #fefefe;\n    cursor: default; }\n  .ngx-pagination .disabled {\n    padding: 0.1875rem 0.625rem;\n    color: #cacaca;\n    cursor: default; } \n    .ngx-pagination .disabled:hover {\n      background: transparent; }\n  .ngx-pagination a, .ngx-pagination button {\n    cursor: pointer; }\n\n.ngx-pagination .pagination-previous a::before,\n.ngx-pagination .pagination-previous.disabled::before { \n  content: '\xAB';\n  display: inline-block;\n  margin-right: 0.5rem; }\n\n.ngx-pagination .pagination-next a::after,\n.ngx-pagination .pagination-next.disabled::after {\n  content: '\xBB';\n  display: inline-block;\n  margin-left: 0.5rem; }\n\n.ngx-pagination .show-for-sr {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0); }\n.ngx-pagination .small-screen {\n  display: none; }\n@media screen and (max-width: 601px) {\n  .ngx-pagination.responsive .small-screen {\n    display: inline-block; } \n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\n    display: none; }\n}\n  ";

      /**
       * This directive is what powers all pagination controls components, including the default one.
       * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync
       * with the pagination controls.
       */
      var _PaginationControlsDirective = /*#__PURE__*/function () {
        function _PaginationControlsDirective(service, changeDetectorRef) {
          var _this = this;
          _classCallCheck(this, _PaginationControlsDirective);
          this.service = service;
          this.changeDetectorRef = changeDetectorRef;
          this.maxSize = 7;
          this.pageChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.pageBoundsCorrection = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.pages = [];
          this.changeSub = this.service.change.subscribe(function (id) {
            if (_this.id === id) {
              _this.updatePageLinks();
              _this.changeDetectorRef.markForCheck();
              _this.changeDetectorRef.detectChanges();
            }
          });
        }
        _createClass(_PaginationControlsDirective, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            if (this.id === undefined) {
              this.id = this.service.defaultId();
            }
            this.updatePageLinks();
          }
        }, {
          key: "ngOnChanges",
          value: function ngOnChanges(changes) {
            this.updatePageLinks();
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.changeSub.unsubscribe();
          }
          /**
           * Go to the previous page
           */
        }, {
          key: "previous",
          value: function previous() {
            this.checkValidId();
            this.setCurrent(this.getCurrent() - 1);
          }
          /**
           * Go to the next page
           */
        }, {
          key: "next",
          value: function next() {
            this.checkValidId();
            this.setCurrent(this.getCurrent() + 1);
          }
          /**
           * Returns true if current page is first page
           */
        }, {
          key: "isFirstPage",
          value: function isFirstPage() {
            return this.getCurrent() === 1;
          }
          /**
           * Returns true if current page is last page
           */
        }, {
          key: "isLastPage",
          value: function isLastPage() {
            return this.getLastPage() === this.getCurrent();
          }
          /**
           * Set the current page number.
           */
        }, {
          key: "setCurrent",
          value: function setCurrent(page) {
            this.pageChange.emit(page);
          }
          /**
           * Get the current page number.
           */
        }, {
          key: "getCurrent",
          value: function getCurrent() {
            return this.service.getCurrentPage(this.id);
          }
          /**
           * Returns the last page number
           */
        }, {
          key: "getLastPage",
          value: function getLastPage() {
            var inst = this.service.getInstance(this.id);
            if (inst.totalItems < 1) {
              // when there are 0 or fewer (an error case) items, there are no "pages" as such,
              // but it makes sense to consider a single, empty page as the last page.
              return 1;
            }
            return Math.ceil(inst.totalItems / inst.itemsPerPage);
          }
        }, {
          key: "getTotalItems",
          value: function getTotalItems() {
            return this.service.getInstance(this.id).totalItems;
          }
        }, {
          key: "checkValidId",
          value: function checkValidId() {
            if (this.service.getInstance(this.id).id == null) {
              console.warn("PaginationControlsDirective: the specified id \"".concat(this.id, "\" does not match any registered PaginationInstance"));
            }
          }
          /**
           * Updates the page links and checks that the current page is valid. Should run whenever the
           * PaginationService.change stream emits a value matching the current ID, or when any of the
           * input values changes.
           */
        }, {
          key: "updatePageLinks",
          value: function updatePageLinks() {
            var _this2 = this;
            var inst = this.service.getInstance(this.id);
            var correctedCurrentPage = this.outOfBoundCorrection(inst);
            if (correctedCurrentPage !== inst.currentPage) {
              setTimeout(function () {
                _this2.pageBoundsCorrection.emit(correctedCurrentPage);
                _this2.pages = _this2.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this2.maxSize);
              });
            } else {
              this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);
            }
          }
          /**
           * Checks that the instance.currentPage property is within bounds for the current page range.
           * If not, return a correct value for currentPage, or the current value if OK.
           */
        }, {
          key: "outOfBoundCorrection",
          value: function outOfBoundCorrection(instance) {
            var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);
            if (totalPages < instance.currentPage && 0 < totalPages) {
              return totalPages;
            } else if (instance.currentPage < 1) {
              return 1;
            }
            return instance.currentPage;
          }
          /**
           * Returns an array of Page objects to use in the pagination controls.
           */
        }, {
          key: "createPageArray",
          value: function createPageArray(currentPage, itemsPerPage, totalItems, paginationRange) {
            // paginationRange could be a string if passed from attribute, so cast to number.
            paginationRange = +paginationRange;
            var pages = [];
            // Return 1 as default page number
            // Make sense to show 1 instead of empty when there are no items
            var totalPages = Math.max(Math.ceil(totalItems / itemsPerPage), 1);
            var halfWay = Math.ceil(paginationRange / 2);
            var isStart = currentPage <= halfWay;
            var isEnd = totalPages - halfWay < currentPage;
            var isMiddle = !isStart && !isEnd;
            var ellipsesNeeded = paginationRange < totalPages;
            var i = 1;
            while (i <= totalPages && i <= paginationRange) {
              var label = void 0;
              var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);
              var openingEllipsesNeeded = i === 2 && (isMiddle || isEnd);
              var closingEllipsesNeeded = i === paginationRange - 1 && (isMiddle || isStart);
              if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {
                label = '...';
              } else {
                label = pageNumber;
              }
              pages.push({
                label: label,
                value: pageNumber
              });
              i++;
            }
            return pages;
          }
          /**
           * Given the position in the sequence of pagination links [i],
           * figure out what page number corresponds to that position.
           */
        }, {
          key: "calculatePageNumber",
          value: function calculatePageNumber(i, currentPage, paginationRange, totalPages) {
            var halfWay = Math.ceil(paginationRange / 2);
            if (i === paginationRange) {
              return totalPages;
            } else if (i === 1) {
              return i;
            } else if (paginationRange < totalPages) {
              if (totalPages - halfWay < currentPage) {
                return totalPages - paginationRange + i;
              } else if (halfWay < currentPage) {
                return currentPage - halfWay + i;
              } else {
                return i;
              }
            } else {
              return i;
            }
          }
        }]);
        return _PaginationControlsDirective;
      }();
      _PaginationControlsDirective.ɵfac = function PaginationControlsDirective_Factory(t) {
        return new (t || _PaginationControlsDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_PaginationService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef));
      };
      _PaginationControlsDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
        type: _PaginationControlsDirective,
        selectors: [["pagination-template"], ["", "pagination-template", ""]],
        inputs: {
          id: "id",
          maxSize: "maxSize"
        },
        outputs: {
          pageChange: "pageChange",
          pageBoundsCorrection: "pageBoundsCorrection"
        },
        exportAs: ["paginationApi"],
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]]
      });
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_PaginationControlsDirective, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
          args: [{
            selector: 'pagination-template,[pagination-template]',
            exportAs: 'paginationApi'
          }]
        }], function () {
          return [{
            type: _PaginationService
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
          }];
        }, {
          id: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          maxSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          pageChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          pageBoundsCorrection: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }]
        });
      })();
      function coerceToBoolean(input) {
        return !!input && input !== 'false';
      }
      /**
       * The default pagination controls component. Actually just a default implementation of a custom template.
       */
      var _PaginationControlsComponent = /*#__PURE__*/function () {
        function _PaginationControlsComponent() {
          _classCallCheck(this, _PaginationControlsComponent);
          this.maxSize = 7;
          this.previousLabel = 'Previous';
          this.nextLabel = 'Next';
          this.screenReaderPaginationLabel = 'Pagination';
          this.screenReaderPageLabel = 'page';
          this.screenReaderCurrentLabel = "You're on page";
          this.pageChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.pageBoundsCorrection = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this._directionLinks = true;
          this._autoHide = false;
          this._responsive = false;
        }
        _createClass(_PaginationControlsComponent, [{
          key: "directionLinks",
          get: function get() {
            return this._directionLinks;
          },
          set: function set(value) {
            this._directionLinks = coerceToBoolean(value);
          }
        }, {
          key: "autoHide",
          get: function get() {
            return this._autoHide;
          },
          set: function set(value) {
            this._autoHide = coerceToBoolean(value);
          }
        }, {
          key: "responsive",
          get: function get() {
            return this._responsive;
          },
          set: function set(value) {
            this._responsive = coerceToBoolean(value);
          }
        }, {
          key: "trackByIndex",
          value: function trackByIndex(index) {
            return index;
          }
        }]);
        return _PaginationControlsComponent;
      }();
      _PaginationControlsComponent.ɵfac = function PaginationControlsComponent_Factory(t) {
        return new (t || _PaginationControlsComponent)();
      };
      _PaginationControlsComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _PaginationControlsComponent,
        selectors: [["pagination-controls"]],
        inputs: {
          id: "id",
          maxSize: "maxSize",
          directionLinks: "directionLinks",
          autoHide: "autoHide",
          responsive: "responsive",
          previousLabel: "previousLabel",
          nextLabel: "nextLabel",
          screenReaderPaginationLabel: "screenReaderPaginationLabel",
          screenReaderPageLabel: "screenReaderPageLabel",
          screenReaderCurrentLabel: "screenReaderCurrentLabel"
        },
        outputs: {
          pageChange: "pageChange",
          pageBoundsCorrection: "pageBoundsCorrection"
        },
        decls: 4,
        vars: 4,
        consts: [[3, "id", "maxSize", "pageChange", "pageBoundsCorrection"], ["p", "paginationApi"], ["role", "navigation"], ["class", "ngx-pagination", 3, "responsive", 4, "ngIf"], [1, "ngx-pagination"], ["class", "pagination-previous", 3, "disabled", 4, "ngIf"], [1, "small-screen"], [3, "current", "ellipsis", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "pagination-next", 3, "disabled", 4, "ngIf"], [1, "pagination-previous"], ["tabindex", "0", 3, "keyup.enter", "click", 4, "ngIf"], ["aria-disabled", "true", 4, "ngIf"], ["tabindex", "0", 3, "keyup.enter", "click"], [1, "show-for-sr"], ["aria-disabled", "true"], [4, "ngIf"], ["aria-live", "polite"], [1, "pagination-next"]],
        template: function PaginationControlsComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "pagination-template", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("pageChange", function PaginationControlsComponent_Template_pagination_template_pageChange_0_listener($event) {
              return ctx.pageChange.emit($event);
            })("pageBoundsCorrection", function PaginationControlsComponent_Template_pagination_template_pageBoundsCorrection_0_listener($event) {
              return ctx.pageBoundsCorrection.emit($event);
            });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "nav", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, PaginationControlsComponent_ul_3_Template, 6, 8, "ul", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }
          if (rf & 2) {
            var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.id)("maxSize", ctx.maxSize);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.screenReaderPaginationLabel);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !(ctx.autoHide && _r0.pages.length <= 1));
          }
        },
        directives: [_PaginationControlsDirective, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf],
        pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.DecimalPipe],
        styles: [".ngx-pagination{margin-left:0;margin-bottom:1rem}.ngx-pagination:before,.ngx-pagination:after{content:\" \";display:table}.ngx-pagination:after{clear:both}.ngx-pagination li{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;margin-right:.0625rem;border-radius:0}.ngx-pagination li{display:inline-block}.ngx-pagination a,.ngx-pagination button{color:#0a0a0a;display:block;padding:.1875rem .625rem;border-radius:0}.ngx-pagination a:hover,.ngx-pagination button:hover{background:#e6e6e6}.ngx-pagination .current{padding:.1875rem .625rem;background:#2199e8;color:#fefefe;cursor:default}.ngx-pagination .disabled{padding:.1875rem .625rem;color:#cacaca;cursor:default}.ngx-pagination .disabled:hover{background:transparent}.ngx-pagination a,.ngx-pagination button{cursor:pointer}.ngx-pagination .pagination-previous a:before,.ngx-pagination .pagination-previous.disabled:before{content:\"\\ab\";display:inline-block;margin-right:.5rem}.ngx-pagination .pagination-next a:after,.ngx-pagination .pagination-next.disabled:after{content:\"\\bb\";display:inline-block;margin-left:.5rem}.ngx-pagination .show-for-sr{position:absolute!important;width:1px;height:1px;overflow:hidden;clip:rect(0,0,0,0)}.ngx-pagination .small-screen{display:none}@media screen and (max-width: 601px){.ngx-pagination.responsive .small-screen{display:inline-block}.ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next){display:none}}\n"],
        encapsulation: 2,
        changeDetection: 0
      });
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_PaginationControlsComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'pagination-controls',
            template: DEFAULT_TEMPLATE,
            styles: [DEFAULT_STYLES],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None
          }]
        }], null, {
          id: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          maxSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          directionLinks: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          autoHide: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          responsive: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          previousLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          nextLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          screenReaderPaginationLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          screenReaderPageLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          screenReaderCurrentLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          pageChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          pageBoundsCorrection: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }]
        });
      })();
      var _NgxPaginationModule = /*#__PURE__*/_createClass(function _NgxPaginationModule() {
        _classCallCheck(this, _NgxPaginationModule);
      });
      _NgxPaginationModule.ɵfac = function NgxPaginationModule_Factory(t) {
        return new (t || _NgxPaginationModule)();
      };
      _NgxPaginationModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: _NgxPaginationModule
      });
      _NgxPaginationModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        providers: [_PaginationService],
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule]]
      });
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_NgxPaginationModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
          args: [{
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule],
            declarations: [_PaginatePipe, _PaginationControlsComponent, _PaginationControlsDirective],
            providers: [_PaginationService],
            exports: [_PaginatePipe, _PaginationControlsComponent, _PaginationControlsDirective]
          }]
        }], null, null);
      })();

      /*
       * Public API Surface of ngx-pagination
       */

      /**
       * Generated bundle index. Do not edit.
       */

      //# sourceMappingURL=ngx-pagination.mjs.map

      /***/
    }
  }]);
})();
//# sourceMappingURL=default-node_modules_ngx-pagination_fesm2020_ngx-pagination_mjs-es5.js.map