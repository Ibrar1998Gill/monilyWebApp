(function () {
  function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }
  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }
  function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }
  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }
  function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }
  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
  function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
  function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }
  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
  function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
  function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
  (self["webpackChunkmonily"] = self["webpackChunkmonily"] || []).push([["src_app_components_apps_chat_chat_module_ts"], {
    /***/62558:
    /*!**************************************************************************************************!*\
      !*** ./node_modules/@ctrl/ngx-emoji-mart/__ivy_ngcc__/fesm2015/ctrl-ngx-emoji-mart-ngx-emoji.js ***!
      \**************************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"DEFAULT_BACKGROUNDFN": function DEFAULT_BACKGROUNDFN() {
          return (/* binding */_DEFAULT_BACKGROUNDFN
          );
        },
        /* harmony export */"EmojiComponent": function EmojiComponent() {
          return (/* binding */_EmojiComponent
          );
        },
        /* harmony export */"EmojiModule": function EmojiModule() {
          return (/* binding */_EmojiModule
          );
        },
        /* harmony export */"EmojiService": function EmojiService() {
          return (/* binding */_EmojiService
          );
        },
        /* harmony export */"categories": function categories() {
          return (/* binding */_categories
          );
        },
        /* harmony export */"emojis": function emojis() {
          return (/* binding */_emojis
          );
        },
        /* harmony export */"skins": function skins() {
          return (/* binding */_skins
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! tslib */64762);
      /* harmony import */
      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @angular/core */37716);
      /* harmony import */
      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @angular/common */38583);
      function EmojiComponent_button_0_ng_template_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
        }
        if (rf & 2) {
          var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r2.unified);
        }
      }
      function EmojiComponent_button_0_Template(rf, ctx) {
        if (rf & 1) {
          var _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function EmojiComponent_button_0_Template_button_click_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r4);
            var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r3.handleClick($event);
          })("mouseenter", function EmojiComponent_button_0_Template_button_mouseenter_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r4);
            var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r5.handleOver($event);
          })("mouseleave", function EmojiComponent_button_0_Template_button_mouseleave_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r4);
            var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r6.handleLeave($event);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, EmojiComponent_button_0_ng_template_2_Template, 1, 1, "ng-template", 4);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("emoji-mart-emoji-native", ctx_r0.isNative)("emoji-mart-emoji-custom", ctx_r0.custom);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", ctx_r0.title);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx_r0.label);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx_r0.style);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.isNative);
        }
      }
      function EmojiComponent_span_1_ng_template_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
        }
        if (rf & 2) {
          var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r7.unified);
        }
      }
      function EmojiComponent_span_1_Template(rf, ctx) {
        if (rf & 1) {
          var _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 5);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function EmojiComponent_span_1_Template_span_click_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r9);
            var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r8.handleClick($event);
          })("mouseenter", function EmojiComponent_span_1_Template_span_mouseenter_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r9);
            var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r10.handleOver($event);
          })("mouseleave", function EmojiComponent_span_1_Template_span_mouseleave_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r9);
            var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r11.handleLeave($event);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, EmojiComponent_span_1_ng_template_2_Template, 1, 1, "ng-template", 4);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](3, 1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("emoji-mart-emoji-native", ctx_r1.isNative)("emoji-mart-emoji-custom", ctx_r1.custom);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", ctx_r1.title);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx_r1.label);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx_r1.style);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.isNative);
        }
      }
      var _c0 = ["*", "*"];
      var _categories = [{
        id: 'people',
        name: 'Smileys & People',
        emojis: ['1F600', '1F603', '1F604', '1F601', '1F606', '1F605', '1F923', '1F602', '1F642', '1F643', '1F609', '1F60A', '1F607', '1F970', '1F60D', '1F929', '1F618', '1F617', '263A-FE0F', '1F61A', '1F619', '1F60B', '1F61B', '1F61C', '1F92A', '1F61D', '1F911', '1F917', '1F92D', '1F92B', '1F914', '1F910', '1F928', '1F610', '1F611', '1F636', '1F60F', '1F612', '1F644', '1F62C', '1F925', '1F60C', '1F614', '1F62A', '1F924', '1F634', '1F637', '1F912', '1F915', '1F922', '1F92E', '1F927', '1F975', '1F976', '1F974', '1F635', '1F92F', '1F920', '1F973', '1F60E', '1F913', '1F9D0', '1F615', '1F61F', '1F641', '2639-FE0F', '1F62E', '1F62F', '1F632', '1F633', '1F97A', '1F626', '1F627', '1F628', '1F630', '1F625', '1F622', '1F62D', '1F631', '1F616', '1F623', '1F61E', '1F613', '1F629', '1F62B', '1F971', '1F624', '1F621', '1F620', '1F92C', '1F608', '1F47F', '1F480', '2620-FE0F', '1F4A9', '1F921', '1F479', '1F47A', '1F47B', '1F47D', '1F47E', '1F916', '1F63A', '1F638', '1F639', '1F63B', '1F63C', '1F63D', '1F640', '1F63F', '1F63E', '1F648', '1F649', '1F64A', '1F44B', '1F91A', '1F590-FE0F', '270B', '1F596', '1F44C', '1F90F', '270C-FE0F', '1F91E', '1F91F', '1F918', '1F919', '1F448', '1F449', '1F446', '1F595', '1F447', '261D-FE0F', '1F44D', '1F44E', '270A', '1F44A', '1F91B', '1F91C', '1F44F', '1F64C', '1F450', '1F932', '1F91D', '1F64F', '270D-FE0F', '1F485', '1F933', '1F4AA', '1F9BE', '1F9BF', '1F9B5', '1F9B6', '1F442', '1F9BB', '1F443', '1F9E0', '1F9B7', '1F9B4', '1F440', '1F441-FE0F', '1F445', '1F444', '1F476', '1F9D2', '1F466', '1F467', '1F9D1', '1F471', '1F468', '1F9D4', '1F468-200D-1F9B0', '1F468-200D-1F9B1', '1F468-200D-1F9B3', '1F468-200D-1F9B2', '1F469', '1F469-200D-1F9B0', '1F9D1-200D-1F9B0', '1F469-200D-1F9B1', '1F9D1-200D-1F9B1', '1F469-200D-1F9B3', '1F9D1-200D-1F9B3', '1F469-200D-1F9B2', '1F9D1-200D-1F9B2', '1F471-200D-2640-FE0F', '1F471-200D-2642-FE0F', '1F9D3', '1F474', '1F475', '1F64D', '1F64D-200D-2642-FE0F', '1F64D-200D-2640-FE0F', '1F64E', '1F64E-200D-2642-FE0F', '1F64E-200D-2640-FE0F', '1F645', '1F645-200D-2642-FE0F', '1F645-200D-2640-FE0F', '1F646', '1F646-200D-2642-FE0F', '1F646-200D-2640-FE0F', '1F481', '1F481-200D-2642-FE0F', '1F481-200D-2640-FE0F', '1F64B', '1F64B-200D-2642-FE0F', '1F64B-200D-2640-FE0F', '1F9CF', '1F9CF-200D-2642-FE0F', '1F9CF-200D-2640-FE0F', '1F647', '1F647-200D-2642-FE0F', '1F647-200D-2640-FE0F', '1F926', '1F926-200D-2642-FE0F', '1F926-200D-2640-FE0F', '1F937', '1F937-200D-2642-FE0F', '1F937-200D-2640-FE0F', '1F9D1-200D-2695-FE0F', '1F468-200D-2695-FE0F', '1F469-200D-2695-FE0F', '1F9D1-200D-1F393', '1F468-200D-1F393', '1F469-200D-1F393', '1F9D1-200D-1F3EB', '1F468-200D-1F3EB', '1F469-200D-1F3EB', '1F9D1-200D-2696-FE0F', '1F468-200D-2696-FE0F', '1F469-200D-2696-FE0F', '1F9D1-200D-1F33E', '1F468-200D-1F33E', '1F469-200D-1F33E', '1F9D1-200D-1F373', '1F468-200D-1F373', '1F469-200D-1F373', '1F9D1-200D-1F527', '1F468-200D-1F527', '1F469-200D-1F527', '1F9D1-200D-1F3ED', '1F468-200D-1F3ED', '1F469-200D-1F3ED', '1F9D1-200D-1F4BC', '1F468-200D-1F4BC', '1F469-200D-1F4BC', '1F9D1-200D-1F52C', '1F468-200D-1F52C', '1F469-200D-1F52C', '1F9D1-200D-1F4BB', '1F468-200D-1F4BB', '1F469-200D-1F4BB', '1F9D1-200D-1F3A4', '1F468-200D-1F3A4', '1F469-200D-1F3A4', '1F9D1-200D-1F3A8', '1F468-200D-1F3A8', '1F469-200D-1F3A8', '1F9D1-200D-2708-FE0F', '1F468-200D-2708-FE0F', '1F469-200D-2708-FE0F', '1F9D1-200D-1F680', '1F468-200D-1F680', '1F469-200D-1F680', '1F9D1-200D-1F692', '1F468-200D-1F692', '1F469-200D-1F692', '1F46E', '1F46E-200D-2642-FE0F', '1F46E-200D-2640-FE0F', '1F575-FE0F', '1F575-FE0F-200D-2642-FE0F', '1F575-FE0F-200D-2640-FE0F', '1F482', '1F482-200D-2642-FE0F', '1F482-200D-2640-FE0F', '1F477', '1F477-200D-2642-FE0F', '1F477-200D-2640-FE0F', '1F934', '1F478', '1F473', '1F473-200D-2642-FE0F', '1F473-200D-2640-FE0F', '1F472', '1F9D5', '1F935', '1F470', '1F930', '1F931', '1F47C', '1F385', '1F936', '1F9B8', '1F9B8-200D-2642-FE0F', '1F9B8-200D-2640-FE0F', '1F9B9', '1F9B9-200D-2642-FE0F', '1F9B9-200D-2640-FE0F', '1F9D9', '1F9D9-200D-2642-FE0F', '1F9D9-200D-2640-FE0F', '1F9DA', '1F9DA-200D-2642-FE0F', '1F9DA-200D-2640-FE0F', '1F9DB', '1F9DB-200D-2642-FE0F', '1F9DB-200D-2640-FE0F', '1F9DC', '1F9DC-200D-2642-FE0F', '1F9DC-200D-2640-FE0F', '1F9DD', '1F9DD-200D-2642-FE0F', '1F9DD-200D-2640-FE0F', '1F9DE', '1F9DE-200D-2642-FE0F', '1F9DE-200D-2640-FE0F', '1F9DF', '1F9DF-200D-2642-FE0F', '1F9DF-200D-2640-FE0F', '1F486', '1F486-200D-2642-FE0F', '1F486-200D-2640-FE0F', '1F487', '1F487-200D-2642-FE0F', '1F487-200D-2640-FE0F', '1F6B6', '1F6B6-200D-2642-FE0F', '1F6B6-200D-2640-FE0F', '1F9CD', '1F9CD-200D-2642-FE0F', '1F9CD-200D-2640-FE0F', '1F9CE', '1F9CE-200D-2642-FE0F', '1F9CE-200D-2640-FE0F', '1F9D1-200D-1F9AF', '1F468-200D-1F9AF', '1F469-200D-1F9AF', '1F9D1-200D-1F9BC', '1F468-200D-1F9BC', '1F469-200D-1F9BC', '1F9D1-200D-1F9BD', '1F468-200D-1F9BD', '1F469-200D-1F9BD', '1F3C3', '1F3C3-200D-2642-FE0F', '1F3C3-200D-2640-FE0F', '1F483', '1F57A', '1F574-FE0F', '1F46F', '1F46F-200D-2642-FE0F', '1F46F-200D-2640-FE0F', '1F9D6', '1F9D6-200D-2642-FE0F', '1F9D6-200D-2640-FE0F', '1F9D7', '1F9D7-200D-2642-FE0F', '1F9D7-200D-2640-FE0F', '1F93A', '1F3C7', '26F7-FE0F', '1F3C2', '1F3CC-FE0F', '1F3CC-FE0F-200D-2642-FE0F', '1F3CC-FE0F-200D-2640-FE0F', '1F3C4', '1F3C4-200D-2642-FE0F', '1F3C4-200D-2640-FE0F', '1F6A3', '1F6A3-200D-2642-FE0F', '1F6A3-200D-2640-FE0F', '1F3CA', '1F3CA-200D-2642-FE0F', '1F3CA-200D-2640-FE0F', '26F9-FE0F', '26F9-FE0F-200D-2642-FE0F', '26F9-FE0F-200D-2640-FE0F', '1F3CB-FE0F', '1F3CB-FE0F-200D-2642-FE0F', '1F3CB-FE0F-200D-2640-FE0F', '1F6B4', '1F6B4-200D-2642-FE0F', '1F6B4-200D-2640-FE0F', '1F6B5', '1F6B5-200D-2642-FE0F', '1F6B5-200D-2640-FE0F', '1F938', '1F938-200D-2642-FE0F', '1F938-200D-2640-FE0F', '1F93C', '1F93C-200D-2642-FE0F', '1F93C-200D-2640-FE0F', '1F93D', '1F93D-200D-2642-FE0F', '1F93D-200D-2640-FE0F', '1F93E', '1F93E-200D-2642-FE0F', '1F93E-200D-2640-FE0F', '1F939', '1F939-200D-2642-FE0F', '1F939-200D-2640-FE0F', '1F9D8', '1F9D8-200D-2642-FE0F', '1F9D8-200D-2640-FE0F', '1F6C0', '1F6CC', '1F9D1-200D-1F91D-200D-1F9D1', '1F46D', '1F46B', '1F46C', '1F48F', '1F469-200D-2764-FE0F-200D-1F48B-200D-1F468', '1F468-200D-2764-FE0F-200D-1F48B-200D-1F468', '1F469-200D-2764-FE0F-200D-1F48B-200D-1F469', '1F491', '1F469-200D-2764-FE0F-200D-1F468', '1F468-200D-2764-FE0F-200D-1F468', '1F469-200D-2764-FE0F-200D-1F469', '1F46A', '1F468-200D-1F469-200D-1F466', '1F468-200D-1F469-200D-1F467', '1F468-200D-1F469-200D-1F467-200D-1F466', '1F468-200D-1F469-200D-1F466-200D-1F466', '1F468-200D-1F469-200D-1F467-200D-1F467', '1F468-200D-1F468-200D-1F466', '1F468-200D-1F468-200D-1F467', '1F468-200D-1F468-200D-1F467-200D-1F466', '1F468-200D-1F468-200D-1F466-200D-1F466', '1F468-200D-1F468-200D-1F467-200D-1F467', '1F469-200D-1F469-200D-1F466', '1F469-200D-1F469-200D-1F467', '1F469-200D-1F469-200D-1F467-200D-1F466', '1F469-200D-1F469-200D-1F466-200D-1F466', '1F469-200D-1F469-200D-1F467-200D-1F467', '1F468-200D-1F466', '1F468-200D-1F466-200D-1F466', '1F468-200D-1F467', '1F468-200D-1F467-200D-1F466', '1F468-200D-1F467-200D-1F467', '1F469-200D-1F466', '1F469-200D-1F466-200D-1F466', '1F469-200D-1F467', '1F469-200D-1F467-200D-1F466', '1F469-200D-1F467-200D-1F467', '1F5E3-FE0F', '1F464', '1F465', '1F463', '1F48B', '1F48C', '1F498', '1F49D', '1F496', '1F497', '1F493', '1F49E', '1F495', '1F49F', '2763-FE0F', '1F494', '2764-FE0F', '1F9E1', '1F49B', '1F49A', '1F499', '1F49C', '1F90E', '1F5A4', '1F90D', '1F4AF', '1F4A2', '1F4A5', '1F4AB', '1F4A6', '1F4A8', '1F573-FE0F', '1F4A3', '1F4AC', '1F441-FE0F-200D-1F5E8-FE0F', '1F5E8-FE0F', '1F5EF-FE0F', '1F4AD', '1F4A4']
      }, {
        id: 'nature',
        name: 'Animals & Nature',
        emojis: ['1F435', '1F412', '1F98D', '1F9A7', '1F436', '1F415', '1F9AE', '1F415-200D-1F9BA', '1F429', '1F43A', '1F98A', '1F99D', '1F431', '1F408', '1F981', '1F42F', '1F405', '1F406', '1F434', '1F40E', '1F984', '1F993', '1F98C', '1F42E', '1F402', '1F403', '1F404', '1F437', '1F416', '1F417', '1F43D', '1F40F', '1F411', '1F410', '1F42A', '1F42B', '1F999', '1F992', '1F418', '1F98F', '1F99B', '1F42D', '1F401', '1F400', '1F439', '1F430', '1F407', '1F43F-FE0F', '1F994', '1F987', '1F43B', '1F428', '1F43C', '1F9A5', '1F9A6', '1F9A8', '1F998', '1F9A1', '1F43E', '1F983', '1F414', '1F413', '1F423', '1F424', '1F425', '1F426', '1F427', '1F54A-FE0F', '1F985', '1F986', '1F9A2', '1F989', '1F9A9', '1F99A', '1F99C', '1F438', '1F40A', '1F422', '1F98E', '1F40D', '1F432', '1F409', '1F995', '1F996', '1F433', '1F40B', '1F42C', '1F41F', '1F420', '1F421', '1F988', '1F419', '1F41A', '1F40C', '1F98B', '1F41B', '1F41C', '1F41D', '1F41E', '1F997', '1F577-FE0F', '1F578-FE0F', '1F982', '1F99F', '1F9A0', '1F490', '1F338', '1F4AE', '1F3F5-FE0F', '1F339', '1F940', '1F33A', '1F33B', '1F33C', '1F337', '1F331', '1F332', '1F333', '1F334', '1F335', '1F33E', '1F33F', '2618-FE0F', '1F340', '1F341', '1F342', '1F343']
      }, {
        id: 'foods',
        name: 'Food & Drink',
        emojis: ['1F347', '1F348', '1F349', '1F34A', '1F34B', '1F34C', '1F34D', '1F96D', '1F34E', '1F34F', '1F350', '1F351', '1F352', '1F353', '1F95D', '1F345', '1F965', '1F951', '1F346', '1F954', '1F955', '1F33D', '1F336-FE0F', '1F952', '1F96C', '1F966', '1F9C4', '1F9C5', '1F344', '1F95C', '1F330', '1F35E', '1F950', '1F956', '1F968', '1F96F', '1F95E', '1F9C7', '1F9C0', '1F356', '1F357', '1F969', '1F953', '1F354', '1F35F', '1F355', '1F32D', '1F96A', '1F32E', '1F32F', '1F959', '1F9C6', '1F95A', '1F373', '1F958', '1F372', '1F963', '1F957', '1F37F', '1F9C8', '1F9C2', '1F96B', '1F371', '1F358', '1F359', '1F35A', '1F35B', '1F35C', '1F35D', '1F360', '1F362', '1F363', '1F364', '1F365', '1F96E', '1F361', '1F95F', '1F960', '1F961', '1F980', '1F99E', '1F990', '1F991', '1F9AA', '1F366', '1F367', '1F368', '1F369', '1F36A', '1F382', '1F370', '1F9C1', '1F967', '1F36B', '1F36C', '1F36D', '1F36E', '1F36F', '1F37C', '1F95B', '2615', '1F375', '1F376', '1F37E', '1F377', '1F378', '1F379', '1F37A', '1F37B', '1F942', '1F943', '1F964', '1F9C3', '1F9C9', '1F9CA', '1F962', '1F37D-FE0F', '1F374', '1F944', '1F52A', '1F3FA']
      }, {
        id: 'activity',
        name: 'Activities',
        emojis: ['1F383', '1F384', '1F386', '1F387', '1F9E8', '2728', '1F388', '1F389', '1F38A', '1F38B', '1F38D', '1F38E', '1F38F', '1F390', '1F391', '1F9E7', '1F380', '1F381', '1F397-FE0F', '1F39F-FE0F', '1F3AB', '1F396-FE0F', '1F3C6', '1F3C5', '1F947', '1F948', '1F949', '26BD', '26BE', '1F94E', '1F3C0', '1F3D0', '1F3C8', '1F3C9', '1F3BE', '1F94F', '1F3B3', '1F3CF', '1F3D1', '1F3D2', '1F94D', '1F3D3', '1F3F8', '1F94A', '1F94B', '1F945', '26F3', '26F8-FE0F', '1F3A3', '1F93F', '1F3BD', '1F3BF', '1F6F7', '1F94C', '1F3AF', '1FA80', '1FA81', '1F3B1', '1F52E', '1F9FF', '1F3AE', '1F579-FE0F', '1F3B0', '1F3B2', '1F9E9', '1F9F8', '2660-FE0F', '2665-FE0F', '2666-FE0F', '2663-FE0F', '265F-FE0F', '1F0CF', '1F004', '1F3B4', '1F3AD', '1F5BC-FE0F', '1F3A8', '1F9F5', '1F9F6']
      }, {
        id: 'places',
        name: 'Travel & Places',
        emojis: ['1F30D', '1F30E', '1F30F', '1F310', '1F5FA-FE0F', '1F5FE', '1F9ED', '1F3D4-FE0F', '26F0-FE0F', '1F30B', '1F5FB', '1F3D5-FE0F', '1F3D6-FE0F', '1F3DC-FE0F', '1F3DD-FE0F', '1F3DE-FE0F', '1F3DF-FE0F', '1F3DB-FE0F', '1F3D7-FE0F', '1F9F1', '1F3D8-FE0F', '1F3DA-FE0F', '1F3E0', '1F3E1', '1F3E2', '1F3E3', '1F3E4', '1F3E5', '1F3E6', '1F3E8', '1F3E9', '1F3EA', '1F3EB', '1F3EC', '1F3ED', '1F3EF', '1F3F0', '1F492', '1F5FC', '1F5FD', '26EA', '1F54C', '1F6D5', '1F54D', '26E9-FE0F', '1F54B', '26F2', '26FA', '1F301', '1F303', '1F3D9-FE0F', '1F304', '1F305', '1F306', '1F307', '1F309', '2668-FE0F', '1F3A0', '1F3A1', '1F3A2', '1F488', '1F3AA', '1F682', '1F683', '1F684', '1F685', '1F686', '1F687', '1F688', '1F689', '1F68A', '1F69D', '1F69E', '1F68B', '1F68C', '1F68D', '1F68E', '1F690', '1F691', '1F692', '1F693', '1F694', '1F695', '1F696', '1F697', '1F698', '1F699', '1F69A', '1F69B', '1F69C', '1F3CE-FE0F', '1F3CD-FE0F', '1F6F5', '1F9BD', '1F9BC', '1F6FA', '1F6B2', '1F6F4', '1F6F9', '1F68F', '1F6E3-FE0F', '1F6E4-FE0F', '1F6E2-FE0F', '26FD', '1F6A8', '1F6A5', '1F6A6', '1F6D1', '1F6A7', '2693', '26F5', '1F6F6', '1F6A4', '1F6F3-FE0F', '26F4-FE0F', '1F6E5-FE0F', '1F6A2', '2708-FE0F', '1F6E9-FE0F', '1F6EB', '1F6EC', '1FA82', '1F4BA', '1F681', '1F69F', '1F6A0', '1F6A1', '1F6F0-FE0F', '1F680', '1F6F8', '1F6CE-FE0F', '1F9F3', '231B', '23F3', '231A', '23F0', '23F1-FE0F', '23F2-FE0F', '1F570-FE0F', '1F55B', '1F567', '1F550', '1F55C', '1F551', '1F55D', '1F552', '1F55E', '1F553', '1F55F', '1F554', '1F560', '1F555', '1F561', '1F556', '1F562', '1F557', '1F563', '1F558', '1F564', '1F559', '1F565', '1F55A', '1F566', '1F311', '1F312', '1F313', '1F314', '1F315', '1F316', '1F317', '1F318', '1F319', '1F31A', '1F31B', '1F31C', '1F321-FE0F', '2600-FE0F', '1F31D', '1F31E', '1FA90', '2B50', '1F31F', '1F320', '1F30C', '2601-FE0F', '26C5', '26C8-FE0F', '1F324-FE0F', '1F325-FE0F', '1F326-FE0F', '1F327-FE0F', '1F328-FE0F', '1F329-FE0F', '1F32A-FE0F', '1F32B-FE0F', '1F32C-FE0F', '1F300', '1F308', '1F302', '2602-FE0F', '2614', '26F1-FE0F', '26A1', '2744-FE0F', '2603-FE0F', '26C4', '2604-FE0F', '1F525', '1F4A7', '1F30A']
      }, {
        id: 'objects',
        name: 'Objects',
        emojis: ['1F453', '1F576-FE0F', '1F97D', '1F97C', '1F9BA', '1F454', '1F455', '1F456', '1F9E3', '1F9E4', '1F9E5', '1F9E6', '1F457', '1F458', '1F97B', '1FA71', '1FA72', '1FA73', '1F459', '1F45A', '1F45B', '1F45C', '1F45D', '1F6CD-FE0F', '1F392', '1F45E', '1F45F', '1F97E', '1F97F', '1F460', '1F461', '1FA70', '1F462', '1F451', '1F452', '1F3A9', '1F393', '1F9E2', '26D1-FE0F', '1F4FF', '1F484', '1F48D', '1F48E', '1F507', '1F508', '1F509', '1F50A', '1F4E2', '1F4E3', '1F4EF', '1F514', '1F515', '1F3BC', '1F3B5', '1F3B6', '1F399-FE0F', '1F39A-FE0F', '1F39B-FE0F', '1F3A4', '1F3A7', '1F4FB', '1F3B7', '1F3B8', '1F3B9', '1F3BA', '1F3BB', '1FA95', '1F941', '1F4F1', '1F4F2', '260E-FE0F', '1F4DE', '1F4DF', '1F4E0', '1F50B', '1F50C', '1F4BB', '1F5A5-FE0F', '1F5A8-FE0F', '2328-FE0F', '1F5B1-FE0F', '1F5B2-FE0F', '1F4BD', '1F4BE', '1F4BF', '1F4C0', '1F9EE', '1F3A5', '1F39E-FE0F', '1F4FD-FE0F', '1F3AC', '1F4FA', '1F4F7', '1F4F8', '1F4F9', '1F4FC', '1F50D', '1F50E', '1F56F-FE0F', '1F4A1', '1F526', '1F3EE', '1FA94', '1F4D4', '1F4D5', '1F4D6', '1F4D7', '1F4D8', '1F4D9', '1F4DA', '1F4D3', '1F4D2', '1F4C3', '1F4DC', '1F4C4', '1F4F0', '1F5DE-FE0F', '1F4D1', '1F516', '1F3F7-FE0F', '1F4B0', '1F4B4', '1F4B5', '1F4B6', '1F4B7', '1F4B8', '1F4B3', '1F9FE', '1F4B9', '1F4B1', '1F4B2', '2709-FE0F', '1F4E7', '1F4E8', '1F4E9', '1F4E4', '1F4E5', '1F4E6', '1F4EB', '1F4EA', '1F4EC', '1F4ED', '1F4EE', '1F5F3-FE0F', '270F-FE0F', '2712-FE0F', '1F58B-FE0F', '1F58A-FE0F', '1F58C-FE0F', '1F58D-FE0F', '1F4DD', '1F4BC', '1F4C1', '1F4C2', '1F5C2-FE0F', '1F4C5', '1F4C6', '1F5D2-FE0F', '1F5D3-FE0F', '1F4C7', '1F4C8', '1F4C9', '1F4CA', '1F4CB', '1F4CC', '1F4CD', '1F4CE', '1F587-FE0F', '1F4CF', '1F4D0', '2702-FE0F', '1F5C3-FE0F', '1F5C4-FE0F', '1F5D1-FE0F', '1F512', '1F513', '1F50F', '1F510', '1F511', '1F5DD-FE0F', '1F528', '1FA93', '26CF-FE0F', '2692-FE0F', '1F6E0-FE0F', '1F5E1-FE0F', '2694-FE0F', '1F52B', '1F3F9', '1F6E1-FE0F', '1F527', '1F529', '2699-FE0F', '1F5DC-FE0F', '2696-FE0F', '1F9AF', '1F517', '26D3-FE0F', '1F9F0', '1F9F2', '2697-FE0F', '1F9EA', '1F9EB', '1F9EC', '1F52C', '1F52D', '1F4E1', '1F489', '1FA78', '1F48A', '1FA79', '1FA7A', '1F6AA', '1F6CF-FE0F', '1F6CB-FE0F', '1FA91', '1F6BD', '1F6BF', '1F6C1', '1FA92', '1F9F4', '1F9F7', '1F9F9', '1F9FA', '1F9FB', '1F9FC', '1F9FD', '1F9EF', '1F6D2', '1F6AC', '26B0-FE0F', '26B1-FE0F', '1F5FF']
      }, {
        id: 'symbols',
        name: 'Symbols',
        emojis: ['1F3E7', '1F6AE', '1F6B0', '267F', '1F6B9', '1F6BA', '1F6BB', '1F6BC', '1F6BE', '1F6C2', '1F6C3', '1F6C4', '1F6C5', '26A0-FE0F', '1F6B8', '26D4', '1F6AB', '1F6B3', '1F6AD', '1F6AF', '1F6B1', '1F6B7', '1F4F5', '1F51E', '2622-FE0F', '2623-FE0F', '2B06-FE0F', '2197-FE0F', '27A1-FE0F', '2198-FE0F', '2B07-FE0F', '2199-FE0F', '2B05-FE0F', '2196-FE0F', '2195-FE0F', '2194-FE0F', '21A9-FE0F', '21AA-FE0F', '2934-FE0F', '2935-FE0F', '1F503', '1F504', '1F519', '1F51A', '1F51B', '1F51C', '1F51D', '1F6D0', '269B-FE0F', '1F549-FE0F', '2721-FE0F', '2638-FE0F', '262F-FE0F', '271D-FE0F', '2626-FE0F', '262A-FE0F', '262E-FE0F', '1F54E', '1F52F', '2648', '2649', '264A', '264B', '264C', '264D', '264E', '264F', '2650', '2651', '2652', '2653', '26CE', '1F500', '1F501', '1F502', '25B6-FE0F', '23E9', '23ED-FE0F', '23EF-FE0F', '25C0-FE0F', '23EA', '23EE-FE0F', '1F53C', '23EB', '1F53D', '23EC', '23F8-FE0F', '23F9-FE0F', '23FA-FE0F', '23CF-FE0F', '1F3A6', '1F505', '1F506', '1F4F6', '1F4F3', '1F4F4', '2640-FE0F', '2642-FE0F', '2695-FE0F', '267E-FE0F', '267B-FE0F', '269C-FE0F', '1F531', '1F4DB', '1F530', '2B55', '2705', '2611-FE0F', '2714-FE0F', '2716-FE0F', '274C', '274E', '2795', '2796', '2797', '27B0', '27BF', '303D-FE0F', '2733-FE0F', '2734-FE0F', '2747-FE0F', '203C-FE0F', '2049-FE0F', '2753', '2754', '2755', '2757', '3030-FE0F', '00A9-FE0F', '00AE-FE0F', '2122-FE0F', '0023-FE0F-20E3', '002A-FE0F-20E3', '0030-FE0F-20E3', '0031-FE0F-20E3', '0032-FE0F-20E3', '0033-FE0F-20E3', '0034-FE0F-20E3', '0035-FE0F-20E3', '0036-FE0F-20E3', '0037-FE0F-20E3', '0038-FE0F-20E3', '0039-FE0F-20E3', '1F51F', '1F520', '1F521', '1F522', '1F523', '1F524', '1F170-FE0F', '1F18E', '1F171-FE0F', '1F191', '1F192', '1F193', '2139-FE0F', '1F194', '24C2-FE0F', '1F195', '1F196', '1F17E-FE0F', '1F197', '1F17F-FE0F', '1F198', '1F199', '1F19A', '1F201', '1F202-FE0F', '1F237-FE0F', '1F236', '1F22F', '1F250', '1F239', '1F21A', '1F232', '1F251', '1F238', '1F234', '1F233', '3297-FE0F', '3299-FE0F', '1F23A', '1F235', '1F534', '1F7E0', '1F7E1', '1F7E2', '1F535', '1F7E3', '1F7E4', '26AB', '26AA', '1F7E5', '1F7E7', '1F7E8', '1F7E9', '1F7E6', '1F7EA', '1F7EB', '2B1B', '2B1C', '25FC-FE0F', '25FB-FE0F', '25FE', '25FD', '25AA-FE0F', '25AB-FE0F', '1F536', '1F537', '1F538', '1F539', '1F53A', '1F53B', '1F4A0', '1F518', '1F533', '1F532']
      }, {
        id: 'flags',
        name: 'Flags',
        emojis: ['1F1E6-1F1E8', '1F1E6-1F1E9', '1F1E6-1F1EA', '1F1E6-1F1EB', '1F1E6-1F1EC', '1F1E6-1F1EE', '1F1E6-1F1F1', '1F1E6-1F1F2', '1F1E6-1F1F4', '1F1E6-1F1F6', '1F1E6-1F1F7', '1F1E6-1F1F8', '1F1E6-1F1F9', '1F1E6-1F1FA', '1F1E6-1F1FC', '1F1E6-1F1FD', '1F1E6-1F1FF', '1F1E7-1F1E6', '1F1E7-1F1E7', '1F1E7-1F1E9', '1F1E7-1F1EA', '1F1E7-1F1EB', '1F1E7-1F1EC', '1F1E7-1F1ED', '1F1E7-1F1EE', '1F1E7-1F1EF', '1F1E7-1F1F1', '1F1E7-1F1F2', '1F1E7-1F1F3', '1F1E7-1F1F4', '1F1E7-1F1F6', '1F1E7-1F1F7', '1F1E7-1F1F8', '1F1E7-1F1F9', '1F1E7-1F1FB', '1F1E7-1F1FC', '1F1E7-1F1FE', '1F1E7-1F1FF', '1F1E8-1F1E6', '1F1E8-1F1E8', '1F1E8-1F1E9', '1F1E8-1F1EB', '1F1E8-1F1EC', '1F1E8-1F1ED', '1F1E8-1F1EE', '1F1E8-1F1F0', '1F1E8-1F1F1', '1F1E8-1F1F2', '1F1E8-1F1F3', '1F1E8-1F1F4', '1F1E8-1F1F5', '1F1E8-1F1F7', '1F1E8-1F1FA', '1F1E8-1F1FB', '1F1E8-1F1FC', '1F1E8-1F1FD', '1F1E8-1F1FE', '1F1E8-1F1FF', '1F1E9-1F1EA', '1F1E9-1F1EC', '1F1E9-1F1EF', '1F1E9-1F1F0', '1F1E9-1F1F2', '1F1E9-1F1F4', '1F1E9-1F1FF', '1F1EA-1F1E6', '1F1EA-1F1E8', '1F1EA-1F1EA', '1F1EA-1F1EC', '1F1EA-1F1ED', '1F1EA-1F1F7', '1F1EA-1F1F8', '1F1EA-1F1F9', '1F1EA-1F1FA', '1F1EB-1F1EE', '1F1EB-1F1EF', '1F1EB-1F1F0', '1F1EB-1F1F2', '1F1EB-1F1F4', '1F1EB-1F1F7', '1F1EC-1F1E6', '1F1EC-1F1E7', '1F1EC-1F1E9', '1F1EC-1F1EA', '1F1EC-1F1EB', '1F1EC-1F1EC', '1F1EC-1F1ED', '1F1EC-1F1EE', '1F1EC-1F1F1', '1F1EC-1F1F2', '1F1EC-1F1F3', '1F1EC-1F1F5', '1F1EC-1F1F6', '1F1EC-1F1F7', '1F1EC-1F1F8', '1F1EC-1F1F9', '1F1EC-1F1FA', '1F1EC-1F1FC', '1F1EC-1F1FE', '1F1ED-1F1F0', '1F1ED-1F1F2', '1F1ED-1F1F3', '1F1ED-1F1F7', '1F1ED-1F1F9', '1F1ED-1F1FA', '1F1EE-1F1E8', '1F1EE-1F1E9', '1F1EE-1F1EA', '1F1EE-1F1F1', '1F1EE-1F1F2', '1F1EE-1F1F3', '1F1EE-1F1F4', '1F1EE-1F1F6', '1F1EE-1F1F7', '1F1EE-1F1F8', '1F1EE-1F1F9', '1F1EF-1F1EA', '1F1EF-1F1F2', '1F1EF-1F1F4', '1F1EF-1F1F5', '1F1F0-1F1EA', '1F1F0-1F1EC', '1F1F0-1F1ED', '1F1F0-1F1EE', '1F1F0-1F1F2', '1F1F0-1F1F3', '1F1F0-1F1F5', '1F1F0-1F1F7', '1F1F0-1F1FC', '1F1F0-1F1FE', '1F1F0-1F1FF', '1F1F1-1F1E6', '1F1F1-1F1E7', '1F1F1-1F1E8', '1F1F1-1F1EE', '1F1F1-1F1F0', '1F1F1-1F1F7', '1F1F1-1F1F8', '1F1F1-1F1F9', '1F1F1-1F1FA', '1F1F1-1F1FB', '1F1F1-1F1FE', '1F1F2-1F1E6', '1F1F2-1F1E8', '1F1F2-1F1E9', '1F1F2-1F1EA', '1F1F2-1F1EB', '1F1F2-1F1EC', '1F1F2-1F1ED', '1F1F2-1F1F0', '1F1F2-1F1F1', '1F1F2-1F1F2', '1F1F2-1F1F3', '1F1F2-1F1F4', '1F1F2-1F1F5', '1F1F2-1F1F6', '1F1F2-1F1F7', '1F1F2-1F1F8', '1F1F2-1F1F9', '1F1F2-1F1FA', '1F1F2-1F1FB', '1F1F2-1F1FC', '1F1F2-1F1FD', '1F1F2-1F1FE', '1F1F2-1F1FF', '1F1F3-1F1E6', '1F1F3-1F1E8', '1F1F3-1F1EA', '1F1F3-1F1EB', '1F1F3-1F1EC', '1F1F3-1F1EE', '1F1F3-1F1F1', '1F1F3-1F1F4', '1F1F3-1F1F5', '1F1F3-1F1F7', '1F1F3-1F1FA', '1F1F3-1F1FF', '1F1F4-1F1F2', '1F1F5-1F1E6', '1F1F5-1F1EA', '1F1F5-1F1EB', '1F1F5-1F1EC', '1F1F5-1F1ED', '1F1F5-1F1F0', '1F1F5-1F1F1', '1F1F5-1F1F2', '1F1F5-1F1F3', '1F1F5-1F1F7', '1F1F5-1F1F8', '1F1F5-1F1F9', '1F1F5-1F1FC', '1F1F5-1F1FE', '1F1F6-1F1E6', '1F1F7-1F1EA', '1F1F7-1F1F4', '1F1F7-1F1F8', '1F1F7-1F1FA', '1F1F7-1F1FC', '1F1F8-1F1E6', '1F1F8-1F1E7', '1F1F8-1F1E8', '1F1F8-1F1E9', '1F1F8-1F1EA', '1F1F8-1F1EC', '1F1F8-1F1ED', '1F1F8-1F1EE', '1F1F8-1F1EF', '1F1F8-1F1F0', '1F1F8-1F1F1', '1F1F8-1F1F2', '1F1F8-1F1F3', '1F1F8-1F1F4', '1F1F8-1F1F7', '1F1F8-1F1F8', '1F1F8-1F1F9', '1F1F8-1F1FB', '1F1F8-1F1FD', '1F1F8-1F1FE', '1F1F8-1F1FF', '1F1F9-1F1E6', '1F1F9-1F1E8', '1F1F9-1F1E9', '1F1F9-1F1EB', '1F1F9-1F1EC', '1F1F9-1F1ED', '1F1F9-1F1EF', '1F1F9-1F1F0', '1F1F9-1F1F1', '1F1F9-1F1F2', '1F1F9-1F1F3', '1F1F9-1F1F4', '1F1F9-1F1F7', '1F1F9-1F1F9', '1F1F9-1F1FB', '1F1F9-1F1FC', '1F1F9-1F1FF', '1F1FA-1F1E6', '1F1FA-1F1EC', '1F1FA-1F1F2', '1F1FA-1F1F3', '1F1FA-1F1F8', '1F1FA-1F1FE', '1F1FA-1F1FF', '1F1FB-1F1E6', '1F1FB-1F1E8', '1F1FB-1F1EA', '1F1FB-1F1EC', '1F1FB-1F1EE', '1F1FB-1F1F3', '1F1FB-1F1FA', '1F1FC-1F1EB', '1F1FC-1F1F8', '1F1FD-1F1F0', '1F1FE-1F1EA', '1F1FE-1F1F9', '1F1FF-1F1E6', '1F1FF-1F1F2', '1F1FF-1F1FC', '1F38C', '1F3C1', '1F3F3-FE0F', '1F3F3-FE0F-200D-1F308', '1F3F4', '1F3F4-200D-2620-FE0F', '1F3F4-E0067-E0062-E0065-E006E-E0067-E007F', '1F3F4-E0067-E0062-E0073-E0063-E0074-E007F', '1F3F4-E0067-E0062-E0077-E006C-E0073-E007F', '1F6A9']
      }];
      var _emojis = [{
        name: 'Earth Globe Europe-Africa',
        unified: '1F30D',
        keywords: ['globe', 'world', 'international'],
        sheet: [5, 32],
        shortName: 'earth_africa'
      }, {
        name: 'Grapes',
        unified: '1F347',
        keywords: ['fruit', 'food', 'wine'],
        sheet: [6, 31],
        shortName: 'grapes'
      }, {
        name: 'Jack-O-Lantern',
        unified: '1F383',
        keywords: ['halloween', 'light', 'pumpkin', 'creepy', 'fall'],
        sheet: [7, 34],
        shortName: 'jack_o_lantern'
      }, {
        name: 'Chequered Flag',
        unified: '1F3C1',
        keywords: ['contest', 'finishline', 'race', 'gokart'],
        sheet: [8, 39],
        shortName: 'checkered_flag'
      }, {
        name: 'Automated Teller Machine',
        unified: '1F3E7',
        keywords: ['money', 'sales', 'cash', 'blue-square', 'payment', 'bank'],
        sheet: [11, 1],
        shortName: 'atm'
      }, {
        name: 'Emoji Modifier Fitzpatrick Type-1-2',
        unified: '1F3FB',
        sheet: [11, 23],
        shortName: 'skin-tone-2'
      }, {
        name: 'Monkey Face',
        unified: '1F435',
        emoticons: [':o)'],
        keywords: ['animal', 'nature', 'circus'],
        sheet: [12, 25],
        shortName: 'monkey_face'
      }, {
        name: 'Waving Hand Sign',
        unified: '1F44B',
        keywords: ['hands', 'gesture', 'goodbye', 'solong', 'farewell', 'hello', 'hi', 'palm'],
        sheet: [13, 26],
        skinVariations: [{
          unified: '1F44B-1F3FB',
          sheet: [13, 27]
        }, {
          unified: '1F44B-1F3FC',
          sheet: [13, 28]
        }, {
          unified: '1F44B-1F3FD',
          sheet: [13, 29]
        }, {
          unified: '1F44B-1F3FE',
          sheet: [13, 30]
        }, {
          unified: '1F44B-1F3FF',
          sheet: [13, 31]
        }],
        shortName: 'wave'
      }, {
        name: 'Eyeglasses',
        unified: '1F453',
        keywords: ['fashion', 'accessories', 'eyesight', 'nerdy', 'dork', 'geek'],
        sheet: [14, 7],
        shortName: 'eyeglasses'
      }, {
        name: 'Grinning Face',
        unified: '1F600',
        text: ':D',
        keywords: ['face', 'smile', 'happy', 'joy', ':D', 'grin'],
        sheet: [30, 35],
        shortName: 'grinning'
      }, {
        name: 'Earth Globe Americas',
        unified: '1F30E',
        keywords: ['globe', 'world', 'USA', 'international'],
        sheet: [5, 33],
        shortName: 'earth_americas'
      }, {
        name: 'Melon',
        unified: '1F348',
        keywords: ['fruit', 'nature', 'food'],
        sheet: [6, 32],
        shortName: 'melon'
      }, {
        name: 'Christmas Tree',
        unified: '1F384',
        keywords: ['festival', 'vacation', 'december', 'xmas', 'celebration'],
        sheet: [7, 35],
        shortName: 'christmas_tree'
      }, {
        name: 'Emoji Modifier Fitzpatrick Type-3',
        unified: '1F3FC',
        sheet: [11, 24],
        shortName: 'skin-tone-3'
      }, {
        name: 'Monkey',
        unified: '1F412',
        keywords: ['animal', 'nature', 'banana', 'circus'],
        sheet: [11, 46],
        shortName: 'monkey'
      }, {
        name: 'Dark Sunglasses',
        unified: '1F576-FE0F',
        keywords: ['face', 'cool', 'accessories'],
        sheet: [29, 33],
        shortName: 'dark_sunglasses'
      }, {
        name: 'Smiling Face with Open Mouth',
        unified: '1F603',
        text: ':)',
        emoticons: ['=)', '=-)'],
        keywords: ['face', 'happy', 'joy', 'haha', ':D', ':)', 'smile', 'funny'],
        sheet: [30, 38],
        shortName: 'smiley'
      }, {
        name: 'Triangular Flag on Post',
        unified: '1F6A9',
        keywords: ['mark', 'milestone', 'place'],
        sheet: [35, 0],
        shortName: 'triangular_flag_on_post'
      }, {
        name: 'Put Litter in Its Place Symbol',
        unified: '1F6AE',
        keywords: ['blue-square', 'sign', 'human', 'info'],
        sheet: [35, 5],
        shortName: 'put_litter_in_its_place'
      }, {
        name: 'Raised Back of Hand',
        unified: '1F91A',
        keywords: ['fingers', 'raised', 'backhand'],
        sheet: [37, 43],
        skinVariations: [{
          unified: '1F91A-1F3FB',
          sheet: [37, 44]
        }, {
          unified: '1F91A-1F3FC',
          sheet: [37, 45]
        }, {
          unified: '1F91A-1F3FD',
          sheet: [37, 46]
        }, {
          unified: '1F91A-1F3FE',
          sheet: [37, 47]
        }, {
          unified: '1F91A-1F3FF',
          sheet: [37, 48]
        }],
        shortName: 'raised_back_of_hand'
      }, {
        name: 'Earth Globe Asia-Australia',
        unified: '1F30F',
        keywords: ['globe', 'world', 'east', 'international'],
        sheet: [5, 34],
        shortName: 'earth_asia'
      }, {
        name: 'Watermelon',
        unified: '1F349',
        keywords: ['fruit', 'food', 'picnic', 'summer'],
        sheet: [6, 33],
        shortName: 'watermelon'
      }, {
        name: 'Fireworks',
        unified: '1F386',
        keywords: ['photo', 'festival', 'carnival', 'congratulations'],
        sheet: [7, 42],
        shortName: 'fireworks'
      }, {
        name: 'Crossed Flags',
        unified: '1F38C',
        keywords: ['japanese', 'nation', 'country', 'border'],
        sheet: [7, 48],
        shortName: 'crossed_flags'
      }, {
        name: 'Emoji Modifier Fitzpatrick Type-4',
        unified: '1F3FD',
        sheet: [11, 25],
        shortName: 'skin-tone-4'
      }, {
        name: 'Raised Hand with Fingers Splayed',
        unified: '1F590-FE0F',
        keywords: ['hand', 'fingers', 'palm'],
        sheet: [29, 48],
        skinVariations: [{
          unified: '1F590-1F3FB',
          sheet: [29, 49]
        }, {
          unified: '1F590-1F3FC',
          sheet: [29, 50]
        }, {
          unified: '1F590-1F3FD',
          sheet: [29, 51]
        }, {
          unified: '1F590-1F3FE',
          sheet: [29, 52]
        }, {
          unified: '1F590-1F3FF',
          sheet: [29, 53]
        }],
        shortName: 'raised_hand_with_fingers_splayed'
      }, {
        name: 'Smiling Face with Open Mouth and Smiling Eyes',
        unified: '1F604',
        text: ':)',
        emoticons: ['C:', 'c:', ':D', ':-D'],
        keywords: ['face', 'happy', 'joy', 'funny', 'haha', 'laugh', 'like', ':D', ':)'],
        sheet: [30, 39],
        shortName: 'smile'
      }, {
        name: 'Potable Water Symbol',
        unified: '1F6B0',
        keywords: ['blue-square', 'liquid', 'restroom', 'cleaning', 'faucet'],
        sheet: [35, 7],
        shortName: 'potable_water'
      }, {
        name: 'Goggles',
        unified: '1F97D',
        keywords: ['eyes', 'protection', 'safety'],
        sheet: [42, 15],
        shortName: 'goggles'
      }, {
        name: 'Gorilla',
        unified: '1F98D',
        keywords: ['animal', 'nature', 'circus'],
        sheet: [42, 31],
        shortName: 'gorilla'
      }, {
        name: 'Globe with Meridians',
        unified: '1F310',
        keywords: ['earth', 'international', 'world', 'internet', 'interweb', 'i18n'],
        sheet: [5, 35],
        shortName: 'globe_with_meridians'
      }, {
        name: 'Tangerine',
        unified: '1F34A',
        keywords: ['food', 'fruit', 'nature', 'orange'],
        sheet: [6, 34],
        shortName: 'tangerine'
      }, {
        name: 'Firework Sparkler',
        unified: '1F387',
        keywords: ['stars', 'night', 'shine'],
        sheet: [7, 43],
        shortName: 'sparkler'
      }, {
        name: 'Waving Black Flag',
        unified: '1F3F4',
        sheet: [11, 17],
        shortName: 'waving_black_flag'
      }, {
        name: 'Emoji Modifier Fitzpatrick Type-5',
        unified: '1F3FE',
        sheet: [11, 26],
        shortName: 'skin-tone-5'
      }, {
        name: 'Grinning Face with Smiling Eyes',
        unified: '1F601',
        keywords: ['face', 'happy', 'smile', 'joy', 'kawaii'],
        sheet: [30, 36],
        shortName: 'grin'
      }, {
        name: 'Lab Coat',
        unified: '1F97C',
        sheet: [42, 14],
        shortName: 'lab_coat'
      }, {
        name: 'Orangutan',
        unified: '1F9A7',
        sheet: [42, 55],
        shortName: 'orangutan'
      }, {
        name: 'Wheelchair Symbol',
        unified: '267F',
        keywords: ['blue-square', 'disabled', 'a11y', 'accessibility'],
        sheet: [53, 40],
        shortName: 'wheelchair'
      }, {
        name: 'Raised Hand',
        unified: '270B',
        sheet: [54, 49],
        skinVariations: [{
          unified: '270B-1F3FB',
          sheet: [54, 50]
        }, {
          unified: '270B-1F3FC',
          sheet: [54, 51]
        }, {
          unified: '270B-1F3FD',
          sheet: [54, 52]
        }, {
          unified: '270B-1F3FE',
          sheet: [54, 53]
        }, {
          unified: '270B-1F3FF',
          sheet: [54, 54]
        }],
        shortNames: ['raised_hand'],
        shortName: 'hand'
      }, {
        name: 'Lemon',
        unified: '1F34B',
        keywords: ['fruit', 'nature'],
        sheet: [6, 35],
        shortName: 'lemon'
      }, {
        name: 'Waving White Flag',
        unified: '1F3F3-FE0F',
        sheet: [11, 12],
        shortName: 'waving_white_flag'
      }, {
        name: 'Emoji Modifier Fitzpatrick Type-6',
        unified: '1F3FF',
        sheet: [11, 27],
        shortName: 'skin-tone-6'
      }, {
        name: 'Dog Face',
        unified: '1F436',
        keywords: ['animal', 'friend', 'nature', 'woof', 'puppy', 'pet', 'faithful'],
        sheet: [12, 26],
        shortName: 'dog'
      }, {
        name: 'Raised Hand with Part Between Middle and Ring Fingers',
        unified: '1F596',
        sheet: [30, 3],
        skinVariations: [{
          unified: '1F596-1F3FB',
          sheet: [30, 4]
        }, {
          unified: '1F596-1F3FC',
          sheet: [30, 5]
        }, {
          unified: '1F596-1F3FD',
          sheet: [30, 6]
        }, {
          unified: '1F596-1F3FE',
          sheet: [30, 7]
        }, {
          unified: '1F596-1F3FF',
          sheet: [30, 8]
        }],
        shortName: 'spock-hand'
      }, {
        name: 'World Map',
        unified: '1F5FA-FE0F',
        keywords: ['location', 'direction'],
        sheet: [30, 29],
        shortName: 'world_map'
      }, {
        name: 'Smiling Face with Open Mouth and Tightly-Closed Eyes',
        unified: '1F606',
        emoticons: [':>', ':->'],
        keywords: ['happy', 'joy', 'lol', 'satisfied', 'haha', 'face', 'glad', 'XD', 'laugh'],
        sheet: [30, 41],
        shortNames: ['satisfied'],
        shortName: 'laughing'
      }, {
        name: 'Mens Symbol',
        unified: '1F6B9',
        keywords: ['toilet', 'restroom', 'wc', 'blue-square', 'gender', 'male'],
        sheet: [36, 10],
        shortName: 'mens'
      }, {
        name: 'Safety Vest',
        unified: '1F9BA',
        sheet: [43, 54],
        shortName: 'safety_vest'
      }, {
        name: 'Firecracker',
        unified: '1F9E8',
        keywords: ['dynamite', 'boom', 'explode', 'explosion', 'explosive'],
        sheet: [51, 27],
        shortName: 'firecracker'
      }, {
        name: 'Banana',
        unified: '1F34C',
        keywords: ['fruit', 'food', 'monkey'],
        sheet: [6, 36],
        shortName: 'banana'
      }, {
        name: 'Rainbow Flag',
        unified: '1F3F3-FE0F-200D-1F308',
        sheet: [11, 11],
        shortName: 'rainbow-flag'
      }, {
        name: 'Dog',
        unified: '1F415',
        keywords: ['animal', 'nature', 'friend', 'doge', 'pet', 'faithful'],
        sheet: [11, 50],
        shortName: 'dog2'
      }, {
        name: 'Ok Hand Sign',
        unified: '1F44C',
        keywords: ['fingers', 'limbs', 'perfect', 'ok', 'okay'],
        sheet: [13, 32],
        skinVariations: [{
          unified: '1F44C-1F3FB',
          sheet: [13, 33]
        }, {
          unified: '1F44C-1F3FC',
          sheet: [13, 34]
        }, {
          unified: '1F44C-1F3FD',
          sheet: [13, 35]
        }, {
          unified: '1F44C-1F3FE',
          sheet: [13, 36]
        }, {
          unified: '1F44C-1F3FF',
          sheet: [13, 37]
        }],
        shortName: 'ok_hand'
      }, {
        name: 'Necktie',
        unified: '1F454',
        keywords: ['shirt', 'suitup', 'formal', 'fashion', 'cloth', 'business'],
        sheet: [14, 8],
        shortName: 'necktie'
      }, {
        name: 'Silhouette of Japan',
        unified: '1F5FE',
        keywords: ['nation', 'country', 'japanese', 'asia'],
        sheet: [30, 33],
        shortName: 'japan'
      }, {
        name: 'Smiling Face with Open Mouth and Cold Sweat',
        unified: '1F605',
        keywords: ['face', 'hot', 'happy', 'laugh', 'sweat', 'smile', 'relief'],
        sheet: [30, 40],
        shortName: 'sweat_smile'
      }, {
        name: 'Womens Symbol',
        unified: '1F6BA',
        keywords: ['purple-square', 'woman', 'female', 'toilet', 'loo', 'restroom', 'gender'],
        sheet: [36, 11],
        shortName: 'womens'
      }, {
        name: 'Sparkles',
        unified: '2728',
        keywords: ['stars', 'shine', 'shiny', 'cool', 'awesome', 'good', 'magic'],
        sheet: [55, 16],
        shortName: 'sparkles'
      }, {
        name: 'Pineapple',
        unified: '1F34D',
        keywords: ['fruit', 'nature', 'food'],
        sheet: [6, 37],
        shortName: 'pineapple'
      }, {
        name: 'Balloon',
        unified: '1F388',
        keywords: ['party', 'celebration', 'birthday', 'circus'],
        sheet: [7, 44],
        shortName: 'balloon'
      }, {
        name: 'Pirate Flag',
        unified: '1F3F4-200D-2620-FE0F',
        keywords: ['skull', 'crossbones', 'flag', 'banner'],
        sheet: [11, 13],
        shortName: 'pirate_flag'
      }, {
        name: 'T-Shirt',
        unified: '1F455',
        sheet: [14, 9],
        shortNames: ['tshirt'],
        shortName: 'shirt'
      }, {
        name: 'Restroom',
        unified: '1F6BB',
        keywords: ['blue-square', 'toilet', 'refresh', 'wc', 'gender'],
        sheet: [36, 12],
        shortName: 'restroom'
      }, {
        name: 'Pinching Hand',
        unified: '1F90F',
        sheet: [37, 17],
        skinVariations: [{
          unified: '1F90F-1F3FB',
          sheet: [37, 18]
        }, {
          unified: '1F90F-1F3FC',
          sheet: [37, 19]
        }, {
          unified: '1F90F-1F3FD',
          sheet: [37, 20]
        }, {
          unified: '1F90F-1F3FE',
          sheet: [37, 21]
        }, {
          unified: '1F90F-1F3FF',
          sheet: [37, 22]
        }],
        shortName: 'pinching_hand'
      }, {
        name: 'Rolling on the Floor Laughing',
        unified: '1F923',
        sheet: [38, 20],
        shortName: 'rolling_on_the_floor_laughing'
      }, {
        name: 'Guide Dog',
        unified: '1F9AE',
        sheet: [43, 2],
        shortName: 'guide_dog'
      }, {
        name: 'Compass',
        unified: '1F9ED',
        keywords: ['magnetic', 'navigation', 'orienteering'],
        sheet: [51, 32],
        shortName: 'compass'
      }, {
        name: 'Ascension Island Flag',
        unified: '1F1E6-1F1E8',
        sheet: [0, 31],
        shortName: 'flag-ac'
      }, {
        name: 'Party Popper',
        unified: '1F389',
        keywords: ['party', 'congratulations', 'birthday', 'magic', 'circus', 'celebration'],
        sheet: [7, 45],
        shortName: 'tada'
      }, {
        name: 'Snow Capped Mountain',
        unified: '1F3D4-FE0F',
        sheet: [10, 39],
        shortName: 'snow_capped_mountain'
      }, {
        name: 'Service Dog',
        unified: '1F415-200D-1F9BA',
        sheet: [11, 49],
        shortName: 'service_dog'
      }, {
        name: 'Jeans',
        unified: '1F456',
        keywords: ['fashion', 'shopping'],
        sheet: [14, 10],
        shortName: 'jeans'
      }, {
        name: 'Face with Tears of Joy',
        unified: '1F602',
        keywords: ['face', 'cry', 'tears', 'weep', 'happy', 'happytears', 'haha'],
        sheet: [30, 37],
        shortName: 'joy'
      }, {
        name: 'Baby Symbol',
        unified: '1F6BC',
        keywords: ['orange-square', 'child'],
        sheet: [36, 13],
        shortName: 'baby_symbol'
      }, {
        name: 'Mango',
        unified: '1F96D',
        keywords: ['fruit', 'food', 'tropical'],
        sheet: [42, 3],
        shortName: 'mango'
      }, {
        name: 'Victory Hand',
        unified: '270C-FE0F',
        keywords: ['fingers', 'ohyeah', 'hand', 'peace', 'victory', 'two'],
        sheet: [54, 55],
        skinVariations: [{
          unified: '270C-1F3FB',
          sheet: [54, 56]
        }, {
          unified: '270C-1F3FC',
          sheet: [55, 0]
        }, {
          unified: '270C-1F3FD',
          sheet: [55, 1]
        }, {
          unified: '270C-1F3FE',
          sheet: [55, 2]
        }, {
          unified: '270C-1F3FF',
          sheet: [55, 3]
        }],
        shortName: 'v'
      }, {
        name: 'Andorra Flag',
        unified: '1F1E6-1F1E9',
        sheet: [0, 32],
        shortName: 'flag-ad'
      }, {
        name: 'Red Apple',
        unified: '1F34E',
        keywords: ['fruit', 'mac', 'school'],
        sheet: [6, 38],
        shortName: 'apple'
      }, {
        name: 'Confetti Ball',
        unified: '1F38A',
        keywords: ['festival', 'party', 'birthday', 'circus'],
        sheet: [7, 46],
        shortName: 'confetti_ball'
      }, {
        name: 'Poodle',
        unified: '1F429',
        keywords: ['dog', 'animal', '101', 'nature', 'pet'],
        sheet: [12, 13],
        shortName: 'poodle'
      }, {
        name: 'Slightly Smiling Face',
        unified: '1F642',
        emoticons: [':)', '(:', ':-)'],
        keywords: ['face', 'smile'],
        sheet: [31, 44],
        shortName: 'slightly_smiling_face'
      }, {
        name: 'Water Closet',
        unified: '1F6BE',
        keywords: ['toilet', 'restroom', 'blue-square'],
        sheet: [36, 15],
        shortName: 'wc'
      }, {
        name: 'Hand with Index and Middle Fingers Crossed',
        unified: '1F91E',
        keywords: ['good', 'lucky'],
        sheet: [38, 5],
        skinVariations: [{
          unified: '1F91E-1F3FB',
          sheet: [38, 6]
        }, {
          unified: '1F91E-1F3FC',
          sheet: [38, 7]
        }, {
          unified: '1F91E-1F3FD',
          sheet: [38, 8]
        }, {
          unified: '1F91E-1F3FE',
          sheet: [38, 9]
        }, {
          unified: '1F91E-1F3FF',
          sheet: [38, 10]
        }],
        shortNames: ['hand_with_index_and_middle_fingers_crossed'],
        shortName: 'crossed_fingers'
      }, {
        name: 'Scarf',
        unified: '1F9E3',
        keywords: ['neck', 'winter', 'clothes'],
        sheet: [51, 22],
        shortName: 'scarf'
      }, {
        name: 'Mountain',
        unified: '26F0-FE0F',
        keywords: ['photo', 'nature', 'environment'],
        sheet: [54, 11],
        shortName: 'mountain'
      }, {
        name: 'United Arab Emirates Flag',
        unified: '1F1E6-1F1EA',
        sheet: [0, 33],
        shortName: 'flag-ae'
      }, {
        name: 'Volcano',
        unified: '1F30B',
        keywords: ['photo', 'nature', 'disaster'],
        sheet: [5, 30],
        shortName: 'volcano'
      }, {
        name: 'Green Apple',
        unified: '1F34F',
        keywords: ['fruit', 'nature'],
        sheet: [6, 39],
        shortName: 'green_apple'
      }, {
        name: 'Tanabata Tree',
        unified: '1F38B',
        keywords: ['plant', 'nature', 'branch', 'summer'],
        sheet: [7, 47],
        shortName: 'tanabata_tree'
      }, {
        name: 'Wolf Face',
        unified: '1F43A',
        keywords: ['animal', 'nature', 'wild'],
        sheet: [12, 30],
        shortName: 'wolf'
      }, {
        name: 'Upside-Down Face',
        unified: '1F643',
        keywords: ['face', 'flipped', 'silly', 'smile'],
        sheet: [31, 45],
        shortName: 'upside_down_face'
      }, {
        name: 'Passport Control',
        unified: '1F6C2',
        keywords: ['custom', 'blue-square'],
        sheet: [36, 24],
        shortName: 'passport_control'
      }, {
        name: 'I Love You Hand Sign',
        unified: '1F91F',
        sheet: [38, 11],
        skinVariations: [{
          unified: '1F91F-1F3FB',
          sheet: [38, 12]
        }, {
          unified: '1F91F-1F3FC',
          sheet: [38, 13]
        }, {
          unified: '1F91F-1F3FD',
          sheet: [38, 14]
        }, {
          unified: '1F91F-1F3FE',
          sheet: [38, 15]
        }, {
          unified: '1F91F-1F3FF',
          sheet: [38, 16]
        }],
        shortName: 'i_love_you_hand_sign'
      }, {
        name: 'Gloves',
        unified: '1F9E4',
        keywords: ['hands', 'winter', 'clothes'],
        sheet: [51, 23],
        shortName: 'gloves'
      }, {
        name: 'Afghanistan Flag',
        unified: '1F1E6-1F1EB',
        sheet: [0, 34],
        shortName: 'flag-af'
      }, {
        name: 'Pear',
        unified: '1F350',
        keywords: ['fruit', 'nature', 'food'],
        sheet: [6, 40],
        shortName: 'pear'
      }, {
        name: 'Pine Decoration',
        unified: '1F38D',
        keywords: ['plant', 'nature', 'vegetable', 'panda', 'pine_decoration'],
        sheet: [7, 49],
        shortName: 'bamboo'
      }, {
        name: 'Mount Fuji',
        unified: '1F5FB',
        keywords: ['photo', 'mountain', 'nature', 'japanese'],
        sheet: [30, 30],
        shortName: 'mount_fuji'
      }, {
        name: 'Winking Face',
        unified: '1F609',
        text: ';)',
        emoticons: [';)', ';-)'],
        keywords: ['face', 'happy', 'mischievous', 'secret', ';)', 'smile', 'eye'],
        sheet: [30, 44],
        shortName: 'wink'
      }, {
        name: 'Customs',
        unified: '1F6C3',
        keywords: ['passport', 'border', 'blue-square'],
        sheet: [36, 25],
        shortName: 'customs'
      }, {
        name: 'Sign of the Horns',
        unified: '1F918',
        sheet: [37, 31],
        skinVariations: [{
          unified: '1F918-1F3FB',
          sheet: [37, 32]
        }, {
          unified: '1F918-1F3FC',
          sheet: [37, 33]
        }, {
          unified: '1F918-1F3FD',
          sheet: [37, 34]
        }, {
          unified: '1F918-1F3FE',
          sheet: [37, 35]
        }, {
          unified: '1F918-1F3FF',
          sheet: [37, 36]
        }],
        shortNames: ['sign_of_the_horns'],
        shortName: 'the_horns'
      }, {
        name: 'Fox Face',
        unified: '1F98A',
        keywords: ['animal', 'nature', 'face'],
        sheet: [42, 28],
        shortName: 'fox_face'
      }, {
        name: 'Coat',
        unified: '1F9E5',
        keywords: ['jacket'],
        sheet: [51, 24],
        shortName: 'coat'
      }, {
        name: 'Antigua & Barbuda Flag',
        unified: '1F1E6-1F1EC',
        sheet: [0, 35],
        shortName: 'flag-ag'
      }, {
        name: 'Peach',
        unified: '1F351',
        keywords: ['fruit', 'nature', 'food'],
        sheet: [6, 41],
        shortName: 'peach'
      }, {
        name: 'Japanese Dolls',
        unified: '1F38E',
        keywords: ['japanese', 'toy', 'kimono'],
        sheet: [7, 50],
        shortName: 'dolls'
      }, {
        name: 'Camping',
        unified: '1F3D5-FE0F',
        keywords: ['photo', 'outdoors', 'tent'],
        sheet: [10, 40],
        shortName: 'camping'
      }, {
        name: 'Smiling Face with Smiling Eyes',
        unified: '1F60A',
        text: ':)',
        keywords: ['face', 'smile', 'happy', 'flushed', 'crush', 'embarrassed', 'shy', 'joy'],
        sheet: [30, 45],
        shortName: 'blush'
      }, {
        name: 'Baggage Claim',
        unified: '1F6C4',
        keywords: ['blue-square', 'airport', 'transport'],
        sheet: [36, 26],
        shortName: 'baggage_claim'
      }, {
        name: 'Call Me Hand',
        unified: '1F919',
        keywords: ['hands', 'gesture'],
        sheet: [37, 37],
        skinVariations: [{
          unified: '1F919-1F3FB',
          sheet: [37, 38]
        }, {
          unified: '1F919-1F3FC',
          sheet: [37, 39]
        }, {
          unified: '1F919-1F3FD',
          sheet: [37, 40]
        }, {
          unified: '1F919-1F3FE',
          sheet: [37, 41]
        }, {
          unified: '1F919-1F3FF',
          sheet: [37, 42]
        }],
        shortName: 'call_me_hand'
      }, {
        name: 'Raccoon',
        unified: '1F99D',
        keywords: ['animal', 'nature'],
        sheet: [42, 47],
        shortName: 'raccoon'
      }, {
        name: 'Socks',
        unified: '1F9E6',
        keywords: ['stockings', 'clothes'],
        sheet: [51, 25],
        shortName: 'socks'
      }, {
        name: 'Anguilla Flag',
        unified: '1F1E6-1F1EE',
        sheet: [0, 36],
        shortName: 'flag-ai'
      }, {
        name: 'Cherries',
        unified: '1F352',
        keywords: ['food', 'fruit'],
        sheet: [6, 42],
        shortName: 'cherries'
      }, {
        name: 'Carp Streamer',
        unified: '1F38F',
        keywords: ['fish', 'japanese', 'koinobori', 'carp', 'banner'],
        sheet: [7, 51],
        shortName: 'flags'
      }, {
        name: 'Beach with Umbrella',
        unified: '1F3D6-FE0F',
        sheet: [10, 41],
        shortName: 'beach_with_umbrella'
      }, {
        name: 'Cat Face',
        unified: '1F431',
        keywords: ['animal', 'meow', 'nature', 'pet', 'kitten'],
        sheet: [12, 21],
        shortName: 'cat'
      }, {
        name: 'White Left Pointing Backhand Index',
        unified: '1F448',
        keywords: ['direction', 'fingers', 'hand', 'left'],
        sheet: [13, 8],
        skinVariations: [{
          unified: '1F448-1F3FB',
          sheet: [13, 9]
        }, {
          unified: '1F448-1F3FC',
          sheet: [13, 10]
        }, {
          unified: '1F448-1F3FD',
          sheet: [13, 11]
        }, {
          unified: '1F448-1F3FE',
          sheet: [13, 12]
        }, {
          unified: '1F448-1F3FF',
          sheet: [13, 13]
        }],
        shortName: 'point_left'
      }, {
        name: 'Dress',
        unified: '1F457',
        keywords: ['clothes', 'fashion', 'shopping'],
        sheet: [14, 11],
        shortName: 'dress'
      }, {
        name: 'Smiling Face with Halo',
        unified: '1F607',
        keywords: ['face', 'angel', 'heaven', 'halo'],
        sheet: [30, 42],
        shortName: 'innocent'
      }, {
        name: 'Left Luggage',
        unified: '1F6C5',
        keywords: ['blue-square', 'travel'],
        sheet: [36, 27],
        shortName: 'left_luggage'
      }, {
        name: 'Albania Flag',
        unified: '1F1E6-1F1F1',
        sheet: [0, 37],
        shortName: 'flag-al'
      }, {
        name: 'Strawberry',
        unified: '1F353',
        keywords: ['fruit', 'food', 'nature'],
        sheet: [6, 43],
        shortName: 'strawberry'
      }, {
        name: 'Wind Chime',
        unified: '1F390',
        keywords: ['nature', 'ding', 'spring', 'bell'],
        sheet: [7, 52],
        shortName: 'wind_chime'
      }, {
        name: 'Desert',
        unified: '1F3DC-FE0F',
        keywords: ['photo', 'warm', 'saharah'],
        sheet: [10, 47],
        shortName: 'desert'
      }, {
        name: 'Cat',
        unified: '1F408',
        keywords: ['animal', 'meow', 'pet', 'cats'],
        sheet: [11, 36],
        shortName: 'cat2'
      }, {
        name: 'White Right Pointing Backhand Index',
        unified: '1F449',
        keywords: ['fingers', 'hand', 'direction', 'right'],
        sheet: [13, 14],
        skinVariations: [{
          unified: '1F449-1F3FB',
          sheet: [13, 15]
        }, {
          unified: '1F449-1F3FC',
          sheet: [13, 16]
        }, {
          unified: '1F449-1F3FD',
          sheet: [13, 17]
        }, {
          unified: '1F449-1F3FE',
          sheet: [13, 18]
        }, {
          unified: '1F449-1F3FF',
          sheet: [13, 19]
        }],
        shortName: 'point_right'
      }, {
        name: 'Kimono',
        unified: '1F458',
        keywords: ['dress', 'fashion', 'women', 'female', 'japanese'],
        sheet: [14, 12],
        shortName: 'kimono'
      }, {
        name: 'Smiling Face with Smiling Eyes and Three Hearts',
        unified: '1F970',
        sheet: [42, 6],
        shortName: 'smiling_face_with_3_hearts'
      }, {
        name: 'Warning Sign',
        unified: '26A0-FE0F',
        keywords: ['exclamation', 'wip', 'alert', 'error', 'problem', 'issue'],
        sheet: [53, 50],
        shortName: 'warning'
      }, {
        name: 'Armenia Flag',
        unified: '1F1E6-1F1F2',
        sheet: [0, 38],
        shortName: 'flag-am'
      }, {
        name: 'Moon Viewing Ceremony',
        unified: '1F391',
        keywords: ['photo', 'japan', 'asia', 'tsukimi'],
        sheet: [7, 53],
        shortName: 'rice_scene'
      }, {
        name: 'Desert Island',
        unified: '1F3DD-FE0F',
        keywords: ['photo', 'tropical', 'mojito'],
        sheet: [10, 48],
        shortName: 'desert_island'
      }, {
        name: 'White Up Pointing Backhand Index',
        unified: '1F446',
        keywords: ['fingers', 'hand', 'direction', 'up'],
        sheet: [12, 53],
        skinVariations: [{
          unified: '1F446-1F3FB',
          sheet: [12, 54]
        }, {
          unified: '1F446-1F3FC',
          sheet: [12, 55]
        }, {
          unified: '1F446-1F3FD',
          sheet: [12, 56]
        }, {
          unified: '1F446-1F3FE',
          sheet: [13, 0]
        }, {
          unified: '1F446-1F3FF',
          sheet: [13, 1]
        }],
        shortName: 'point_up_2'
      }, {
        name: 'Smiling Face with Heart-Shaped Eyes',
        unified: '1F60D',
        keywords: ['face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'crush', 'heart'],
        sheet: [30, 48],
        shortName: 'heart_eyes'
      }, {
        name: 'Children Crossing',
        unified: '1F6B8',
        keywords: ['school', 'warning', 'danger', 'sign', 'driving', 'yellow-diamond'],
        sheet: [36, 9],
        shortName: 'children_crossing'
      }, {
        name: 'Kiwifruit',
        unified: '1F95D',
        sheet: [41, 44],
        shortName: 'kiwifruit'
      }, {
        name: 'Sari',
        unified: '1F97B',
        sheet: [42, 13],
        shortName: 'sari'
      }, {
        name: 'Lion Face',
        unified: '1F981',
        sheet: [42, 19],
        shortName: 'lion_face'
      }, {
        name: 'Angola Flag',
        unified: '1F1E6-1F1F4',
        sheet: [0, 39],
        shortName: 'flag-ao'
      }, {
        name: 'Tomato',
        unified: '1F345',
        keywords: ['fruit', 'vegetable', 'nature', 'food'],
        sheet: [6, 29],
        shortName: 'tomato'
      }, {
        name: 'National Park',
        unified: '1F3DE-FE0F',
        keywords: ['photo', 'environment', 'nature'],
        sheet: [10, 49],
        shortName: 'national_park'
      }, {
        name: 'Tiger Face',
        unified: '1F42F',
        keywords: ['animal', 'cat', 'danger', 'wild', 'nature', 'roar'],
        sheet: [12, 19],
        shortName: 'tiger'
      }, {
        name: 'Reversed Hand with Middle Finger Extended',
        unified: '1F595',
        sheet: [29, 54],
        skinVariations: [{
          unified: '1F595-1F3FB',
          sheet: [29, 55]
        }, {
          unified: '1F595-1F3FC',
          sheet: [29, 56]
        }, {
          unified: '1F595-1F3FD',
          sheet: [30, 0]
        }, {
          unified: '1F595-1F3FE',
          sheet: [30, 1]
        }, {
          unified: '1F595-1F3FF',
          sheet: [30, 2]
        }],
        shortNames: ['reversed_hand_with_middle_finger_extended'],
        shortName: 'middle_finger'
      }, {
        name: 'Grinning Face with Star Eyes',
        unified: '1F929',
        sheet: [38, 43],
        shortNames: ['grinning_face_with_star_eyes'],
        shortName: 'star-struck'
      }, {
        name: 'Red Gift Envelope',
        unified: '1F9E7',
        keywords: ['gift'],
        sheet: [51, 26],
        shortName: 'red_envelope'
      }, {
        name: 'One-Piece Swimsuit',
        unified: '1FA71',
        sheet: [51, 52],
        shortName: 'one-piece_swimsuit'
      }, {
        name: 'No Entry',
        unified: '26D4',
        keywords: ['limit', 'security', 'privacy', 'bad', 'denied', 'stop', 'circle'],
        sheet: [54, 8],
        shortName: 'no_entry'
      }, {
        name: 'Antarctica Flag',
        unified: '1F1E6-1F1F6',
        sheet: [0, 40],
        shortName: 'flag-aq'
      }, {
        name: 'Ribbon',
        unified: '1F380',
        keywords: ['decoration', 'pink', 'girl', 'bowtie'],
        sheet: [7, 31],
        shortName: 'ribbon'
      }, {
        name: 'Stadium',
        unified: '1F3DF-FE0F',
        keywords: ['photo', 'place', 'sports', 'concert', 'venue'],
        sheet: [10, 50],
        shortName: 'stadium'
      }, {
        name: 'Tiger',
        unified: '1F405',
        keywords: ['animal', 'nature', 'roar'],
        sheet: [11, 33],
        shortName: 'tiger2'
      }, {
        name: 'White Down Pointing Backhand Index',
        unified: '1F447',
        keywords: ['fingers', 'hand', 'direction', 'down'],
        sheet: [13, 2],
        skinVariations: [{
          unified: '1F447-1F3FB',
          sheet: [13, 3]
        }, {
          unified: '1F447-1F3FC',
          sheet: [13, 4]
        }, {
          unified: '1F447-1F3FD',
          sheet: [13, 5]
        }, {
          unified: '1F447-1F3FE',
          sheet: [13, 6]
        }, {
          unified: '1F447-1F3FF',
          sheet: [13, 7]
        }],
        shortName: 'point_down'
      }, {
        name: 'Face Throwing a Kiss',
        unified: '1F618',
        emoticons: [':*', ':-*'],
        keywords: ['face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'kiss'],
        sheet: [31, 2],
        shortName: 'kissing_heart'
      }, {
        name: 'No Entry Sign',
        unified: '1F6AB',
        keywords: ['forbid', 'stop', 'limit', 'denied', 'disallow', 'circle'],
        sheet: [35, 2],
        shortName: 'no_entry_sign'
      }, {
        name: 'Coconut',
        unified: '1F965',
        keywords: ['fruit', 'nature', 'food', 'palm'],
        sheet: [41, 52],
        shortName: 'coconut'
      }, {
        name: 'Briefs',
        unified: '1FA72',
        sheet: [51, 53],
        shortName: 'briefs'
      }, {
        name: 'Argentina Flag',
        unified: '1F1E6-1F1F7',
        sheet: [0, 41],
        shortName: 'flag-ar'
      }, {
        name: 'Wrapped Present',
        unified: '1F381',
        keywords: ['present', 'birthday', 'christmas', 'xmas'],
        sheet: [7, 32],
        shortName: 'gift'
      }, {
        name: 'Classical Building',
        unified: '1F3DB-FE0F',
        keywords: ['art', 'culture', 'history'],
        sheet: [10, 46],
        shortName: 'classical_building'
      }, {
        name: 'Leopard',
        unified: '1F406',
        keywords: ['animal', 'nature'],
        sheet: [11, 34],
        shortName: 'leopard'
      }, {
        name: 'Kissing Face',
        unified: '1F617',
        keywords: ['love', 'like', 'face', '3', 'valentines', 'infatuation', 'kiss'],
        sheet: [31, 1],
        shortName: 'kissing'
      }, {
        name: 'No Bicycles',
        unified: '1F6B3',
        keywords: ['cyclist', 'prohibited', 'circle'],
        sheet: [35, 10],
        shortName: 'no_bicycles'
      }, {
        name: 'Avocado',
        unified: '1F951',
        keywords: ['fruit', 'food'],
        sheet: [41, 32],
        shortName: 'avocado'
      }, {
        name: 'Shorts',
        unified: '1FA73',
        sheet: [51, 54],
        shortName: 'shorts'
      }, {
        name: 'White Up Pointing Index',
        unified: '261D-FE0F',
        keywords: ['hand', 'fingers', 'direction', 'up'],
        sheet: [53, 2],
        skinVariations: [{
          unified: '261D-1F3FB',
          sheet: [53, 3]
        }, {
          unified: '261D-1F3FC',
          sheet: [53, 4]
        }, {
          unified: '261D-1F3FD',
          sheet: [53, 5]
        }, {
          unified: '261D-1F3FE',
          sheet: [53, 6]
        }, {
          unified: '261D-1F3FF',
          sheet: [53, 7]
        }],
        shortName: 'point_up'
      }, {
        name: 'American Samoa Flag',
        unified: '1F1E6-1F1F8',
        sheet: [0, 42],
        shortName: 'flag-as'
      }, {
        name: 'Aubergine',
        unified: '1F346',
        keywords: ['vegetable', 'nature', 'food', 'aubergine'],
        sheet: [6, 30],
        shortName: 'eggplant'
      }, {
        name: 'Reminder Ribbon',
        unified: '1F397-FE0F',
        keywords: ['sports', 'cause', 'support', 'awareness'],
        sheet: [8, 0],
        shortName: 'reminder_ribbon'
      }, {
        name: 'Building Construction',
        unified: '1F3D7-FE0F',
        keywords: ['wip', 'working', 'progress'],
        sheet: [10, 42],
        shortName: 'building_construction'
      }, {
        name: 'Horse Face',
        unified: '1F434',
        keywords: ['animal', 'brown', 'nature'],
        sheet: [12, 24],
        shortName: 'horse'
      }, {
        name: 'Thumbs Up Sign',
        unified: '1F44D',
        keywords: ['thumbsup', 'yes', 'awesome', 'good', 'agree', 'accept', 'cool', 'hand', 'like'],
        sheet: [13, 38],
        skinVariations: [{
          unified: '1F44D-1F3FB',
          sheet: [13, 39]
        }, {
          unified: '1F44D-1F3FC',
          sheet: [13, 40]
        }, {
          unified: '1F44D-1F3FD',
          sheet: [13, 41]
        }, {
          unified: '1F44D-1F3FE',
          sheet: [13, 42]
        }, {
          unified: '1F44D-1F3FF',
          sheet: [13, 43]
        }],
        shortNames: ['thumbsup'],
        shortName: '+1'
      }, {
        name: 'Bikini',
        unified: '1F459',
        keywords: ['swimming', 'female', 'woman', 'girl', 'fashion', 'beach', 'summer'],
        sheet: [14, 13],
        shortName: 'bikini'
      }, {
        name: 'No Smoking Symbol',
        unified: '1F6AD',
        keywords: ['cigarette', 'blue-square', 'smell', 'smoke'],
        sheet: [35, 4],
        shortName: 'no_smoking'
      }, {
        name: 'White Smiling Face',
        unified: '263A-FE0F',
        keywords: ['face', 'blush', 'massage', 'happiness'],
        sheet: [53, 17],
        shortName: 'relaxed'
      }, {
        name: 'Austria Flag',
        unified: '1F1E6-1F1F9',
        sheet: [0, 43],
        shortName: 'flag-at'
      }, {
        name: 'Admission Tickets',
        unified: '1F39F-FE0F',
        sheet: [8, 5],
        shortName: 'admission_tickets'
      }, {
        name: 'Horse',
        unified: '1F40E',
        keywords: ['animal', 'gamble', 'luck'],
        sheet: [11, 42],
        shortName: 'racehorse'
      }, {
        name: 'Thumbs Down Sign',
        unified: '1F44E',
        keywords: ['thumbsdown', 'no', 'dislike', 'hand'],
        sheet: [13, 44],
        skinVariations: [{
          unified: '1F44E-1F3FB',
          sheet: [13, 45]
        }, {
          unified: '1F44E-1F3FC',
          sheet: [13, 46]
        }, {
          unified: '1F44E-1F3FD',
          sheet: [13, 47]
        }, {
          unified: '1F44E-1F3FE',
          sheet: [13, 48]
        }, {
          unified: '1F44E-1F3FF',
          sheet: [13, 49]
        }],
        shortNames: ['thumbsdown'],
        shortName: '-1'
      }, {
        name: 'Womans Clothes',
        unified: '1F45A',
        keywords: ['fashion', 'shopping_bags', 'female'],
        sheet: [14, 14],
        shortName: 'womans_clothes'
      }, {
        name: 'Kissing Face with Closed Eyes',
        unified: '1F61A',
        keywords: ['face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'kiss'],
        sheet: [31, 4],
        shortName: 'kissing_closed_eyes'
      }, {
        name: 'Do Not Litter Symbol',
        unified: '1F6AF',
        keywords: ['trash', 'bin', 'garbage', 'circle'],
        sheet: [35, 6],
        shortName: 'do_not_litter'
      }, {
        name: 'Potato',
        unified: '1F954',
        keywords: ['food', 'tuber', 'vegatable', 'starch'],
        sheet: [41, 35],
        shortName: 'potato'
      }, {
        name: 'Brick',
        unified: '1F9F1',
        sheet: [51, 36],
        shortName: 'bricks'
      }, {
        name: 'Australia Flag',
        unified: '1F1E6-1F1FA',
        sheet: [0, 44],
        shortName: 'flag-au'
      }, {
        name: 'Ticket',
        unified: '1F3AB',
        keywords: ['event', 'concert', 'pass'],
        sheet: [8, 17],
        shortName: 'ticket'
      }, {
        name: 'House Buildings',
        unified: '1F3D8-FE0F',
        sheet: [10, 43],
        shortName: 'house_buildings'
      }, {
        name: 'Purse',
        unified: '1F45B',
        keywords: ['fashion', 'accessories', 'money', 'sales', 'shopping'],
        sheet: [14, 15],
        shortName: 'purse'
      }, {
        name: 'Kissing Face with Smiling Eyes',
        unified: '1F619',
        keywords: ['face', 'affection', 'valentines', 'infatuation', 'kiss'],
        sheet: [31, 3],
        shortName: 'kissing_smiling_eyes'
      }, {
        name: 'Non-Potable Water Symbol',
        unified: '1F6B1',
        keywords: ['drink', 'faucet', 'tap', 'circle'],
        sheet: [35, 8],
        shortName: 'non-potable_water'
      }, {
        name: 'Carrot',
        unified: '1F955',
        keywords: ['vegetable', 'food', 'orange'],
        sheet: [41, 36],
        shortName: 'carrot'
      }, {
        name: 'Unicorn Face',
        unified: '1F984',
        sheet: [42, 22],
        shortName: 'unicorn_face'
      }, {
        name: 'Raised Fist',
        unified: '270A',
        keywords: ['fingers', 'hand', 'grasp'],
        sheet: [54, 43],
        skinVariations: [{
          unified: '270A-1F3FB',
          sheet: [54, 44]
        }, {
          unified: '270A-1F3FC',
          sheet: [54, 45]
        }, {
          unified: '270A-1F3FD',
          sheet: [54, 46]
        }, {
          unified: '270A-1F3FE',
          sheet: [54, 47]
        }, {
          unified: '270A-1F3FF',
          sheet: [54, 48]
        }],
        shortName: 'fist'
      }, {
        name: 'Aruba Flag',
        unified: '1F1E6-1F1FC',
        sheet: [0, 45],
        shortName: 'flag-aw'
      }, {
        name: 'Ear of Maize',
        unified: '1F33D',
        keywords: ['food', 'vegetable', 'plant'],
        sheet: [6, 21],
        shortName: 'corn'
      }, {
        name: 'Medal',
        unified: '1F396-FE0F',
        sheet: [7, 56],
        shortName: 'medal'
      }, {
        name: 'Derelict House Building',
        unified: '1F3DA-FE0F',
        sheet: [10, 45],
        shortName: 'derelict_house_building'
      }, {
        name: 'Fisted Hand Sign',
        unified: '1F44A',
        keywords: ['angry', 'violence', 'fist', 'hit', 'attack', 'hand'],
        sheet: [13, 20],
        skinVariations: [{
          unified: '1F44A-1F3FB',
          sheet: [13, 21]
        }, {
          unified: '1F44A-1F3FC',
          sheet: [13, 22]
        }, {
          unified: '1F44A-1F3FD',
          sheet: [13, 23]
        }, {
          unified: '1F44A-1F3FE',
          sheet: [13, 24]
        }, {
          unified: '1F44A-1F3FF',
          sheet: [13, 25]
        }],
        shortNames: ['punch'],
        shortName: 'facepunch'
      }, {
        name: 'Handbag',
        unified: '1F45C',
        keywords: ['fashion', 'accessory', 'accessories', 'shopping'],
        sheet: [14, 16],
        shortName: 'handbag'
      }, {
        name: 'Face Savouring Delicious Food',
        unified: '1F60B',
        keywords: ['happy', 'joy', 'tongue', 'smile', 'face', 'silly', 'yummy', 'nom', 'delicious', 'savouring'],
        sheet: [30, 46],
        shortName: 'yum'
      }, {
        name: 'No Pedestrians',
        unified: '1F6B7',
        keywords: ['rules', 'crossing', 'walking', 'circle'],
        sheet: [36, 8],
        shortName: 'no_pedestrians'
      }, {
        name: 'Zebra Face',
        unified: '1F993',
        sheet: [42, 37],
        shortName: 'zebra_face'
      }, {
        name: 'Åland Islands Flag',
        unified: '1F1E6-1F1FD',
        sheet: [0, 46],
        shortName: 'flag-ax'
      }, {
        name: 'Hot Pepper',
        unified: '1F336-FE0F',
        keywords: ['food', 'spicy', 'chilli', 'chili'],
        sheet: [6, 14],
        shortName: 'hot_pepper'
      }, {
        name: 'Trophy',
        unified: '1F3C6',
        keywords: ['win', 'award', 'contest', 'place', 'ftw', 'ceremony'],
        sheet: [9, 26],
        shortName: 'trophy'
      }, {
        name: 'House Building',
        unified: '1F3E0',
        keywords: ['building', 'home'],
        sheet: [10, 51],
        shortName: 'house'
      }, {
        name: 'Pouch',
        unified: '1F45D',
        keywords: ['bag', 'accessories', 'shopping'],
        sheet: [14, 17],
        shortName: 'pouch'
      }, {
        name: 'No Mobile Phones',
        unified: '1F4F5',
        keywords: ['iphone', 'mute', 'circle'],
        sheet: [27, 18],
        shortName: 'no_mobile_phones'
      }, {
        name: 'Face with Stuck-out Tongue',
        unified: '1F61B',
        text: ':p',
        emoticons: [':p', ':-p', ':P', ':-P', ':b', ':-b'],
        keywords: ['face', 'prank', 'childish', 'playful', 'mischievous', 'smile', 'tongue'],
        sheet: [31, 5],
        shortName: 'stuck_out_tongue'
      }, {
        name: 'Left-Facing Fist',
        unified: '1F91B',
        sheet: [37, 49],
        skinVariations: [{
          unified: '1F91B-1F3FB',
          sheet: [37, 50]
        }, {
          unified: '1F91B-1F3FC',
          sheet: [37, 51]
        }, {
          unified: '1F91B-1F3FD',
          sheet: [37, 52]
        }, {
          unified: '1F91B-1F3FE',
          sheet: [37, 53]
        }, {
          unified: '1F91B-1F3FF',
          sheet: [37, 54]
        }],
        shortName: 'left-facing_fist'
      }, {
        name: 'Deer',
        unified: '1F98C',
        keywords: ['animal', 'nature', 'horns', 'venison'],
        sheet: [42, 30],
        shortName: 'deer'
      }, {
        name: 'Azerbaijan Flag',
        unified: '1F1E6-1F1FF',
        sheet: [0, 47],
        shortName: 'flag-az'
      }, {
        name: 'Sports Medal',
        unified: '1F3C5',
        sheet: [9, 25],
        shortName: 'sports_medal'
      }, {
        name: 'House with Garden',
        unified: '1F3E1',
        keywords: ['home', 'plant', 'nature'],
        sheet: [10, 52],
        shortName: 'house_with_garden'
      }, {
        name: 'Cow Face',
        unified: '1F42E',
        keywords: ['beef', 'ox', 'animal', 'nature', 'moo', 'milk'],
        sheet: [12, 18],
        shortName: 'cow'
      }, {
        name: 'No One Under Eighteen Symbol',
        unified: '1F51E',
        keywords: ['18', 'drink', 'pub', 'night', 'minor', 'circle'],
        sheet: [28, 1],
        shortName: 'underage'
      }, {
        name: 'Face with Stuck-out Tongue and Winking Eye',
        unified: '1F61C',
        text: ';p',
        emoticons: [';p', ';-p', ';b', ';-b', ';P', ';-P'],
        keywords: ['face', 'prank', 'childish', 'playful', 'mischievous', 'smile', 'wink', 'tongue'],
        sheet: [31, 6],
        shortName: 'stuck_out_tongue_winking_eye'
      }, {
        name: 'Shopping Bags',
        unified: '1F6CD-FE0F',
        sheet: [36, 35],
        shortName: 'shopping_bags'
      }, {
        name: 'Right-Facing Fist',
        unified: '1F91C',
        sheet: [37, 55],
        skinVariations: [{
          unified: '1F91C-1F3FB',
          sheet: [37, 56]
        }, {
          unified: '1F91C-1F3FC',
          sheet: [38, 0]
        }, {
          unified: '1F91C-1F3FD',
          sheet: [38, 1]
        }, {
          unified: '1F91C-1F3FE',
          sheet: [38, 2]
        }, {
          unified: '1F91C-1F3FF',
          sheet: [38, 3]
        }],
        shortName: 'right-facing_fist'
      }, {
        name: 'Cucumber',
        unified: '1F952',
        keywords: ['fruit', 'food', 'pickle'],
        sheet: [41, 33],
        shortName: 'cucumber'
      }, {
        name: 'Bosnia & Herzegovina Flag',
        unified: '1F1E7-1F1E6',
        sheet: [0, 48],
        shortName: 'flag-ba'
      }, {
        name: 'School Satchel',
        unified: '1F392',
        keywords: ['student', 'education', 'bag', 'backpack'],
        sheet: [7, 54],
        shortName: 'school_satchel'
      }, {
        name: 'Office Building',
        unified: '1F3E2',
        keywords: ['building', 'bureau', 'work'],
        sheet: [10, 53],
        shortName: 'office'
      }, {
        name: 'Ox',
        unified: '1F402',
        keywords: ['animal', 'cow', 'beef'],
        sheet: [11, 30],
        shortName: 'ox'
      }, {
        name: 'Clapping Hands Sign',
        unified: '1F44F',
        keywords: ['hands', 'praise', 'applause', 'congrats', 'yay'],
        sheet: [13, 50],
        skinVariations: [{
          unified: '1F44F-1F3FB',
          sheet: [13, 51]
        }, {
          unified: '1F44F-1F3FC',
          sheet: [13, 52]
        }, {
          unified: '1F44F-1F3FD',
          sheet: [13, 53]
        }, {
          unified: '1F44F-1F3FE',
          sheet: [13, 54]
        }, {
          unified: '1F44F-1F3FF',
          sheet: [13, 55]
        }],
        shortName: 'clap'
      }, {
        name: 'Grinning Face with One Large and One Small Eye',
        unified: '1F92A',
        sheet: [38, 44],
        shortNames: ['grinning_face_with_one_large_and_one_small_eye'],
        shortName: 'zany_face'
      }, {
        name: 'First Place Medal',
        unified: '1F947',
        sheet: [41, 22],
        shortName: 'first_place_medal'
      }, {
        name: 'Leafy Green',
        unified: '1F96C',
        sheet: [42, 2],
        shortName: 'leafy_green'
      }, {
        name: 'Radioactive Sign',
        unified: '2622-FE0F',
        sheet: [53, 9],
        shortName: 'radioactive_sign'
      }, {
        name: 'Barbados Flag',
        unified: '1F1E7-1F1E7',
        sheet: [0, 49],
        shortName: 'flag-bb'
      }, {
        name: 'Japanese Post Office',
        unified: '1F3E3',
        keywords: ['building', 'envelope', 'communication'],
        sheet: [10, 54],
        shortName: 'post_office'
      }, {
        name: 'Water Buffalo',
        unified: '1F403',
        keywords: ['animal', 'nature', 'ox', 'cow'],
        sheet: [11, 31],
        shortName: 'water_buffalo'
      }, {
        name: 'Mans Shoe',
        unified: '1F45E',
        keywords: ['fashion', 'male'],
        sheet: [14, 18],
        shortNames: ['shoe'],
        shortName: 'mans_shoe'
      }, {
        name: 'Face with Stuck-out Tongue and Tightly-Closed Eyes',
        unified: '1F61D',
        keywords: ['face', 'prank', 'playful', 'mischievous', 'smile', 'tongue'],
        sheet: [31, 7],
        shortName: 'stuck_out_tongue_closed_eyes'
      }, {
        name: 'Person Raising Both Hands in Celebration',
        unified: '1F64C',
        keywords: ['gesture', 'hooray', 'yea', 'celebration', 'hands'],
        sheet: [33, 8],
        skinVariations: [{
          unified: '1F64C-1F3FB',
          sheet: [33, 9]
        }, {
          unified: '1F64C-1F3FC',
          sheet: [33, 10]
        }, {
          unified: '1F64C-1F3FD',
          sheet: [33, 11]
        }, {
          unified: '1F64C-1F3FE',
          sheet: [33, 12]
        }, {
          unified: '1F64C-1F3FF',
          sheet: [33, 13]
        }],
        shortName: 'raised_hands'
      }, {
        name: 'Second Place Medal',
        unified: '1F948',
        sheet: [41, 23],
        shortName: 'second_place_medal'
      }, {
        name: 'Broccoli',
        unified: '1F966',
        keywords: ['fruit', 'food', 'vegetable'],
        sheet: [41, 53],
        shortName: 'broccoli'
      }, {
        name: 'Biohazard Sign',
        unified: '2623-FE0F',
        sheet: [53, 10],
        shortName: 'biohazard_sign'
      }, {
        name: 'Bangladesh Flag',
        unified: '1F1E7-1F1E9',
        sheet: [0, 50],
        shortName: 'flag-bd'
      }, {
        name: 'European Post Office',
        unified: '1F3E4',
        keywords: ['building', 'email'],
        sheet: [10, 55],
        shortName: 'european_post_office'
      }, {
        name: 'Cow',
        unified: '1F404',
        keywords: ['beef', 'ox', 'animal', 'nature', 'moo', 'milk'],
        sheet: [11, 32],
        shortName: 'cow2'
      }, {
        name: 'Open Hands Sign',
        unified: '1F450',
        keywords: ['fingers', 'butterfly', 'hands', 'open'],
        sheet: [13, 56],
        skinVariations: [{
          unified: '1F450-1F3FB',
          sheet: [14, 0]
        }, {
          unified: '1F450-1F3FC',
          sheet: [14, 1]
        }, {
          unified: '1F450-1F3FD',
          sheet: [14, 2]
        }, {
          unified: '1F450-1F3FE',
          sheet: [14, 3]
        }, {
          unified: '1F450-1F3FF',
          sheet: [14, 4]
        }],
        shortName: 'open_hands'
      }, {
        name: 'Athletic Shoe',
        unified: '1F45F',
        keywords: ['shoes', 'sports', 'sneakers'],
        sheet: [14, 19],
        shortName: 'athletic_shoe'
      }, {
        name: 'Money-Mouth Face',
        unified: '1F911',
        keywords: ['face', 'rich', 'dollar', 'money'],
        sheet: [37, 24],
        shortName: 'money_mouth_face'
      }, {
        name: 'Third Place Medal',
        unified: '1F949',
        sheet: [41, 24],
        shortName: 'third_place_medal'
      }, {
        name: 'Garlic',
        unified: '1F9C4',
        sheet: [44, 12],
        shortName: 'garlic'
      }, {
        name: 'Upwards Black Arrow',
        unified: '2B06-FE0F',
        keywords: ['blue-square', 'continue', 'top', 'direction'],
        sheet: [55, 38],
        shortName: 'arrow_up'
      }, {
        name: 'Belgium Flag',
        unified: '1F1E7-1F1EA',
        sheet: [0, 51],
        shortName: 'flag-be'
      }, {
        name: 'Hospital',
        unified: '1F3E5',
        keywords: ['building', 'health', 'surgery', 'doctor'],
        sheet: [10, 56],
        shortName: 'hospital'
      }, {
        name: 'Pig Face',
        unified: '1F437',
        keywords: ['animal', 'oink', 'nature'],
        sheet: [12, 27],
        shortName: 'pig'
      }, {
        name: 'Hugging Face',
        unified: '1F917',
        sheet: [37, 30],
        shortName: 'hugging_face'
      }, {
        name: 'Palms Up Together',
        unified: '1F932',
        sheet: [39, 5],
        skinVariations: [{
          unified: '1F932-1F3FB',
          sheet: [39, 6]
        }, {
          unified: '1F932-1F3FC',
          sheet: [39, 7]
        }, {
          unified: '1F932-1F3FD',
          sheet: [39, 8]
        }, {
          unified: '1F932-1F3FE',
          sheet: [39, 9]
        }, {
          unified: '1F932-1F3FF',
          sheet: [39, 10]
        }],
        shortName: 'palms_up_together'
      }, {
        name: 'Hiking Boot',
        unified: '1F97E',
        keywords: ['backpacking', 'camping', 'hiking'],
        sheet: [42, 16],
        shortName: 'hiking_boot'
      }, {
        name: 'Onion',
        unified: '1F9C5',
        sheet: [44, 13],
        shortName: 'onion'
      }, {
        name: 'North East Arrow',
        unified: '2197-FE0F',
        keywords: ['blue-square', 'point', 'direction', 'diagonal', 'northeast'],
        sheet: [52, 17],
        shortName: 'arrow_upper_right'
      }, {
        name: 'Soccer Ball',
        unified: '26BD',
        keywords: ['sports', 'football'],
        sheet: [53, 56],
        shortName: 'soccer'
      }, {
        name: 'Burkina Faso Flag',
        unified: '1F1E7-1F1EB',
        sheet: [0, 52],
        shortName: 'flag-bf'
      }, {
        name: 'Mushroom',
        unified: '1F344',
        keywords: ['plant', 'vegetable'],
        sheet: [6, 28],
        shortName: 'mushroom'
      }, {
        name: 'Bank',
        unified: '1F3E6',
        keywords: ['building', 'money', 'sales', 'cash', 'business', 'enterprise'],
        sheet: [11, 0],
        shortName: 'bank'
      }, {
        name: 'Pig',
        unified: '1F416',
        keywords: ['animal', 'nature'],
        sheet: [11, 51],
        shortName: 'pig2'
      }, {
        name: 'Handshake',
        unified: '1F91D',
        keywords: ['agreement', 'shake'],
        sheet: [38, 4],
        shortName: 'handshake'
      }, {
        name: 'Smiling Face with Smiling Eyes and Hand Covering Mouth',
        unified: '1F92D',
        sheet: [38, 47],
        shortNames: ['smiling_face_with_smiling_eyes_and_hand_covering_mouth'],
        shortName: 'face_with_hand_over_mouth'
      }, {
        name: 'Flat Shoe',
        unified: '1F97F',
        sheet: [42, 17],
        shortName: 'womans_flat_shoe'
      }, {
        name: 'Baseball',
        unified: '26BE',
        keywords: ['sports', 'balls'],
        sheet: [54, 0],
        shortName: 'baseball'
      }, {
        name: 'Black Rightwards Arrow',
        unified: '27A1-FE0F',
        keywords: ['blue-square', 'next'],
        sheet: [55, 32],
        shortName: 'arrow_right'
      }, {
        name: 'Bulgaria Flag',
        unified: '1F1E7-1F1EC',
        sheet: [0, 53],
        shortName: 'flag-bg'
      }, {
        name: 'Hotel',
        unified: '1F3E8',
        keywords: ['building', 'accomodation', 'checkin'],
        sheet: [11, 2],
        shortName: 'hotel'
      }, {
        name: 'Boar',
        unified: '1F417',
        keywords: ['animal', 'nature'],
        sheet: [11, 52],
        shortName: 'boar'
      }, {
        name: 'High-Heeled Shoe',
        unified: '1F460',
        keywords: ['fashion', 'shoes', 'female', 'pumps', 'stiletto'],
        sheet: [14, 20],
        shortName: 'high_heel'
      }, {
        name: 'Person with Folded Hands',
        unified: '1F64F',
        keywords: ['please', 'hope', 'wish', 'namaste', 'highfive'],
        sheet: [33, 50],
        skinVariations: [{
          unified: '1F64F-1F3FB',
          sheet: [33, 51]
        }, {
          unified: '1F64F-1F3FC',
          sheet: [33, 52]
        }, {
          unified: '1F64F-1F3FD',
          sheet: [33, 53]
        }, {
          unified: '1F64F-1F3FE',
          sheet: [33, 54]
        }, {
          unified: '1F64F-1F3FF',
          sheet: [33, 55]
        }],
        shortName: 'pray'
      }, {
        name: 'Face with Finger Covering Closed Lips',
        unified: '1F92B',
        sheet: [38, 45],
        shortNames: ['face_with_finger_covering_closed_lips'],
        shortName: 'shushing_face'
      }, {
        name: 'Softball',
        unified: '1F94E',
        keywords: ['sports', 'balls'],
        sheet: [41, 29],
        shortName: 'softball'
      }, {
        name: 'Peanuts',
        unified: '1F95C',
        keywords: ['food', 'nut'],
        sheet: [41, 43],
        shortName: 'peanuts'
      }, {
        name: 'South East Arrow',
        unified: '2198-FE0F',
        keywords: ['blue-square', 'direction', 'diagonal', 'southeast'],
        sheet: [52, 18],
        shortName: 'arrow_lower_right'
      }, {
        name: 'Bahrain Flag',
        unified: '1F1E7-1F1ED',
        sheet: [0, 54],
        shortName: 'flag-bh'
      }, {
        name: 'Chestnut',
        unified: '1F330',
        keywords: ['food', 'squirrel'],
        sheet: [6, 8],
        shortName: 'chestnut'
      }, {
        name: 'Basketball and Hoop',
        unified: '1F3C0',
        keywords: ['sports', 'balls', 'NBA'],
        sheet: [8, 38],
        shortName: 'basketball'
      }, {
        name: 'Love Hotel',
        unified: '1F3E9',
        keywords: ['like', 'affection', 'dating'],
        sheet: [11, 3],
        shortName: 'love_hotel'
      }, {
        name: 'Pig Nose',
        unified: '1F43D',
        keywords: ['animal', 'oink'],
        sheet: [12, 33],
        shortName: 'pig_nose'
      }, {
        name: 'Womans Sandal',
        unified: '1F461',
        keywords: ['shoes', 'fashion', 'flip flops'],
        sheet: [14, 21],
        shortName: 'sandal'
      }, {
        name: 'Thinking Face',
        unified: '1F914',
        sheet: [37, 27],
        shortName: 'thinking_face'
      }, {
        name: 'Writing Hand',
        unified: '270D-FE0F',
        keywords: ['lower_left_ballpoint_pen', 'stationery', 'write', 'compose'],
        sheet: [55, 4],
        skinVariations: [{
          unified: '270D-1F3FB',
          sheet: [55, 5]
        }, {
          unified: '270D-1F3FC',
          sheet: [55, 6]
        }, {
          unified: '270D-1F3FD',
          sheet: [55, 7]
        }, {
          unified: '270D-1F3FE',
          sheet: [55, 8]
        }, {
          unified: '270D-1F3FF',
          sheet: [55, 9]
        }],
        shortName: 'writing_hand'
      }, {
        name: 'Downwards Black Arrow',
        unified: '2B07-FE0F',
        keywords: ['blue-square', 'direction', 'bottom'],
        sheet: [55, 39],
        shortName: 'arrow_down'
      }, {
        name: 'Burundi Flag',
        unified: '1F1E7-1F1EE',
        sheet: [0, 55],
        shortName: 'flag-bi'
      }, {
        name: 'Bread',
        unified: '1F35E',
        keywords: ['food', 'wheat', 'breakfast', 'toast'],
        sheet: [6, 54],
        shortName: 'bread'
      }, {
        name: 'Volleyball',
        unified: '1F3D0',
        keywords: ['sports', 'balls'],
        sheet: [10, 35],
        shortName: 'volleyball'
      }, {
        name: 'Convenience Store',
        unified: '1F3EA',
        keywords: ['building', 'shopping', 'groceries'],
        sheet: [11, 4],
        shortName: 'convenience_store'
      }, {
        name: 'Ram',
        unified: '1F40F',
        keywords: ['animal', 'sheep', 'nature'],
        sheet: [11, 43],
        shortName: 'ram'
      }, {
        name: 'Nail Polish',
        unified: '1F485',
        keywords: ['beauty', 'manicure', 'finger', 'fashion', 'nail'],
        sheet: [24, 33],
        skinVariations: [{
          unified: '1F485-1F3FB',
          sheet: [24, 34]
        }, {
          unified: '1F485-1F3FC',
          sheet: [24, 35]
        }, {
          unified: '1F485-1F3FD',
          sheet: [24, 36]
        }, {
          unified: '1F485-1F3FE',
          sheet: [24, 37]
        }, {
          unified: '1F485-1F3FF',
          sheet: [24, 38]
        }],
        shortName: 'nail_care'
      }, {
        name: 'Zipper-Mouth Face',
        unified: '1F910',
        keywords: ['face', 'sealed', 'zipper', 'secret'],
        sheet: [37, 23],
        shortName: 'zipper_mouth_face'
      }, {
        name: 'Ballet Shoes',
        unified: '1FA70',
        sheet: [51, 51],
        shortName: 'ballet_shoes'
      }, {
        name: 'South West Arrow',
        unified: '2199-FE0F',
        keywords: ['blue-square', 'direction', 'diagonal', 'southwest'],
        sheet: [52, 19],
        shortName: 'arrow_lower_left'
      }, {
        name: 'Benin Flag',
        unified: '1F1E7-1F1EF',
        sheet: [0, 56],
        shortName: 'flag-bj'
      }, {
        name: 'American Football',
        unified: '1F3C8',
        keywords: ['sports', 'balls', 'NFL'],
        sheet: [9, 33],
        shortName: 'football'
      }, {
        name: 'School',
        unified: '1F3EB',
        keywords: ['building', 'student', 'education', 'learn', 'teach'],
        sheet: [11, 5],
        shortName: 'school'
      }, {
        name: 'Sheep',
        unified: '1F411',
        keywords: ['animal', 'nature', 'wool', 'shipit'],
        sheet: [11, 45],
        shortName: 'sheep'
      }, {
        name: 'Womans Boots',
        unified: '1F462',
        keywords: ['shoes', 'fashion'],
        sheet: [14, 22],
        shortName: 'boot'
      }, {
        name: 'Face with One Eyebrow Raised',
        unified: '1F928',
        sheet: [38, 42],
        shortNames: ['face_with_one_eyebrow_raised'],
        shortName: 'face_with_raised_eyebrow'
      }, {
        name: 'Selfie',
        unified: '1F933',
        keywords: ['camera', 'phone'],
        sheet: [39, 11],
        skinVariations: [{
          unified: '1F933-1F3FB',
          sheet: [39, 12]
        }, {
          unified: '1F933-1F3FC',
          sheet: [39, 13]
        }, {
          unified: '1F933-1F3FD',
          sheet: [39, 14]
        }, {
          unified: '1F933-1F3FE',
          sheet: [39, 15]
        }, {
          unified: '1F933-1F3FF',
          sheet: [39, 16]
        }],
        shortName: 'selfie'
      }, {
        name: 'Croissant',
        unified: '1F950',
        keywords: ['food', 'bread', 'french'],
        sheet: [41, 31],
        shortName: 'croissant'
      }, {
        name: 'Leftwards Black Arrow',
        unified: '2B05-FE0F',
        keywords: ['blue-square', 'previous', 'back'],
        sheet: [55, 37],
        shortName: 'arrow_left'
      }, {
        name: 'St. Barthélemy Flag',
        unified: '1F1E7-1F1F1',
        sheet: [1, 0],
        shortName: 'flag-bl'
      }, {
        name: 'Rugby Football',
        unified: '1F3C9',
        keywords: ['sports', 'team'],
        sheet: [9, 34],
        shortName: 'rugby_football'
      }, {
        name: 'Department Store',
        unified: '1F3EC',
        keywords: ['building', 'shopping', 'mall'],
        sheet: [11, 6],
        shortName: 'department_store'
      }, {
        name: 'Goat',
        unified: '1F410',
        keywords: ['animal', 'nature'],
        sheet: [11, 44],
        shortName: 'goat'
      }, {
        name: 'Crown',
        unified: '1F451',
        keywords: ['king', 'kod', 'leader', 'royalty', 'lord'],
        sheet: [14, 5],
        shortName: 'crown'
      }, {
        name: 'Flexed Biceps',
        unified: '1F4AA',
        keywords: ['arm', 'flex', 'hand', 'summer', 'strong', 'biceps'],
        sheet: [25, 52],
        skinVariations: [{
          unified: '1F4AA-1F3FB',
          sheet: [25, 53]
        }, {
          unified: '1F4AA-1F3FC',
          sheet: [25, 54]
        }, {
          unified: '1F4AA-1F3FD',
          sheet: [25, 55]
        }, {
          unified: '1F4AA-1F3FE',
          sheet: [25, 56]
        }, {
          unified: '1F4AA-1F3FF',
          sheet: [26, 0]
        }],
        shortName: 'muscle'
      }, {
        name: 'Neutral Face',
        unified: '1F610',
        emoticons: [':|', ':-|'],
        keywords: ['indifference', 'meh', ':|', 'neutral'],
        sheet: [30, 51],
        shortName: 'neutral_face'
      }, {
        name: 'Baguette Bread',
        unified: '1F956',
        keywords: ['food', 'bread', 'french'],
        sheet: [41, 37],
        shortName: 'baguette_bread'
      }, {
        name: 'North West Arrow',
        unified: '2196-FE0F',
        keywords: ['blue-square', 'point', 'direction', 'diagonal', 'northwest'],
        sheet: [52, 16],
        shortName: 'arrow_upper_left'
      }, {
        name: 'Bermuda Flag',
        unified: '1F1E7-1F1F2',
        sheet: [1, 1],
        shortName: 'flag-bm'
      }, {
        name: 'Tennis Racquet and Ball',
        unified: '1F3BE',
        keywords: ['sports', 'balls', 'green'],
        sheet: [8, 36],
        shortName: 'tennis'
      }, {
        name: 'Factory',
        unified: '1F3ED',
        keywords: ['building', 'industry', 'pollution', 'smoke'],
        sheet: [11, 7],
        shortName: 'factory'
      }, {
        name: 'Dromedary Camel',
        unified: '1F42A',
        keywords: ['animal', 'hot', 'desert', 'hump'],
        sheet: [12, 14],
        shortName: 'dromedary_camel'
      }, {
        name: 'Womans Hat',
        unified: '1F452',
        keywords: ['fashion', 'accessories', 'female', 'lady', 'spring'],
        sheet: [14, 6],
        shortName: 'womans_hat'
      }, {
        name: 'Expressionless Face',
        unified: '1F611',
        keywords: ['face', 'indifferent', '-_-', 'meh', 'deadpan'],
        sheet: [30, 52],
        shortName: 'expressionless'
      }, {
        name: 'Pretzel',
        unified: '1F968',
        keywords: ['food', 'bread', 'twisted'],
        sheet: [41, 55],
        shortName: 'pretzel'
      }, {
        name: 'Mechanical Arm',
        unified: '1F9BE',
        sheet: [44, 6],
        shortName: 'mechanical_arm'
      }, {
        name: 'Up Down Arrow',
        unified: '2195-FE0F',
        keywords: ['blue-square', 'direction', 'way', 'vertical'],
        sheet: [52, 15],
        shortName: 'arrow_up_down'
      }, {
        name: 'Brunei Flag',
        unified: '1F1E7-1F1F3',
        sheet: [1, 2],
        shortName: 'flag-bn'
      }, {
        name: 'Top Hat',
        unified: '1F3A9',
        keywords: ['magic', 'gentleman', 'classy', 'circus'],
        sheet: [8, 15],
        shortName: 'tophat'
      }, {
        name: 'Japanese Castle',
        unified: '1F3EF',
        keywords: ['photo', 'building'],
        sheet: [11, 9],
        shortName: 'japanese_castle'
      }, {
        name: 'Bactrian Camel',
        unified: '1F42B',
        keywords: ['animal', 'nature', 'hot', 'desert', 'hump'],
        sheet: [12, 15],
        shortName: 'camel'
      }, {
        name: 'Face Without Mouth',
        unified: '1F636',
        keywords: ['face', 'hellokitty'],
        sheet: [31, 32],
        shortName: 'no_mouth'
      }, {
        name: 'Flying Disc',
        unified: '1F94F',
        keywords: ['sports', 'frisbee', 'ultimate'],
        sheet: [41, 30],
        shortName: 'flying_disc'
      }, {
        name: 'Bagel',
        unified: '1F96F',
        keywords: ['food', 'bread', 'bakery', 'schmear'],
        sheet: [42, 5],
        shortName: 'bagel'
      }, {
        name: 'Mechanical Leg',
        unified: '1F9BF',
        sheet: [44, 7],
        shortName: 'mechanical_leg'
      }, {
        name: 'Left Right Arrow',
        unified: '2194-FE0F',
        keywords: ['shape', 'direction', 'horizontal', 'sideways'],
        sheet: [52, 14],
        shortName: 'left_right_arrow'
      }, {
        name: 'Bolivia Flag',
        unified: '1F1E7-1F1F4',
        sheet: [1, 3],
        shortName: 'flag-bo'
      }, {
        name: 'Graduation Cap',
        unified: '1F393',
        keywords: ['school', 'college', 'degree', 'university', 'graduation', 'cap', 'hat', 'legal', 'learn', 'education'],
        sheet: [7, 55],
        shortName: 'mortar_board'
      }, {
        name: 'Bowling',
        unified: '1F3B3',
        keywords: ['sports', 'fun', 'play'],
        sheet: [8, 25],
        shortName: 'bowling'
      }, {
        name: 'European Castle',
        unified: '1F3F0',
        keywords: ['building', 'royalty', 'history'],
        sheet: [11, 10],
        shortName: 'european_castle'
      }, {
        name: 'Smirking Face',
        unified: '1F60F',
        keywords: ['face', 'smile', 'mean', 'prank', 'smug', 'sarcasm'],
        sheet: [30, 50],
        shortName: 'smirk'
      }, {
        name: 'Pancakes',
        unified: '1F95E',
        keywords: ['food', 'breakfast', 'flapjacks', 'hotcakes'],
        sheet: [41, 45],
        shortName: 'pancakes'
      }, {
        name: 'Llama',
        unified: '1F999',
        keywords: ['animal', 'nature', 'alpaca'],
        sheet: [42, 43],
        shortName: 'llama'
      }, {
        name: 'Leg',
        unified: '1F9B5',
        keywords: ['kick', 'limb'],
        sheet: [43, 5],
        skinVariations: [{
          unified: '1F9B5-1F3FB',
          sheet: [43, 6]
        }, {
          unified: '1F9B5-1F3FC',
          sheet: [43, 7]
        }, {
          unified: '1F9B5-1F3FD',
          sheet: [43, 8]
        }, {
          unified: '1F9B5-1F3FE',
          sheet: [43, 9]
        }, {
          unified: '1F9B5-1F3FF',
          sheet: [43, 10]
        }],
        shortName: 'leg'
      }, {
        name: 'Leftwards Arrow with Hook',
        unified: '21A9-FE0F',
        keywords: ['back', 'return', 'blue-square', 'undo', 'enter'],
        sheet: [52, 20],
        shortName: 'leftwards_arrow_with_hook'
      }, {
        name: 'Caribbean Netherlands Flag',
        unified: '1F1E7-1F1F6',
        sheet: [1, 4],
        shortName: 'flag-bq'
      }, {
        name: 'Cricket Bat and Ball',
        unified: '1F3CF',
        sheet: [10, 34],
        shortName: 'cricket_bat_and_ball'
      }, {
        name: 'Wedding',
        unified: '1F492',
        keywords: ['love', 'like', 'affection', 'couple', 'marriage', 'bride', 'groom'],
        sheet: [25, 28],
        shortName: 'wedding'
      }, {
        name: 'Unamused Face',
        unified: '1F612',
        text: ':(',
        keywords: ['indifference', 'bored', 'straight face', 'serious', 'sarcasm', 'unimpressed', 'skeptical', 'dubious', 'side_eye'],
        sheet: [30, 53],
        shortName: 'unamused'
      }, {
        name: 'Giraffe Face',
        unified: '1F992',
        sheet: [42, 36],
        shortName: 'giraffe_face'
      }, {
        name: 'Foot',
        unified: '1F9B6',
        keywords: ['kick', 'stomp'],
        sheet: [43, 11],
        skinVariations: [{
          unified: '1F9B6-1F3FB',
          sheet: [43, 12]
        }, {
          unified: '1F9B6-1F3FC',
          sheet: [43, 13]
        }, {
          unified: '1F9B6-1F3FD',
          sheet: [43, 14]
        }, {
          unified: '1F9B6-1F3FE',
          sheet: [43, 15]
        }, {
          unified: '1F9B6-1F3FF',
          sheet: [43, 16]
        }],
        shortName: 'foot'
      }, {
        name: 'Waffle',
        unified: '1F9C7',
        sheet: [44, 15],
        shortName: 'waffle'
      }, {
        name: 'Billed Cap',
        unified: '1F9E2',
        sheet: [51, 21],
        shortName: 'billed_cap'
      }, {
        name: 'Rightwards Arrow with Hook',
        unified: '21AA-FE0F',
        keywords: ['blue-square', 'return', 'rotate', 'direction'],
        sheet: [52, 21],
        shortName: 'arrow_right_hook'
      }, {
        name: 'Brazil Flag',
        unified: '1F1E7-1F1F7',
        sheet: [1, 5],
        shortName: 'flag-br'
      }, {
        name: 'Field Hockey Stick and Ball',
        unified: '1F3D1',
        sheet: [10, 36],
        shortName: 'field_hockey_stick_and_ball'
      }, {
        name: 'Elephant',
        unified: '1F418',
        keywords: ['animal', 'nature', 'nose', 'th', 'circus'],
        sheet: [11, 53],
        shortName: 'elephant'
      }, {
        name: 'Ear',
        unified: '1F442',
        keywords: ['face', 'hear', 'sound', 'listen'],
        sheet: [12, 39],
        skinVariations: [{
          unified: '1F442-1F3FB',
          sheet: [12, 40]
        }, {
          unified: '1F442-1F3FC',
          sheet: [12, 41]
        }, {
          unified: '1F442-1F3FD',
          sheet: [12, 42]
        }, {
          unified: '1F442-1F3FE',
          sheet: [12, 43]
        }, {
          unified: '1F442-1F3FF',
          sheet: [12, 44]
        }],
        shortName: 'ear'
      }, {
        name: 'Tokyo Tower',
        unified: '1F5FC',
        keywords: ['photo', 'japanese'],
        sheet: [30, 31],
        shortName: 'tokyo_tower'
      }, {
        name: 'Face with Rolling Eyes',
        unified: '1F644',
        sheet: [31, 46],
        shortName: 'face_with_rolling_eyes'
      }, {
        name: 'Cheese Wedge',
        unified: '1F9C0',
        sheet: [44, 8],
        shortName: 'cheese_wedge'
      }, {
        name: 'Helmet with White Cross',
        unified: '26D1-FE0F',
        sheet: [54, 6],
        shortName: 'helmet_with_white_cross'
      }, {
        name: 'Arrow Pointing Rightwards Then Curving Upwards',
        unified: '2934-FE0F',
        keywords: ['blue-square', 'direction', 'top'],
        sheet: [55, 35],
        shortName: 'arrow_heading_up'
      }, {
        name: 'Bahamas Flag',
        unified: '1F1E7-1F1F8',
        sheet: [1, 6],
        shortName: 'flag-bs'
      }, {
        name: 'Meat on Bone',
        unified: '1F356',
        keywords: ['good', 'food', 'drumstick'],
        sheet: [6, 46],
        shortName: 'meat_on_bone'
      }, {
        name: 'Ice Hockey Stick and Puck',
        unified: '1F3D2',
        sheet: [10, 37],
        shortName: 'ice_hockey_stick_and_puck'
      }, {
        name: 'Prayer Beads',
        unified: '1F4FF',
        keywords: ['dhikr', 'religious'],
        sheet: [27, 27],
        shortName: 'prayer_beads'
      }, {
        name: 'Statue of Liberty',
        unified: '1F5FD',
        keywords: ['american', 'newyork'],
        sheet: [30, 32],
        shortName: 'statue_of_liberty'
      }, {
        name: 'Grimacing Face',
        unified: '1F62C',
        keywords: ['face', 'grimace', 'teeth'],
        sheet: [31, 22],
        shortName: 'grimacing'
      }, {
        name: 'Rhinoceros',
        unified: '1F98F',
        keywords: ['animal', 'nature', 'horn'],
        sheet: [42, 33],
        shortName: 'rhinoceros'
      }, {
        name: 'Ear with Hearing Aid',
        unified: '1F9BB',
        sheet: [43, 55],
        skinVariations: [{
          unified: '1F9BB-1F3FB',
          sheet: [43, 56]
        }, {
          unified: '1F9BB-1F3FC',
          sheet: [44, 0]
        }, {
          unified: '1F9BB-1F3FD',
          sheet: [44, 1]
        }, {
          unified: '1F9BB-1F3FE',
          sheet: [44, 2]
        }, {
          unified: '1F9BB-1F3FF',
          sheet: [44, 3]
        }],
        shortName: 'ear_with_hearing_aid'
      }, {
        name: 'Arrow Pointing Rightwards Then Curving Downwards',
        unified: '2935-FE0F',
        keywords: ['blue-square', 'direction', 'bottom'],
        sheet: [55, 36],
        shortName: 'arrow_heading_down'
      }, {
        name: 'Bhutan Flag',
        unified: '1F1E7-1F1F9',
        sheet: [1, 7],
        shortName: 'flag-bt'
      }, {
        name: 'Poultry Leg',
        unified: '1F357',
        keywords: ['food', 'meat', 'drumstick', 'bird', 'chicken', 'turkey'],
        sheet: [6, 47],
        shortName: 'poultry_leg'
      }, {
        name: 'Nose',
        unified: '1F443',
        keywords: ['smell', 'sniff'],
        sheet: [12, 45],
        skinVariations: [{
          unified: '1F443-1F3FB',
          sheet: [12, 46]
        }, {
          unified: '1F443-1F3FC',
          sheet: [12, 47]
        }, {
          unified: '1F443-1F3FD',
          sheet: [12, 48]
        }, {
          unified: '1F443-1F3FE',
          sheet: [12, 49]
        }, {
          unified: '1F443-1F3FF',
          sheet: [12, 50]
        }],
        shortName: 'nose'
      }, {
        name: 'Lipstick',
        unified: '1F484',
        keywords: ['female', 'girl', 'fashion', 'woman'],
        sheet: [24, 32],
        shortName: 'lipstick'
      }, {
        name: 'Clockwise Downwards and Upwards Open Circle Arrows',
        unified: '1F503',
        keywords: ['sync', 'cycle', 'round', 'repeat'],
        sheet: [27, 31],
        shortName: 'arrows_clockwise'
      }, {
        name: 'Lying Face',
        unified: '1F925',
        keywords: ['face', 'lie', 'pinocchio'],
        sheet: [38, 22],
        shortName: 'lying_face'
      }, {
        name: 'Lacrosse Stick and Ball',
        unified: '1F94D',
        keywords: ['sports', 'ball', 'stick'],
        sheet: [41, 28],
        shortName: 'lacrosse'
      }, {
        name: 'Hippopotamus',
        unified: '1F99B',
        keywords: ['animal', 'nature'],
        sheet: [42, 45],
        shortName: 'hippopotamus'
      }, {
        name: 'Church',
        unified: '26EA',
        keywords: ['building', 'religion', 'christ'],
        sheet: [54, 10],
        shortName: 'church'
      }, {
        name: 'Bouvet Island Flag',
        unified: '1F1E7-1F1FB',
        sheet: [1, 8],
        shortName: 'flag-bv'
      }, {
        name: 'Table Tennis Paddle and Ball',
        unified: '1F3D3',
        sheet: [10, 38],
        shortName: 'table_tennis_paddle_and_ball'
      }, {
        name: 'Mouse Face',
        unified: '1F42D',
        keywords: ['animal', 'nature', 'cheese_wedge', 'rodent'],
        sheet: [12, 17],
        shortName: 'mouse'
      }, {
        name: 'Ring',
        unified: '1F48D',
        keywords: ['wedding', 'propose', 'marriage', 'valentines', 'diamond', 'fashion', 'jewelry', 'gem', 'engagement'],
        sheet: [25, 23],
        shortName: 'ring'
      }, {
        name: 'Anticlockwise Downwards and Upwards Open Circle Arrows',
        unified: '1F504',
        keywords: ['blue-square', 'sync', 'cycle'],
        sheet: [27, 32],
        shortName: 'arrows_counterclockwise'
      }, {
        name: 'Mosque',
        unified: '1F54C',
        keywords: ['islam', 'worship', 'minaret'],
        sheet: [28, 36],
        shortName: 'mosque'
      }, {
        name: 'Relieved Face',
        unified: '1F60C',
        keywords: ['face', 'relaxed', 'phew', 'massage', 'happiness'],
        sheet: [30, 47],
        shortName: 'relieved'
      }, {
        name: 'Cut of Meat',
        unified: '1F969',
        sheet: [41, 56],
        shortName: 'cut_of_meat'
      }, {
        name: 'Brain',
        unified: '1F9E0',
        keywords: ['smart', 'intelligent'],
        sheet: [51, 19],
        shortName: 'brain'
      }, {
        name: 'Botswana Flag',
        unified: '1F1E7-1F1FC',
        sheet: [1, 9],
        shortName: 'flag-bw'
      }, {
        name: 'Badminton Racquet and Shuttlecock',
        unified: '1F3F8',
        sheet: [11, 20],
        shortName: 'badminton_racquet_and_shuttlecock'
      }, {
        name: 'Mouse',
        unified: '1F401',
        keywords: ['animal', 'nature', 'rodent'],
        sheet: [11, 29],
        shortName: 'mouse2'
      }, {
        name: 'Gem Stone',
        unified: '1F48E',
        keywords: ['blue', 'ruby', 'diamond', 'jewelry'],
        sheet: [25, 24],
        shortName: 'gem'
      }, {
        name: 'Back with Leftwards Arrow Above',
        unified: '1F519',
        keywords: ['arrow', 'words', 'return'],
        sheet: [27, 53],
        shortName: 'back'
      }, {
        name: 'Pensive Face',
        unified: '1F614',
        keywords: ['face', 'sad', 'depressed', 'upset'],
        sheet: [30, 55],
        shortName: 'pensive'
      }, {
        name: 'Hindu Temple',
        unified: '1F6D5',
        sheet: [36, 41],
        shortName: 'hindu_temple'
      }, {
        name: 'Bacon',
        unified: '1F953',
        keywords: ['food', 'breakfast', 'pork', 'pig', 'meat'],
        sheet: [41, 34],
        shortName: 'bacon'
      }, {
        name: 'Tooth',
        unified: '1F9B7',
        keywords: ['teeth', 'dentist'],
        sheet: [43, 17],
        shortName: 'tooth'
      }, {
        name: 'Belarus Flag',
        unified: '1F1E7-1F1FE',
        sheet: [1, 10],
        shortName: 'flag-by'
      }, {
        name: 'Hamburger',
        unified: '1F354',
        keywords: ['meat', 'fast food', 'beef', 'cheeseburger', 'mcdonalds', 'burger king'],
        sheet: [6, 44],
        shortName: 'hamburger'
      }, {
        name: 'Rat',
        unified: '1F400',
        keywords: ['animal', 'mouse', 'rodent'],
        sheet: [11, 28],
        shortName: 'rat'
      }, {
        name: 'Speaker with Cancellation Stroke',
        unified: '1F507',
        keywords: ['sound', 'volume', 'silence', 'quiet'],
        sheet: [27, 35],
        shortName: 'mute'
      }, {
        name: 'End with Leftwards Arrow Above',
        unified: '1F51A',
        keywords: ['words', 'arrow'],
        sheet: [27, 54],
        shortName: 'end'
      }, {
        name: 'Synagogue',
        unified: '1F54D',
        keywords: ['judaism', 'worship', 'temple', 'jewish'],
        sheet: [28, 37],
        shortName: 'synagogue'
      }, {
        name: 'Sleepy Face',
        unified: '1F62A',
        keywords: ['face', 'tired', 'rest', 'nap'],
        sheet: [31, 20],
        shortName: 'sleepy'
      }, {
        name: 'Boxing Glove',
        unified: '1F94A',
        keywords: ['sports', 'fighting'],
        sheet: [41, 25],
        shortName: 'boxing_glove'
      }, {
        name: 'Bone',
        unified: '1F9B4',
        keywords: ['skeleton'],
        sheet: [43, 4],
        shortName: 'bone'
      }, {
        name: 'Belize Flag',
        unified: '1F1E7-1F1FF',
        sheet: [1, 11],
        shortName: 'flag-bz'
      }, {
        name: 'French Fries',
        unified: '1F35F',
        keywords: ['chips', 'snack', 'fast food'],
        sheet: [6, 55],
        shortName: 'fries'
      }, {
        name: 'Hamster Face',
        unified: '1F439',
        keywords: ['animal', 'nature'],
        sheet: [12, 29],
        shortName: 'hamster'
      }, {
        name: 'Eyes',
        unified: '1F440',
        keywords: ['look', 'watch', 'stalk', 'peek', 'see'],
        sheet: [12, 36],
        shortName: 'eyes'
      }, {
        name: 'Speaker',
        unified: '1F508',
        keywords: ['sound', 'volume', 'silence', 'broadcast'],
        sheet: [27, 36],
        shortName: 'speaker'
      }, {
        name: 'On with Exclamation Mark with Left Right Arrow Above',
        unified: '1F51B',
        keywords: ['arrow', 'words'],
        sheet: [27, 55],
        shortName: 'on'
      }, {
        name: 'Drooling Face',
        unified: '1F924',
        keywords: ['face'],
        sheet: [38, 21],
        shortName: 'drooling_face'
      }, {
        name: 'Martial Arts Uniform',
        unified: '1F94B',
        keywords: ['judo', 'karate', 'taekwondo'],
        sheet: [41, 26],
        shortName: 'martial_arts_uniform'
      }, {
        name: 'Shinto Shrine',
        unified: '26E9-FE0F',
        keywords: ['temple', 'japan', 'kyoto'],
        sheet: [54, 9],
        shortName: 'shinto_shrine'
      }, {
        name: 'Canada Flag',
        unified: '1F1E8-1F1E6',
        sheet: [1, 12],
        shortName: 'flag-ca'
      }, {
        name: 'Slice of Pizza',
        unified: '1F355',
        keywords: ['food', 'party'],
        sheet: [6, 45],
        shortName: 'pizza'
      }, {
        name: 'Rabbit Face',
        unified: '1F430',
        keywords: ['animal', 'nature', 'pet', 'spring', 'magic', 'bunny'],
        sheet: [12, 20],
        shortName: 'rabbit'
      }, {
        name: 'Eye',
        unified: '1F441-FE0F',
        keywords: ['face', 'look', 'see', 'watch', 'stare'],
        sheet: [12, 38],
        shortName: 'eye'
      }, {
        name: 'Speaker with One Sound Wave',
        unified: '1F509',
        keywords: ['volume', 'speaker', 'broadcast'],
        sheet: [27, 37],
        shortName: 'sound'
      }, {
        name: 'Soon with Rightwards Arrow Above',
        unified: '1F51C',
        keywords: ['arrow', 'words'],
        sheet: [27, 56],
        shortName: 'soon'
      }, {
        name: 'Kaaba',
        unified: '1F54B',
        keywords: ['mecca', 'mosque', 'islam'],
        sheet: [28, 35],
        shortName: 'kaaba'
      }, {
        name: 'Sleeping Face',
        unified: '1F634',
        keywords: ['face', 'tired', 'sleepy', 'night', 'zzz'],
        sheet: [31, 30],
        shortName: 'sleeping'
      }, {
        name: 'Goal Net',
        unified: '1F945',
        keywords: ['sports'],
        sheet: [41, 21],
        shortName: 'goal_net'
      }, {
        name: 'Cocos (keeling) Islands Flag',
        unified: '1F1E8-1F1E8',
        sheet: [1, 13],
        shortName: 'flag-cc'
      }, {
        name: 'Hot Dog',
        unified: '1F32D',
        keywords: ['food', 'frankfurter'],
        sheet: [6, 5],
        shortName: 'hotdog'
      }, {
        name: 'Rabbit',
        unified: '1F407',
        keywords: ['animal', 'nature', 'pet', 'magic', 'spring'],
        sheet: [11, 35],
        shortName: 'rabbit2'
      }, {
        name: 'Tongue',
        unified: '1F445',
        keywords: ['mouth', 'playful'],
        sheet: [12, 52],
        shortName: 'tongue'
      }, {
        name: 'Speaker with Three Sound Waves',
        unified: '1F50A',
        keywords: ['volume', 'noise', 'noisy', 'speaker', 'broadcast'],
        sheet: [27, 38],
        shortName: 'loud_sound'
      }, {
        name: 'Top with Upwards Arrow Above',
        unified: '1F51D',
        keywords: ['words', 'blue-square'],
        sheet: [28, 0],
        shortName: 'top'
      }, {
        name: 'Face with Medical Mask',
        unified: '1F637',
        keywords: ['face', 'sick', 'ill', 'disease'],
        sheet: [31, 33],
        shortName: 'mask'
      }, {
        name: 'Fountain',
        unified: '26F2',
        keywords: ['photo', 'summer', 'water', 'fresh'],
        sheet: [54, 13],
        shortName: 'fountain'
      }, {
        name: 'Flag in Hole',
        unified: '26F3',
        keywords: ['sports', 'business', 'flag', 'hole', 'summer'],
        sheet: [54, 14],
        shortName: 'golf'
      }, {
        name: 'Congo - Kinshasa Flag',
        unified: '1F1E8-1F1E9',
        sheet: [1, 14],
        shortName: 'flag-cd'
      }, {
        name: 'Chipmunk',
        unified: '1F43F-FE0F',
        keywords: ['animal', 'nature', 'rodent', 'squirrel'],
        sheet: [12, 35],
        shortName: 'chipmunk'
      }, {
        name: 'Mouth',
        unified: '1F444',
        keywords: ['mouth', 'kiss'],
        sheet: [12, 51],
        shortName: 'lips'
      }, {
        name: 'Public Address Loudspeaker',
        unified: '1F4E2',
        keywords: ['volume', 'sound'],
        sheet: [26, 56],
        shortName: 'loudspeaker'
      }, {
        name: 'Place of Worship',
        unified: '1F6D0',
        keywords: ['religion', 'church', 'temple', 'prayer'],
        sheet: [36, 38],
        shortName: 'place_of_worship'
      }, {
        name: 'Face with Thermometer',
        unified: '1F912',
        keywords: ['sick', 'temperature', 'thermometer', 'cold', 'fever'],
        sheet: [37, 25],
        shortName: 'face_with_thermometer'
      }, {
        name: 'Sandwich',
        unified: '1F96A',
        keywords: ['food', 'lunch', 'bread'],
        sheet: [42, 0],
        shortName: 'sandwich'
      }, {
        name: 'Ice Skate',
        unified: '26F8-FE0F',
        keywords: ['sports'],
        sheet: [54, 18],
        shortName: 'ice_skate'
      }, {
        name: 'Tent',
        unified: '26FA',
        keywords: ['photo', 'camping', 'outdoors'],
        sheet: [54, 37],
        shortName: 'tent'
      }, {
        name: 'Central African Republic Flag',
        unified: '1F1E8-1F1EB',
        sheet: [1, 15],
        shortName: 'flag-cf'
      }, {
        name: 'Foggy',
        unified: '1F301',
        keywords: ['photo', 'mountain'],
        sheet: [5, 20],
        shortName: 'foggy'
      }, {
        name: 'Taco',
        unified: '1F32E',
        keywords: ['food', 'mexican'],
        sheet: [6, 6],
        shortName: 'taco'
      }, {
        name: 'Fishing Pole and Fish',
        unified: '1F3A3',
        keywords: ['food', 'hobby', 'summer'],
        sheet: [8, 9],
        shortName: 'fishing_pole_and_fish'
      }, {
        name: 'Baby',
        unified: '1F476',
        keywords: ['child', 'boy', 'girl', 'toddler'],
        sheet: [23, 4],
        skinVariations: [{
          unified: '1F476-1F3FB',
          sheet: [23, 5]
        }, {
          unified: '1F476-1F3FC',
          sheet: [23, 6]
        }, {
          unified: '1F476-1F3FD',
          sheet: [23, 7]
        }, {
          unified: '1F476-1F3FE',
          sheet: [23, 8]
        }, {
          unified: '1F476-1F3FF',
          sheet: [23, 9]
        }],
        shortName: 'baby'
      }, {
        name: 'Cheering Megaphone',
        unified: '1F4E3',
        keywords: ['sound', 'speaker', 'volume'],
        sheet: [27, 0],
        shortName: 'mega'
      }, {
        name: 'Face with Head-Bandage',
        unified: '1F915',
        keywords: ['injured', 'clumsy', 'bandage', 'hurt'],
        sheet: [37, 28],
        shortName: 'face_with_head_bandage'
      }, {
        name: 'Hedgehog',
        unified: '1F994',
        keywords: ['animal', 'nature', 'spiny'],
        sheet: [42, 38],
        shortName: 'hedgehog'
      }, {
        name: 'Atom Symbol',
        unified: '269B-FE0F',
        keywords: ['science', 'physics', 'chemistry'],
        sheet: [53, 48],
        shortName: 'atom_symbol'
      }, {
        name: 'Congo - Brazzaville Flag',
        unified: '1F1E8-1F1EC',
        sheet: [1, 16],
        shortName: 'flag-cg'
      }, {
        name: 'Night with Stars',
        unified: '1F303',
        keywords: ['evening', 'city', 'downtown'],
        sheet: [5, 22],
        shortName: 'night_with_stars'
      }, {
        name: 'Burrito',
        unified: '1F32F',
        keywords: ['food', 'mexican'],
        sheet: [6, 7],
        shortName: 'burrito'
      }, {
        name: 'Postal Horn',
        unified: '1F4EF',
        keywords: ['instrument', 'music'],
        sheet: [27, 12],
        shortName: 'postal_horn'
      }, {
        name: 'Om Symbol',
        unified: '1F549-FE0F',
        sheet: [28, 33],
        shortName: 'om_symbol'
      }, {
        name: 'Nauseated Face',
        unified: '1F922',
        keywords: ['face', 'vomit', 'gross', 'green', 'sick', 'throw up', 'ill'],
        sheet: [38, 19],
        shortName: 'nauseated_face'
      }, {
        name: 'Diving Mask',
        unified: '1F93F',
        sheet: [41, 15],
        shortName: 'diving_mask'
      }, {
        name: 'Bat',
        unified: '1F987',
        keywords: ['animal', 'nature', 'blind', 'vampire'],
        sheet: [42, 25],
        shortName: 'bat'
      }, {
        name: 'Child',
        unified: '1F9D2',
        keywords: ['gender-neutral', 'young'],
        sheet: [48, 16],
        skinVariations: [{
          unified: '1F9D2-1F3FB',
          sheet: [48, 17]
        }, {
          unified: '1F9D2-1F3FC',
          sheet: [48, 18]
        }, {
          unified: '1F9D2-1F3FD',
          sheet: [48, 19]
        }, {
          unified: '1F9D2-1F3FE',
          sheet: [48, 20]
        }, {
          unified: '1F9D2-1F3FF',
          sheet: [48, 21]
        }],
        shortName: 'child'
      }, {
        name: 'Switzerland Flag',
        unified: '1F1E8-1F1ED',
        sheet: [1, 17],
        shortName: 'flag-ch'
      }, {
        name: 'Running Shirt with Sash',
        unified: '1F3BD',
        keywords: ['play', 'pageant'],
        sheet: [8, 35],
        shortName: 'running_shirt_with_sash'
      }, {
        name: 'Cityscape',
        unified: '1F3D9-FE0F',
        keywords: ['photo', 'night life', 'urban'],
        sheet: [10, 44],
        shortName: 'cityscape'
      }, {
        name: 'Bear Face',
        unified: '1F43B',
        keywords: ['animal', 'nature', 'wild'],
        sheet: [12, 31],
        shortName: 'bear'
      }, {
        name: 'Boy',
        unified: '1F466',
        keywords: ['man', 'male', 'guy', 'teenager'],
        sheet: [14, 26],
        skinVariations: [{
          unified: '1F466-1F3FB',
          sheet: [14, 27]
        }, {
          unified: '1F466-1F3FC',
          sheet: [14, 28]
        }, {
          unified: '1F466-1F3FD',
          sheet: [14, 29]
        }, {
          unified: '1F466-1F3FE',
          sheet: [14, 30]
        }, {
          unified: '1F466-1F3FF',
          sheet: [14, 31]
        }],
        shortName: 'boy'
      }, {
        name: 'Bell',
        unified: '1F514',
        keywords: ['sound', 'notification', 'christmas', 'xmas', 'chime'],
        sheet: [27, 48],
        shortName: 'bell'
      }, {
        name: 'Face with Open Mouth Vomiting',
        unified: '1F92E',
        sheet: [38, 48],
        shortNames: ['face_with_open_mouth_vomiting'],
        shortName: 'face_vomiting'
      }, {
        name: 'Stuffed Flatbread',
        unified: '1F959',
        keywords: ['food', 'flatbread', 'stuffed', 'gyro'],
        sheet: [41, 40],
        shortName: 'stuffed_flatbread'
      }, {
        name: 'Star of David',
        unified: '2721-FE0F',
        keywords: ['judaism'],
        sheet: [55, 15],
        shortName: 'star_of_david'
      }, {
        name: 'Côte D’ivoire Flag',
        unified: '1F1E8-1F1EE',
        sheet: [1, 18],
        shortName: 'flag-ci'
      }, {
        name: 'Sunrise over Mountains',
        unified: '1F304',
        keywords: ['view', 'vacation', 'photo'],
        sheet: [5, 23],
        shortName: 'sunrise_over_mountains'
      }, {
        name: 'Ski and Ski Boot',
        unified: '1F3BF',
        keywords: ['sports', 'winter', 'cold', 'snow'],
        sheet: [8, 37],
        shortName: 'ski'
      }, {
        name: 'Koala',
        unified: '1F428',
        keywords: ['animal', 'nature'],
        sheet: [12, 12],
        shortName: 'koala'
      }, {
        name: 'Girl',
        unified: '1F467',
        keywords: ['female', 'woman', 'teenager'],
        sheet: [14, 32],
        skinVariations: [{
          unified: '1F467-1F3FB',
          sheet: [14, 33]
        }, {
          unified: '1F467-1F3FC',
          sheet: [14, 34]
        }, {
          unified: '1F467-1F3FD',
          sheet: [14, 35]
        }, {
          unified: '1F467-1F3FE',
          sheet: [14, 36]
        }, {
          unified: '1F467-1F3FF',
          sheet: [14, 37]
        }],
        shortName: 'girl'
      }, {
        name: 'Bell with Cancellation Stroke',
        unified: '1F515',
        keywords: ['sound', 'volume', 'mute', 'quiet', 'silent'],
        sheet: [27, 49],
        shortName: 'no_bell'
      }, {
        name: 'Sneezing Face',
        unified: '1F927',
        keywords: ['face', 'gesundheit', 'sneeze', 'sick', 'allergy'],
        sheet: [38, 41],
        shortName: 'sneezing_face'
      }, {
        name: 'Falafel',
        unified: '1F9C6',
        sheet: [44, 14],
        shortName: 'falafel'
      }, {
        name: 'Wheel of Dharma',
        unified: '2638-FE0F',
        keywords: ['hinduism', 'buddhism', 'sikhism', 'jainism'],
        sheet: [53, 15],
        shortName: 'wheel_of_dharma'
      }, {
        name: 'Cook Islands Flag',
        unified: '1F1E8-1F1F0',
        sheet: [1, 19],
        shortName: 'flag-ck'
      }, {
        name: 'Sunrise',
        unified: '1F305',
        keywords: ['morning', 'view', 'vacation', 'photo'],
        sheet: [5, 24],
        shortName: 'sunrise'
      }, {
        name: 'Musical Score',
        unified: '1F3BC',
        keywords: ['treble', 'clef', 'compose'],
        sheet: [8, 34],
        shortName: 'musical_score'
      }, {
        name: 'Panda Face',
        unified: '1F43C',
        keywords: ['animal', 'nature', 'panda'],
        sheet: [12, 32],
        shortName: 'panda_face'
      }, {
        name: 'Sled',
        unified: '1F6F7',
        keywords: ['sleigh', 'luge', 'toboggan'],
        sheet: [36, 56],
        shortName: 'sled'
      }, {
        name: 'Egg',
        unified: '1F95A',
        keywords: ['food', 'chicken', 'breakfast'],
        sheet: [41, 41],
        shortName: 'egg'
      }, {
        name: 'Overheated Face',
        unified: '1F975',
        sheet: [42, 10],
        shortName: 'hot_face'
      }, {
        name: 'Adult',
        unified: '1F9D1',
        keywords: ['gender-neutral', 'person'],
        sheet: [48, 10],
        skinVariations: [{
          unified: '1F9D1-1F3FB',
          sheet: [48, 11]
        }, {
          unified: '1F9D1-1F3FC',
          sheet: [48, 12]
        }, {
          unified: '1F9D1-1F3FD',
          sheet: [48, 13]
        }, {
          unified: '1F9D1-1F3FE',
          sheet: [48, 14]
        }, {
          unified: '1F9D1-1F3FF',
          sheet: [48, 15]
        }],
        shortName: 'adult'
      }, {
        name: 'Yin Yang',
        unified: '262F-FE0F',
        keywords: ['balance'],
        sheet: [53, 14],
        shortName: 'yin_yang'
      }, {
        name: 'Chile Flag',
        unified: '1F1E8-1F1F1',
        sheet: [1, 20],
        shortName: 'flag-cl'
      }, {
        name: 'Cityscape at Dusk',
        unified: '1F306',
        keywords: ['photo', 'evening', 'sky', 'buildings'],
        sheet: [5, 25],
        shortName: 'city_sunset'
      }, {
        name: 'Cooking',
        unified: '1F373',
        keywords: ['food', 'breakfast', 'kitchen', 'egg'],
        sheet: [7, 18],
        shortNames: ['cooking'],
        shortName: 'fried_egg'
      }, {
        name: 'Musical Note',
        unified: '1F3B5',
        keywords: ['score', 'tone', 'sound'],
        sheet: [8, 27],
        shortName: 'musical_note'
      }, {
        name: 'Person with Blond Hair',
        unified: '1F471',
        sheet: [22, 19],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F471-1F3FB',
          sheet: [22, 20],
          hidden: ['facebook']
        }, {
          unified: '1F471-1F3FC',
          sheet: [22, 21],
          hidden: ['facebook']
        }, {
          unified: '1F471-1F3FD',
          sheet: [22, 22],
          hidden: ['facebook']
        }, {
          unified: '1F471-1F3FE',
          sheet: [22, 23],
          hidden: ['facebook']
        }, {
          unified: '1F471-1F3FF',
          sheet: [22, 24],
          hidden: ['facebook']
        }],
        shortName: 'person_with_blond_hair',
        obsoletedBy: '1F471-200D-2642-FE0F'
      }, {
        name: 'Curling Stone',
        unified: '1F94C',
        keywords: ['sports'],
        sheet: [41, 27],
        shortName: 'curling_stone'
      }, {
        name: 'Freezing Face',
        unified: '1F976',
        sheet: [42, 11],
        shortName: 'cold_face'
      }, {
        name: 'Sloth',
        unified: '1F9A5',
        sheet: [42, 53],
        shortName: 'sloth'
      }, {
        name: 'Latin Cross',
        unified: '271D-FE0F',
        keywords: ['christianity'],
        sheet: [55, 14],
        shortName: 'latin_cross'
      }, {
        name: 'Cameroon Flag',
        unified: '1F1E8-1F1F2',
        sheet: [1, 21],
        shortName: 'flag-cm'
      }, {
        name: 'Sunset over Buildings',
        unified: '1F307',
        keywords: ['photo', 'good morning', 'dawn'],
        sheet: [5, 26],
        shortName: 'city_sunrise'
      }, {
        name: 'Direct Hit',
        unified: '1F3AF',
        keywords: ['game', 'play', 'bar', 'target', 'bullseye'],
        sheet: [8, 21],
        shortName: 'dart'
      }, {
        name: 'Multiple Musical Notes',
        unified: '1F3B6',
        keywords: ['music', 'score'],
        sheet: [8, 28],
        shortName: 'notes'
      }, {
        name: 'Man',
        unified: '1F468',
        keywords: ['mustache', 'father', 'dad', 'guy', 'classy', 'sir', 'moustache'],
        sheet: [17, 22],
        skinVariations: [{
          unified: '1F468-1F3FB',
          sheet: [17, 23]
        }, {
          unified: '1F468-1F3FC',
          sheet: [17, 24]
        }, {
          unified: '1F468-1F3FD',
          sheet: [17, 25]
        }, {
          unified: '1F468-1F3FE',
          sheet: [17, 26]
        }, {
          unified: '1F468-1F3FF',
          sheet: [17, 27]
        }],
        shortName: 'man'
      }, {
        name: 'Shallow Pan of Food',
        unified: '1F958',
        keywords: ['food', 'cooking', 'casserole', 'paella'],
        sheet: [41, 39],
        shortName: 'shallow_pan_of_food'
      }, {
        name: 'Face with Uneven Eyes and Wavy Mouth',
        unified: '1F974',
        sheet: [42, 9],
        shortName: 'woozy_face'
      }, {
        name: 'Otter',
        unified: '1F9A6',
        sheet: [42, 54],
        shortName: 'otter'
      }, {
        name: 'Orthodox Cross',
        unified: '2626-FE0F',
        keywords: ['suppedaneum', 'religion'],
        sheet: [53, 11],
        shortName: 'orthodox_cross'
      }, {
        name: 'China Flag',
        unified: '1F1E8-1F1F3',
        keywords: ['china', 'chinese', 'prc', 'flag', 'country', 'nation', 'banner'],
        sheet: [1, 22],
        shortNames: ['flag-cn'],
        shortName: 'cn'
      }, {
        name: 'Bridge at Night',
        unified: '1F309',
        keywords: ['photo', 'sanfrancisco'],
        sheet: [5, 28],
        shortName: 'bridge_at_night'
      }, {
        name: 'Pot of Food',
        unified: '1F372',
        keywords: ['food', 'meat', 'soup'],
        sheet: [7, 17],
        shortName: 'stew'
      }, {
        name: 'Studio Microphone',
        unified: '1F399-FE0F',
        keywords: ['sing', 'recording', 'artist', 'talkshow'],
        sheet: [8, 1],
        shortName: 'studio_microphone'
      }, {
        name: 'Dizzy Face',
        unified: '1F635',
        keywords: ['spent', 'unconscious', 'xox', 'dizzy'],
        sheet: [31, 31],
        shortName: 'dizzy_face'
      }, {
        name: 'Skunk',
        unified: '1F9A8',
        sheet: [42, 56],
        shortName: 'skunk'
      }, {
        name: 'Bearded Person',
        unified: '1F9D4',
        keywords: ['person', 'bewhiskered'],
        sheet: [48, 28],
        skinVariations: [{
          unified: '1F9D4-1F3FB',
          sheet: [48, 29]
        }, {
          unified: '1F9D4-1F3FC',
          sheet: [48, 30]
        }, {
          unified: '1F9D4-1F3FD',
          sheet: [48, 31]
        }, {
          unified: '1F9D4-1F3FE',
          sheet: [48, 32]
        }, {
          unified: '1F9D4-1F3FF',
          sheet: [48, 33]
        }],
        shortName: 'bearded_person'
      }, {
        name: 'Yo-Yo',
        unified: '1FA80',
        sheet: [52, 1],
        shortName: 'yo-yo'
      }, {
        name: 'Star and Crescent',
        unified: '262A-FE0F',
        keywords: ['islam'],
        sheet: [53, 12],
        shortName: 'star_and_crescent'
      }, {
        name: 'Colombia Flag',
        unified: '1F1E8-1F1F4',
        sheet: [1, 23],
        shortName: 'flag-co'
      }, {
        name: 'Level Slider',
        unified: '1F39A-FE0F',
        keywords: ['scale'],
        sheet: [8, 2],
        shortName: 'level_slider'
      }, {
        name: 'Red Haired Man',
        unified: '1F468-200D-1F9B0',
        sheet: [16, 23],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F9B0',
          sheet: [16, 24]
        }, {
          unified: '1F468-1F3FC-200D-1F9B0',
          sheet: [16, 25]
        }, {
          unified: '1F468-1F3FD-200D-1F9B0',
          sheet: [16, 26]
        }, {
          unified: '1F468-1F3FE-200D-1F9B0',
          sheet: [16, 27]
        }, {
          unified: '1F468-1F3FF-200D-1F9B0',
          sheet: [16, 28]
        }],
        shortName: 'red_haired_man'
      }, {
        name: 'Shocked Face with Exploding Head',
        unified: '1F92F',
        keywords: ['face', 'shocked', 'mind', 'blown'],
        sheet: [38, 49],
        shortNames: ['shocked_face_with_exploding_head'],
        shortName: 'exploding_head'
      }, {
        name: 'Bowl with Spoon',
        unified: '1F963',
        keywords: ['food', 'breakfast', 'cereal', 'oatmeal', 'porridge'],
        sheet: [41, 50],
        shortName: 'bowl_with_spoon'
      }, {
        name: 'Kangaroo',
        unified: '1F998',
        keywords: ['animal', 'nature', 'australia', 'joey', 'hop', 'marsupial'],
        sheet: [42, 42],
        shortName: 'kangaroo'
      }, {
        name: 'Kite',
        unified: '1FA81',
        sheet: [52, 2],
        shortName: 'kite'
      }, {
        name: 'Peace Symbol',
        unified: '262E-FE0F',
        keywords: ['hippie'],
        sheet: [53, 13],
        shortName: 'peace_symbol'
      }, {
        name: 'Hot Springs',
        unified: '2668-FE0F',
        keywords: ['bath', 'warm', 'relax'],
        sheet: [53, 37],
        shortName: 'hotsprings'
      }, {
        name: 'Clipperton Island Flag',
        unified: '1F1E8-1F1F5',
        sheet: [1, 24],
        shortName: 'flag-cp'
      }, {
        name: 'Control Knobs',
        unified: '1F39B-FE0F',
        keywords: ['dial'],
        sheet: [8, 3],
        shortName: 'control_knobs'
      }, {
        name: 'Carousel Horse',
        unified: '1F3A0',
        keywords: ['photo', 'carnival'],
        sheet: [8, 6],
        shortName: 'carousel_horse'
      }, {
        name: 'Billiards',
        unified: '1F3B1',
        keywords: ['pool', 'hobby', 'game', 'luck', 'magic'],
        sheet: [8, 23],
        shortName: '8ball'
      }, {
        name: 'Curly Haired Man',
        unified: '1F468-200D-1F9B1',
        sheet: [16, 29],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F9B1',
          sheet: [16, 30]
        }, {
          unified: '1F468-1F3FC-200D-1F9B1',
          sheet: [16, 31]
        }, {
          unified: '1F468-1F3FD-200D-1F9B1',
          sheet: [16, 32]
        }, {
          unified: '1F468-1F3FE-200D-1F9B1',
          sheet: [16, 33]
        }, {
          unified: '1F468-1F3FF-200D-1F9B1',
          sheet: [16, 34]
        }],
        shortName: 'curly_haired_man'
      }, {
        name: 'Menorah with Nine Branches',
        unified: '1F54E',
        sheet: [28, 38],
        shortName: 'menorah_with_nine_branches'
      }, {
        name: 'Face with Cowboy Hat',
        unified: '1F920',
        sheet: [38, 17],
        shortName: 'face_with_cowboy_hat'
      }, {
        name: 'Green Salad',
        unified: '1F957',
        keywords: ['food', 'healthy', 'lettuce'],
        sheet: [41, 38],
        shortName: 'green_salad'
      }, {
        name: 'Badger',
        unified: '1F9A1',
        keywords: ['animal', 'nature', 'honey'],
        sheet: [42, 51],
        shortName: 'badger'
      }, {
        name: 'Costa Rica Flag',
        unified: '1F1E8-1F1F7',
        sheet: [1, 25],
        shortName: 'flag-cr'
      }, {
        name: 'Popcorn',
        unified: '1F37F',
        keywords: ['food', 'movie theater', 'films', 'snack'],
        sheet: [7, 30],
        shortName: 'popcorn'
      }, {
        name: 'Ferris Wheel',
        unified: '1F3A1',
        keywords: ['photo', 'carnival', 'londoneye'],
        sheet: [8, 7],
        shortName: 'ferris_wheel'
      }, {
        name: 'Microphone',
        unified: '1F3A4',
        keywords: ['sound', 'music', 'PA', 'sing', 'talkshow'],
        sheet: [8, 10],
        shortName: 'microphone'
      }, {
        name: 'Paw Prints',
        unified: '1F43E',
        sheet: [12, 34],
        shortNames: ['paw_prints'],
        shortName: 'feet'
      }, {
        name: 'White Haired Man',
        unified: '1F468-200D-1F9B3',
        sheet: [16, 41],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F9B3',
          sheet: [16, 42]
        }, {
          unified: '1F468-1F3FC-200D-1F9B3',
          sheet: [16, 43]
        }, {
          unified: '1F468-1F3FD-200D-1F9B3',
          sheet: [16, 44]
        }, {
          unified: '1F468-1F3FE-200D-1F9B3',
          sheet: [16, 45]
        }, {
          unified: '1F468-1F3FF-200D-1F9B3',
          sheet: [16, 46]
        }],
        shortName: 'white_haired_man'
      }, {
        name: 'Crystal Ball',
        unified: '1F52E',
        keywords: ['disco', 'party', 'magic', 'circus', 'fortune_teller'],
        sheet: [28, 17],
        shortName: 'crystal_ball'
      }, {
        name: 'Six Pointed Star with Middle Dot',
        unified: '1F52F',
        keywords: ['purple-square', 'religion', 'jewish', 'hexagram'],
        sheet: [28, 18],
        shortName: 'six_pointed_star'
      }, {
        name: 'Face with Party Horn and Party Hat',
        unified: '1F973',
        sheet: [42, 8],
        shortName: 'partying_face'
      }, {
        name: 'Cuba Flag',
        unified: '1F1E8-1F1FA',
        sheet: [1, 26],
        shortName: 'flag-cu'
      }, {
        name: 'Roller Coaster',
        unified: '1F3A2',
        keywords: ['carnival', 'playground', 'photo', 'fun'],
        sheet: [8, 8],
        shortName: 'roller_coaster'
      }, {
        name: 'Headphone',
        unified: '1F3A7',
        keywords: ['music', 'score', 'gadgets'],
        sheet: [8, 13],
        shortName: 'headphones'
      }, {
        name: 'Bald Man',
        unified: '1F468-200D-1F9B2',
        sheet: [16, 35],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F9B2',
          sheet: [16, 36]
        }, {
          unified: '1F468-1F3FC-200D-1F9B2',
          sheet: [16, 37]
        }, {
          unified: '1F468-1F3FD-200D-1F9B2',
          sheet: [16, 38]
        }, {
          unified: '1F468-1F3FE-200D-1F9B2',
          sheet: [16, 39]
        }, {
          unified: '1F468-1F3FF-200D-1F9B2',
          sheet: [16, 40]
        }],
        shortName: 'bald_man'
      }, {
        name: 'Smiling Face with Sunglasses',
        unified: '1F60E',
        emoticons: ['8)'],
        keywords: ['face', 'cool', 'smile', 'summer', 'beach', 'sunglass'],
        sheet: [30, 49],
        shortName: 'sunglasses'
      }, {
        name: 'Turkey',
        unified: '1F983',
        keywords: ['animal', 'bird'],
        sheet: [42, 21],
        shortName: 'turkey'
      }, {
        name: 'Butter',
        unified: '1F9C8',
        sheet: [44, 16],
        shortName: 'butter'
      }, {
        name: 'Nazar Amulet',
        unified: '1F9FF',
        keywords: ['bead', 'charm'],
        sheet: [51, 50],
        shortName: 'nazar_amulet'
      }, {
        name: 'Aries',
        unified: '2648',
        keywords: ['sign', 'purple-square', 'zodiac', 'astrology'],
        sheet: [53, 20],
        shortName: 'aries'
      }, {
        name: 'Cape Verde Flag',
        unified: '1F1E8-1F1FB',
        sheet: [1, 27],
        shortName: 'flag-cv'
      }, {
        name: 'Video Game',
        unified: '1F3AE',
        keywords: ['play', 'console', 'PS4', 'controller'],
        sheet: [8, 20],
        shortName: 'video_game'
      }, {
        name: 'Chicken',
        unified: '1F414',
        keywords: ['animal', 'cluck', 'nature', 'bird'],
        sheet: [11, 48],
        shortName: 'chicken'
      }, {
        name: 'Woman',
        unified: '1F469',
        keywords: ['female', 'girls', 'lady'],
        sheet: [20, 9],
        skinVariations: [{
          unified: '1F469-1F3FB',
          sheet: [20, 10]
        }, {
          unified: '1F469-1F3FC',
          sheet: [20, 11]
        }, {
          unified: '1F469-1F3FD',
          sheet: [20, 12]
        }, {
          unified: '1F469-1F3FE',
          sheet: [20, 13]
        }, {
          unified: '1F469-1F3FF',
          sheet: [20, 14]
        }],
        shortName: 'woman'
      }, {
        name: 'Barber Pole',
        unified: '1F488',
        keywords: ['hair', 'salon', 'style'],
        sheet: [25, 18],
        shortName: 'barber'
      }, {
        name: 'Radio',
        unified: '1F4FB',
        keywords: ['communication', 'music', 'podcast', 'program'],
        sheet: [27, 24],
        shortName: 'radio'
      }, {
        name: 'Nerd Face',
        unified: '1F913',
        keywords: ['face', 'nerdy', 'geek', 'dork'],
        sheet: [37, 26],
        shortName: 'nerd_face'
      }, {
        name: 'Salt Shaker',
        unified: '1F9C2',
        keywords: ['condiment', 'shaker'],
        sheet: [44, 10],
        shortName: 'salt'
      }, {
        name: 'Taurus',
        unified: '2649',
        keywords: ['purple-square', 'sign', 'zodiac', 'astrology'],
        sheet: [53, 21],
        shortName: 'taurus'
      }, {
        name: 'Curaçao Flag',
        unified: '1F1E8-1F1FC',
        sheet: [1, 28],
        shortName: 'flag-cw'
      }, {
        name: 'Circus Tent',
        unified: '1F3AA',
        keywords: ['festival', 'carnival', 'party'],
        sheet: [8, 16],
        shortName: 'circus_tent'
      }, {
        name: 'Saxophone',
        unified: '1F3B7',
        keywords: ['music', 'instrument', 'jazz', 'blues'],
        sheet: [8, 29],
        shortName: 'saxophone'
      }, {
        name: 'Rooster',
        unified: '1F413',
        keywords: ['animal', 'nature', 'chicken'],
        sheet: [11, 47],
        shortName: 'rooster'
      }, {
        name: 'Red Haired Woman',
        unified: '1F469-200D-1F9B0',
        sheet: [19, 8],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F9B0',
          sheet: [19, 9]
        }, {
          unified: '1F469-1F3FC-200D-1F9B0',
          sheet: [19, 10]
        }, {
          unified: '1F469-1F3FD-200D-1F9B0',
          sheet: [19, 11]
        }, {
          unified: '1F469-1F3FE-200D-1F9B0',
          sheet: [19, 12]
        }, {
          unified: '1F469-1F3FF-200D-1F9B0',
          sheet: [19, 13]
        }],
        shortName: 'red_haired_woman'
      }, {
        name: 'Joystick',
        unified: '1F579-FE0F',
        keywords: ['game', 'play'],
        sheet: [29, 36],
        shortName: 'joystick'
      }, {
        name: 'Canned Food',
        unified: '1F96B',
        keywords: ['food', 'soup'],
        sheet: [42, 1],
        shortName: 'canned_food'
      }, {
        name: 'Face with Monocle',
        unified: '1F9D0',
        sheet: [45, 16],
        shortName: 'face_with_monocle'
      }, {
        name: 'Gemini',
        unified: '264A',
        keywords: ['sign', 'zodiac', 'purple-square', 'astrology'],
        sheet: [53, 22],
        shortName: 'gemini'
      }, {
        name: 'Christmas Island Flag',
        unified: '1F1E8-1F1FD',
        sheet: [1, 29],
        shortName: 'flag-cx'
      }, {
        name: 'Bento Box',
        unified: '1F371',
        keywords: ['food', 'japanese', 'box'],
        sheet: [7, 16],
        shortName: 'bento'
      }, {
        name: 'Slot Machine',
        unified: '1F3B0',
        keywords: ['bet', 'gamble', 'vegas', 'fruit machine', 'luck', 'casino'],
        sheet: [8, 22],
        shortName: 'slot_machine'
      }, {
        name: 'Guitar',
        unified: '1F3B8',
        keywords: ['music', 'instrument'],
        sheet: [8, 30],
        shortName: 'guitar'
      }, {
        name: 'Hatching Chick',
        unified: '1F423',
        keywords: ['animal', 'chicken', 'egg', 'born', 'baby', 'bird'],
        sheet: [12, 7],
        shortName: 'hatching_chick'
      }, {
        name: 'Confused Face',
        unified: '1F615',
        emoticons: [':\\', ':-\\', ':/', ':-/'],
        keywords: ['face', 'indifference', 'huh', 'weird', 'hmmm', ':/'],
        sheet: [30, 56],
        shortName: 'confused'
      }, {
        name: 'Steam Locomotive',
        unified: '1F682',
        keywords: ['transportation', 'vehicle', 'train'],
        sheet: [34, 1],
        shortName: 'steam_locomotive'
      }, {
        name: 'Red Haired Person',
        unified: '1F9D1-200D-1F9B0',
        sheet: [47, 13],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F9B0',
          sheet: [47, 14],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F9B0',
          sheet: [47, 15],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F9B0',
          sheet: [47, 16],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F9B0',
          sheet: [47, 17],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F9B0',
          sheet: [47, 18],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'red_haired_person'
      }, {
        name: 'Cancer',
        unified: '264B',
        keywords: ['sign', 'zodiac', 'purple-square', 'astrology'],
        sheet: [53, 23],
        shortName: 'cancer'
      }, {
        name: 'Cyprus Flag',
        unified: '1F1E8-1F1FE',
        sheet: [1, 30],
        shortName: 'flag-cy'
      }, {
        name: 'Rice Cracker',
        unified: '1F358',
        keywords: ['food', 'japanese'],
        sheet: [6, 48],
        shortName: 'rice_cracker'
      }, {
        name: 'Game Die',
        unified: '1F3B2',
        keywords: ['dice', 'random', 'tabletop', 'play', 'luck'],
        sheet: [8, 24],
        shortName: 'game_die'
      }, {
        name: 'Musical Keyboard',
        unified: '1F3B9',
        keywords: ['piano', 'instrument', 'compose'],
        sheet: [8, 31],
        shortName: 'musical_keyboard'
      }, {
        name: 'Baby Chick',
        unified: '1F424',
        keywords: ['animal', 'chicken', 'bird'],
        sheet: [12, 8],
        shortName: 'baby_chick'
      }, {
        name: 'Curly Haired Woman',
        unified: '1F469-200D-1F9B1',
        sheet: [19, 14],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F9B1',
          sheet: [19, 15]
        }, {
          unified: '1F469-1F3FC-200D-1F9B1',
          sheet: [19, 16]
        }, {
          unified: '1F469-1F3FD-200D-1F9B1',
          sheet: [19, 17]
        }, {
          unified: '1F469-1F3FE-200D-1F9B1',
          sheet: [19, 18]
        }, {
          unified: '1F469-1F3FF-200D-1F9B1',
          sheet: [19, 19]
        }],
        shortName: 'curly_haired_woman'
      }, {
        name: 'Worried Face',
        unified: '1F61F',
        keywords: ['face', 'concern', 'nervous', ':('],
        sheet: [31, 9],
        shortName: 'worried'
      }, {
        name: 'Railway Car',
        unified: '1F683',
        keywords: ['transportation', 'vehicle'],
        sheet: [34, 2],
        shortName: 'railway_car'
      }, {
        name: 'Leo',
        unified: '264C',
        keywords: ['sign', 'purple-square', 'zodiac', 'astrology'],
        sheet: [53, 24],
        shortName: 'leo'
      }, {
        name: 'Czechia Flag',
        unified: '1F1E8-1F1FF',
        sheet: [1, 31],
        shortName: 'flag-cz'
      }, {
        name: 'Rice Ball',
        unified: '1F359',
        keywords: ['food', 'japanese'],
        sheet: [6, 49],
        shortName: 'rice_ball'
      }, {
        name: 'Trumpet',
        unified: '1F3BA',
        keywords: ['music', 'brass'],
        sheet: [8, 32],
        shortName: 'trumpet'
      }, {
        name: 'Front-Facing Baby Chick',
        unified: '1F425',
        keywords: ['animal', 'chicken', 'baby', 'bird'],
        sheet: [12, 9],
        shortName: 'hatched_chick'
      }, {
        name: 'Slightly Frowning Face',
        unified: '1F641',
        keywords: ['face', 'frowning', 'disappointed', 'sad', 'upset'],
        sheet: [31, 43],
        shortName: 'slightly_frowning_face'
      }, {
        name: 'High-Speed Train',
        unified: '1F684',
        keywords: ['transportation', 'vehicle'],
        sheet: [34, 3],
        shortName: 'bullettrain_side'
      }, {
        name: 'Curly Haired Person',
        unified: '1F9D1-200D-1F9B1',
        sheet: [47, 19],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F9B1',
          sheet: [47, 20],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F9B1',
          sheet: [47, 21],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F9B1',
          sheet: [47, 22],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F9B1',
          sheet: [47, 23],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F9B1',
          sheet: [47, 24],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'curly_haired_person'
      }, {
        name: 'Jigsaw Puzzle Piece',
        unified: '1F9E9',
        keywords: ['interlocking', 'puzzle', 'piece'],
        sheet: [51, 28],
        shortName: 'jigsaw'
      }, {
        name: 'Virgo',
        unified: '264D',
        keywords: ['sign', 'zodiac', 'purple-square', 'astrology'],
        sheet: [53, 25],
        shortName: 'virgo'
      }, {
        name: 'Germany Flag',
        unified: '1F1E9-1F1EA',
        keywords: ['german', 'nation', 'flag', 'country', 'banner'],
        sheet: [1, 32],
        shortNames: ['flag-de'],
        shortName: 'de'
      }, {
        name: 'Cooked Rice',
        unified: '1F35A',
        keywords: ['food', 'china', 'asian'],
        sheet: [6, 50],
        shortName: 'rice'
      }, {
        name: 'Violin',
        unified: '1F3BB',
        keywords: ['music', 'instrument', 'orchestra', 'symphony'],
        sheet: [8, 33],
        shortName: 'violin'
      }, {
        name: 'Bird',
        unified: '1F426',
        keywords: ['animal', 'nature', 'fly', 'tweet', 'spring'],
        sheet: [12, 10],
        shortName: 'bird'
      }, {
        name: 'White Haired Woman',
        unified: '1F469-200D-1F9B3',
        sheet: [19, 26],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F9B3',
          sheet: [19, 27]
        }, {
          unified: '1F469-1F3FC-200D-1F9B3',
          sheet: [19, 28]
        }, {
          unified: '1F469-1F3FD-200D-1F9B3',
          sheet: [19, 29]
        }, {
          unified: '1F469-1F3FE-200D-1F9B3',
          sheet: [19, 30]
        }, {
          unified: '1F469-1F3FF-200D-1F9B3',
          sheet: [19, 31]
        }],
        shortName: 'white_haired_woman'
      }, {
        name: 'High-Speed Train with Bullet Nose',
        unified: '1F685',
        keywords: ['transportation', 'vehicle', 'speed', 'fast', 'public', 'travel'],
        sheet: [34, 4],
        shortName: 'bullettrain_front'
      }, {
        name: 'Teddy Bear',
        unified: '1F9F8',
        keywords: ['plush', 'stuffed'],
        sheet: [51, 43],
        shortName: 'teddy_bear'
      }, {
        name: 'White Frowning Face',
        unified: '2639-FE0F',
        sheet: [53, 16],
        shortName: 'white_frowning_face'
      }, {
        name: 'Libra',
        unified: '264E',
        keywords: ['sign', 'purple-square', 'zodiac', 'astrology'],
        sheet: [53, 26],
        shortName: 'libra'
      }, {
        name: 'Diego Garcia Flag',
        unified: '1F1E9-1F1EC',
        sheet: [1, 33],
        shortName: 'flag-dg'
      }, {
        name: 'Curry and Rice',
        unified: '1F35B',
        keywords: ['food', 'spicy', 'hot', 'indian'],
        sheet: [6, 51],
        shortName: 'curry'
      }, {
        name: 'Penguin',
        unified: '1F427',
        keywords: ['animal', 'nature'],
        sheet: [12, 11],
        shortName: 'penguin'
      }, {
        name: 'Face with Open Mouth',
        unified: '1F62E',
        emoticons: [':o', ':-o', ':O', ':-O'],
        keywords: ['face', 'surprise', 'impressed', 'wow', 'whoa', ':O'],
        sheet: [31, 24],
        shortName: 'open_mouth'
      }, {
        name: 'Train',
        unified: '1F686',
        keywords: ['transportation', 'vehicle'],
        sheet: [34, 5],
        shortName: 'train2'
      }, {
        name: 'White Haired Person',
        unified: '1F9D1-200D-1F9B3',
        sheet: [47, 31],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F9B3',
          sheet: [47, 32],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F9B3',
          sheet: [47, 33],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F9B3',
          sheet: [47, 34],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F9B3',
          sheet: [47, 35],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F9B3',
          sheet: [47, 36],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'white_haired_person'
      }, {
        name: 'Banjo',
        unified: '1FA95',
        sheet: [52, 9],
        shortName: 'banjo'
      }, {
        name: 'Scorpius',
        unified: '264F',
        keywords: ['sign', 'zodiac', 'purple-square', 'astrology', 'scorpio'],
        sheet: [53, 27],
        shortName: 'scorpius'
      }, {
        name: 'Black Spade Suit',
        unified: '2660-FE0F',
        keywords: ['poker', 'cards', 'suits', 'magic'],
        sheet: [53, 33],
        shortName: 'spades'
      }, {
        name: 'Djibouti Flag',
        unified: '1F1E9-1F1EF',
        sheet: [1, 34],
        shortName: 'flag-dj'
      }, {
        name: 'Steaming Bowl',
        unified: '1F35C',
        keywords: ['food', 'japanese', 'noodle', 'chopsticks'],
        sheet: [6, 52],
        shortName: 'ramen'
      }, {
        name: 'Bald Woman',
        unified: '1F469-200D-1F9B2',
        sheet: [19, 20],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F9B2',
          sheet: [19, 21]
        }, {
          unified: '1F469-1F3FC-200D-1F9B2',
          sheet: [19, 22]
        }, {
          unified: '1F469-1F3FD-200D-1F9B2',
          sheet: [19, 23]
        }, {
          unified: '1F469-1F3FE-200D-1F9B2',
          sheet: [19, 24]
        }, {
          unified: '1F469-1F3FF-200D-1F9B2',
          sheet: [19, 25]
        }],
        shortName: 'bald_woman'
      }, {
        name: 'Dove of Peace',
        unified: '1F54A-FE0F',
        sheet: [28, 34],
        shortName: 'dove_of_peace'
      }, {
        name: 'Hushed Face',
        unified: '1F62F',
        keywords: ['face', 'woo', 'shh'],
        sheet: [31, 25],
        shortName: 'hushed'
      }, {
        name: 'Metro',
        unified: '1F687',
        keywords: ['transportation', 'blue-square', 'mrt', 'underground', 'tube'],
        sheet: [34, 6],
        shortName: 'metro'
      }, {
        name: 'Drum with Drumsticks',
        unified: '1F941',
        sheet: [41, 17],
        shortName: 'drum_with_drumsticks'
      }, {
        name: 'Sagittarius',
        unified: '2650',
        keywords: ['sign', 'zodiac', 'purple-square', 'astrology'],
        sheet: [53, 28],
        shortName: 'sagittarius'
      }, {
        name: 'Black Heart Suit',
        unified: '2665-FE0F',
        keywords: ['poker', 'cards', 'magic', 'suits'],
        sheet: [53, 35],
        shortName: 'hearts'
      }, {
        name: 'Denmark Flag',
        unified: '1F1E9-1F1F0',
        sheet: [1, 35],
        shortName: 'flag-dk'
      }, {
        name: 'Spaghetti',
        unified: '1F35D',
        keywords: ['food', 'italian', 'noodle'],
        sheet: [6, 53],
        shortName: 'spaghetti'
      }, {
        name: 'Mobile Phone',
        unified: '1F4F1',
        keywords: ['technology', 'apple', 'gadgets', 'dial'],
        sheet: [27, 14],
        shortName: 'iphone'
      }, {
        name: 'Astonished Face',
        unified: '1F632',
        keywords: ['face', 'xox', 'surprised', 'poisoned'],
        sheet: [31, 28],
        shortName: 'astonished'
      }, {
        name: 'Light Rail',
        unified: '1F688',
        keywords: ['transportation', 'vehicle'],
        sheet: [34, 7],
        shortName: 'light_rail'
      }, {
        name: 'Eagle',
        unified: '1F985',
        keywords: ['animal', 'nature', 'bird'],
        sheet: [42, 23],
        shortName: 'eagle'
      }, {
        name: 'Bald Person',
        unified: '1F9D1-200D-1F9B2',
        sheet: [47, 25],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F9B2',
          sheet: [47, 26],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F9B2',
          sheet: [47, 27],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F9B2',
          sheet: [47, 28],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F9B2',
          sheet: [47, 29],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F9B2',
          sheet: [47, 30],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'bald_person'
      }, {
        name: 'Capricorn',
        unified: '2651',
        keywords: ['sign', 'zodiac', 'purple-square', 'astrology'],
        sheet: [53, 29],
        shortName: 'capricorn'
      }, {
        name: 'Black Diamond Suit',
        unified: '2666-FE0F',
        keywords: ['poker', 'cards', 'magic', 'suits'],
        sheet: [53, 36],
        shortName: 'diamonds'
      }, {
        name: 'Dominica Flag',
        unified: '1F1E9-1F1F2',
        sheet: [1, 36],
        shortName: 'flag-dm'
      }, {
        name: 'Roasted Sweet Potato',
        unified: '1F360',
        keywords: ['food', 'nature'],
        sheet: [6, 56],
        shortName: 'sweet_potato'
      }, {
        name: 'Blond Haired Woman',
        unified: '1F471-200D-2640-FE0F',
        sheet: [22, 7],
        skinVariations: [{
          unified: '1F471-1F3FB-200D-2640-FE0F',
          sheet: [22, 8]
        }, {
          unified: '1F471-1F3FC-200D-2640-FE0F',
          sheet: [22, 9]
        }, {
          unified: '1F471-1F3FD-200D-2640-FE0F',
          sheet: [22, 10]
        }, {
          unified: '1F471-1F3FE-200D-2640-FE0F',
          sheet: [22, 11]
        }, {
          unified: '1F471-1F3FF-200D-2640-FE0F',
          sheet: [22, 12]
        }],
        shortName: 'blond-haired-woman'
      }, {
        name: 'Mobile Phone with Rightwards Arrow at Left',
        unified: '1F4F2',
        keywords: ['iphone', 'incoming'],
        sheet: [27, 15],
        shortName: 'calling'
      }, {
        name: 'Flushed Face',
        unified: '1F633',
        keywords: ['face', 'blush', 'shy', 'flattered'],
        sheet: [31, 29],
        shortName: 'flushed'
      }, {
        name: 'Station',
        unified: '1F689',
        keywords: ['transportation', 'vehicle', 'public'],
        sheet: [34, 8],
        shortName: 'station'
      }, {
        name: 'Duck',
        unified: '1F986',
        keywords: ['animal', 'nature', 'bird', 'mallard'],
        sheet: [42, 24],
        shortName: 'duck'
      }, {
        name: 'Aquarius',
        unified: '2652',
        keywords: ['sign', 'purple-square', 'zodiac', 'astrology'],
        sheet: [53, 30],
        shortName: 'aquarius'
      }, {
        name: 'Black Club Suit',
        unified: '2663-FE0F',
        keywords: ['poker', 'cards', 'magic', 'suits'],
        sheet: [53, 34],
        shortName: 'clubs'
      }, {
        name: 'Dominican Republic Flag',
        unified: '1F1E9-1F1F4',
        sheet: [1, 37],
        shortName: 'flag-do'
      }, {
        name: 'Oden',
        unified: '1F362',
        keywords: ['food', 'japanese'],
        sheet: [7, 1],
        shortName: 'oden'
      }, {
        name: 'Blond Haired Man',
        unified: '1F471-200D-2642-FE0F',
        obsoletes: '1F471',
        sheet: [22, 13],
        skinVariations: [{
          unified: '1F471-1F3FB-200D-2642-FE0F',
          sheet: [22, 14]
        }, {
          unified: '1F471-1F3FC-200D-2642-FE0F',
          sheet: [22, 15]
        }, {
          unified: '1F471-1F3FD-200D-2642-FE0F',
          sheet: [22, 16]
        }, {
          unified: '1F471-1F3FE-200D-2642-FE0F',
          sheet: [22, 17]
        }, {
          unified: '1F471-1F3FF-200D-2642-FE0F',
          sheet: [22, 18]
        }],
        shortName: 'blond-haired-man'
      }, {
        name: 'Tram',
        unified: '1F68A',
        keywords: ['transportation', 'vehicle'],
        sheet: [34, 9],
        shortName: 'tram'
      }, {
        name: 'Face with Pleading Eyes',
        unified: '1F97A',
        sheet: [42, 12],
        shortName: 'pleading_face'
      }, {
        name: 'Swan',
        unified: '1F9A2',
        keywords: ['animal', 'nature', 'bird'],
        sheet: [42, 52],
        shortName: 'swan'
      }, {
        name: 'Black Telephone',
        unified: '260E-FE0F',
        keywords: ['technology', 'communication', 'dial', 'telephone'],
        sheet: [52, 54],
        shortNames: ['telephone'],
        shortName: 'phone'
      }, {
        name: 'Pisces',
        unified: '2653',
        keywords: ['purple-square', 'sign', 'zodiac', 'astrology'],
        sheet: [53, 31],
        shortName: 'pisces'
      }, {
        name: 'Chess Pawn',
        unified: '265F-FE0F',
        keywords: ['expendable'],
        sheet: [53, 32],
        shortName: 'chess_pawn'
      }, {
        name: 'Playing Card Black Joker',
        unified: '1F0CF',
        keywords: ['poker', 'cards', 'game', 'play', 'magic'],
        sheet: [0, 15],
        shortName: 'black_joker'
      }, {
        name: 'Algeria Flag',
        unified: '1F1E9-1F1FF',
        sheet: [1, 38],
        shortName: 'flag-dz'
      }, {
        name: 'Sushi',
        unified: '1F363',
        keywords: ['food', 'fish', 'japanese', 'rice'],
        sheet: [7, 2],
        shortName: 'sushi'
      }, {
        name: 'Telephone Receiver',
        unified: '1F4DE',
        keywords: ['technology', 'communication', 'dial'],
        sheet: [26, 52],
        shortName: 'telephone_receiver'
      }, {
        name: 'Frowning Face with Open Mouth',
        unified: '1F626',
        keywords: ['face', 'aw', 'what'],
        sheet: [31, 16],
        shortName: 'frowning'
      }, {
        name: 'Monorail',
        unified: '1F69D',
        keywords: ['transportation', 'vehicle'],
        sheet: [34, 28],
        shortName: 'monorail'
      }, {
        name: 'Owl',
        unified: '1F989',
        keywords: ['animal', 'nature', 'bird', 'hoot'],
        sheet: [42, 27],
        shortName: 'owl'
      }, {
        name: 'Older Adult',
        unified: '1F9D3',
        keywords: ['human', 'elder', 'senior', 'gender-neutral'],
        sheet: [48, 22],
        skinVariations: [{
          unified: '1F9D3-1F3FB',
          sheet: [48, 23]
        }, {
          unified: '1F9D3-1F3FC',
          sheet: [48, 24]
        }, {
          unified: '1F9D3-1F3FD',
          sheet: [48, 25]
        }, {
          unified: '1F9D3-1F3FE',
          sheet: [48, 26]
        }, {
          unified: '1F9D3-1F3FF',
          sheet: [48, 27]
        }],
        shortName: 'older_adult'
      }, {
        name: 'Ophiuchus',
        unified: '26CE',
        keywords: ['sign', 'purple-square', 'constellation', 'astrology'],
        sheet: [54, 4],
        shortName: 'ophiuchus'
      }, {
        name: 'Mahjong Tile Red Dragon',
        unified: '1F004',
        keywords: ['game', 'play', 'chinese', 'kanji'],
        sheet: [0, 14],
        shortName: 'mahjong'
      }, {
        name: 'Ceuta & Melilla Flag',
        unified: '1F1EA-1F1E6',
        sheet: [1, 39],
        shortName: 'flag-ea'
      }, {
        name: 'Fried Shrimp',
        unified: '1F364',
        keywords: ['food', 'animal', 'appetizer', 'summer'],
        sheet: [7, 3],
        shortName: 'fried_shrimp'
      }, {
        name: 'Older Man',
        unified: '1F474',
        keywords: ['human', 'male', 'men', 'old', 'elder', 'senior'],
        sheet: [22, 49],
        skinVariations: [{
          unified: '1F474-1F3FB',
          sheet: [22, 50]
        }, {
          unified: '1F474-1F3FC',
          sheet: [22, 51]
        }, {
          unified: '1F474-1F3FD',
          sheet: [22, 52]
        }, {
          unified: '1F474-1F3FE',
          sheet: [22, 53]
        }, {
          unified: '1F474-1F3FF',
          sheet: [22, 54]
        }],
        shortName: 'older_man'
      }, {
        name: 'Pager',
        unified: '1F4DF',
        keywords: ['bbcall', 'oldschool', '90s'],
        sheet: [26, 53],
        shortName: 'pager'
      }, {
        name: 'Twisted Rightwards Arrows',
        unified: '1F500',
        keywords: ['blue-square', 'shuffle', 'music', 'random'],
        sheet: [27, 28],
        shortName: 'twisted_rightwards_arrows'
      }, {
        name: 'Anguished Face',
        unified: '1F627',
        emoticons: ['D:'],
        keywords: ['face', 'stunned', 'nervous'],
        sheet: [31, 17],
        shortName: 'anguished'
      }, {
        name: 'Mountain Railway',
        unified: '1F69E',
        keywords: ['transportation', 'vehicle'],
        sheet: [34, 29],
        shortName: 'mountain_railway'
      }, {
        name: 'Flamingo',
        unified: '1F9A9',
        sheet: [43, 0],
        shortName: 'flamingo'
      }, {
        name: 'Ecuador Flag',
        unified: '1F1EA-1F1E8',
        sheet: [1, 40],
        shortName: 'flag-ec'
      }, {
        name: 'Fish Cake with Swirl Design',
        unified: '1F365',
        keywords: ['food', 'japan', 'sea', 'beach', 'narutomaki', 'pink', 'swirl', 'kamaboko', 'surimi', 'ramen'],
        sheet: [7, 4],
        shortName: 'fish_cake'
      }, {
        name: 'Flower Playing Cards',
        unified: '1F3B4',
        keywords: ['game', 'sunset', 'red'],
        sheet: [8, 26],
        shortName: 'flower_playing_cards'
      }, {
        name: 'Older Woman',
        unified: '1F475',
        keywords: ['human', 'female', 'women', 'lady', 'old', 'elder', 'senior'],
        sheet: [22, 55],
        skinVariations: [{
          unified: '1F475-1F3FB',
          sheet: [22, 56]
        }, {
          unified: '1F475-1F3FC',
          sheet: [23, 0]
        }, {
          unified: '1F475-1F3FD',
          sheet: [23, 1]
        }, {
          unified: '1F475-1F3FE',
          sheet: [23, 2]
        }, {
          unified: '1F475-1F3FF',
          sheet: [23, 3]
        }],
        shortName: 'older_woman'
      }, {
        name: 'Fax Machine',
        unified: '1F4E0',
        keywords: ['communication', 'technology'],
        sheet: [26, 54],
        shortName: 'fax'
      }, {
        name: 'Clockwise Rightwards and Leftwards Open Circle Arrows',
        unified: '1F501',
        keywords: ['loop', 'record'],
        sheet: [27, 29],
        shortName: 'repeat'
      }, {
        name: 'Fearful Face',
        unified: '1F628',
        keywords: ['face', 'scared', 'terrified', 'nervous', 'oops', 'huh'],
        sheet: [31, 18],
        shortName: 'fearful'
      }, {
        name: 'Tram Car',
        unified: '1F68B',
        keywords: ['transportation', 'vehicle', 'carriage', 'public', 'travel'],
        sheet: [34, 10],
        shortName: 'train'
      }, {
        name: 'Peacock',
        unified: '1F99A',
        keywords: ['animal', 'nature', 'peahen', 'bird'],
        sheet: [42, 44],
        shortName: 'peacock'
      }, {
        name: 'Estonia Flag',
        unified: '1F1EA-1F1EA',
        sheet: [1, 41],
        shortName: 'flag-ee'
      }, {
        name: 'Performing Arts',
        unified: '1F3AD',
        keywords: ['acting', 'theater', 'drama'],
        sheet: [8, 19],
        shortName: 'performing_arts'
      }, {
        name: 'Clockwise Rightwards and Leftwards Open Circle Arrows with Circled One Overlay',
        unified: '1F502',
        keywords: ['blue-square', 'loop'],
        sheet: [27, 30],
        shortName: 'repeat_one'
      }, {
        name: 'Battery',
        unified: '1F50B',
        keywords: ['power', 'energy', 'sustain'],
        sheet: [27, 39],
        shortName: 'battery'
      }, {
        name: 'Face with Open Mouth and Cold Sweat',
        unified: '1F630',
        keywords: ['face', 'nervous', 'sweat'],
        sheet: [31, 26],
        shortName: 'cold_sweat'
      }, {
        name: 'Person Frowning',
        unified: '1F64D',
        sheet: [33, 26],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F64D-1F3FB',
          sheet: [33, 27],
          hidden: ['facebook']
        }, {
          unified: '1F64D-1F3FC',
          sheet: [33, 28],
          hidden: ['facebook']
        }, {
          unified: '1F64D-1F3FD',
          sheet: [33, 29],
          hidden: ['facebook']
        }, {
          unified: '1F64D-1F3FE',
          sheet: [33, 30],
          hidden: ['facebook']
        }, {
          unified: '1F64D-1F3FF',
          sheet: [33, 31],
          hidden: ['facebook']
        }],
        shortName: 'person_frowning',
        obsoletedBy: '1F64D-200D-2640-FE0F'
      }, {
        name: 'Bus',
        unified: '1F68C',
        keywords: ['car', 'vehicle', 'transportation'],
        sheet: [34, 11],
        shortName: 'bus'
      }, {
        name: 'Moon Cake',
        unified: '1F96E',
        keywords: ['food', 'autumn'],
        sheet: [42, 4],
        shortName: 'moon_cake'
      }, {
        name: 'Parrot',
        unified: '1F99C',
        keywords: ['animal', 'nature', 'bird', 'pirate', 'talk'],
        sheet: [42, 46],
        shortName: 'parrot'
      }, {
        name: 'Egypt Flag',
        unified: '1F1EA-1F1EC',
        sheet: [1, 42],
        shortName: 'flag-eg'
      }, {
        name: 'Dango',
        unified: '1F361',
        keywords: ['food', 'dessert', 'sweet', 'japanese', 'barbecue', 'meat'],
        sheet: [7, 0],
        shortName: 'dango'
      }, {
        name: 'Frog Face',
        unified: '1F438',
        keywords: ['animal', 'nature', 'croak', 'toad'],
        sheet: [12, 28],
        shortName: 'frog'
      }, {
        name: 'Electric Plug',
        unified: '1F50C',
        keywords: ['charger', 'power'],
        sheet: [27, 40],
        shortName: 'electric_plug'
      }, {
        name: 'Frame with Picture',
        unified: '1F5BC-FE0F',
        sheet: [30, 14],
        shortName: 'frame_with_picture'
      }, {
        name: 'Disappointed but Relieved Face',
        unified: '1F625',
        keywords: ['face', 'phew', 'sweat', 'nervous'],
        sheet: [31, 15],
        shortName: 'disappointed_relieved'
      }, {
        name: 'Man Frowning',
        unified: '1F64D-200D-2642-FE0F',
        sheet: [33, 20],
        skinVariations: [{
          unified: '1F64D-1F3FB-200D-2642-FE0F',
          sheet: [33, 21]
        }, {
          unified: '1F64D-1F3FC-200D-2642-FE0F',
          sheet: [33, 22]
        }, {
          unified: '1F64D-1F3FD-200D-2642-FE0F',
          sheet: [33, 23]
        }, {
          unified: '1F64D-1F3FE-200D-2642-FE0F',
          sheet: [33, 24]
        }, {
          unified: '1F64D-1F3FF-200D-2642-FE0F',
          sheet: [33, 25]
        }],
        shortName: 'man-frowning'
      }, {
        name: 'Oncoming Bus',
        unified: '1F68D',
        keywords: ['vehicle', 'transportation'],
        sheet: [34, 12],
        shortName: 'oncoming_bus'
      }, {
        name: 'Black Right-Pointing Triangle',
        unified: '25B6-FE0F',
        keywords: ['blue-square', 'right', 'direction', 'play'],
        sheet: [52, 43],
        shortName: 'arrow_forward'
      }, {
        name: 'Western Sahara Flag',
        unified: '1F1EA-1F1ED',
        sheet: [1, 43],
        shortName: 'flag-eh'
      }, {
        name: 'Artist Palette',
        unified: '1F3A8',
        keywords: ['design', 'paint', 'draw', 'colors'],
        sheet: [8, 14],
        shortName: 'art'
      }, {
        name: 'Crocodile',
        unified: '1F40A',
        keywords: ['animal', 'nature', 'reptile', 'lizard', 'alligator'],
        sheet: [11, 38],
        shortName: 'crocodile'
      }, {
        name: 'Personal Computer',
        unified: '1F4BB',
        keywords: ['technology', 'laptop', 'screen', 'display', 'monitor'],
        sheet: [26, 17],
        shortName: 'computer'
      }, {
        name: 'Crying Face',
        unified: '1F622',
        text: ':\'(',
        emoticons: [':\'('],
        keywords: ['face', 'tears', 'sad', 'depressed', 'upset', ':\'('],
        sheet: [31, 12],
        shortName: 'cry'
      }, {
        name: 'Woman Frowning',
        unified: '1F64D-200D-2640-FE0F',
        obsoletes: '1F64D',
        sheet: [33, 14],
        skinVariations: [{
          unified: '1F64D-1F3FB-200D-2640-FE0F',
          sheet: [33, 15]
        }, {
          unified: '1F64D-1F3FC-200D-2640-FE0F',
          sheet: [33, 16]
        }, {
          unified: '1F64D-1F3FD-200D-2640-FE0F',
          sheet: [33, 17]
        }, {
          unified: '1F64D-1F3FE-200D-2640-FE0F',
          sheet: [33, 18]
        }, {
          unified: '1F64D-1F3FF-200D-2640-FE0F',
          sheet: [33, 19]
        }],
        shortName: 'woman-frowning'
      }, {
        name: 'Trolleybus',
        unified: '1F68E',
        keywords: ['bart', 'transportation', 'vehicle'],
        sheet: [34, 13],
        shortName: 'trolleybus'
      }, {
        name: 'Dumpling',
        unified: '1F95F',
        keywords: ['food', 'empanada', 'pierogi', 'potsticker'],
        sheet: [41, 46],
        shortName: 'dumpling'
      }, {
        name: 'Black Right-Pointing Double Triangle',
        unified: '23E9',
        keywords: ['blue-square', 'play', 'speed', 'continue'],
        sheet: [52, 26],
        shortName: 'fast_forward'
      }, {
        name: 'Eritrea Flag',
        unified: '1F1EA-1F1F7',
        sheet: [1, 44],
        shortName: 'flag-er'
      }, {
        name: 'Turtle',
        unified: '1F422',
        keywords: ['animal', 'slow', 'nature', 'tortoise'],
        sheet: [12, 6],
        shortName: 'turtle'
      }, {
        name: 'Desktop Computer',
        unified: '1F5A5-FE0F',
        keywords: ['technology', 'computing', 'screen'],
        sheet: [30, 10],
        shortName: 'desktop_computer'
      }, {
        name: 'Loudly Crying Face',
        unified: '1F62D',
        text: ':\'(',
        keywords: ['face', 'cry', 'tears', 'sad', 'upset', 'depressed'],
        sheet: [31, 23],
        shortName: 'sob'
      }, {
        name: 'Person with Pouting Face',
        unified: '1F64E',
        sheet: [33, 44],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F64E-1F3FB',
          sheet: [33, 45],
          hidden: ['facebook']
        }, {
          unified: '1F64E-1F3FC',
          sheet: [33, 46],
          hidden: ['facebook']
        }, {
          unified: '1F64E-1F3FD',
          sheet: [33, 47],
          hidden: ['facebook']
        }, {
          unified: '1F64E-1F3FE',
          sheet: [33, 48],
          hidden: ['facebook']
        }, {
          unified: '1F64E-1F3FF',
          sheet: [33, 49],
          hidden: ['facebook']
        }],
        shortName: 'person_with_pouting_face',
        obsoletedBy: '1F64E-200D-2640-FE0F'
      }, {
        name: 'Minibus',
        unified: '1F690',
        keywords: ['vehicle', 'car', 'transportation'],
        sheet: [34, 15],
        shortName: 'minibus'
      }, {
        name: 'Fortune Cookie',
        unified: '1F960',
        keywords: ['food', 'prophecy'],
        sheet: [41, 47],
        shortName: 'fortune_cookie'
      }, {
        name: 'Spool of Thread',
        unified: '1F9F5',
        keywords: ['needle', 'sewing', 'spool', 'string'],
        sheet: [51, 40],
        shortName: 'thread'
      }, {
        name: 'Black Right Pointing Double Triangle with Vertical Bar',
        unified: '23ED-FE0F',
        sheet: [52, 30],
        shortName: 'black_right_pointing_double_triangle_with_vertical_bar'
      }, {
        name: 'Spain Flag',
        unified: '1F1EA-1F1F8',
        keywords: ['spain', 'flag', 'nation', 'country', 'banner'],
        sheet: [1, 45],
        shortNames: ['flag-es'],
        shortName: 'es'
      }, {
        name: 'Printer',
        unified: '1F5A8-FE0F',
        keywords: ['paper', 'ink'],
        sheet: [30, 11],
        shortName: 'printer'
      }, {
        name: 'Face Screaming in Fear',
        unified: '1F631',
        keywords: ['face', 'munch', 'scared', 'omg'],
        sheet: [31, 27],
        shortName: 'scream'
      }, {
        name: 'Man Pouting',
        unified: '1F64E-200D-2642-FE0F',
        sheet: [33, 38],
        skinVariations: [{
          unified: '1F64E-1F3FB-200D-2642-FE0F',
          sheet: [33, 39]
        }, {
          unified: '1F64E-1F3FC-200D-2642-FE0F',
          sheet: [33, 40]
        }, {
          unified: '1F64E-1F3FD-200D-2642-FE0F',
          sheet: [33, 41]
        }, {
          unified: '1F64E-1F3FE-200D-2642-FE0F',
          sheet: [33, 42]
        }, {
          unified: '1F64E-1F3FF-200D-2642-FE0F',
          sheet: [33, 43]
        }],
        shortName: 'man-pouting'
      }, {
        name: 'Ambulance',
        unified: '1F691',
        keywords: ['health', '911', 'hospital'],
        sheet: [34, 16],
        shortName: 'ambulance'
      }, {
        name: 'Takeout Box',
        unified: '1F961',
        keywords: ['food', 'leftovers'],
        sheet: [41, 48],
        shortName: 'takeout_box'
      }, {
        name: 'Lizard',
        unified: '1F98E',
        keywords: ['animal', 'nature', 'reptile'],
        sheet: [42, 32],
        shortName: 'lizard'
      }, {
        name: 'Ball of Yarn',
        unified: '1F9F6',
        keywords: ['ball', 'crochet', 'knit'],
        sheet: [51, 41],
        shortName: 'yarn'
      }, {
        name: 'Black Right Pointing Triangle with Double Vertical Bar',
        unified: '23EF-FE0F',
        sheet: [52, 32],
        shortName: 'black_right_pointing_triangle_with_double_vertical_bar'
      }, {
        name: 'Ethiopia Flag',
        unified: '1F1EA-1F1F9',
        sheet: [1, 46],
        shortName: 'flag-et'
      }, {
        name: 'Snake',
        unified: '1F40D',
        keywords: ['animal', 'evil', 'nature', 'hiss', 'python'],
        sheet: [11, 41],
        shortName: 'snake'
      }, {
        name: 'Confounded Face',
        unified: '1F616',
        keywords: ['face', 'confused', 'sick', 'unwell', 'oops', ':S'],
        sheet: [31, 0],
        shortName: 'confounded'
      }, {
        name: 'Woman Pouting',
        unified: '1F64E-200D-2640-FE0F',
        obsoletes: '1F64E',
        sheet: [33, 32],
        skinVariations: [{
          unified: '1F64E-1F3FB-200D-2640-FE0F',
          sheet: [33, 33]
        }, {
          unified: '1F64E-1F3FC-200D-2640-FE0F',
          sheet: [33, 34]
        }, {
          unified: '1F64E-1F3FD-200D-2640-FE0F',
          sheet: [33, 35]
        }, {
          unified: '1F64E-1F3FE-200D-2640-FE0F',
          sheet: [33, 36]
        }, {
          unified: '1F64E-1F3FF-200D-2640-FE0F',
          sheet: [33, 37]
        }],
        shortName: 'woman-pouting'
      }, {
        name: 'Fire Engine',
        unified: '1F692',
        keywords: ['transportation', 'cars', 'vehicle'],
        sheet: [34, 17],
        shortName: 'fire_engine'
      }, {
        name: 'Crab',
        unified: '1F980',
        keywords: ['animal', 'crustacean'],
        sheet: [42, 18],
        shortName: 'crab'
      }, {
        name: 'Keyboard',
        unified: '2328-FE0F',
        keywords: ['technology', 'computer', 'type', 'input', 'text'],
        sheet: [52, 24],
        shortName: 'keyboard'
      }, {
        name: 'Black Left-Pointing Triangle',
        unified: '25C0-FE0F',
        keywords: ['blue-square', 'left', 'direction'],
        sheet: [52, 44],
        shortName: 'arrow_backward'
      }, {
        name: 'European Union Flag',
        unified: '1F1EA-1F1FA',
        sheet: [1, 47],
        shortName: 'flag-eu'
      }, {
        name: 'Dragon Face',
        unified: '1F432',
        keywords: ['animal', 'myth', 'nature', 'chinese', 'green'],
        sheet: [12, 22],
        shortName: 'dragon_face'
      }, {
        name: 'Three Button Mouse',
        unified: '1F5B1-FE0F',
        sheet: [30, 12],
        shortName: 'three_button_mouse'
      }, {
        name: 'Persevering Face',
        unified: '1F623',
        keywords: ['face', 'sick', 'no', 'upset', 'oops'],
        sheet: [31, 13],
        shortName: 'persevere'
      }, {
        name: 'Face with No Good Gesture',
        unified: '1F645',
        sheet: [32, 2],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F645-1F3FB',
          sheet: [32, 3],
          hidden: ['facebook']
        }, {
          unified: '1F645-1F3FC',
          sheet: [32, 4],
          hidden: ['facebook']
        }, {
          unified: '1F645-1F3FD',
          sheet: [32, 5],
          hidden: ['facebook']
        }, {
          unified: '1F645-1F3FE',
          sheet: [32, 6],
          hidden: ['facebook']
        }, {
          unified: '1F645-1F3FF',
          sheet: [32, 7],
          hidden: ['facebook']
        }],
        shortName: 'no_good',
        obsoletedBy: '1F645-200D-2640-FE0F'
      }, {
        name: 'Police Car',
        unified: '1F693',
        keywords: ['vehicle', 'cars', 'transportation', 'law', 'legal', 'enforcement'],
        sheet: [34, 18],
        shortName: 'police_car'
      }, {
        name: 'Lobster',
        unified: '1F99E',
        keywords: ['animal', 'nature', 'bisque', 'claws', 'seafood'],
        sheet: [42, 48],
        shortName: 'lobster'
      }, {
        name: 'Black Left-Pointing Double Triangle',
        unified: '23EA',
        keywords: ['play', 'blue-square'],
        sheet: [52, 27],
        shortName: 'rewind'
      }, {
        name: 'Finland Flag',
        unified: '1F1EB-1F1EE',
        sheet: [1, 48],
        shortName: 'flag-fi'
      }, {
        name: 'Dragon',
        unified: '1F409',
        keywords: ['animal', 'myth', 'nature', 'chinese', 'green'],
        sheet: [11, 37],
        shortName: 'dragon'
      }, {
        name: 'Trackball',
        unified: '1F5B2-FE0F',
        keywords: ['technology', 'trackpad'],
        sheet: [30, 13],
        shortName: 'trackball'
      }, {
        name: 'Disappointed Face',
        unified: '1F61E',
        text: ':(',
        emoticons: ['):', ':(', ':-('],
        keywords: ['face', 'sad', 'upset', 'depressed', ':('],
        sheet: [31, 8],
        shortName: 'disappointed'
      }, {
        name: 'Man Gesturing No',
        unified: '1F645-200D-2642-FE0F',
        sheet: [31, 53],
        skinVariations: [{
          unified: '1F645-1F3FB-200D-2642-FE0F',
          sheet: [31, 54]
        }, {
          unified: '1F645-1F3FC-200D-2642-FE0F',
          sheet: [31, 55]
        }, {
          unified: '1F645-1F3FD-200D-2642-FE0F',
          sheet: [31, 56]
        }, {
          unified: '1F645-1F3FE-200D-2642-FE0F',
          sheet: [32, 0]
        }, {
          unified: '1F645-1F3FF-200D-2642-FE0F',
          sheet: [32, 1]
        }],
        shortName: 'man-gesturing-no'
      }, {
        name: 'Oncoming Police Car',
        unified: '1F694',
        keywords: ['vehicle', 'law', 'legal', 'enforcement', '911'],
        sheet: [34, 19],
        shortName: 'oncoming_police_car'
      }, {
        name: 'Shrimp',
        unified: '1F990',
        keywords: ['animal', 'ocean', 'nature', 'seafood'],
        sheet: [42, 34],
        shortName: 'shrimp'
      }, {
        name: 'Black Left Pointing Double Triangle with Vertical Bar',
        unified: '23EE-FE0F',
        sheet: [52, 31],
        shortName: 'black_left_pointing_double_triangle_with_vertical_bar'
      }, {
        name: 'Fiji Flag',
        unified: '1F1EB-1F1EF',
        sheet: [1, 49],
        shortName: 'flag-fj'
      }, {
        name: 'Minidisc',
        unified: '1F4BD',
        keywords: ['technology', 'record', 'data', 'disk', '90s'],
        sheet: [26, 19],
        shortName: 'minidisc'
      }, {
        name: 'Up-Pointing Small Red Triangle',
        unified: '1F53C',
        keywords: ['blue-square', 'triangle', 'direction', 'point', 'forward', 'top'],
        sheet: [28, 31],
        shortName: 'arrow_up_small'
      }, {
        name: 'Face with Cold Sweat',
        unified: '1F613',
        keywords: ['face', 'hot', 'sad', 'tired', 'exercise'],
        sheet: [30, 54],
        shortName: 'sweat'
      }, {
        name: 'Woman Gesturing No',
        unified: '1F645-200D-2640-FE0F',
        obsoletes: '1F645',
        sheet: [31, 47],
        skinVariations: [{
          unified: '1F645-1F3FB-200D-2640-FE0F',
          sheet: [31, 48]
        }, {
          unified: '1F645-1F3FC-200D-2640-FE0F',
          sheet: [31, 49]
        }, {
          unified: '1F645-1F3FD-200D-2640-FE0F',
          sheet: [31, 50]
        }, {
          unified: '1F645-1F3FE-200D-2640-FE0F',
          sheet: [31, 51]
        }, {
          unified: '1F645-1F3FF-200D-2640-FE0F',
          sheet: [31, 52]
        }],
        shortName: 'woman-gesturing-no'
      }, {
        name: 'Taxi',
        unified: '1F695',
        keywords: ['uber', 'vehicle', 'cars', 'transportation'],
        sheet: [34, 20],
        shortName: 'taxi'
      }, {
        name: 'Squid',
        unified: '1F991',
        keywords: ['animal', 'nature', 'ocean', 'sea'],
        sheet: [42, 35],
        shortName: 'squid'
      }, {
        name: 'Sauropod',
        unified: '1F995',
        keywords: ['animal', 'nature', 'dinosaur', 'brachiosaurus', 'brontosaurus', 'diplodocus', 'extinct'],
        sheet: [42, 39],
        shortName: 'sauropod'
      }, {
        name: 'Falkland Islands Flag',
        unified: '1F1EB-1F1F0',
        sheet: [1, 50],
        shortName: 'flag-fk'
      }, {
        name: 'Floppy Disk',
        unified: '1F4BE',
        keywords: ['oldschool', 'technology', 'save', '90s', '80s'],
        sheet: [26, 20],
        shortName: 'floppy_disk'
      }, {
        name: 'Weary Face',
        unified: '1F629',
        keywords: ['face', 'tired', 'sleepy', 'sad', 'frustrated', 'upset'],
        sheet: [31, 19],
        shortName: 'weary'
      }, {
        name: 'Face with Ok Gesture',
        unified: '1F646',
        keywords: ['women', 'girl', 'female', 'pink', 'human', 'woman'],
        sheet: [32, 20],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F646-1F3FB',
          sheet: [32, 21],
          hidden: ['facebook']
        }, {
          unified: '1F646-1F3FC',
          sheet: [32, 22],
          hidden: ['facebook']
        }, {
          unified: '1F646-1F3FD',
          sheet: [32, 23],
          hidden: ['facebook']
        }, {
          unified: '1F646-1F3FE',
          sheet: [32, 24],
          hidden: ['facebook']
        }, {
          unified: '1F646-1F3FF',
          sheet: [32, 25],
          hidden: ['facebook']
        }],
        shortName: 'ok_woman',
        obsoletedBy: '1F646-200D-2640-FE0F'
      }, {
        name: 'Oncoming Taxi',
        unified: '1F696',
        keywords: ['vehicle', 'cars', 'uber'],
        sheet: [34, 21],
        shortName: 'oncoming_taxi'
      }, {
        name: 'T-Rex',
        unified: '1F996',
        keywords: ['animal', 'nature', 'dinosaur', 'tyrannosaurus', 'extinct'],
        sheet: [42, 40],
        shortName: 't-rex'
      }, {
        name: 'Oyster',
        unified: '1F9AA',
        sheet: [43, 1],
        shortName: 'oyster'
      }, {
        name: 'Black Up-Pointing Double Triangle',
        unified: '23EB',
        keywords: ['blue-square', 'direction', 'top'],
        sheet: [52, 28],
        shortName: 'arrow_double_up'
      }, {
        name: 'Micronesia Flag',
        unified: '1F1EB-1F1F2',
        sheet: [1, 51],
        shortName: 'flag-fm'
      }, {
        name: 'Soft Ice Cream',
        unified: '1F366',
        keywords: ['food', 'hot', 'dessert', 'summer'],
        sheet: [7, 5],
        shortName: 'icecream'
      }, {
        name: 'Spouting Whale',
        unified: '1F433',
        keywords: ['animal', 'nature', 'sea', 'ocean'],
        sheet: [12, 23],
        shortName: 'whale'
      }, {
        name: 'Optical Disc',
        unified: '1F4BF',
        keywords: ['technology', 'dvd', 'disk', 'disc', '90s'],
        sheet: [26, 21],
        shortName: 'cd'
      }, {
        name: 'Down-Pointing Small Red Triangle',
        unified: '1F53D',
        keywords: ['blue-square', 'direction', 'bottom'],
        sheet: [28, 32],
        shortName: 'arrow_down_small'
      }, {
        name: 'Tired Face',
        unified: '1F62B',
        keywords: ['sick', 'whine', 'upset', 'frustrated'],
        sheet: [31, 21],
        shortName: 'tired_face'
      }, {
        name: 'Man Gesturing Ok',
        unified: '1F646-200D-2642-FE0F',
        sheet: [32, 14],
        skinVariations: [{
          unified: '1F646-1F3FB-200D-2642-FE0F',
          sheet: [32, 15]
        }, {
          unified: '1F646-1F3FC-200D-2642-FE0F',
          sheet: [32, 16]
        }, {
          unified: '1F646-1F3FD-200D-2642-FE0F',
          sheet: [32, 17]
        }, {
          unified: '1F646-1F3FE-200D-2642-FE0F',
          sheet: [32, 18]
        }, {
          unified: '1F646-1F3FF-200D-2642-FE0F',
          sheet: [32, 19]
        }],
        shortName: 'man-gesturing-ok'
      }, {
        name: 'Automobile',
        unified: '1F697',
        sheet: [34, 22],
        shortNames: ['red_car'],
        shortName: 'car'
      }, {
        name: 'Faroe Islands Flag',
        unified: '1F1EB-1F1F4',
        sheet: [1, 52],
        shortName: 'flag-fo'
      }, {
        name: 'Shaved Ice',
        unified: '1F367',
        keywords: ['hot', 'dessert', 'summer'],
        sheet: [7, 6],
        shortName: 'shaved_ice'
      }, {
        name: 'Whale',
        unified: '1F40B',
        keywords: ['animal', 'nature', 'sea', 'ocean'],
        sheet: [11, 39],
        shortName: 'whale2'
      }, {
        name: 'Dvd',
        unified: '1F4C0',
        keywords: ['cd', 'disk', 'disc'],
        sheet: [26, 22],
        shortName: 'dvd'
      }, {
        name: 'Woman Gesturing Ok',
        unified: '1F646-200D-2640-FE0F',
        obsoletes: '1F646',
        sheet: [32, 8],
        skinVariations: [{
          unified: '1F646-1F3FB-200D-2640-FE0F',
          sheet: [32, 9]
        }, {
          unified: '1F646-1F3FC-200D-2640-FE0F',
          sheet: [32, 10]
        }, {
          unified: '1F646-1F3FD-200D-2640-FE0F',
          sheet: [32, 11]
        }, {
          unified: '1F646-1F3FE-200D-2640-FE0F',
          sheet: [32, 12]
        }, {
          unified: '1F646-1F3FF-200D-2640-FE0F',
          sheet: [32, 13]
        }],
        shortName: 'woman-gesturing-ok'
      }, {
        name: 'Oncoming Automobile',
        unified: '1F698',
        keywords: ['car', 'vehicle', 'transportation'],
        sheet: [34, 23],
        shortName: 'oncoming_automobile'
      }, {
        name: 'Yawning Face',
        unified: '1F971',
        sheet: [42, 7],
        shortName: 'yawning_face'
      }, {
        name: 'Black Down-Pointing Double Triangle',
        unified: '23EC',
        keywords: ['blue-square', 'direction', 'bottom'],
        sheet: [52, 29],
        shortName: 'arrow_double_down'
      }, {
        name: 'France Flag',
        unified: '1F1EB-1F1F7',
        keywords: ['banner', 'flag', 'nation', 'france', 'french', 'country'],
        sheet: [1, 53],
        shortNames: ['flag-fr'],
        shortName: 'fr'
      }, {
        name: 'Ice Cream',
        unified: '1F368',
        keywords: ['food', 'hot', 'dessert'],
        sheet: [7, 7],
        shortName: 'ice_cream'
      }, {
        name: 'Dolphin',
        unified: '1F42C',
        keywords: ['animal', 'nature', 'fish', 'sea', 'ocean', 'flipper', 'fins', 'beach'],
        sheet: [12, 16],
        shortNames: ['flipper'],
        shortName: 'dolphin'
      }, {
        name: 'Information Desk Person',
        unified: '1F481',
        sheet: [24, 2],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F481-1F3FB',
          sheet: [24, 3],
          hidden: ['facebook']
        }, {
          unified: '1F481-1F3FC',
          sheet: [24, 4],
          hidden: ['facebook']
        }, {
          unified: '1F481-1F3FD',
          sheet: [24, 5],
          hidden: ['facebook']
        }, {
          unified: '1F481-1F3FE',
          sheet: [24, 6],
          hidden: ['facebook']
        }, {
          unified: '1F481-1F3FF',
          sheet: [24, 7],
          hidden: ['facebook']
        }],
        shortName: 'information_desk_person',
        obsoletedBy: '1F481-200D-2640-FE0F'
      }, {
        name: 'Face with Look of Triumph',
        unified: '1F624',
        keywords: ['face', 'gas', 'phew', 'proud', 'pride'],
        sheet: [31, 14],
        shortName: 'triumph'
      }, {
        name: 'Recreational Vehicle',
        unified: '1F699',
        keywords: ['transportation', 'vehicle'],
        sheet: [34, 24],
        shortName: 'blue_car'
      }, {
        name: 'Abacus',
        unified: '1F9EE',
        keywords: ['calculation'],
        sheet: [51, 33],
        shortName: 'abacus'
      }, {
        name: 'Double Vertical Bar',
        unified: '23F8-FE0F',
        sheet: [52, 37],
        shortName: 'double_vertical_bar'
      }, {
        name: 'Gabon Flag',
        unified: '1F1EC-1F1E6',
        sheet: [1, 54],
        shortName: 'flag-ga'
      }, {
        name: 'Doughnut',
        unified: '1F369',
        keywords: ['food', 'dessert', 'snack', 'sweet', 'donut'],
        sheet: [7, 8],
        shortName: 'doughnut'
      }, {
        name: 'Movie Camera',
        unified: '1F3A5',
        keywords: ['film', 'record'],
        sheet: [8, 11],
        shortName: 'movie_camera'
      }, {
        name: 'Fish',
        unified: '1F41F',
        keywords: ['animal', 'food', 'nature'],
        sheet: [12, 3],
        shortName: 'fish'
      }, {
        name: 'Man Tipping Hand',
        unified: '1F481-200D-2642-FE0F',
        sheet: [23, 53],
        skinVariations: [{
          unified: '1F481-1F3FB-200D-2642-FE0F',
          sheet: [23, 54]
        }, {
          unified: '1F481-1F3FC-200D-2642-FE0F',
          sheet: [23, 55]
        }, {
          unified: '1F481-1F3FD-200D-2642-FE0F',
          sheet: [23, 56]
        }, {
          unified: '1F481-1F3FE-200D-2642-FE0F',
          sheet: [24, 0]
        }, {
          unified: '1F481-1F3FF-200D-2642-FE0F',
          sheet: [24, 1]
        }],
        shortName: 'man-tipping-hand'
      }, {
        name: 'Pouting Face',
        unified: '1F621',
        keywords: ['angry', 'mad', 'hate', 'despise'],
        sheet: [31, 11],
        shortName: 'rage'
      }, {
        name: 'Delivery Truck',
        unified: '1F69A',
        keywords: ['cars', 'transportation'],
        sheet: [34, 25],
        shortName: 'truck'
      }, {
        name: 'Black Square for Stop',
        unified: '23F9-FE0F',
        sheet: [52, 38],
        shortName: 'black_square_for_stop'
      }, {
        name: 'United Kingdom Flag',
        unified: '1F1EC-1F1E7',
        sheet: [1, 55],
        shortNames: ['uk', 'flag-gb'],
        shortName: 'gb'
      }, {
        name: 'Cookie',
        unified: '1F36A',
        keywords: ['food', 'snack', 'oreo', 'chocolate', 'sweet', 'dessert'],
        sheet: [7, 9],
        shortName: 'cookie'
      }, {
        name: 'Film Frames',
        unified: '1F39E-FE0F',
        sheet: [8, 4],
        shortName: 'film_frames'
      }, {
        name: 'Tropical Fish',
        unified: '1F420',
        keywords: ['animal', 'swim', 'ocean', 'beach', 'nemo'],
        sheet: [12, 4],
        shortName: 'tropical_fish'
      }, {
        name: 'Woman Tipping Hand',
        unified: '1F481-200D-2640-FE0F',
        obsoletes: '1F481',
        sheet: [23, 47],
        skinVariations: [{
          unified: '1F481-1F3FB-200D-2640-FE0F',
          sheet: [23, 48]
        }, {
          unified: '1F481-1F3FC-200D-2640-FE0F',
          sheet: [23, 49]
        }, {
          unified: '1F481-1F3FD-200D-2640-FE0F',
          sheet: [23, 50]
        }, {
          unified: '1F481-1F3FE-200D-2640-FE0F',
          sheet: [23, 51]
        }, {
          unified: '1F481-1F3FF-200D-2640-FE0F',
          sheet: [23, 52]
        }],
        shortName: 'woman-tipping-hand'
      }, {
        name: 'Angry Face',
        unified: '1F620',
        emoticons: ['>:(', '>:-('],
        keywords: ['mad', 'face', 'annoyed', 'frustrated'],
        sheet: [31, 10],
        shortName: 'angry'
      }, {
        name: 'Articulated Lorry',
        unified: '1F69B',
        keywords: ['vehicle', 'cars', 'transportation', 'express'],
        sheet: [34, 26],
        shortName: 'articulated_lorry'
      }, {
        name: 'Black Circle for Record',
        unified: '23FA-FE0F',
        sheet: [52, 39],
        shortName: 'black_circle_for_record'
      }, {
        name: 'Grenada Flag',
        unified: '1F1EC-1F1E9',
        sheet: [1, 56],
        shortName: 'flag-gd'
      }, {
        name: 'Birthday Cake',
        unified: '1F382',
        keywords: ['food', 'dessert', 'cake'],
        sheet: [7, 33],
        shortName: 'birthday'
      }, {
        name: 'Blowfish',
        unified: '1F421',
        keywords: ['animal', 'nature', 'food', 'sea', 'ocean'],
        sheet: [12, 5],
        shortName: 'blowfish'
      }, {
        name: 'Film Projector',
        unified: '1F4FD-FE0F',
        keywords: ['video', 'tape', 'record', 'movie'],
        sheet: [27, 26],
        shortName: 'film_projector'
      }, {
        name: 'Happy Person Raising One Hand',
        unified: '1F64B',
        sheet: [33, 2],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F64B-1F3FB',
          sheet: [33, 3],
          hidden: ['facebook']
        }, {
          unified: '1F64B-1F3FC',
          sheet: [33, 4],
          hidden: ['facebook']
        }, {
          unified: '1F64B-1F3FD',
          sheet: [33, 5],
          hidden: ['facebook']
        }, {
          unified: '1F64B-1F3FE',
          sheet: [33, 6],
          hidden: ['facebook']
        }, {
          unified: '1F64B-1F3FF',
          sheet: [33, 7],
          hidden: ['facebook']
        }],
        shortName: 'raising_hand',
        obsoletedBy: '1F64B-200D-2640-FE0F'
      }, {
        name: 'Tractor',
        unified: '1F69C',
        keywords: ['vehicle', 'car', 'farming', 'agriculture'],
        sheet: [34, 27],
        shortName: 'tractor'
      }, {
        name: 'Serious Face with Symbols Covering Mouth',
        unified: '1F92C',
        sheet: [38, 46],
        shortNames: ['serious_face_with_symbols_covering_mouth'],
        shortName: 'face_with_symbols_on_mouth'
      }, {
        name: 'Eject',
        unified: '23CF-FE0F',
        sheet: [52, 25],
        shortName: 'eject'
      }, {
        name: 'Georgia Flag',
        unified: '1F1EC-1F1EA',
        sheet: [2, 0],
        shortName: 'flag-ge'
      }, {
        name: 'Shortcake',
        unified: '1F370',
        keywords: ['food', 'dessert'],
        sheet: [7, 15],
        shortName: 'cake'
      }, {
        name: 'Cinema',
        unified: '1F3A6',
        keywords: ['blue-square', 'record', 'film', 'movie', 'curtain', 'stage', 'theater'],
        sheet: [8, 12],
        shortName: 'cinema'
      }, {
        name: 'Clapper Board',
        unified: '1F3AC',
        keywords: ['movie', 'film', 'record'],
        sheet: [8, 18],
        shortName: 'clapper'
      }, {
        name: 'Racing Car',
        unified: '1F3CE-FE0F',
        keywords: ['sports', 'race', 'fast', 'formula', 'f1'],
        sheet: [10, 33],
        shortName: 'racing_car'
      }, {
        name: 'Smiling Face with Horns',
        unified: '1F608',
        keywords: ['devil', 'horns'],
        sheet: [30, 43],
        shortName: 'smiling_imp'
      }, {
        name: 'Man Raising Hand',
        unified: '1F64B-200D-2642-FE0F',
        sheet: [32, 53],
        skinVariations: [{
          unified: '1F64B-1F3FB-200D-2642-FE0F',
          sheet: [32, 54]
        }, {
          unified: '1F64B-1F3FC-200D-2642-FE0F',
          sheet: [32, 55]
        }, {
          unified: '1F64B-1F3FD-200D-2642-FE0F',
          sheet: [32, 56]
        }, {
          unified: '1F64B-1F3FE-200D-2642-FE0F',
          sheet: [33, 0]
        }, {
          unified: '1F64B-1F3FF-200D-2642-FE0F',
          sheet: [33, 1]
        }],
        shortName: 'man-raising-hand'
      }, {
        name: 'Shark',
        unified: '1F988',
        keywords: ['animal', 'nature', 'fish', 'sea', 'ocean', 'jaws', 'fins', 'beach'],
        sheet: [42, 26],
        shortName: 'shark'
      }, {
        name: 'French Guiana Flag',
        unified: '1F1EC-1F1EB',
        sheet: [2, 1],
        shortName: 'flag-gf'
      }, {
        name: 'Racing Motorcycle',
        unified: '1F3CD-FE0F',
        sheet: [10, 32],
        shortName: 'racing_motorcycle'
      }, {
        name: 'Octopus',
        unified: '1F419',
        keywords: ['animal', 'creature', 'ocean', 'sea', 'nature', 'beach'],
        sheet: [11, 54],
        shortName: 'octopus'
      }, {
        name: 'Imp',
        unified: '1F47F',
        keywords: ['devil', 'angry', 'horns'],
        sheet: [23, 45],
        shortName: 'imp'
      }, {
        name: 'Television',
        unified: '1F4FA',
        keywords: ['technology', 'program', 'oldschool', 'show', 'television'],
        sheet: [27, 23],
        shortName: 'tv'
      }, {
        name: 'Low Brightness Symbol',
        unified: '1F505',
        keywords: ['sun', 'afternoon', 'warm', 'summer'],
        sheet: [27, 33],
        shortName: 'low_brightness'
      }, {
        name: 'Woman Raising Hand',
        unified: '1F64B-200D-2640-FE0F',
        obsoletes: '1F64B',
        sheet: [32, 47],
        skinVariations: [{
          unified: '1F64B-1F3FB-200D-2640-FE0F',
          sheet: [32, 48]
        }, {
          unified: '1F64B-1F3FC-200D-2640-FE0F',
          sheet: [32, 49]
        }, {
          unified: '1F64B-1F3FD-200D-2640-FE0F',
          sheet: [32, 50]
        }, {
          unified: '1F64B-1F3FE-200D-2640-FE0F',
          sheet: [32, 51]
        }, {
          unified: '1F64B-1F3FF-200D-2640-FE0F',
          sheet: [32, 52]
        }],
        shortName: 'woman-raising-hand'
      }, {
        name: 'Cupcake',
        unified: '1F9C1',
        keywords: ['food', 'dessert', 'bakery', 'sweet'],
        sheet: [44, 9],
        shortName: 'cupcake'
      }, {
        name: 'Guernsey Flag',
        unified: '1F1EC-1F1EC',
        sheet: [2, 2],
        shortName: 'flag-gg'
      }, {
        name: 'Spiral Shell',
        unified: '1F41A',
        keywords: ['nature', 'sea', 'beach'],
        sheet: [11, 55],
        shortName: 'shell'
      }, {
        name: 'Skull',
        unified: '1F480',
        keywords: ['dead', 'skeleton', 'creepy', 'death'],
        sheet: [23, 46],
        shortName: 'skull'
      }, {
        name: 'Camera',
        unified: '1F4F7',
        keywords: ['gadgets', 'photography'],
        sheet: [27, 20],
        shortName: 'camera'
      }, {
        name: 'High Brightness Symbol',
        unified: '1F506',
        keywords: ['sun', 'light'],
        sheet: [27, 34],
        shortName: 'high_brightness'
      }, {
        name: 'Motor Scooter',
        unified: '1F6F5',
        keywords: ['vehicle', 'vespa', 'sasha'],
        sheet: [36, 54],
        shortName: 'motor_scooter'
      }, {
        name: 'Pie',
        unified: '1F967',
        keywords: ['food', 'dessert', 'pastry'],
        sheet: [41, 54],
        shortName: 'pie'
      }, {
        name: 'Deaf Person',
        unified: '1F9CF',
        sheet: [45, 10],
        skinVariations: [{
          unified: '1F9CF-1F3FB',
          sheet: [45, 11]
        }, {
          unified: '1F9CF-1F3FC',
          sheet: [45, 12]
        }, {
          unified: '1F9CF-1F3FD',
          sheet: [45, 13]
        }, {
          unified: '1F9CF-1F3FE',
          sheet: [45, 14]
        }, {
          unified: '1F9CF-1F3FF',
          sheet: [45, 15]
        }],
        shortName: 'deaf_person'
      }, {
        name: 'Ghana Flag',
        unified: '1F1EC-1F1ED',
        sheet: [2, 3],
        shortName: 'flag-gh'
      }, {
        name: 'Chocolate Bar',
        unified: '1F36B',
        keywords: ['food', 'snack', 'dessert', 'sweet'],
        sheet: [7, 10],
        shortName: 'chocolate_bar'
      }, {
        name: 'Snail',
        unified: '1F40C',
        keywords: ['slow', 'animal', 'shell'],
        sheet: [11, 40],
        shortName: 'snail'
      }, {
        name: 'Antenna with Bars',
        unified: '1F4F6',
        keywords: ['blue-square', 'reception', 'phone', 'internet', 'connection', 'wifi', 'bluetooth', 'bars'],
        sheet: [27, 19],
        shortName: 'signal_strength'
      }, {
        name: 'Camera with Flash',
        unified: '1F4F8',
        sheet: [27, 21],
        shortName: 'camera_with_flash'
      }, {
        name: 'Manual Wheelchair',
        unified: '1F9BD',
        sheet: [44, 5],
        shortName: 'manual_wheelchair'
      }, {
        name: 'Deaf Man',
        unified: '1F9CF-200D-2642-FE0F',
        sheet: [45, 4],
        skinVariations: [{
          unified: '1F9CF-1F3FB-200D-2642-FE0F',
          sheet: [45, 5]
        }, {
          unified: '1F9CF-1F3FC-200D-2642-FE0F',
          sheet: [45, 6]
        }, {
          unified: '1F9CF-1F3FD-200D-2642-FE0F',
          sheet: [45, 7]
        }, {
          unified: '1F9CF-1F3FE-200D-2642-FE0F',
          sheet: [45, 8]
        }, {
          unified: '1F9CF-1F3FF-200D-2642-FE0F',
          sheet: [45, 9]
        }],
        shortName: 'deaf_man'
      }, {
        name: 'Skull and Crossbones',
        unified: '2620-FE0F',
        keywords: ['poison', 'danger', 'deadly', 'scary', 'death', 'pirate', 'evil'],
        sheet: [53, 8],
        shortName: 'skull_and_crossbones'
      }, {
        name: 'Gibraltar Flag',
        unified: '1F1EC-1F1EE',
        sheet: [2, 4],
        shortName: 'flag-gi'
      }, {
        name: 'Candy',
        unified: '1F36C',
        keywords: ['snack', 'dessert', 'sweet', 'lolly'],
        sheet: [7, 11],
        shortName: 'candy'
      }, {
        name: 'Pile of Poo',
        unified: '1F4A9',
        sheet: [25, 51],
        shortNames: ['poop', 'shit'],
        shortName: 'hankey'
      }, {
        name: 'Vibration Mode',
        unified: '1F4F3',
        keywords: ['orange-square', 'phone'],
        sheet: [27, 16],
        shortName: 'vibration_mode'
      }, {
        name: 'Video Camera',
        unified: '1F4F9',
        keywords: ['film', 'record'],
        sheet: [27, 22],
        shortName: 'video_camera'
      }, {
        name: 'Butterfly',
        unified: '1F98B',
        keywords: ['animal', 'insect', 'nature', 'caterpillar'],
        sheet: [42, 29],
        shortName: 'butterfly'
      }, {
        name: 'Motorized Wheelchair',
        unified: '1F9BC',
        sheet: [44, 4],
        shortName: 'motorized_wheelchair'
      }, {
        name: 'Deaf Woman',
        unified: '1F9CF-200D-2640-FE0F',
        sheet: [44, 55],
        skinVariations: [{
          unified: '1F9CF-1F3FB-200D-2640-FE0F',
          sheet: [44, 56]
        }, {
          unified: '1F9CF-1F3FC-200D-2640-FE0F',
          sheet: [45, 0]
        }, {
          unified: '1F9CF-1F3FD-200D-2640-FE0F',
          sheet: [45, 1]
        }, {
          unified: '1F9CF-1F3FE-200D-2640-FE0F',
          sheet: [45, 2]
        }, {
          unified: '1F9CF-1F3FF-200D-2640-FE0F',
          sheet: [45, 3]
        }],
        shortName: 'deaf_woman'
      }, {
        name: 'Greenland Flag',
        unified: '1F1EC-1F1F1',
        sheet: [2, 5],
        shortName: 'flag-gl'
      }, {
        name: 'Lollipop',
        unified: '1F36D',
        keywords: ['food', 'snack', 'candy', 'sweet'],
        sheet: [7, 12],
        shortName: 'lollipop'
      }, {
        name: 'Bug',
        unified: '1F41B',
        keywords: ['animal', 'insect', 'nature', 'worm'],
        sheet: [11, 56],
        shortName: 'bug'
      }, {
        name: 'Mobile Phone off',
        unified: '1F4F4',
        keywords: ['mute', 'orange-square', 'silence', 'quiet'],
        sheet: [27, 17],
        shortName: 'mobile_phone_off'
      }, {
        name: 'Videocassette',
        unified: '1F4FC',
        keywords: ['record', 'video', 'oldschool', '90s', '80s'],
        sheet: [27, 25],
        shortName: 'vhs'
      }, {
        name: 'Person Bowing Deeply',
        unified: '1F647',
        sheet: [32, 38],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F647-1F3FB',
          sheet: [32, 39],
          hidden: ['facebook']
        }, {
          unified: '1F647-1F3FC',
          sheet: [32, 40],
          hidden: ['facebook']
        }, {
          unified: '1F647-1F3FD',
          sheet: [32, 41],
          hidden: ['facebook']
        }, {
          unified: '1F647-1F3FE',
          sheet: [32, 42],
          hidden: ['facebook']
        }, {
          unified: '1F647-1F3FF',
          sheet: [32, 43],
          hidden: ['facebook']
        }],
        shortName: 'bow',
        obsoletedBy: '1F647-200D-2642-FE0F'
      }, {
        name: 'Auto Rickshaw',
        unified: '1F6FA',
        sheet: [37, 2],
        shortName: 'auto_rickshaw'
      }, {
        name: 'Clown Face',
        unified: '1F921',
        keywords: ['face'],
        sheet: [38, 18],
        shortName: 'clown_face'
      }, {
        name: 'Gambia Flag',
        unified: '1F1EC-1F1F2',
        sheet: [2, 6],
        shortName: 'flag-gm'
      }, {
        name: 'Custard',
        unified: '1F36E',
        keywords: ['dessert', 'food'],
        sheet: [7, 13],
        shortName: 'custard'
      }, {
        name: 'Ant',
        unified: '1F41C',
        keywords: ['animal', 'insect', 'nature', 'bug'],
        sheet: [12, 0],
        shortName: 'ant'
      }, {
        name: 'Japanese Ogre',
        unified: '1F479',
        keywords: ['monster', 'red', 'mask', 'halloween', 'scary', 'creepy', 'devil', 'demon', 'japanese', 'ogre'],
        sheet: [23, 34],
        shortName: 'japanese_ogre'
      }, {
        name: 'Left-Pointing Magnifying Glass',
        unified: '1F50D',
        keywords: ['search', 'zoom', 'find', 'detective'],
        sheet: [27, 41],
        shortName: 'mag'
      }, {
        name: 'Man Bowing',
        unified: '1F647-200D-2642-FE0F',
        obsoletes: '1F647',
        sheet: [32, 32],
        skinVariations: [{
          unified: '1F647-1F3FB-200D-2642-FE0F',
          sheet: [32, 33]
        }, {
          unified: '1F647-1F3FC-200D-2642-FE0F',
          sheet: [32, 34]
        }, {
          unified: '1F647-1F3FD-200D-2642-FE0F',
          sheet: [32, 35]
        }, {
          unified: '1F647-1F3FE-200D-2642-FE0F',
          sheet: [32, 36]
        }, {
          unified: '1F647-1F3FF-200D-2642-FE0F',
          sheet: [32, 37]
        }],
        shortName: 'man-bowing'
      }, {
        name: 'Bicycle',
        unified: '1F6B2',
        keywords: ['sports', 'bicycle', 'exercise', 'hipster'],
        sheet: [35, 9],
        shortName: 'bike'
      }, {
        name: 'Female Sign',
        unified: '2640-FE0F',
        sheet: [53, 18],
        hidden: ['apple'],
        shortName: 'female_sign'
      }, {
        name: 'Guinea Flag',
        unified: '1F1EC-1F1F3',
        sheet: [2, 7],
        shortName: 'flag-gn'
      }, {
        name: 'Honey Pot',
        unified: '1F36F',
        keywords: ['bees', 'sweet', 'kitchen'],
        sheet: [7, 14],
        shortName: 'honey_pot'
      }, {
        name: 'Honeybee',
        unified: '1F41D',
        sheet: [12, 1],
        shortNames: ['honeybee'],
        shortName: 'bee'
      }, {
        name: 'Japanese Goblin',
        unified: '1F47A',
        keywords: ['red', 'evil', 'mask', 'monster', 'scary', 'creepy', 'japanese', 'goblin'],
        sheet: [23, 35],
        shortName: 'japanese_goblin'
      }, {
        name: 'Right-Pointing Magnifying Glass',
        unified: '1F50E',
        keywords: ['search', 'zoom', 'find', 'detective'],
        sheet: [27, 42],
        shortName: 'mag_right'
      }, {
        name: 'Woman Bowing',
        unified: '1F647-200D-2640-FE0F',
        sheet: [32, 26],
        skinVariations: [{
          unified: '1F647-1F3FB-200D-2640-FE0F',
          sheet: [32, 27]
        }, {
          unified: '1F647-1F3FC-200D-2640-FE0F',
          sheet: [32, 28]
        }, {
          unified: '1F647-1F3FD-200D-2640-FE0F',
          sheet: [32, 29]
        }, {
          unified: '1F647-1F3FE-200D-2640-FE0F',
          sheet: [32, 30]
        }, {
          unified: '1F647-1F3FF-200D-2640-FE0F',
          sheet: [32, 31]
        }],
        shortName: 'woman-bowing'
      }, {
        name: 'Scooter',
        unified: '1F6F4',
        sheet: [36, 53],
        shortName: 'scooter'
      }, {
        name: 'Male Sign',
        unified: '2642-FE0F',
        sheet: [53, 19],
        hidden: ['apple'],
        shortName: 'male_sign'
      }, {
        name: 'Guadeloupe Flag',
        unified: '1F1EC-1F1F5',
        sheet: [2, 8],
        shortName: 'flag-gp'
      }, {
        name: 'Baby Bottle',
        unified: '1F37C',
        keywords: ['food', 'container', 'milk'],
        sheet: [7, 27],
        shortName: 'baby_bottle'
      }, {
        name: 'Lady Beetle',
        unified: '1F41E',
        keywords: ['animal', 'insect', 'nature', 'ladybug'],
        sheet: [12, 2],
        shortName: 'beetle'
      }, {
        name: 'Ghost',
        unified: '1F47B',
        keywords: ['halloween', 'spooky', 'scary'],
        sheet: [23, 36],
        shortName: 'ghost'
      }, {
        name: 'Candle',
        unified: '1F56F-FE0F',
        keywords: ['fire', 'wax'],
        sheet: [29, 6],
        shortName: 'candle'
      }, {
        name: 'Skateboard',
        unified: '1F6F9',
        keywords: ['board'],
        sheet: [37, 1],
        shortName: 'skateboard'
      }, {
        name: 'Face Palm',
        unified: '1F926',
        sheet: [38, 35],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F926-1F3FB',
          sheet: [38, 36],
          hidden: ['facebook']
        }, {
          unified: '1F926-1F3FC',
          sheet: [38, 37],
          hidden: ['facebook']
        }, {
          unified: '1F926-1F3FD',
          sheet: [38, 38],
          hidden: ['facebook']
        }, {
          unified: '1F926-1F3FE',
          sheet: [38, 39],
          hidden: ['facebook']
        }, {
          unified: '1F926-1F3FF',
          sheet: [38, 40],
          hidden: ['facebook']
        }],
        shortName: 'face_palm'
      }, {
        name: 'Medical Symbol',
        unified: '2695-FE0F',
        sheet: [53, 44],
        hidden: ['apple'],
        shortNames: ['staff_of_aesculapius'],
        shortName: 'medical_symbol'
      }, {
        name: 'Equatorial Guinea Flag',
        unified: '1F1EC-1F1F6',
        sheet: [2, 9],
        shortName: 'flag-gq'
      }, {
        name: 'Extraterrestrial Alien',
        unified: '1F47D',
        keywords: ['UFO', 'paul', 'weird', 'outer_space'],
        sheet: [23, 43],
        shortName: 'alien'
      }, {
        name: 'Electric Light Bulb',
        unified: '1F4A1',
        keywords: ['light', 'electricity', 'idea'],
        sheet: [25, 43],
        shortName: 'bulb'
      }, {
        name: 'Bus Stop',
        unified: '1F68F',
        keywords: ['transportation', 'wait'],
        sheet: [34, 14],
        shortName: 'busstop'
      }, {
        name: 'Man Facepalming',
        unified: '1F926-200D-2642-FE0F',
        sheet: [38, 29],
        skinVariations: [{
          unified: '1F926-1F3FB-200D-2642-FE0F',
          sheet: [38, 30]
        }, {
          unified: '1F926-1F3FC-200D-2642-FE0F',
          sheet: [38, 31]
        }, {
          unified: '1F926-1F3FD-200D-2642-FE0F',
          sheet: [38, 32]
        }, {
          unified: '1F926-1F3FE-200D-2642-FE0F',
          sheet: [38, 33]
        }, {
          unified: '1F926-1F3FF-200D-2642-FE0F',
          sheet: [38, 34]
        }],
        shortName: 'man-facepalming'
      }, {
        name: 'Glass of Milk',
        unified: '1F95B',
        sheet: [41, 42],
        shortName: 'glass_of_milk'
      }, {
        name: 'Cricket',
        unified: '1F997',
        keywords: ['sports'],
        sheet: [42, 41],
        shortName: 'cricket'
      }, {
        name: 'Infinity',
        unified: '267E-FE0F',
        keywords: ['forever'],
        sheet: [53, 39],
        shortName: 'infinity'
      }, {
        name: 'Greece Flag',
        unified: '1F1EC-1F1F7',
        sheet: [2, 10],
        shortName: 'flag-gr'
      }, {
        name: 'Alien Monster',
        unified: '1F47E',
        keywords: ['game', 'arcade', 'play'],
        sheet: [23, 44],
        shortName: 'space_invader'
      }, {
        name: 'Electric Torch',
        unified: '1F526',
        keywords: ['dark', 'camping', 'sight', 'night'],
        sheet: [28, 9],
        shortName: 'flashlight'
      }, {
        name: 'Spider',
        unified: '1F577-FE0F',
        keywords: ['animal', 'arachnid'],
        sheet: [29, 34],
        shortName: 'spider'
      }, {
        name: 'Motorway',
        unified: '1F6E3-FE0F',
        keywords: ['road', 'cupertino', 'interstate', 'highway'],
        sheet: [36, 45],
        shortName: 'motorway'
      }, {
        name: 'Woman Facepalming',
        unified: '1F926-200D-2640-FE0F',
        sheet: [38, 23],
        skinVariations: [{
          unified: '1F926-1F3FB-200D-2640-FE0F',
          sheet: [38, 24]
        }, {
          unified: '1F926-1F3FC-200D-2640-FE0F',
          sheet: [38, 25]
        }, {
          unified: '1F926-1F3FD-200D-2640-FE0F',
          sheet: [38, 26]
        }, {
          unified: '1F926-1F3FE-200D-2640-FE0F',
          sheet: [38, 27]
        }, {
          unified: '1F926-1F3FF-200D-2640-FE0F',
          sheet: [38, 28]
        }],
        shortName: 'woman-facepalming'
      }, {
        name: 'Hot Beverage',
        unified: '2615',
        keywords: ['beverage', 'caffeine', 'latte', 'espresso'],
        sheet: [53, 0],
        shortName: 'coffee'
      }, {
        name: 'Black Universal Recycling Symbol',
        unified: '267B-FE0F',
        keywords: ['arrow', 'environment', 'garbage', 'trash'],
        sheet: [53, 38],
        shortName: 'recycle'
      }, {
        name: 'South Georgia & South Sandwich Islands Flag',
        unified: '1F1EC-1F1F8',
        sheet: [2, 11],
        shortName: 'flag-gs'
      }, {
        name: 'Teacup Without Handle',
        unified: '1F375',
        keywords: ['drink', 'bowl', 'breakfast', 'green', 'british'],
        sheet: [7, 20],
        shortName: 'tea'
      }, {
        name: 'Izakaya Lantern',
        unified: '1F3EE',
        keywords: ['light', 'paper', 'halloween', 'spooky'],
        sheet: [11, 8],
        shortNames: ['lantern'],
        shortName: 'izakaya_lantern'
      }, {
        name: 'Spider Web',
        unified: '1F578-FE0F',
        keywords: ['animal', 'insect', 'arachnid', 'silk'],
        sheet: [29, 35],
        shortName: 'spider_web'
      }, {
        name: 'Railway Track',
        unified: '1F6E4-FE0F',
        keywords: ['train', 'transportation'],
        sheet: [36, 46],
        shortName: 'railway_track'
      }, {
        name: 'Robot Face',
        unified: '1F916',
        sheet: [37, 29],
        shortName: 'robot_face'
      }, {
        name: 'Shrug',
        unified: '1F937',
        sheet: [39, 47],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F937-1F3FB',
          sheet: [39, 48],
          hidden: ['facebook']
        }, {
          unified: '1F937-1F3FC',
          sheet: [39, 49],
          hidden: ['facebook']
        }, {
          unified: '1F937-1F3FD',
          sheet: [39, 50],
          hidden: ['facebook']
        }, {
          unified: '1F937-1F3FE',
          sheet: [39, 51],
          hidden: ['facebook']
        }, {
          unified: '1F937-1F3FF',
          sheet: [39, 52],
          hidden: ['facebook']
        }],
        shortName: 'shrug'
      }, {
        name: 'Fleur De Lis',
        unified: '269C-FE0F',
        keywords: ['decorative', 'scout'],
        sheet: [53, 49],
        shortName: 'fleur_de_lis'
      }, {
        name: 'Guatemala Flag',
        unified: '1F1EC-1F1F9',
        sheet: [2, 12],
        shortName: 'flag-gt'
      }, {
        name: 'Sake Bottle and Cup',
        unified: '1F376',
        keywords: ['wine', 'drink', 'drunk', 'beverage', 'japanese', 'alcohol', 'booze'],
        sheet: [7, 21],
        shortName: 'sake'
      }, {
        name: 'Trident Emblem',
        unified: '1F531',
        keywords: ['weapon', 'spear'],
        sheet: [28, 20],
        shortName: 'trident'
      }, {
        name: 'Smiling Cat Face with Open Mouth',
        unified: '1F63A',
        keywords: ['animal', 'cats', 'happy', 'smile'],
        sheet: [31, 36],
        shortName: 'smiley_cat'
      }, {
        name: 'Oil Drum',
        unified: '1F6E2-FE0F',
        keywords: ['barrell'],
        sheet: [36, 44],
        shortName: 'oil_drum'
      }, {
        name: 'Man Shrugging',
        unified: '1F937-200D-2642-FE0F',
        sheet: [39, 41],
        skinVariations: [{
          unified: '1F937-1F3FB-200D-2642-FE0F',
          sheet: [39, 42]
        }, {
          unified: '1F937-1F3FC-200D-2642-FE0F',
          sheet: [39, 43]
        }, {
          unified: '1F937-1F3FD-200D-2642-FE0F',
          sheet: [39, 44]
        }, {
          unified: '1F937-1F3FE-200D-2642-FE0F',
          sheet: [39, 45]
        }, {
          unified: '1F937-1F3FF-200D-2642-FE0F',
          sheet: [39, 46]
        }],
        shortName: 'man-shrugging'
      }, {
        name: 'Scorpion',
        unified: '1F982',
        keywords: ['animal', 'arachnid'],
        sheet: [42, 20],
        shortName: 'scorpion'
      }, {
        name: 'Diya Lamp',
        unified: '1FA94',
        sheet: [52, 8],
        shortName: 'diya_lamp'
      }, {
        name: 'Guam Flag',
        unified: '1F1EC-1F1FA',
        sheet: [2, 13],
        shortName: 'flag-gu'
      }, {
        name: 'Bottle with Popping Cork',
        unified: '1F37E',
        keywords: ['drink', 'wine', 'bottle', 'celebration'],
        sheet: [7, 29],
        shortName: 'champagne'
      }, {
        name: 'Notebook with Decorative Cover',
        unified: '1F4D4',
        keywords: ['classroom', 'notes', 'record', 'paper', 'study'],
        sheet: [26, 42],
        shortName: 'notebook_with_decorative_cover'
      }, {
        name: 'Name Badge',
        unified: '1F4DB',
        keywords: ['fire', 'forbid'],
        sheet: [26, 49],
        shortName: 'name_badge'
      }, {
        name: 'Grinning Cat Face with Smiling Eyes',
        unified: '1F638',
        keywords: ['animal', 'cats', 'smile'],
        sheet: [31, 34],
        shortName: 'smile_cat'
      }, {
        name: 'Woman Shrugging',
        unified: '1F937-200D-2640-FE0F',
        sheet: [39, 35],
        skinVariations: [{
          unified: '1F937-1F3FB-200D-2640-FE0F',
          sheet: [39, 36]
        }, {
          unified: '1F937-1F3FC-200D-2640-FE0F',
          sheet: [39, 37]
        }, {
          unified: '1F937-1F3FD-200D-2640-FE0F',
          sheet: [39, 38]
        }, {
          unified: '1F937-1F3FE-200D-2640-FE0F',
          sheet: [39, 39]
        }, {
          unified: '1F937-1F3FF-200D-2640-FE0F',
          sheet: [39, 40]
        }],
        shortName: 'woman-shrugging'
      }, {
        name: 'Mosquito',
        unified: '1F99F',
        keywords: ['animal', 'nature', 'insect', 'malaria'],
        sheet: [42, 49],
        shortName: 'mosquito'
      }, {
        name: 'Fuel Pump',
        unified: '26FD',
        keywords: ['gas station', 'petroleum'],
        sheet: [54, 38],
        shortName: 'fuelpump'
      }, {
        name: 'Guinea-Bissau Flag',
        unified: '1F1EC-1F1FC',
        sheet: [2, 14],
        shortName: 'flag-gw'
      }, {
        name: 'Wine Glass',
        unified: '1F377',
        keywords: ['drink', 'beverage', 'drunk', 'alcohol', 'booze'],
        sheet: [7, 22],
        shortName: 'wine_glass'
      }, {
        name: 'Closed Book',
        unified: '1F4D5',
        keywords: ['read', 'library', 'knowledge', 'textbook', 'learn'],
        sheet: [26, 43],
        shortName: 'closed_book'
      }, {
        name: 'Japanese Symbol for Beginner',
        unified: '1F530',
        keywords: ['badge', 'shield'],
        sheet: [28, 19],
        shortName: 'beginner'
      }, {
        name: 'Cat Face with Tears of Joy',
        unified: '1F639',
        keywords: ['animal', 'cats', 'haha', 'happy', 'tears'],
        sheet: [31, 35],
        shortName: 'joy_cat'
      }, {
        name: 'Police Cars Revolving Light',
        unified: '1F6A8',
        keywords: ['police', 'ambulance', '911', 'emergency', 'alert', 'error', 'pinged', 'law', 'legal'],
        sheet: [34, 56],
        shortName: 'rotating_light'
      }, {
        name: 'Microbe',
        unified: '1F9A0',
        keywords: ['amoeba', 'bacteria', 'germs'],
        sheet: [42, 50],
        shortName: 'microbe'
      }, {
        name: 'Health Worker',
        unified: '1F9D1-200D-2695-FE0F',
        sheet: [47, 49],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-2695-FE0F',
          sheet: [47, 50],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-2695-FE0F',
          sheet: [47, 51],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-2695-FE0F',
          sheet: [47, 52],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-2695-FE0F',
          sheet: [47, 53],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-2695-FE0F',
          sheet: [47, 54],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'health_worker'
      }, {
        name: 'Guyana Flag',
        unified: '1F1EC-1F1FE',
        sheet: [2, 15],
        shortName: 'flag-gy'
      }, {
        name: 'Cocktail Glass',
        unified: '1F378',
        keywords: ['drink', 'drunk', 'alcohol', 'beverage', 'booze', 'mojito'],
        sheet: [7, 23],
        shortName: 'cocktail'
      }, {
        name: 'Male Doctor',
        unified: '1F468-200D-2695-FE0F',
        sheet: [17, 2],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-2695-FE0F',
          sheet: [17, 3]
        }, {
          unified: '1F468-1F3FC-200D-2695-FE0F',
          sheet: [17, 4]
        }, {
          unified: '1F468-1F3FD-200D-2695-FE0F',
          sheet: [17, 5]
        }, {
          unified: '1F468-1F3FE-200D-2695-FE0F',
          sheet: [17, 6]
        }, {
          unified: '1F468-1F3FF-200D-2695-FE0F',
          sheet: [17, 7]
        }],
        shortName: 'male-doctor'
      }, {
        name: 'Bouquet',
        unified: '1F490',
        keywords: ['flowers', 'nature', 'spring'],
        sheet: [25, 26],
        shortName: 'bouquet'
      }, {
        name: 'Open Book',
        unified: '1F4D6',
        sheet: [26, 44],
        shortNames: ['open_book'],
        shortName: 'book'
      }, {
        name: 'Smiling Cat Face with Heart-Shaped Eyes',
        unified: '1F63B',
        keywords: ['animal', 'love', 'like', 'affection', 'cats', 'valentines', 'heart'],
        sheet: [31, 37],
        shortName: 'heart_eyes_cat'
      }, {
        name: 'Horizontal Traffic Light',
        unified: '1F6A5',
        keywords: ['transportation', 'signal'],
        sheet: [34, 53],
        shortName: 'traffic_light'
      }, {
        name: 'Heavy Large Circle',
        unified: '2B55',
        keywords: ['circle', 'round'],
        sheet: [55, 43],
        shortName: 'o'
      }, {
        name: 'Hong Kong Sar China Flag',
        unified: '1F1ED-1F1F0',
        sheet: [2, 16],
        shortName: 'flag-hk'
      }, {
        name: 'Cherry Blossom',
        unified: '1F338',
        keywords: ['nature', 'plant', 'spring', 'flower'],
        sheet: [6, 16],
        shortName: 'cherry_blossom'
      }, {
        name: 'Tropical Drink',
        unified: '1F379',
        keywords: ['beverage', 'cocktail', 'summer', 'beach', 'alcohol', 'booze', 'mojito'],
        sheet: [7, 24],
        shortName: 'tropical_drink'
      }, {
        name: 'Female Doctor',
        unified: '1F469-200D-2695-FE0F',
        sheet: [19, 44],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-2695-FE0F',
          sheet: [19, 45]
        }, {
          unified: '1F469-1F3FC-200D-2695-FE0F',
          sheet: [19, 46]
        }, {
          unified: '1F469-1F3FD-200D-2695-FE0F',
          sheet: [19, 47]
        }, {
          unified: '1F469-1F3FE-200D-2695-FE0F',
          sheet: [19, 48]
        }, {
          unified: '1F469-1F3FF-200D-2695-FE0F',
          sheet: [19, 49]
        }],
        shortName: 'female-doctor'
      }, {
        name: 'Green Book',
        unified: '1F4D7',
        keywords: ['read', 'library', 'knowledge', 'study'],
        sheet: [26, 45],
        shortName: 'green_book'
      }, {
        name: 'Cat Face with Wry Smile',
        unified: '1F63C',
        keywords: ['animal', 'cats', 'smirk'],
        sheet: [31, 38],
        shortName: 'smirk_cat'
      }, {
        name: 'Vertical Traffic Light',
        unified: '1F6A6',
        keywords: ['transportation', 'driving'],
        sheet: [34, 54],
        shortName: 'vertical_traffic_light'
      }, {
        name: 'White Heavy Check Mark',
        unified: '2705',
        keywords: ['green-square', 'ok', 'agree', 'vote', 'election', 'answer', 'tick'],
        sheet: [54, 40],
        shortName: 'white_check_mark'
      }, {
        name: 'Heard & Mcdonald Islands Flag',
        unified: '1F1ED-1F1F2',
        sheet: [2, 17],
        shortName: 'flag-hm'
      }, {
        name: 'Beer Mug',
        unified: '1F37A',
        keywords: ['relax', 'beverage', 'drink', 'drunk', 'party', 'pub', 'summer', 'alcohol', 'booze'],
        sheet: [7, 25],
        shortName: 'beer'
      }, {
        name: 'White Flower',
        unified: '1F4AE',
        keywords: ['japanese', 'spring'],
        sheet: [26, 4],
        shortName: 'white_flower'
      }, {
        name: 'Blue Book',
        unified: '1F4D8',
        keywords: ['read', 'library', 'knowledge', 'learn', 'study'],
        sheet: [26, 46],
        shortName: 'blue_book'
      }, {
        name: 'Kissing Cat Face with Closed Eyes',
        unified: '1F63D',
        keywords: ['animal', 'cats', 'kiss'],
        sheet: [31, 39],
        shortName: 'kissing_cat'
      }, {
        name: 'Octagonal Sign',
        unified: '1F6D1',
        sheet: [36, 39],
        shortName: 'octagonal_sign'
      }, {
        name: 'Student',
        unified: '1F9D1-200D-1F393',
        sheet: [45, 29],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F393',
          sheet: [45, 30],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F393',
          sheet: [45, 31],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F393',
          sheet: [45, 32],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F393',
          sheet: [45, 33],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F393',
          sheet: [45, 34],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'student'
      }, {
        name: 'Ballot Box with Check',
        unified: '2611-FE0F',
        keywords: ['ok', 'agree', 'confirm', 'black-square', 'vote', 'election', 'yes', 'tick'],
        sheet: [52, 55],
        shortName: 'ballot_box_with_check'
      }, {
        name: 'Honduras Flag',
        unified: '1F1ED-1F1F3',
        sheet: [2, 18],
        shortName: 'flag-hn'
      }, {
        name: 'Clinking Beer Mugs',
        unified: '1F37B',
        keywords: ['relax', 'beverage', 'drink', 'drunk', 'party', 'pub', 'summer', 'alcohol', 'booze'],
        sheet: [7, 26],
        shortName: 'beers'
      }, {
        name: 'Rosette',
        unified: '1F3F5-FE0F',
        keywords: ['flower', 'decoration', 'military'],
        sheet: [11, 18],
        shortName: 'rosette'
      }, {
        name: 'Male Student',
        unified: '1F468-200D-1F393',
        sheet: [14, 50],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F393',
          sheet: [14, 51]
        }, {
          unified: '1F468-1F3FC-200D-1F393',
          sheet: [14, 52]
        }, {
          unified: '1F468-1F3FD-200D-1F393',
          sheet: [14, 53]
        }, {
          unified: '1F468-1F3FE-200D-1F393',
          sheet: [14, 54]
        }, {
          unified: '1F468-1F3FF-200D-1F393',
          sheet: [14, 55]
        }],
        shortName: 'male-student'
      }, {
        name: 'Orange Book',
        unified: '1F4D9',
        keywords: ['read', 'library', 'knowledge', 'textbook', 'study'],
        sheet: [26, 47],
        shortName: 'orange_book'
      }, {
        name: 'Weary Cat Face',
        unified: '1F640',
        keywords: ['animal', 'cats', 'munch', 'scared', 'scream'],
        sheet: [31, 42],
        shortName: 'scream_cat'
      }, {
        name: 'Construction Sign',
        unified: '1F6A7',
        keywords: ['wip', 'progress', 'caution', 'warning'],
        sheet: [34, 55],
        shortName: 'construction'
      }, {
        name: 'Heavy Check Mark',
        unified: '2714-FE0F',
        keywords: ['ok', 'nike', 'answer', 'yes', 'tick'],
        sheet: [55, 12],
        shortName: 'heavy_check_mark'
      }, {
        name: 'Croatia Flag',
        unified: '1F1ED-1F1F7',
        sheet: [2, 19],
        shortName: 'flag-hr'
      }, {
        name: 'Rose',
        unified: '1F339',
        keywords: ['flowers', 'valentines', 'love', 'spring'],
        sheet: [6, 17],
        shortName: 'rose'
      }, {
        name: 'Female Student',
        unified: '1F469-200D-1F393',
        sheet: [17, 40],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F393',
          sheet: [17, 41]
        }, {
          unified: '1F469-1F3FC-200D-1F393',
          sheet: [17, 42]
        }, {
          unified: '1F469-1F3FD-200D-1F393',
          sheet: [17, 43]
        }, {
          unified: '1F469-1F3FE-200D-1F393',
          sheet: [17, 44]
        }, {
          unified: '1F469-1F3FF-200D-1F393',
          sheet: [17, 45]
        }],
        shortName: 'female-student'
      }, {
        name: 'Books',
        unified: '1F4DA',
        keywords: ['literature', 'library', 'study'],
        sheet: [26, 48],
        shortName: 'books'
      }, {
        name: 'Crying Cat Face',
        unified: '1F63F',
        keywords: ['animal', 'tears', 'weep', 'sad', 'cats', 'upset', 'cry'],
        sheet: [31, 41],
        shortName: 'crying_cat_face'
      }, {
        name: 'Clinking Glasses',
        unified: '1F942',
        keywords: ['beverage', 'drink', 'party', 'alcohol', 'celebrate', 'cheers', 'wine', 'champagne', 'toast'],
        sheet: [41, 18],
        shortName: 'clinking_glasses'
      }, {
        name: 'Anchor',
        unified: '2693',
        keywords: ['ship', 'ferry', 'sea', 'boat'],
        sheet: [53, 42],
        shortName: 'anchor'
      }, {
        name: 'Heavy Multiplication X',
        unified: '2716-FE0F',
        keywords: ['math', 'calculation'],
        sheet: [55, 13],
        shortName: 'heavy_multiplication_x'
      }, {
        name: 'Haiti Flag',
        unified: '1F1ED-1F1F9',
        sheet: [2, 20],
        shortName: 'flag-ht'
      }, {
        name: 'Notebook',
        unified: '1F4D3',
        keywords: ['stationery', 'record', 'notes', 'paper', 'study'],
        sheet: [26, 41],
        shortName: 'notebook'
      }, {
        name: 'Pouting Cat Face',
        unified: '1F63E',
        keywords: ['animal', 'cats'],
        sheet: [31, 40],
        shortName: 'pouting_cat'
      }, {
        name: 'Wilted Flower',
        unified: '1F940',
        keywords: ['plant', 'nature', 'flower'],
        sheet: [41, 16],
        shortName: 'wilted_flower'
      }, {
        name: 'Tumbler Glass',
        unified: '1F943',
        keywords: ['drink', 'beverage', 'drunk', 'alcohol', 'liquor', 'booze', 'bourbon', 'scotch', 'whisky', 'glass', 'shot'],
        sheet: [41, 19],
        shortName: 'tumbler_glass'
      }, {
        name: 'Teacher',
        unified: '1F9D1-200D-1F3EB',
        sheet: [45, 47],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F3EB',
          sheet: [45, 48],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F3EB',
          sheet: [45, 49],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F3EB',
          sheet: [45, 50],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F3EB',
          sheet: [45, 51],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F3EB',
          sheet: [45, 52],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'teacher'
      }, {
        name: 'Sailboat',
        unified: '26F5',
        sheet: [54, 16],
        shortNames: ['sailboat'],
        shortName: 'boat'
      }, {
        name: 'Cross Mark',
        unified: '274C',
        keywords: ['no', 'delete', 'remove', 'cancel', 'red'],
        sheet: [55, 21],
        shortName: 'x'
      }, {
        name: 'Hungary Flag',
        unified: '1F1ED-1F1FA',
        sheet: [2, 21],
        shortName: 'flag-hu'
      }, {
        name: 'Hibiscus',
        unified: '1F33A',
        keywords: ['plant', 'vegetable', 'flowers', 'beach'],
        sheet: [6, 18],
        shortName: 'hibiscus'
      }, {
        name: 'Male Teacher',
        unified: '1F468-200D-1F3EB',
        sheet: [15, 11],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F3EB',
          sheet: [15, 12]
        }, {
          unified: '1F468-1F3FC-200D-1F3EB',
          sheet: [15, 13]
        }, {
          unified: '1F468-1F3FD-200D-1F3EB',
          sheet: [15, 14]
        }, {
          unified: '1F468-1F3FE-200D-1F3EB',
          sheet: [15, 15]
        }, {
          unified: '1F468-1F3FF-200D-1F3EB',
          sheet: [15, 16]
        }],
        shortName: 'male-teacher'
      }, {
        name: 'Ledger',
        unified: '1F4D2',
        keywords: ['notes', 'paper'],
        sheet: [26, 40],
        shortName: 'ledger'
      }, {
        name: 'See-No-Evil Monkey',
        unified: '1F648',
        keywords: ['monkey', 'animal', 'nature', 'haha'],
        sheet: [32, 44],
        shortName: 'see_no_evil'
      }, {
        name: 'Canoe',
        unified: '1F6F6',
        keywords: ['boat', 'paddle', 'water', 'ship'],
        sheet: [36, 55],
        shortName: 'canoe'
      }, {
        name: 'Cup with Straw',
        unified: '1F964',
        keywords: ['drink', 'soda'],
        sheet: [41, 51],
        shortName: 'cup_with_straw'
      }, {
        name: 'Negative Squared Cross Mark',
        unified: '274E',
        keywords: ['x', 'green-square', 'no', 'deny'],
        sheet: [55, 22],
        shortName: 'negative_squared_cross_mark'
      }, {
        name: 'Canary Islands Flag',
        unified: '1F1EE-1F1E8',
        sheet: [2, 22],
        shortName: 'flag-ic'
      }, {
        name: 'Sunflower',
        unified: '1F33B',
        keywords: ['nature', 'plant', 'fall'],
        sheet: [6, 19],
        shortName: 'sunflower'
      }, {
        name: 'Female Teacher',
        unified: '1F469-200D-1F3EB',
        sheet: [18, 1],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F3EB',
          sheet: [18, 2]
        }, {
          unified: '1F469-1F3FC-200D-1F3EB',
          sheet: [18, 3]
        }, {
          unified: '1F469-1F3FD-200D-1F3EB',
          sheet: [18, 4]
        }, {
          unified: '1F469-1F3FE-200D-1F3EB',
          sheet: [18, 5]
        }, {
          unified: '1F469-1F3FF-200D-1F3EB',
          sheet: [18, 6]
        }],
        shortName: 'female-teacher'
      }, {
        name: 'Page with Curl',
        unified: '1F4C3',
        keywords: ['documents', 'office', 'paper'],
        sheet: [26, 25],
        shortName: 'page_with_curl'
      }, {
        name: 'Hear-No-Evil Monkey',
        unified: '1F649',
        keywords: ['animal', 'monkey', 'nature'],
        sheet: [32, 45],
        shortName: 'hear_no_evil'
      }, {
        name: 'Speedboat',
        unified: '1F6A4',
        keywords: ['ship', 'transportation', 'vehicle', 'summer'],
        sheet: [34, 52],
        shortName: 'speedboat'
      }, {
        name: 'Beverage Box',
        unified: '1F9C3',
        sheet: [44, 11],
        shortName: 'beverage_box'
      }, {
        name: 'Heavy Plus Sign',
        unified: '2795',
        keywords: ['math', 'calculation', 'addition', 'more', 'increase'],
        sheet: [55, 29],
        shortName: 'heavy_plus_sign'
      }, {
        name: 'Indonesia Flag',
        unified: '1F1EE-1F1E9',
        sheet: [2, 23],
        shortName: 'flag-id'
      }, {
        name: 'Blossom',
        unified: '1F33C',
        keywords: ['nature', 'flowers', 'yellow'],
        sheet: [6, 20],
        shortName: 'blossom'
      }, {
        name: 'Scroll',
        unified: '1F4DC',
        keywords: ['documents', 'ancient', 'history', 'paper'],
        sheet: [26, 50],
        shortName: 'scroll'
      }, {
        name: 'Speak-No-Evil Monkey',
        unified: '1F64A',
        keywords: ['monkey', 'animal', 'nature', 'omg'],
        sheet: [32, 46],
        shortName: 'speak_no_evil'
      }, {
        name: 'Passenger Ship',
        unified: '1F6F3-FE0F',
        keywords: ['yacht', 'cruise', 'ferry'],
        sheet: [36, 52],
        shortName: 'passenger_ship'
      }, {
        name: 'Mate Drink',
        unified: '1F9C9',
        sheet: [44, 17],
        shortName: 'mate_drink'
      }, {
        name: 'Judge',
        unified: '1F9D1-200D-2696-FE0F',
        sheet: [47, 55],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-2696-FE0F',
          sheet: [47, 56],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-2696-FE0F',
          sheet: [48, 0],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-2696-FE0F',
          sheet: [48, 1],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-2696-FE0F',
          sheet: [48, 2],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-2696-FE0F',
          sheet: [48, 3],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'judge'
      }, {
        name: 'Heavy Minus Sign',
        unified: '2796',
        keywords: ['math', 'calculation', 'subtract', 'less'],
        sheet: [55, 30],
        shortName: 'heavy_minus_sign'
      }, {
        name: 'Ireland Flag',
        unified: '1F1EE-1F1EA',
        sheet: [2, 24],
        shortName: 'flag-ie'
      }, {
        name: 'Tulip',
        unified: '1F337',
        keywords: ['flowers', 'plant', 'nature', 'summer', 'spring'],
        sheet: [6, 15],
        shortName: 'tulip'
      }, {
        name: 'Male Judge',
        unified: '1F468-200D-2696-FE0F',
        sheet: [17, 8],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-2696-FE0F',
          sheet: [17, 9]
        }, {
          unified: '1F468-1F3FC-200D-2696-FE0F',
          sheet: [17, 10]
        }, {
          unified: '1F468-1F3FD-200D-2696-FE0F',
          sheet: [17, 11]
        }, {
          unified: '1F468-1F3FE-200D-2696-FE0F',
          sheet: [17, 12]
        }, {
          unified: '1F468-1F3FF-200D-2696-FE0F',
          sheet: [17, 13]
        }],
        shortName: 'male-judge'
      }, {
        name: 'Kiss Mark',
        unified: '1F48B',
        keywords: ['face', 'lips', 'love', 'like', 'affection', 'valentines'],
        sheet: [25, 21],
        shortName: 'kiss'
      }, {
        name: 'Page Facing Up',
        unified: '1F4C4',
        keywords: ['documents', 'office', 'paper', 'information'],
        sheet: [26, 26],
        shortName: 'page_facing_up'
      }, {
        name: 'Ice Cube',
        unified: '1F9CA',
        sheet: [44, 18],
        shortName: 'ice_cube'
      }, {
        name: 'Ferry',
        unified: '26F4-FE0F',
        keywords: ['boat', 'ship', 'yacht'],
        sheet: [54, 15],
        shortName: 'ferry'
      }, {
        name: 'Heavy Division Sign',
        unified: '2797',
        keywords: ['divide', 'math', 'calculation'],
        sheet: [55, 31],
        shortName: 'heavy_division_sign'
      }, {
        name: 'Israel Flag',
        unified: '1F1EE-1F1F1',
        sheet: [2, 25],
        shortName: 'flag-il'
      }, {
        name: 'Seedling',
        unified: '1F331',
        keywords: ['plant', 'nature', 'grass', 'lawn', 'spring'],
        sheet: [6, 9],
        shortName: 'seedling'
      }, {
        name: 'Female Judge',
        unified: '1F469-200D-2696-FE0F',
        sheet: [19, 50],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-2696-FE0F',
          sheet: [19, 51]
        }, {
          unified: '1F469-1F3FC-200D-2696-FE0F',
          sheet: [19, 52]
        }, {
          unified: '1F469-1F3FD-200D-2696-FE0F',
          sheet: [19, 53]
        }, {
          unified: '1F469-1F3FE-200D-2696-FE0F',
          sheet: [19, 54]
        }, {
          unified: '1F469-1F3FF-200D-2696-FE0F',
          sheet: [19, 55]
        }],
        shortName: 'female-judge'
      }, {
        name: 'Love Letter',
        unified: '1F48C',
        keywords: ['email', 'like', 'affection', 'envelope', 'valentines'],
        sheet: [25, 22],
        shortName: 'love_letter'
      }, {
        name: 'Newspaper',
        unified: '1F4F0',
        keywords: ['press', 'headline'],
        sheet: [27, 13],
        shortName: 'newspaper'
      }, {
        name: 'Motor Boat',
        unified: '1F6E5-FE0F',
        keywords: ['ship'],
        sheet: [36, 47],
        shortName: 'motor_boat'
      }, {
        name: 'Chopsticks',
        unified: '1F962',
        keywords: ['food'],
        sheet: [41, 49],
        shortName: 'chopsticks'
      }, {
        name: 'Curly Loop',
        unified: '27B0',
        keywords: ['scribble', 'draw', 'shape', 'squiggle'],
        sheet: [55, 33],
        shortName: 'curly_loop'
      }, {
        name: 'Isle of Man Flag',
        unified: '1F1EE-1F1F2',
        sheet: [2, 26],
        shortName: 'flag-im'
      }, {
        name: 'Evergreen Tree',
        unified: '1F332',
        keywords: ['plant', 'nature'],
        sheet: [6, 10],
        shortName: 'evergreen_tree'
      }, {
        name: 'Knife Fork Plate',
        unified: '1F37D-FE0F',
        sheet: [7, 28],
        shortName: 'knife_fork_plate'
      }, {
        name: 'Heart with Arrow',
        unified: '1F498',
        keywords: ['love', 'like', 'heart', 'affection', 'valentines'],
        sheet: [25, 34],
        shortName: 'cupid'
      }, {
        name: 'Rolled Up Newspaper',
        unified: '1F5DE-FE0F',
        sheet: [30, 23],
        shortName: 'rolled_up_newspaper'
      }, {
        name: 'Ship',
        unified: '1F6A2',
        keywords: ['transportation', 'titanic', 'deploy'],
        sheet: [34, 33],
        shortName: 'ship'
      }, {
        name: 'Farmer',
        unified: '1F9D1-200D-1F33E',
        sheet: [45, 17],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F33E',
          sheet: [45, 18],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F33E',
          sheet: [45, 19],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F33E',
          sheet: [45, 20],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F33E',
          sheet: [45, 21],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F33E',
          sheet: [45, 22],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'farmer'
      }, {
        name: 'Double Curly Loop',
        unified: '27BF',
        keywords: ['tape', 'cassette'],
        sheet: [55, 34],
        shortName: 'loop'
      }, {
        name: 'India Flag',
        unified: '1F1EE-1F1F3',
        sheet: [2, 27],
        shortName: 'flag-in'
      }, {
        name: 'Deciduous Tree',
        unified: '1F333',
        keywords: ['plant', 'nature'],
        sheet: [6, 11],
        shortName: 'deciduous_tree'
      }, {
        name: 'Fork and Knife',
        unified: '1F374',
        keywords: ['cutlery', 'kitchen'],
        sheet: [7, 19],
        shortName: 'fork_and_knife'
      }, {
        name: 'Male Farmer',
        unified: '1F468-200D-1F33E',
        sheet: [14, 38],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F33E',
          sheet: [14, 39]
        }, {
          unified: '1F468-1F3FC-200D-1F33E',
          sheet: [14, 40]
        }, {
          unified: '1F468-1F3FD-200D-1F33E',
          sheet: [14, 41]
        }, {
          unified: '1F468-1F3FE-200D-1F33E',
          sheet: [14, 42]
        }, {
          unified: '1F468-1F3FF-200D-1F33E',
          sheet: [14, 43]
        }],
        shortName: 'male-farmer'
      }, {
        name: 'Heart with Ribbon',
        unified: '1F49D',
        keywords: ['love', 'valentines'],
        sheet: [25, 39],
        shortName: 'gift_heart'
      }, {
        name: 'Bookmark Tabs',
        unified: '1F4D1',
        keywords: ['favorite', 'save', 'order', 'tidy'],
        sheet: [26, 39],
        shortName: 'bookmark_tabs'
      }, {
        name: 'Airplane',
        unified: '2708-FE0F',
        keywords: ['vehicle', 'transportation', 'flight', 'fly'],
        sheet: [54, 41],
        shortName: 'airplane'
      }, {
        name: 'Part Alternation Mark',
        unified: '303D-FE0F',
        keywords: ['graph', 'presentation', 'stats', 'business', 'economics', 'bad'],
        sheet: [55, 45],
        shortName: 'part_alternation_mark'
      }, {
        name: 'British Indian Ocean Territory Flag',
        unified: '1F1EE-1F1F4',
        sheet: [2, 28],
        shortName: 'flag-io'
      }, {
        name: 'Palm Tree',
        unified: '1F334',
        keywords: ['plant', 'vegetable', 'nature', 'summer', 'beach', 'mojito', 'tropical'],
        sheet: [6, 12],
        shortName: 'palm_tree'
      }, {
        name: 'Female Farmer',
        unified: '1F469-200D-1F33E',
        sheet: [17, 28],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F33E',
          sheet: [17, 29]
        }, {
          unified: '1F469-1F3FC-200D-1F33E',
          sheet: [17, 30]
        }, {
          unified: '1F469-1F3FD-200D-1F33E',
          sheet: [17, 31]
        }, {
          unified: '1F469-1F3FE-200D-1F33E',
          sheet: [17, 32]
        }, {
          unified: '1F469-1F3FF-200D-1F33E',
          sheet: [17, 33]
        }],
        shortName: 'female-farmer'
      }, {
        name: 'Sparkling Heart',
        unified: '1F496',
        keywords: ['love', 'like', 'affection', 'valentines'],
        sheet: [25, 32],
        shortName: 'sparkling_heart'
      }, {
        name: 'Bookmark',
        unified: '1F516',
        keywords: ['favorite', 'label', 'save'],
        sheet: [27, 50],
        shortName: 'bookmark'
      }, {
        name: 'Small Airplane',
        unified: '1F6E9-FE0F',
        keywords: ['flight', 'transportation', 'fly', 'vehicle'],
        sheet: [36, 48],
        shortName: 'small_airplane'
      }, {
        name: 'Spoon',
        unified: '1F944',
        keywords: ['cutlery', 'kitchen', 'tableware'],
        sheet: [41, 20],
        shortName: 'spoon'
      }, {
        name: 'Eight Spoked Asterisk',
        unified: '2733-FE0F',
        keywords: ['star', 'sparkle', 'green-square'],
        sheet: [55, 17],
        shortName: 'eight_spoked_asterisk'
      }, {
        name: 'Iraq Flag',
        unified: '1F1EE-1F1F6',
        sheet: [2, 29],
        shortName: 'flag-iq'
      }, {
        name: 'Cactus',
        unified: '1F335',
        keywords: ['vegetable', 'plant', 'nature'],
        sheet: [6, 13],
        shortName: 'cactus'
      }, {
        name: 'Label',
        unified: '1F3F7-FE0F',
        keywords: ['sale', 'tag'],
        sheet: [11, 19],
        shortName: 'label'
      }, {
        name: 'Growing Heart',
        unified: '1F497',
        keywords: ['like', 'love', 'affection', 'valentines', 'pink'],
        sheet: [25, 33],
        shortName: 'heartpulse'
      }, {
        name: 'Hocho',
        unified: '1F52A',
        keywords: ['knife', 'blade', 'cutlery', 'kitchen', 'weapon'],
        sheet: [28, 13],
        shortNames: ['knife'],
        shortName: 'hocho'
      }, {
        name: 'Airplane Departure',
        unified: '1F6EB',
        sheet: [36, 49],
        shortName: 'airplane_departure'
      }, {
        name: 'Cook',
        unified: '1F9D1-200D-1F373',
        sheet: [45, 23],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F373',
          sheet: [45, 24],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F373',
          sheet: [45, 25],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F373',
          sheet: [45, 26],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F373',
          sheet: [45, 27],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F373',
          sheet: [45, 28],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'cook'
      }, {
        name: 'Eight Pointed Black Star',
        unified: '2734-FE0F',
        keywords: ['orange-square', 'shape', 'polygon'],
        sheet: [55, 18],
        shortName: 'eight_pointed_black_star'
      }, {
        name: 'Iran Flag',
        unified: '1F1EE-1F1F7',
        sheet: [2, 30],
        shortName: 'flag-ir'
      }, {
        name: 'Ear of Rice',
        unified: '1F33E',
        keywords: ['nature', 'plant'],
        sheet: [6, 22],
        shortName: 'ear_of_rice'
      }, {
        name: 'Amphora',
        unified: '1F3FA',
        keywords: ['vase', 'jar'],
        sheet: [11, 22],
        shortName: 'amphora'
      }, {
        name: 'Male Cook',
        unified: '1F468-200D-1F373',
        sheet: [14, 44],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F373',
          sheet: [14, 45]
        }, {
          unified: '1F468-1F3FC-200D-1F373',
          sheet: [14, 46]
        }, {
          unified: '1F468-1F3FD-200D-1F373',
          sheet: [14, 47]
        }, {
          unified: '1F468-1F3FE-200D-1F373',
          sheet: [14, 48]
        }, {
          unified: '1F468-1F3FF-200D-1F373',
          sheet: [14, 49]
        }],
        shortName: 'male-cook'
      }, {
        name: 'Beating Heart',
        unified: '1F493',
        keywords: ['love', 'like', 'affection', 'valentines', 'pink', 'heart'],
        sheet: [25, 29],
        shortName: 'heartbeat'
      }, {
        name: 'Money Bag',
        unified: '1F4B0',
        keywords: ['dollar', 'payment', 'coins', 'sale'],
        sheet: [26, 6],
        shortName: 'moneybag'
      }, {
        name: 'Airplane Arriving',
        unified: '1F6EC',
        sheet: [36, 50],
        shortName: 'airplane_arriving'
      }, {
        name: 'Sparkle',
        unified: '2747-FE0F',
        keywords: ['stars', 'green-square', 'awesome', 'good', 'fireworks'],
        sheet: [55, 20],
        shortName: 'sparkle'
      }, {
        name: 'Iceland Flag',
        unified: '1F1EE-1F1F8',
        sheet: [2, 31],
        shortName: 'flag-is'
      }, {
        name: 'Herb',
        unified: '1F33F',
        keywords: ['vegetable', 'plant', 'medicine', 'weed', 'grass', 'lawn'],
        sheet: [6, 23],
        shortName: 'herb'
      }, {
        name: 'Female Cook',
        unified: '1F469-200D-1F373',
        sheet: [17, 34],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F373',
          sheet: [17, 35]
        }, {
          unified: '1F469-1F3FC-200D-1F373',
          sheet: [17, 36]
        }, {
          unified: '1F469-1F3FD-200D-1F373',
          sheet: [17, 37]
        }, {
          unified: '1F469-1F3FE-200D-1F373',
          sheet: [17, 38]
        }, {
          unified: '1F469-1F3FF-200D-1F373',
          sheet: [17, 39]
        }],
        shortName: 'female-cook'
      }, {
        name: 'Revolving Hearts',
        unified: '1F49E',
        keywords: ['love', 'like', 'affection', 'valentines'],
        sheet: [25, 40],
        shortName: 'revolving_hearts'
      }, {
        name: 'Banknote with Yen Sign',
        unified: '1F4B4',
        keywords: ['money', 'sales', 'japanese', 'dollar', 'currency'],
        sheet: [26, 10],
        shortName: 'yen'
      }, {
        name: 'Parachute',
        unified: '1FA82',
        sheet: [52, 3],
        shortName: 'parachute'
      }, {
        name: 'Double Exclamation Mark',
        unified: '203C-FE0F',
        keywords: ['exclamation', 'surprise'],
        sheet: [52, 10],
        shortName: 'bangbang'
      }, {
        name: 'Italy Flag',
        unified: '1F1EE-1F1F9',
        keywords: ['italy', 'flag', 'nation', 'country', 'banner'],
        sheet: [2, 32],
        shortNames: ['flag-it'],
        shortName: 'it'
      }, {
        name: 'Two Hearts',
        unified: '1F495',
        keywords: ['love', 'like', 'affection', 'valentines', 'heart'],
        sheet: [25, 31],
        shortName: 'two_hearts'
      }, {
        name: 'Banknote with Dollar Sign',
        unified: '1F4B5',
        keywords: ['money', 'sales', 'bill', 'currency'],
        sheet: [26, 11],
        shortName: 'dollar'
      }, {
        name: 'Seat',
        unified: '1F4BA',
        keywords: ['sit', 'airplane', 'transport', 'bus', 'flight', 'fly'],
        sheet: [26, 16],
        shortName: 'seat'
      }, {
        name: 'Mechanic',
        unified: '1F9D1-200D-1F527',
        sheet: [46, 14],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F527',
          sheet: [46, 15],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F527',
          sheet: [46, 16],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F527',
          sheet: [46, 17],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F527',
          sheet: [46, 18],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F527',
          sheet: [46, 19],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'mechanic'
      }, {
        name: 'Exclamation Question Mark',
        unified: '2049-FE0F',
        keywords: ['wat', 'punctuation', 'surprise'],
        sheet: [52, 11],
        shortName: 'interrobang'
      }, {
        name: 'Shamrock',
        unified: '2618-FE0F',
        keywords: ['vegetable', 'plant', 'nature', 'irish', 'clover'],
        sheet: [53, 1],
        shortName: 'shamrock'
      }, {
        name: 'Jersey Flag',
        unified: '1F1EF-1F1EA',
        sheet: [2, 33],
        shortName: 'flag-je'
      }, {
        name: 'Four Leaf Clover',
        unified: '1F340',
        keywords: ['vegetable', 'plant', 'nature', 'lucky', 'irish'],
        sheet: [6, 24],
        shortName: 'four_leaf_clover'
      }, {
        name: 'Male Mechanic',
        unified: '1F468-200D-1F527',
        sheet: [15, 50],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F527',
          sheet: [15, 51]
        }, {
          unified: '1F468-1F3FC-200D-1F527',
          sheet: [15, 52]
        }, {
          unified: '1F468-1F3FD-200D-1F527',
          sheet: [15, 53]
        }, {
          unified: '1F468-1F3FE-200D-1F527',
          sheet: [15, 54]
        }, {
          unified: '1F468-1F3FF-200D-1F527',
          sheet: [15, 55]
        }],
        shortName: 'male-mechanic'
      }, {
        name: 'Heart Decoration',
        unified: '1F49F',
        keywords: ['purple-square', 'love', 'like'],
        sheet: [25, 41],
        shortName: 'heart_decoration'
      }, {
        name: 'Banknote with Euro Sign',
        unified: '1F4B6',
        keywords: ['money', 'sales', 'dollar', 'currency'],
        sheet: [26, 12],
        shortName: 'euro'
      }, {
        name: 'Helicopter',
        unified: '1F681',
        keywords: ['transportation', 'vehicle', 'fly'],
        sheet: [34, 0],
        shortName: 'helicopter'
      }, {
        name: 'Black Question Mark Ornament',
        unified: '2753',
        keywords: ['doubt', 'confused'],
        sheet: [55, 23],
        shortName: 'question'
      }, {
        name: 'Jamaica Flag',
        unified: '1F1EF-1F1F2',
        sheet: [2, 34],
        shortName: 'flag-jm'
      }, {
        name: 'Maple Leaf',
        unified: '1F341',
        keywords: ['nature', 'plant', 'vegetable', 'ca', 'fall'],
        sheet: [6, 25],
        shortName: 'maple_leaf'
      }, {
        name: 'Female Mechanic',
        unified: '1F469-200D-1F527',
        sheet: [18, 35],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F527',
          sheet: [18, 36]
        }, {
          unified: '1F469-1F3FC-200D-1F527',
          sheet: [18, 37]
        }, {
          unified: '1F469-1F3FD-200D-1F527',
          sheet: [18, 38]
        }, {
          unified: '1F469-1F3FE-200D-1F527',
          sheet: [18, 39]
        }, {
          unified: '1F469-1F3FF-200D-1F527',
          sheet: [18, 40]
        }],
        shortName: 'female-mechanic'
      }, {
        name: 'Banknote with Pound Sign',
        unified: '1F4B7',
        keywords: ['british', 'sterling', 'money', 'sales', 'bills', 'uk', 'england', 'currency'],
        sheet: [26, 13],
        shortName: 'pound'
      }, {
        name: 'Suspension Railway',
        unified: '1F69F',
        keywords: ['vehicle', 'transportation'],
        sheet: [34, 30],
        shortName: 'suspension_railway'
      }, {
        name: 'White Question Mark Ornament',
        unified: '2754',
        keywords: ['doubts', 'gray', 'huh', 'confused'],
        sheet: [55, 24],
        shortName: 'grey_question'
      }, {
        name: 'Heavy Heart Exclamation Mark Ornament',
        unified: '2763-FE0F',
        sheet: [55, 27],
        shortName: 'heavy_heart_exclamation_mark_ornament'
      }, {
        name: 'Jordan Flag',
        unified: '1F1EF-1F1F4',
        sheet: [2, 35],
        shortName: 'flag-jo'
      }, {
        name: 'Fallen Leaf',
        unified: '1F342',
        keywords: ['nature', 'plant', 'vegetable', 'leaves'],
        sheet: [6, 26],
        shortName: 'fallen_leaf'
      }, {
        name: 'Broken Heart',
        unified: '1F494',
        text: '</3',
        emoticons: ['</3'],
        keywords: ['sad', 'sorry', 'break', 'heart', 'heartbreak'],
        sheet: [25, 30],
        shortName: 'broken_heart'
      }, {
        name: 'Money with Wings',
        unified: '1F4B8',
        keywords: ['dollar', 'bills', 'payment', 'sale'],
        sheet: [26, 14],
        shortName: 'money_with_wings'
      }, {
        name: 'Mountain Cableway',
        unified: '1F6A0',
        keywords: ['transportation', 'vehicle', 'ski'],
        sheet: [34, 31],
        shortName: 'mountain_cableway'
      }, {
        name: 'Factory Worker',
        unified: '1F9D1-200D-1F3ED',
        sheet: [45, 53],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F3ED',
          sheet: [45, 54],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F3ED',
          sheet: [45, 55],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F3ED',
          sheet: [45, 56],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F3ED',
          sheet: [46, 0],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F3ED',
          sheet: [46, 1],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'factory_worker'
      }, {
        name: 'White Exclamation Mark Ornament',
        unified: '2755',
        keywords: ['surprise', 'punctuation', 'gray', 'wow', 'warning'],
        sheet: [55, 25],
        shortName: 'grey_exclamation'
      }, {
        name: 'Japan Flag',
        unified: '1F1EF-1F1F5',
        keywords: ['japanese', 'nation', 'flag', 'country', 'banner'],
        sheet: [2, 36],
        shortNames: ['flag-jp'],
        shortName: 'jp'
      }, {
        name: 'Leaf Fluttering in Wind',
        unified: '1F343',
        keywords: ['nature', 'plant', 'tree', 'vegetable', 'grass', 'lawn', 'spring'],
        sheet: [6, 27],
        shortName: 'leaves'
      }, {
        name: 'Male Factory Worker',
        unified: '1F468-200D-1F3ED',
        sheet: [15, 17],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F3ED',
          sheet: [15, 18]
        }, {
          unified: '1F468-1F3FC-200D-1F3ED',
          sheet: [15, 19]
        }, {
          unified: '1F468-1F3FD-200D-1F3ED',
          sheet: [15, 20]
        }, {
          unified: '1F468-1F3FE-200D-1F3ED',
          sheet: [15, 21]
        }, {
          unified: '1F468-1F3FF-200D-1F3ED',
          sheet: [15, 22]
        }],
        shortName: 'male-factory-worker'
      }, {
        name: 'Credit Card',
        unified: '1F4B3',
        keywords: ['money', 'sales', 'dollar', 'bill', 'payment', 'shopping'],
        sheet: [26, 9],
        shortName: 'credit_card'
      }, {
        name: 'Aerial Tramway',
        unified: '1F6A1',
        keywords: ['transportation', 'vehicle', 'ski'],
        sheet: [34, 32],
        shortName: 'aerial_tramway'
      }, {
        name: 'Heavy Exclamation Mark Symbol',
        unified: '2757',
        keywords: ['heavy_exclamation_mark', 'danger', 'surprise', 'punctuation', 'wow', 'warning'],
        sheet: [55, 26],
        shortNames: ['heavy_exclamation_mark'],
        shortName: 'exclamation'
      }, {
        name: 'Heavy Black Heart',
        unified: '2764-FE0F',
        text: '<3',
        emoticons: ['<3'],
        keywords: ['love', 'like', 'valentines'],
        sheet: [55, 28],
        shortName: 'heart'
      }, {
        name: 'Kenya Flag',
        unified: '1F1F0-1F1EA',
        sheet: [2, 37],
        shortName: 'flag-ke'
      }, {
        name: 'Female Factory Worker',
        unified: '1F469-200D-1F3ED',
        sheet: [18, 7],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F3ED',
          sheet: [18, 8]
        }, {
          unified: '1F469-1F3FC-200D-1F3ED',
          sheet: [18, 9]
        }, {
          unified: '1F469-1F3FD-200D-1F3ED',
          sheet: [18, 10]
        }, {
          unified: '1F469-1F3FE-200D-1F3ED',
          sheet: [18, 11]
        }, {
          unified: '1F469-1F3FF-200D-1F3ED',
          sheet: [18, 12]
        }],
        shortName: 'female-factory-worker'
      }, {
        name: 'Satellite',
        unified: '1F6F0-FE0F',
        keywords: ['communication', 'future', 'radio', 'space'],
        sheet: [36, 51],
        shortName: 'satellite'
      }, {
        name: 'Orange Heart',
        unified: '1F9E1',
        keywords: ['love', 'like', 'affection', 'valentines'],
        sheet: [51, 20],
        shortName: 'orange_heart'
      }, {
        name: 'Receipt',
        unified: '1F9FE',
        keywords: ['accounting', 'expenses'],
        sheet: [51, 49],
        shortName: 'receipt'
      }, {
        name: 'Wavy Dash',
        unified: '3030-FE0F',
        keywords: ['draw', 'line', 'moustache', 'mustache', 'squiggle', 'scribble'],
        sheet: [55, 44],
        shortName: 'wavy_dash'
      }, {
        name: 'Copyright Sign',
        unified: '00A9-FE0F',
        keywords: ['ip', 'license', 'circle', 'law', 'legal'],
        sheet: [0, 12],
        hidden: ['facebook'],
        shortName: 'copyright'
      }, {
        name: 'Kyrgyzstan Flag',
        unified: '1F1F0-1F1EC',
        sheet: [2, 38],
        shortName: 'flag-kg'
      }, {
        name: 'Yellow Heart',
        unified: '1F49B',
        text: '<3',
        keywords: ['love', 'like', 'affection', 'valentines'],
        sheet: [25, 37],
        shortName: 'yellow_heart'
      }, {
        name: 'Chart with Upwards Trend and Yen Sign',
        unified: '1F4B9',
        keywords: ['green-square', 'graph', 'presentation', 'stats'],
        sheet: [26, 15],
        shortName: 'chart'
      }, {
        name: 'Rocket',
        unified: '1F680',
        keywords: ['launch', 'ship', 'staffmode', 'NASA', 'outer space', 'outer_space', 'fly'],
        sheet: [33, 56],
        shortName: 'rocket'
      }, {
        name: 'Office Worker',
        unified: '1F9D1-200D-1F4BC',
        sheet: [46, 8],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F4BC',
          sheet: [46, 9],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F4BC',
          sheet: [46, 10],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F4BC',
          sheet: [46, 11],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F4BC',
          sheet: [46, 12],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F4BC',
          sheet: [46, 13],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'office_worker'
      }, {
        name: 'Registered Sign',
        unified: '00AE-FE0F',
        keywords: ['alphabet', 'circle'],
        sheet: [0, 13],
        hidden: ['facebook'],
        shortName: 'registered'
      }, {
        name: 'Cambodia Flag',
        unified: '1F1F0-1F1ED',
        sheet: [2, 39],
        shortName: 'flag-kh'
      }, {
        name: 'Male Office Worker',
        unified: '1F468-200D-1F4BC',
        sheet: [15, 44],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F4BC',
          sheet: [15, 45]
        }, {
          unified: '1F468-1F3FC-200D-1F4BC',
          sheet: [15, 46]
        }, {
          unified: '1F468-1F3FD-200D-1F4BC',
          sheet: [15, 47]
        }, {
          unified: '1F468-1F3FE-200D-1F4BC',
          sheet: [15, 48]
        }, {
          unified: '1F468-1F3FF-200D-1F4BC',
          sheet: [15, 49]
        }],
        shortName: 'male-office-worker'
      }, {
        name: 'Green Heart',
        unified: '1F49A',
        text: '<3',
        keywords: ['love', 'like', 'affection', 'valentines'],
        sheet: [25, 36],
        shortName: 'green_heart'
      }, {
        name: 'Currency Exchange',
        unified: '1F4B1',
        keywords: ['money', 'sales', 'dollar', 'travel'],
        sheet: [26, 7],
        shortName: 'currency_exchange'
      }, {
        name: 'Flying Saucer',
        unified: '1F6F8',
        keywords: ['transportation', 'vehicle', 'ufo'],
        sheet: [37, 0],
        shortName: 'flying_saucer'
      }, {
        name: 'Kiribati Flag',
        unified: '1F1F0-1F1EE',
        sheet: [2, 40],
        shortName: 'flag-ki'
      }, {
        name: 'Female Office Worker',
        unified: '1F469-200D-1F4BC',
        sheet: [18, 29],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F4BC',
          sheet: [18, 30]
        }, {
          unified: '1F469-1F3FC-200D-1F4BC',
          sheet: [18, 31]
        }, {
          unified: '1F469-1F3FD-200D-1F4BC',
          sheet: [18, 32]
        }, {
          unified: '1F469-1F3FE-200D-1F4BC',
          sheet: [18, 33]
        }, {
          unified: '1F469-1F3FF-200D-1F4BC',
          sheet: [18, 34]
        }],
        shortName: 'female-office-worker'
      }, {
        name: 'Blue Heart',
        unified: '1F499',
        text: '<3',
        keywords: ['love', 'like', 'affection', 'valentines'],
        sheet: [25, 35],
        shortName: 'blue_heart'
      }, {
        name: 'Heavy Dollar Sign',
        unified: '1F4B2',
        keywords: ['money', 'sales', 'payment', 'currency', 'buck'],
        sheet: [26, 8],
        shortName: 'heavy_dollar_sign'
      }, {
        name: 'Bellhop Bell',
        unified: '1F6CE-FE0F',
        keywords: ['service'],
        sheet: [36, 36],
        shortName: 'bellhop_bell'
      }, {
        name: 'Trade Mark Sign',
        unified: '2122-FE0F',
        keywords: ['trademark', 'brand', 'law', 'legal'],
        sheet: [52, 12],
        shortName: 'tm'
      }, {
        name: 'Hash Key',
        unified: '0023-FE0F-20E3',
        keywords: ['symbol', 'blue-square', 'twitter'],
        sheet: [0, 0],
        hidden: ['facebook'],
        shortName: 'hash'
      }, {
        name: 'Comoros Flag',
        unified: '1F1F0-1F1F2',
        sheet: [2, 41],
        shortName: 'flag-km'
      }, {
        name: 'Purple Heart',
        unified: '1F49C',
        text: '<3',
        keywords: ['love', 'like', 'affection', 'valentines'],
        sheet: [25, 38],
        shortName: 'purple_heart'
      }, {
        name: 'Scientist',
        unified: '1F9D1-200D-1F52C',
        sheet: [46, 20],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F52C',
          sheet: [46, 21],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F52C',
          sheet: [46, 22],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F52C',
          sheet: [46, 23],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F52C',
          sheet: [46, 24],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F52C',
          sheet: [46, 25],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'scientist'
      }, {
        name: 'Luggage',
        unified: '1F9F3',
        keywords: ['packing', 'travel'],
        sheet: [51, 38],
        shortName: 'luggage'
      }, {
        name: 'Envelope',
        unified: '2709-FE0F',
        keywords: ['letter', 'postal', 'inbox', 'communication'],
        sheet: [54, 42],
        shortNames: ['envelope'],
        shortName: 'email'
      }, {
        name: 'Keycap Star',
        unified: '002A-FE0F-20E3',
        sheet: [0, 1],
        hidden: ['facebook'],
        shortName: 'keycap_star'
      }, {
        name: 'St. Kitts & Nevis Flag',
        unified: '1F1F0-1F1F3',
        sheet: [2, 42],
        shortName: 'flag-kn'
      }, {
        name: 'Male Scientist',
        unified: '1F468-200D-1F52C',
        sheet: [15, 56],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F52C',
          sheet: [16, 0]
        }, {
          unified: '1F468-1F3FC-200D-1F52C',
          sheet: [16, 1]
        }, {
          unified: '1F468-1F3FD-200D-1F52C',
          sheet: [16, 2]
        }, {
          unified: '1F468-1F3FE-200D-1F52C',
          sheet: [16, 3]
        }, {
          unified: '1F468-1F3FF-200D-1F52C',
          sheet: [16, 4]
        }],
        shortName: 'male-scientist'
      }, {
        name: 'E-Mail Symbol',
        unified: '1F4E7',
        keywords: ['communication', 'inbox'],
        sheet: [27, 4],
        shortName: 'e-mail'
      }, {
        name: 'Brown Heart',
        unified: '1F90E',
        sheet: [37, 16],
        shortName: 'brown_heart'
      }, {
        name: 'Hourglass',
        unified: '231B',
        keywords: ['time', 'clock', 'oldschool', 'limit', 'exam', 'quiz', 'test'],
        sheet: [52, 23],
        shortName: 'hourglass'
      }, {
        name: 'Keycap 0',
        unified: '0030-FE0F-20E3',
        keywords: ['0', 'numbers', 'blue-square', 'null'],
        sheet: [0, 2],
        hidden: ['facebook'],
        shortName: 'zero'
      }, {
        name: 'North Korea Flag',
        unified: '1F1F0-1F1F5',
        sheet: [2, 43],
        shortName: 'flag-kp'
      }, {
        name: 'Female Scientist',
        unified: '1F469-200D-1F52C',
        sheet: [18, 41],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F52C',
          sheet: [18, 42]
        }, {
          unified: '1F469-1F3FC-200D-1F52C',
          sheet: [18, 43]
        }, {
          unified: '1F469-1F3FD-200D-1F52C',
          sheet: [18, 44]
        }, {
          unified: '1F469-1F3FE-200D-1F52C',
          sheet: [18, 45]
        }, {
          unified: '1F469-1F3FF-200D-1F52C',
          sheet: [18, 46]
        }],
        shortName: 'female-scientist'
      }, {
        name: 'Incoming Envelope',
        unified: '1F4E8',
        keywords: ['email', 'inbox'],
        sheet: [27, 5],
        shortName: 'incoming_envelope'
      }, {
        name: 'Black Heart',
        unified: '1F5A4',
        keywords: ['evil'],
        sheet: [30, 9],
        shortName: 'black_heart'
      }, {
        name: 'Hourglass with Flowing Sand',
        unified: '23F3',
        keywords: ['oldschool', 'time', 'countdown'],
        sheet: [52, 36],
        shortName: 'hourglass_flowing_sand'
      }, {
        name: 'Keycap 1',
        unified: '0031-FE0F-20E3',
        keywords: ['blue-square', 'numbers', '1'],
        sheet: [0, 3],
        hidden: ['facebook'],
        shortName: 'one'
      }, {
        name: 'South Korea Flag',
        unified: '1F1F0-1F1F7',
        keywords: ['south', 'korea', 'nation', 'flag', 'country', 'banner'],
        sheet: [2, 44],
        shortNames: ['flag-kr'],
        shortName: 'kr'
      }, {
        name: 'Envelope with Downwards Arrow Above',
        unified: '1F4E9',
        keywords: ['email', 'communication'],
        sheet: [27, 6],
        shortName: 'envelope_with_arrow'
      }, {
        name: 'White Heart',
        unified: '1F90D',
        sheet: [37, 15],
        shortName: 'white_heart'
      }, {
        name: 'Technologist',
        unified: '1F9D1-200D-1F4BB',
        sheet: [46, 2],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F4BB',
          sheet: [46, 3],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F4BB',
          sheet: [46, 4],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F4BB',
          sheet: [46, 5],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F4BB',
          sheet: [46, 6],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F4BB',
          sheet: [46, 7],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'technologist'
      }, {
        name: 'Watch',
        unified: '231A',
        keywords: ['time', 'accessories'],
        sheet: [52, 22],
        shortName: 'watch'
      }, {
        name: 'Keycap 2',
        unified: '0032-FE0F-20E3',
        keywords: ['numbers', '2', 'prime', 'blue-square'],
        sheet: [0, 4],
        hidden: ['facebook'],
        shortName: 'two'
      }, {
        name: 'Kuwait Flag',
        unified: '1F1F0-1F1FC',
        sheet: [2, 45],
        shortName: 'flag-kw'
      }, {
        name: 'Male Technologist',
        unified: '1F468-200D-1F4BB',
        sheet: [15, 38],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F4BB',
          sheet: [15, 39]
        }, {
          unified: '1F468-1F3FC-200D-1F4BB',
          sheet: [15, 40]
        }, {
          unified: '1F468-1F3FD-200D-1F4BB',
          sheet: [15, 41]
        }, {
          unified: '1F468-1F3FE-200D-1F4BB',
          sheet: [15, 42]
        }, {
          unified: '1F468-1F3FF-200D-1F4BB',
          sheet: [15, 43]
        }],
        shortName: 'male-technologist'
      }, {
        name: 'Hundred Points Symbol',
        unified: '1F4AF',
        keywords: ['score', 'perfect', 'numbers', 'century', 'exam', 'quiz', 'test', 'pass', 'hundred'],
        sheet: [26, 5],
        shortName: '100'
      }, {
        name: 'Outbox Tray',
        unified: '1F4E4',
        keywords: ['inbox', 'email'],
        sheet: [27, 1],
        shortName: 'outbox_tray'
      }, {
        name: 'Alarm Clock',
        unified: '23F0',
        keywords: ['time', 'wake'],
        sheet: [52, 33],
        shortName: 'alarm_clock'
      }, {
        name: 'Keycap 3',
        unified: '0033-FE0F-20E3',
        keywords: ['3', 'numbers', 'prime', 'blue-square'],
        sheet: [0, 5],
        hidden: ['facebook'],
        shortName: 'three'
      }, {
        name: 'Cayman Islands Flag',
        unified: '1F1F0-1F1FE',
        sheet: [2, 46],
        shortName: 'flag-ky'
      }, {
        name: 'Female Technologist',
        unified: '1F469-200D-1F4BB',
        sheet: [18, 23],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F4BB',
          sheet: [18, 24]
        }, {
          unified: '1F469-1F3FC-200D-1F4BB',
          sheet: [18, 25]
        }, {
          unified: '1F469-1F3FD-200D-1F4BB',
          sheet: [18, 26]
        }, {
          unified: '1F469-1F3FE-200D-1F4BB',
          sheet: [18, 27]
        }, {
          unified: '1F469-1F3FF-200D-1F4BB',
          sheet: [18, 28]
        }],
        shortName: 'female-technologist'
      }, {
        name: 'Anger Symbol',
        unified: '1F4A2',
        keywords: ['angry', 'mad'],
        sheet: [25, 44],
        shortName: 'anger'
      }, {
        name: 'Inbox Tray',
        unified: '1F4E5',
        keywords: ['email', 'documents'],
        sheet: [27, 2],
        shortName: 'inbox_tray'
      }, {
        name: 'Stopwatch',
        unified: '23F1-FE0F',
        keywords: ['time', 'deadline'],
        sheet: [52, 34],
        shortName: 'stopwatch'
      }, {
        name: 'Keycap 4',
        unified: '0034-FE0F-20E3',
        keywords: ['4', 'numbers', 'blue-square'],
        sheet: [0, 6],
        hidden: ['facebook'],
        shortName: 'four'
      }, {
        name: 'Kazakhstan Flag',
        unified: '1F1F0-1F1FF',
        sheet: [2, 47],
        shortName: 'flag-kz'
      }, {
        name: 'Collision Symbol',
        unified: '1F4A5',
        keywords: ['bomb', 'explode', 'explosion', 'collision', 'blown'],
        sheet: [25, 47],
        shortNames: ['collision'],
        shortName: 'boom'
      }, {
        name: 'Package',
        unified: '1F4E6',
        keywords: ['mail', 'gift', 'cardboard', 'box', 'moving'],
        sheet: [27, 3],
        shortName: 'package'
      }, {
        name: 'Singer',
        unified: '1F9D1-200D-1F3A4',
        sheet: [45, 35],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F3A4',
          sheet: [45, 36],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F3A4',
          sheet: [45, 37],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F3A4',
          sheet: [45, 38],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F3A4',
          sheet: [45, 39],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F3A4',
          sheet: [45, 40],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'singer'
      }, {
        name: 'Timer Clock',
        unified: '23F2-FE0F',
        keywords: ['alarm'],
        sheet: [52, 35],
        shortName: 'timer_clock'
      }, {
        name: 'Keycap 5',
        unified: '0035-FE0F-20E3',
        keywords: ['5', 'numbers', 'blue-square', 'prime'],
        sheet: [0, 7],
        hidden: ['facebook'],
        shortName: 'five'
      }, {
        name: 'Laos Flag',
        unified: '1F1F1-1F1E6',
        sheet: [2, 48],
        shortName: 'flag-la'
      }, {
        name: 'Male Singer',
        unified: '1F468-200D-1F3A4',
        sheet: [14, 56],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F3A4',
          sheet: [15, 0]
        }, {
          unified: '1F468-1F3FC-200D-1F3A4',
          sheet: [15, 1]
        }, {
          unified: '1F468-1F3FD-200D-1F3A4',
          sheet: [15, 2]
        }, {
          unified: '1F468-1F3FE-200D-1F3A4',
          sheet: [15, 3]
        }, {
          unified: '1F468-1F3FF-200D-1F3A4',
          sheet: [15, 4]
        }],
        shortName: 'male-singer'
      }, {
        name: 'Dizzy Symbol',
        unified: '1F4AB',
        keywords: ['star', 'sparkle', 'shoot', 'magic'],
        sheet: [26, 1],
        shortName: 'dizzy'
      }, {
        name: 'Closed Mailbox with Raised Flag',
        unified: '1F4EB',
        keywords: ['email', 'inbox', 'communication'],
        sheet: [27, 8],
        shortName: 'mailbox'
      }, {
        name: 'Mantelpiece Clock',
        unified: '1F570-FE0F',
        keywords: ['time'],
        sheet: [29, 7],
        shortName: 'mantelpiece_clock'
      }, {
        name: 'Keycap 6',
        unified: '0036-FE0F-20E3',
        keywords: ['6', 'numbers', 'blue-square'],
        sheet: [0, 8],
        hidden: ['facebook'],
        shortName: 'six'
      }, {
        name: 'Lebanon Flag',
        unified: '1F1F1-1F1E7',
        sheet: [2, 49],
        shortName: 'flag-lb'
      }, {
        name: 'Female Singer',
        unified: '1F469-200D-1F3A4',
        sheet: [17, 46],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F3A4',
          sheet: [17, 47]
        }, {
          unified: '1F469-1F3FC-200D-1F3A4',
          sheet: [17, 48]
        }, {
          unified: '1F469-1F3FD-200D-1F3A4',
          sheet: [17, 49]
        }, {
          unified: '1F469-1F3FE-200D-1F3A4',
          sheet: [17, 50]
        }, {
          unified: '1F469-1F3FF-200D-1F3A4',
          sheet: [17, 51]
        }],
        shortName: 'female-singer'
      }, {
        name: 'Splashing Sweat Symbol',
        unified: '1F4A6',
        keywords: ['water', 'drip', 'oops'],
        sheet: [25, 48],
        shortName: 'sweat_drops'
      }, {
        name: 'Closed Mailbox with Lowered Flag',
        unified: '1F4EA',
        keywords: ['email', 'communication', 'inbox'],
        sheet: [27, 7],
        shortName: 'mailbox_closed'
      }, {
        name: 'Clock Face Twelve Oclock',
        unified: '1F55B',
        keywords: ['time', 'noon', 'midnight', 'midday', 'late', 'early', 'schedule'],
        sheet: [28, 50],
        shortName: 'clock12'
      }, {
        name: 'Keycap 7',
        unified: '0037-FE0F-20E3',
        keywords: ['7', 'numbers', 'blue-square', 'prime'],
        sheet: [0, 9],
        hidden: ['facebook'],
        shortName: 'seven'
      }, {
        name: 'St. Lucia Flag',
        unified: '1F1F1-1F1E8',
        sheet: [2, 50],
        shortName: 'flag-lc'
      }, {
        name: 'Dash Symbol',
        unified: '1F4A8',
        keywords: ['wind', 'air', 'fast', 'shoo', 'fart', 'smoke', 'puff'],
        sheet: [25, 50],
        shortName: 'dash'
      }, {
        name: 'Open Mailbox with Raised Flag',
        unified: '1F4EC',
        keywords: ['email', 'inbox', 'communication'],
        sheet: [27, 9],
        shortName: 'mailbox_with_mail'
      }, {
        name: 'Clock Face Twelve-Thirty',
        unified: '1F567',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [29, 5],
        shortName: 'clock1230'
      }, {
        name: 'Artist',
        unified: '1F9D1-200D-1F3A8',
        sheet: [45, 41],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F3A8',
          sheet: [45, 42],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F3A8',
          sheet: [45, 43],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F3A8',
          sheet: [45, 44],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F3A8',
          sheet: [45, 45],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F3A8',
          sheet: [45, 46],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'artist'
      }, {
        name: 'Keycap 8',
        unified: '0038-FE0F-20E3',
        keywords: ['8', 'blue-square', 'numbers'],
        sheet: [0, 10],
        hidden: ['facebook'],
        shortName: 'eight'
      }, {
        name: 'Liechtenstein Flag',
        unified: '1F1F1-1F1EE',
        sheet: [2, 51],
        shortName: 'flag-li'
      }, {
        name: 'Male Artist',
        unified: '1F468-200D-1F3A8',
        sheet: [15, 5],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F3A8',
          sheet: [15, 6]
        }, {
          unified: '1F468-1F3FC-200D-1F3A8',
          sheet: [15, 7]
        }, {
          unified: '1F468-1F3FD-200D-1F3A8',
          sheet: [15, 8]
        }, {
          unified: '1F468-1F3FE-200D-1F3A8',
          sheet: [15, 9]
        }, {
          unified: '1F468-1F3FF-200D-1F3A8',
          sheet: [15, 10]
        }],
        shortName: 'male-artist'
      }, {
        name: 'Open Mailbox with Lowered Flag',
        unified: '1F4ED',
        keywords: ['email', 'inbox'],
        sheet: [27, 10],
        shortName: 'mailbox_with_no_mail'
      }, {
        name: 'Clock Face One Oclock',
        unified: '1F550',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 39],
        shortName: 'clock1'
      }, {
        name: 'Hole',
        unified: '1F573-FE0F',
        keywords: ['embarrassing'],
        sheet: [29, 8],
        shortName: 'hole'
      }, {
        name: 'Keycap 9',
        unified: '0039-FE0F-20E3',
        keywords: ['blue-square', 'numbers', '9'],
        sheet: [0, 11],
        hidden: ['facebook'],
        shortName: 'nine'
      }, {
        name: 'Sri Lanka Flag',
        unified: '1F1F1-1F1F0',
        sheet: [2, 52],
        shortName: 'flag-lk'
      }, {
        name: 'Female Artist',
        unified: '1F469-200D-1F3A8',
        sheet: [17, 52],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F3A8',
          sheet: [17, 53]
        }, {
          unified: '1F469-1F3FC-200D-1F3A8',
          sheet: [17, 54]
        }, {
          unified: '1F469-1F3FD-200D-1F3A8',
          sheet: [17, 55]
        }, {
          unified: '1F469-1F3FE-200D-1F3A8',
          sheet: [17, 56]
        }, {
          unified: '1F469-1F3FF-200D-1F3A8',
          sheet: [18, 0]
        }],
        shortName: 'female-artist'
      }, {
        name: 'Bomb',
        unified: '1F4A3',
        keywords: ['boom', 'explode', 'explosion', 'terrorism'],
        sheet: [25, 45],
        shortName: 'bomb'
      }, {
        name: 'Postbox',
        unified: '1F4EE',
        keywords: ['email', 'letter', 'envelope'],
        sheet: [27, 11],
        shortName: 'postbox'
      }, {
        name: 'Clock Face One-Thirty',
        unified: '1F55C',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 51],
        shortName: 'clock130'
      }, {
        name: 'Liberia Flag',
        unified: '1F1F1-1F1F7',
        sheet: [2, 53],
        shortName: 'flag-lr'
      }, {
        name: 'Speech Balloon',
        unified: '1F4AC',
        keywords: ['bubble', 'words', 'message', 'talk', 'chatting'],
        sheet: [26, 2],
        shortName: 'speech_balloon'
      }, {
        name: 'Keycap Ten',
        unified: '1F51F',
        keywords: ['numbers', '10', 'blue-square'],
        sheet: [28, 2],
        shortName: 'keycap_ten'
      }, {
        name: 'Clock Face Two Oclock',
        unified: '1F551',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 40],
        shortName: 'clock2'
      }, {
        name: 'Ballot Box with Ballot',
        unified: '1F5F3-FE0F',
        sheet: [30, 28],
        shortName: 'ballot_box_with_ballot'
      }, {
        name: 'Pilot',
        unified: '1F9D1-200D-2708-FE0F',
        sheet: [48, 4],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-2708-FE0F',
          sheet: [48, 5],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-2708-FE0F',
          sheet: [48, 6],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-2708-FE0F',
          sheet: [48, 7],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-2708-FE0F',
          sheet: [48, 8],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-2708-FE0F',
          sheet: [48, 9],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'pilot'
      }, {
        name: 'Lesotho Flag',
        unified: '1F1F1-1F1F8',
        sheet: [2, 54],
        shortName: 'flag-ls'
      }, {
        name: 'Eye in Speech Bubble',
        unified: '1F441-FE0F-200D-1F5E8-FE0F',
        sheet: [12, 37],
        hidden: ['twitter', 'facebook'],
        shortName: 'eye-in-speech-bubble'
      }, {
        name: 'Male Pilot',
        unified: '1F468-200D-2708-FE0F',
        sheet: [17, 14],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-2708-FE0F',
          sheet: [17, 15]
        }, {
          unified: '1F468-1F3FC-200D-2708-FE0F',
          sheet: [17, 16]
        }, {
          unified: '1F468-1F3FD-200D-2708-FE0F',
          sheet: [17, 17]
        }, {
          unified: '1F468-1F3FE-200D-2708-FE0F',
          sheet: [17, 18]
        }, {
          unified: '1F468-1F3FF-200D-2708-FE0F',
          sheet: [17, 19]
        }],
        shortName: 'male-pilot'
      }, {
        name: 'Input Symbol for Latin Capital Letters',
        unified: '1F520',
        keywords: ['alphabet', 'words', 'blue-square'],
        sheet: [28, 3],
        shortName: 'capital_abcd'
      }, {
        name: 'Clock Face Two-Thirty',
        unified: '1F55D',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 52],
        shortName: 'clock230'
      }, {
        name: 'Pencil',
        unified: '270F-FE0F',
        keywords: ['stationery', 'write', 'paper', 'writing', 'school', 'study'],
        sheet: [55, 10],
        shortName: 'pencil2'
      }, {
        name: 'Lithuania Flag',
        unified: '1F1F1-1F1F9',
        sheet: [2, 55],
        shortName: 'flag-lt'
      }, {
        name: 'Female Pilot',
        unified: '1F469-200D-2708-FE0F',
        sheet: [19, 56],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-2708-FE0F',
          sheet: [20, 0]
        }, {
          unified: '1F469-1F3FC-200D-2708-FE0F',
          sheet: [20, 1]
        }, {
          unified: '1F469-1F3FD-200D-2708-FE0F',
          sheet: [20, 2]
        }, {
          unified: '1F469-1F3FE-200D-2708-FE0F',
          sheet: [20, 3]
        }, {
          unified: '1F469-1F3FF-200D-2708-FE0F',
          sheet: [20, 4]
        }],
        shortName: 'female-pilot'
      }, {
        name: 'Input Symbol for Latin Small Letters',
        unified: '1F521',
        keywords: ['blue-square', 'alphabet'],
        sheet: [28, 4],
        shortName: 'abcd'
      }, {
        name: 'Clock Face Three Oclock',
        unified: '1F552',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 41],
        shortName: 'clock3'
      }, {
        name: 'Left Speech Bubble',
        unified: '1F5E8-FE0F',
        keywords: ['words', 'message', 'talk', 'chatting'],
        sheet: [30, 26],
        shortName: 'left_speech_bubble'
      }, {
        name: 'Black Nib',
        unified: '2712-FE0F',
        keywords: ['pen', 'stationery', 'writing', 'write'],
        sheet: [55, 11],
        shortName: 'black_nib'
      }, {
        name: 'Luxembourg Flag',
        unified: '1F1F1-1F1FA',
        sheet: [2, 56],
        shortName: 'flag-lu'
      }, {
        name: 'Input Symbol for Numbers',
        unified: '1F522',
        keywords: ['numbers', 'blue-square'],
        sheet: [28, 5],
        shortName: '1234'
      }, {
        name: 'Clock Face Three-Thirty',
        unified: '1F55E',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 53],
        shortName: 'clock330'
      }, {
        name: 'Lower Left Fountain Pen',
        unified: '1F58B-FE0F',
        sheet: [29, 45],
        shortName: 'lower_left_fountain_pen'
      }, {
        name: 'Right Anger Bubble',
        unified: '1F5EF-FE0F',
        keywords: ['caption', 'speech', 'thinking', 'mad'],
        sheet: [30, 27],
        shortName: 'right_anger_bubble'
      }, {
        name: 'Astronaut',
        unified: '1F9D1-200D-1F680',
        sheet: [46, 26],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F680',
          sheet: [46, 27],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F680',
          sheet: [46, 28],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F680',
          sheet: [46, 29],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F680',
          sheet: [46, 30],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F680',
          sheet: [46, 31],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'astronaut'
      }, {
        name: 'Latvia Flag',
        unified: '1F1F1-1F1FB',
        sheet: [3, 0],
        shortName: 'flag-lv'
      }, {
        name: 'Male Astronaut',
        unified: '1F468-200D-1F680',
        sheet: [16, 5],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F680',
          sheet: [16, 6]
        }, {
          unified: '1F468-1F3FC-200D-1F680',
          sheet: [16, 7]
        }, {
          unified: '1F468-1F3FD-200D-1F680',
          sheet: [16, 8]
        }, {
          unified: '1F468-1F3FE-200D-1F680',
          sheet: [16, 9]
        }, {
          unified: '1F468-1F3FF-200D-1F680',
          sheet: [16, 10]
        }],
        shortName: 'male-astronaut'
      }, {
        name: 'Thought Balloon',
        unified: '1F4AD',
        keywords: ['bubble', 'cloud', 'speech', 'thinking', 'dream'],
        sheet: [26, 3],
        shortName: 'thought_balloon'
      }, {
        name: 'Input Symbol for Symbols',
        unified: '1F523',
        keywords: ['blue-square', 'music', 'note', 'ampersand', 'percent', 'glyphs', 'characters'],
        sheet: [28, 6],
        shortName: 'symbols'
      }, {
        name: 'Clock Face Four Oclock',
        unified: '1F553',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 42],
        shortName: 'clock4'
      }, {
        name: 'Lower Left Ballpoint Pen',
        unified: '1F58A-FE0F',
        sheet: [29, 44],
        shortName: 'lower_left_ballpoint_pen'
      }, {
        name: 'Libya Flag',
        unified: '1F1F1-1F1FE',
        sheet: [3, 1],
        shortName: 'flag-ly'
      }, {
        name: 'Female Astronaut',
        unified: '1F469-200D-1F680',
        sheet: [18, 47],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F680',
          sheet: [18, 48]
        }, {
          unified: '1F469-1F3FC-200D-1F680',
          sheet: [18, 49]
        }, {
          unified: '1F469-1F3FD-200D-1F680',
          sheet: [18, 50]
        }, {
          unified: '1F469-1F3FE-200D-1F680',
          sheet: [18, 51]
        }, {
          unified: '1F469-1F3FF-200D-1F680',
          sheet: [18, 52]
        }],
        shortName: 'female-astronaut'
      }, {
        name: 'Sleeping Symbol',
        unified: '1F4A4',
        keywords: ['sleepy', 'tired', 'dream'],
        sheet: [25, 46],
        shortName: 'zzz'
      }, {
        name: 'Input Symbol for Latin Letters',
        unified: '1F524',
        keywords: ['blue-square', 'alphabet'],
        sheet: [28, 7],
        shortName: 'abc'
      }, {
        name: 'Clock Face Four-Thirty',
        unified: '1F55F',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 54],
        shortName: 'clock430'
      }, {
        name: 'Lower Left Paintbrush',
        unified: '1F58C-FE0F',
        sheet: [29, 46],
        shortName: 'lower_left_paintbrush'
      }, {
        name: 'Negative Squared Latin Capital Letter a',
        unified: '1F170-FE0F',
        keywords: ['red-square', 'alphabet', 'letter'],
        sheet: [0, 16],
        shortName: 'a'
      }, {
        name: 'Morocco Flag',
        unified: '1F1F2-1F1E6',
        sheet: [3, 2],
        shortName: 'flag-ma'
      }, {
        name: 'Clock Face Five Oclock',
        unified: '1F554',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 43],
        shortName: 'clock5'
      }, {
        name: 'Lower Left Crayon',
        unified: '1F58D-FE0F',
        sheet: [29, 47],
        shortName: 'lower_left_crayon'
      }, {
        name: 'Firefighter',
        unified: '1F9D1-200D-1F692',
        sheet: [46, 32],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F692',
          sheet: [46, 33],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F692',
          sheet: [46, 34],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F692',
          sheet: [46, 35],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F692',
          sheet: [46, 36],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F692',
          sheet: [46, 37],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'firefighter'
      }, {
        name: 'Negative Squared Ab',
        unified: '1F18E',
        keywords: ['red-square', 'alphabet'],
        sheet: [0, 20],
        shortName: 'ab'
      }, {
        name: 'Monaco Flag',
        unified: '1F1F2-1F1E8',
        sheet: [3, 3],
        shortName: 'flag-mc'
      }, {
        name: 'Male Firefighter',
        unified: '1F468-200D-1F692',
        sheet: [16, 11],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F692',
          sheet: [16, 12]
        }, {
          unified: '1F468-1F3FC-200D-1F692',
          sheet: [16, 13]
        }, {
          unified: '1F468-1F3FD-200D-1F692',
          sheet: [16, 14]
        }, {
          unified: '1F468-1F3FE-200D-1F692',
          sheet: [16, 15]
        }, {
          unified: '1F468-1F3FF-200D-1F692',
          sheet: [16, 16]
        }],
        shortName: 'male-firefighter'
      }, {
        name: 'Memo',
        unified: '1F4DD',
        keywords: ['write', 'documents', 'stationery', 'pencil', 'paper', 'writing', 'legal', 'exam', 'quiz', 'test', 'study', 'compose'],
        sheet: [26, 51],
        shortNames: ['pencil'],
        shortName: 'memo'
      }, {
        name: 'Clock Face Five-Thirty',
        unified: '1F560',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 55],
        shortName: 'clock530'
      }, {
        name: 'Negative Squared Latin Capital Letter B',
        unified: '1F171-FE0F',
        keywords: ['red-square', 'alphabet', 'letter'],
        sheet: [0, 17],
        shortName: 'b'
      }, {
        name: 'Moldova Flag',
        unified: '1F1F2-1F1E9',
        sheet: [3, 4],
        shortName: 'flag-md'
      }, {
        name: 'Female Firefighter',
        unified: '1F469-200D-1F692',
        sheet: [18, 53],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F692',
          sheet: [18, 54]
        }, {
          unified: '1F469-1F3FC-200D-1F692',
          sheet: [18, 55]
        }, {
          unified: '1F469-1F3FD-200D-1F692',
          sheet: [18, 56]
        }, {
          unified: '1F469-1F3FE-200D-1F692',
          sheet: [19, 0]
        }, {
          unified: '1F469-1F3FF-200D-1F692',
          sheet: [19, 1]
        }],
        shortName: 'female-firefighter'
      }, {
        name: 'Briefcase',
        unified: '1F4BC',
        keywords: ['business', 'documents', 'work', 'law', 'legal', 'job', 'career'],
        sheet: [26, 18],
        shortName: 'briefcase'
      }, {
        name: 'Clock Face Six Oclock',
        unified: '1F555',
        keywords: ['time', 'late', 'early', 'schedule', 'dawn', 'dusk'],
        sheet: [28, 44],
        shortName: 'clock6'
      }, {
        name: 'Squared Cl',
        unified: '1F191',
        keywords: ['alphabet', 'words', 'red-square'],
        sheet: [0, 21],
        shortName: 'cl'
      }, {
        name: 'Montenegro Flag',
        unified: '1F1F2-1F1EA',
        sheet: [3, 5],
        shortName: 'flag-me'
      }, {
        name: 'Police Officer',
        unified: '1F46E',
        sheet: [21, 49],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F46E-1F3FB',
          sheet: [21, 50],
          hidden: ['facebook']
        }, {
          unified: '1F46E-1F3FC',
          sheet: [21, 51],
          hidden: ['facebook']
        }, {
          unified: '1F46E-1F3FD',
          sheet: [21, 52],
          hidden: ['facebook']
        }, {
          unified: '1F46E-1F3FE',
          sheet: [21, 53],
          hidden: ['facebook']
        }, {
          unified: '1F46E-1F3FF',
          sheet: [21, 54],
          hidden: ['facebook']
        }],
        shortName: 'cop',
        obsoletedBy: '1F46E-200D-2642-FE0F'
      }, {
        name: 'File Folder',
        unified: '1F4C1',
        keywords: ['documents', 'business', 'office'],
        sheet: [26, 23],
        shortName: 'file_folder'
      }, {
        name: 'Clock Face Six-Thirty',
        unified: '1F561',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 56],
        shortName: 'clock630'
      }, {
        name: 'Squared Cool',
        unified: '1F192',
        keywords: ['words', 'blue-square'],
        sheet: [0, 22],
        shortName: 'cool'
      }, {
        name: 'St. Martin Flag',
        unified: '1F1F2-1F1EB',
        sheet: [3, 6],
        shortName: 'flag-mf'
      }, {
        name: 'Male Police Officer',
        unified: '1F46E-200D-2642-FE0F',
        obsoletes: '1F46E',
        sheet: [21, 43],
        skinVariations: [{
          unified: '1F46E-1F3FB-200D-2642-FE0F',
          sheet: [21, 44]
        }, {
          unified: '1F46E-1F3FC-200D-2642-FE0F',
          sheet: [21, 45]
        }, {
          unified: '1F46E-1F3FD-200D-2642-FE0F',
          sheet: [21, 46]
        }, {
          unified: '1F46E-1F3FE-200D-2642-FE0F',
          sheet: [21, 47]
        }, {
          unified: '1F46E-1F3FF-200D-2642-FE0F',
          sheet: [21, 48]
        }],
        shortName: 'male-police-officer'
      }, {
        name: 'Open File Folder',
        unified: '1F4C2',
        keywords: ['documents', 'load'],
        sheet: [26, 24],
        shortName: 'open_file_folder'
      }, {
        name: 'Clock Face Seven Oclock',
        unified: '1F556',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 45],
        shortName: 'clock7'
      }, {
        name: 'Squared Free',
        unified: '1F193',
        keywords: ['blue-square', 'words'],
        sheet: [0, 23],
        shortName: 'free'
      }, {
        name: 'Madagascar Flag',
        unified: '1F1F2-1F1EC',
        sheet: [3, 7],
        shortName: 'flag-mg'
      }, {
        name: 'Female Police Officer',
        unified: '1F46E-200D-2640-FE0F',
        sheet: [21, 37],
        skinVariations: [{
          unified: '1F46E-1F3FB-200D-2640-FE0F',
          sheet: [21, 38]
        }, {
          unified: '1F46E-1F3FC-200D-2640-FE0F',
          sheet: [21, 39]
        }, {
          unified: '1F46E-1F3FD-200D-2640-FE0F',
          sheet: [21, 40]
        }, {
          unified: '1F46E-1F3FE-200D-2640-FE0F',
          sheet: [21, 41]
        }, {
          unified: '1F46E-1F3FF-200D-2640-FE0F',
          sheet: [21, 42]
        }],
        shortName: 'female-police-officer'
      }, {
        name: 'Clock Face Seven-Thirty',
        unified: '1F562',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [29, 0],
        shortName: 'clock730'
      }, {
        name: 'Card Index Dividers',
        unified: '1F5C2-FE0F',
        keywords: ['organizing', 'business', 'stationery'],
        sheet: [30, 15],
        shortName: 'card_index_dividers'
      }, {
        name: 'Marshall Islands Flag',
        unified: '1F1F2-1F1ED',
        sheet: [3, 8],
        shortName: 'flag-mh'
      }, {
        name: 'Calendar',
        unified: '1F4C5',
        keywords: ['calendar', 'schedule'],
        sheet: [26, 27],
        shortName: 'date'
      }, {
        name: 'Clock Face Eight Oclock',
        unified: '1F557',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 46],
        shortName: 'clock8'
      }, {
        name: 'Sleuth or Spy',
        unified: '1F575-FE0F',
        sheet: [29, 27],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F575-1F3FB',
          sheet: [29, 28],
          hidden: ['facebook']
        }, {
          unified: '1F575-1F3FC',
          sheet: [29, 29],
          hidden: ['facebook']
        }, {
          unified: '1F575-1F3FD',
          sheet: [29, 30],
          hidden: ['facebook']
        }, {
          unified: '1F575-1F3FE',
          sheet: [29, 31],
          hidden: ['facebook']
        }, {
          unified: '1F575-1F3FF',
          sheet: [29, 32],
          hidden: ['facebook']
        }],
        shortName: 'sleuth_or_spy',
        obsoletedBy: '1F575-FE0F-200D-2642-FE0F'
      }, {
        name: 'Information Source',
        unified: '2139-FE0F',
        keywords: ['blue-square', 'alphabet', 'letter'],
        sheet: [52, 13],
        shortName: 'information_source'
      }, {
        name: 'Squared Id',
        unified: '1F194',
        keywords: ['purple-square', 'words'],
        sheet: [0, 24],
        shortName: 'id'
      }, {
        name: 'North Macedonia Flag',
        unified: '1F1F2-1F1F0',
        sheet: [3, 9],
        shortName: 'flag-mk'
      }, {
        name: 'Tear-off Calendar',
        unified: '1F4C6',
        keywords: ['schedule', 'date', 'planning'],
        sheet: [26, 28],
        shortName: 'calendar'
      }, {
        name: 'Clock Face Eight-Thirty',
        unified: '1F563',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [29, 1],
        shortName: 'clock830'
      }, {
        name: 'Male Detective',
        unified: '1F575-FE0F-200D-2642-FE0F',
        obsoletes: '1F575-FE0F',
        sheet: [29, 21],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F575-1F3FB-200D-2642-FE0F',
          sheet: [29, 22]
        }, {
          unified: '1F575-1F3FC-200D-2642-FE0F',
          sheet: [29, 23]
        }, {
          unified: '1F575-1F3FD-200D-2642-FE0F',
          sheet: [29, 24]
        }, {
          unified: '1F575-1F3FE-200D-2642-FE0F',
          sheet: [29, 25]
        }, {
          unified: '1F575-1F3FF-200D-2642-FE0F',
          sheet: [29, 26]
        }],
        shortName: 'male-detective'
      }, {
        name: 'Mali Flag',
        unified: '1F1F2-1F1F1',
        sheet: [3, 10],
        shortName: 'flag-ml'
      }, {
        name: 'Clock Face Nine Oclock',
        unified: '1F558',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 47],
        shortName: 'clock9'
      }, {
        name: 'Female Detective',
        unified: '1F575-FE0F-200D-2640-FE0F',
        sheet: [29, 15],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F575-1F3FB-200D-2640-FE0F',
          sheet: [29, 16]
        }, {
          unified: '1F575-1F3FC-200D-2640-FE0F',
          sheet: [29, 17]
        }, {
          unified: '1F575-1F3FD-200D-2640-FE0F',
          sheet: [29, 18]
        }, {
          unified: '1F575-1F3FE-200D-2640-FE0F',
          sheet: [29, 19]
        }, {
          unified: '1F575-1F3FF-200D-2640-FE0F',
          sheet: [29, 20]
        }],
        shortName: 'female-detective'
      }, {
        name: 'Spiral Note Pad',
        unified: '1F5D2-FE0F',
        sheet: [30, 19],
        shortName: 'spiral_note_pad'
      }, {
        name: 'Circled Latin Capital Letter M',
        unified: '24C2-FE0F',
        keywords: ['alphabet', 'blue-circle', 'letter'],
        sheet: [52, 40],
        shortName: 'm'
      }, {
        name: 'Squared New',
        unified: '1F195',
        keywords: ['blue-square', 'words', 'start'],
        sheet: [0, 25],
        shortName: 'new'
      }, {
        name: 'Myanmar (burma) Flag',
        unified: '1F1F2-1F1F2',
        sheet: [3, 11],
        shortName: 'flag-mm'
      }, {
        name: 'Guardsman',
        unified: '1F482',
        keywords: ['uk', 'gb', 'british', 'male', 'guy', 'royal'],
        sheet: [24, 20],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F482-1F3FB',
          sheet: [24, 21],
          hidden: ['facebook']
        }, {
          unified: '1F482-1F3FC',
          sheet: [24, 22],
          hidden: ['facebook']
        }, {
          unified: '1F482-1F3FD',
          sheet: [24, 23],
          hidden: ['facebook']
        }, {
          unified: '1F482-1F3FE',
          sheet: [24, 24],
          hidden: ['facebook']
        }, {
          unified: '1F482-1F3FF',
          sheet: [24, 25],
          hidden: ['facebook']
        }],
        shortName: 'guardsman',
        obsoletedBy: '1F482-200D-2642-FE0F'
      }, {
        name: 'Clock Face Nine-Thirty',
        unified: '1F564',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [29, 2],
        shortName: 'clock930'
      }, {
        name: 'Spiral Calendar Pad',
        unified: '1F5D3-FE0F',
        sheet: [30, 20],
        shortName: 'spiral_calendar_pad'
      }, {
        name: 'Squared Ng',
        unified: '1F196',
        keywords: ['blue-square', 'words', 'shape', 'icon'],
        sheet: [0, 26],
        shortName: 'ng'
      }, {
        name: 'Mongolia Flag',
        unified: '1F1F2-1F1F3',
        sheet: [3, 12],
        shortName: 'flag-mn'
      }, {
        name: 'Male Guard',
        unified: '1F482-200D-2642-FE0F',
        obsoletes: '1F482',
        sheet: [24, 14],
        skinVariations: [{
          unified: '1F482-1F3FB-200D-2642-FE0F',
          sheet: [24, 15]
        }, {
          unified: '1F482-1F3FC-200D-2642-FE0F',
          sheet: [24, 16]
        }, {
          unified: '1F482-1F3FD-200D-2642-FE0F',
          sheet: [24, 17]
        }, {
          unified: '1F482-1F3FE-200D-2642-FE0F',
          sheet: [24, 18]
        }, {
          unified: '1F482-1F3FF-200D-2642-FE0F',
          sheet: [24, 19]
        }],
        shortName: 'male-guard'
      }, {
        name: 'Card Index',
        unified: '1F4C7',
        keywords: ['business', 'stationery'],
        sheet: [26, 29],
        shortName: 'card_index'
      }, {
        name: 'Clock Face Ten Oclock',
        unified: '1F559',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 48],
        shortName: 'clock10'
      }, {
        name: 'Negative Squared Latin Capital Letter O',
        unified: '1F17E-FE0F',
        keywords: ['alphabet', 'red-square', 'letter'],
        sheet: [0, 18],
        shortName: 'o2'
      }, {
        name: 'Macao Sar China Flag',
        unified: '1F1F2-1F1F4',
        sheet: [3, 13],
        shortName: 'flag-mo'
      }, {
        name: 'Female Guard',
        unified: '1F482-200D-2640-FE0F',
        sheet: [24, 8],
        skinVariations: [{
          unified: '1F482-1F3FB-200D-2640-FE0F',
          sheet: [24, 9]
        }, {
          unified: '1F482-1F3FC-200D-2640-FE0F',
          sheet: [24, 10]
        }, {
          unified: '1F482-1F3FD-200D-2640-FE0F',
          sheet: [24, 11]
        }, {
          unified: '1F482-1F3FE-200D-2640-FE0F',
          sheet: [24, 12]
        }, {
          unified: '1F482-1F3FF-200D-2640-FE0F',
          sheet: [24, 13]
        }],
        shortName: 'female-guard'
      }, {
        name: 'Chart with Upwards Trend',
        unified: '1F4C8',
        keywords: ['graph', 'presentation', 'stats', 'recovery', 'business', 'economics', 'money', 'sales', 'good', 'success'],
        sheet: [26, 30],
        shortName: 'chart_with_upwards_trend'
      }, {
        name: 'Clock Face Ten-Thirty',
        unified: '1F565',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [29, 3],
        shortName: 'clock1030'
      }, {
        name: 'Squared Ok',
        unified: '1F197',
        keywords: ['good', 'agree', 'yes', 'blue-square'],
        sheet: [0, 27],
        shortName: 'ok'
      }, {
        name: 'Northern Mariana Islands Flag',
        unified: '1F1F2-1F1F5',
        sheet: [3, 14],
        shortName: 'flag-mp'
      }, {
        name: 'Construction Worker',
        unified: '1F477',
        sheet: [23, 22],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F477-1F3FB',
          sheet: [23, 23],
          hidden: ['facebook']
        }, {
          unified: '1F477-1F3FC',
          sheet: [23, 24],
          hidden: ['facebook']
        }, {
          unified: '1F477-1F3FD',
          sheet: [23, 25],
          hidden: ['facebook']
        }, {
          unified: '1F477-1F3FE',
          sheet: [23, 26],
          hidden: ['facebook']
        }, {
          unified: '1F477-1F3FF',
          sheet: [23, 27],
          hidden: ['facebook']
        }],
        shortName: 'construction_worker',
        obsoletedBy: '1F477-200D-2642-FE0F'
      }, {
        name: 'Chart with Downwards Trend',
        unified: '1F4C9',
        keywords: ['graph', 'presentation', 'stats', 'recession', 'business', 'economics', 'money', 'sales', 'bad', 'failure'],
        sheet: [26, 31],
        shortName: 'chart_with_downwards_trend'
      }, {
        name: 'Clock Face Eleven Oclock',
        unified: '1F55A',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [28, 49],
        shortName: 'clock11'
      }, {
        name: 'Negative Squared Latin Capital Letter P',
        unified: '1F17F-FE0F',
        keywords: ['cars', 'blue-square', 'alphabet', 'letter'],
        sheet: [0, 19],
        shortName: 'parking'
      }, {
        name: 'Martinique Flag',
        unified: '1F1F2-1F1F6',
        sheet: [3, 15],
        shortName: 'flag-mq'
      }, {
        name: 'Male Construction Worker',
        unified: '1F477-200D-2642-FE0F',
        obsoletes: '1F477',
        sheet: [23, 16],
        skinVariations: [{
          unified: '1F477-1F3FB-200D-2642-FE0F',
          sheet: [23, 17]
        }, {
          unified: '1F477-1F3FC-200D-2642-FE0F',
          sheet: [23, 18]
        }, {
          unified: '1F477-1F3FD-200D-2642-FE0F',
          sheet: [23, 19]
        }, {
          unified: '1F477-1F3FE-200D-2642-FE0F',
          sheet: [23, 20]
        }, {
          unified: '1F477-1F3FF-200D-2642-FE0F',
          sheet: [23, 21]
        }],
        shortName: 'male-construction-worker'
      }, {
        name: 'Bar Chart',
        unified: '1F4CA',
        keywords: ['graph', 'presentation', 'stats'],
        sheet: [26, 32],
        shortName: 'bar_chart'
      }, {
        name: 'Clock Face Eleven-Thirty',
        unified: '1F566',
        keywords: ['time', 'late', 'early', 'schedule'],
        sheet: [29, 4],
        shortName: 'clock1130'
      }, {
        name: 'Squared Sos',
        unified: '1F198',
        keywords: ['help', 'red-square', 'words', 'emergency', '911'],
        sheet: [0, 28],
        shortName: 'sos'
      }, {
        name: 'Mauritania Flag',
        unified: '1F1F2-1F1F7',
        sheet: [3, 16],
        shortName: 'flag-mr'
      }, {
        name: 'New Moon Symbol',
        unified: '1F311',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 36],
        shortName: 'new_moon'
      }, {
        name: 'Female Construction Worker',
        unified: '1F477-200D-2640-FE0F',
        sheet: [23, 10],
        skinVariations: [{
          unified: '1F477-1F3FB-200D-2640-FE0F',
          sheet: [23, 11]
        }, {
          unified: '1F477-1F3FC-200D-2640-FE0F',
          sheet: [23, 12]
        }, {
          unified: '1F477-1F3FD-200D-2640-FE0F',
          sheet: [23, 13]
        }, {
          unified: '1F477-1F3FE-200D-2640-FE0F',
          sheet: [23, 14]
        }, {
          unified: '1F477-1F3FF-200D-2640-FE0F',
          sheet: [23, 15]
        }],
        shortName: 'female-construction-worker'
      }, {
        name: 'Clipboard',
        unified: '1F4CB',
        keywords: ['stationery', 'documents'],
        sheet: [26, 33],
        shortName: 'clipboard'
      }, {
        name: 'Squared Up with Exclamation Mark',
        unified: '1F199',
        keywords: ['blue-square', 'above', 'high'],
        sheet: [0, 29],
        shortName: 'up'
      }, {
        name: 'Montserrat Flag',
        unified: '1F1F2-1F1F8',
        sheet: [3, 17],
        shortName: 'flag-ms'
      }, {
        name: 'Waxing Crescent Moon Symbol',
        unified: '1F312',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 37],
        shortName: 'waxing_crescent_moon'
      }, {
        name: 'Pushpin',
        unified: '1F4CC',
        keywords: ['stationery', 'mark', 'here'],
        sheet: [26, 34],
        shortName: 'pushpin'
      }, {
        name: 'Prince',
        unified: '1F934',
        keywords: ['boy', 'man', 'male', 'crown', 'royal', 'king'],
        sheet: [39, 17],
        skinVariations: [{
          unified: '1F934-1F3FB',
          sheet: [39, 18]
        }, {
          unified: '1F934-1F3FC',
          sheet: [39, 19]
        }, {
          unified: '1F934-1F3FD',
          sheet: [39, 20]
        }, {
          unified: '1F934-1F3FE',
          sheet: [39, 21]
        }, {
          unified: '1F934-1F3FF',
          sheet: [39, 22]
        }],
        shortName: 'prince'
      }, {
        name: 'Squared Vs',
        unified: '1F19A',
        keywords: ['words', 'orange-square'],
        sheet: [0, 30],
        shortName: 'vs'
      }, {
        name: 'Malta Flag',
        unified: '1F1F2-1F1F9',
        sheet: [3, 18],
        shortName: 'flag-mt'
      }, {
        name: 'First Quarter Moon Symbol',
        unified: '1F313',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 38],
        shortName: 'first_quarter_moon'
      }, {
        name: 'Princess',
        unified: '1F478',
        keywords: ['girl', 'woman', 'female', 'blond', 'crown', 'royal', 'queen'],
        sheet: [23, 28],
        skinVariations: [{
          unified: '1F478-1F3FB',
          sheet: [23, 29]
        }, {
          unified: '1F478-1F3FC',
          sheet: [23, 30]
        }, {
          unified: '1F478-1F3FD',
          sheet: [23, 31]
        }, {
          unified: '1F478-1F3FE',
          sheet: [23, 32]
        }, {
          unified: '1F478-1F3FF',
          sheet: [23, 33]
        }],
        shortName: 'princess'
      }, {
        name: 'Round Pushpin',
        unified: '1F4CD',
        keywords: ['stationery', 'location', 'map', 'here'],
        sheet: [26, 35],
        shortName: 'round_pushpin'
      }, {
        name: 'Mauritius Flag',
        unified: '1F1F2-1F1FA',
        sheet: [3, 19],
        shortName: 'flag-mu'
      }, {
        name: 'Squared Katakana Koko',
        unified: '1F201',
        keywords: ['blue-square', 'here', 'katakana', 'japanese', 'destination'],
        sheet: [5, 4],
        shortName: 'koko'
      }, {
        name: 'Waxing Gibbous Moon Symbol',
        unified: '1F314',
        sheet: [5, 39],
        shortNames: ['waxing_gibbous_moon'],
        shortName: 'moon'
      }, {
        name: 'Man with Turban',
        unified: '1F473',
        keywords: ['male', 'indian', 'hinduism', 'arabs'],
        sheet: [22, 43],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F473-1F3FB',
          sheet: [22, 44],
          hidden: ['facebook']
        }, {
          unified: '1F473-1F3FC',
          sheet: [22, 45],
          hidden: ['facebook']
        }, {
          unified: '1F473-1F3FD',
          sheet: [22, 46],
          hidden: ['facebook']
        }, {
          unified: '1F473-1F3FE',
          sheet: [22, 47],
          hidden: ['facebook']
        }, {
          unified: '1F473-1F3FF',
          sheet: [22, 48],
          hidden: ['facebook']
        }],
        shortName: 'man_with_turban',
        obsoletedBy: '1F473-200D-2642-FE0F'
      }, {
        name: 'Paperclip',
        unified: '1F4CE',
        keywords: ['documents', 'stationery'],
        sheet: [26, 36],
        shortName: 'paperclip'
      }, {
        name: 'Maldives Flag',
        unified: '1F1F2-1F1FB',
        sheet: [3, 20],
        shortName: 'flag-mv'
      }, {
        name: 'Squared Katakana Sa',
        unified: '1F202-FE0F',
        keywords: ['japanese', 'blue-square', 'katakana'],
        sheet: [5, 5],
        shortName: 'sa'
      }, {
        name: 'Full Moon Symbol',
        unified: '1F315',
        keywords: ['nature', 'yellow', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 40],
        shortName: 'full_moon'
      }, {
        name: 'Man Wearing Turban',
        unified: '1F473-200D-2642-FE0F',
        obsoletes: '1F473',
        sheet: [22, 37],
        skinVariations: [{
          unified: '1F473-1F3FB-200D-2642-FE0F',
          sheet: [22, 38]
        }, {
          unified: '1F473-1F3FC-200D-2642-FE0F',
          sheet: [22, 39]
        }, {
          unified: '1F473-1F3FD-200D-2642-FE0F',
          sheet: [22, 40]
        }, {
          unified: '1F473-1F3FE-200D-2642-FE0F',
          sheet: [22, 41]
        }, {
          unified: '1F473-1F3FF-200D-2642-FE0F',
          sheet: [22, 42]
        }],
        shortName: 'man-wearing-turban'
      }, {
        name: 'Linked Paperclips',
        unified: '1F587-FE0F',
        sheet: [29, 43],
        shortName: 'linked_paperclips'
      }, {
        name: 'Malawi Flag',
        unified: '1F1F2-1F1FC',
        sheet: [3, 21],
        shortName: 'flag-mw'
      }, {
        name: 'Squared Cjk Unified Ideograph-6708',
        unified: '1F237-FE0F',
        keywords: ['chinese', 'month', 'moon', 'japanese', 'orange-square', 'kanji'],
        sheet: [5, 13],
        shortName: 'u6708'
      }, {
        name: 'Waning Gibbous Moon Symbol',
        unified: '1F316',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep', 'waxing_gibbous_moon'],
        sheet: [5, 41],
        shortName: 'waning_gibbous_moon'
      }, {
        name: 'Woman Wearing Turban',
        unified: '1F473-200D-2640-FE0F',
        sheet: [22, 31],
        skinVariations: [{
          unified: '1F473-1F3FB-200D-2640-FE0F',
          sheet: [22, 32]
        }, {
          unified: '1F473-1F3FC-200D-2640-FE0F',
          sheet: [22, 33]
        }, {
          unified: '1F473-1F3FD-200D-2640-FE0F',
          sheet: [22, 34]
        }, {
          unified: '1F473-1F3FE-200D-2640-FE0F',
          sheet: [22, 35]
        }, {
          unified: '1F473-1F3FF-200D-2640-FE0F',
          sheet: [22, 36]
        }],
        shortName: 'woman-wearing-turban'
      }, {
        name: 'Straight Ruler',
        unified: '1F4CF',
        keywords: ['stationery', 'calculate', 'length', 'math', 'school', 'drawing', 'architect', 'sketch'],
        sheet: [26, 37],
        shortName: 'straight_ruler'
      }, {
        name: 'Mexico Flag',
        unified: '1F1F2-1F1FD',
        sheet: [3, 22],
        shortName: 'flag-mx'
      }, {
        name: 'Squared Cjk Unified Ideograph-6709',
        unified: '1F236',
        keywords: ['orange-square', 'chinese', 'have', 'kanji'],
        sheet: [5, 12],
        shortName: 'u6709'
      }, {
        name: 'Last Quarter Moon Symbol',
        unified: '1F317',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 42],
        shortName: 'last_quarter_moon'
      }, {
        name: 'Man with Gua Pi Mao',
        unified: '1F472',
        keywords: ['male', 'boy', 'chinese'],
        sheet: [22, 25],
        skinVariations: [{
          unified: '1F472-1F3FB',
          sheet: [22, 26]
        }, {
          unified: '1F472-1F3FC',
          sheet: [22, 27]
        }, {
          unified: '1F472-1F3FD',
          sheet: [22, 28]
        }, {
          unified: '1F472-1F3FE',
          sheet: [22, 29]
        }, {
          unified: '1F472-1F3FF',
          sheet: [22, 30]
        }],
        shortName: 'man_with_gua_pi_mao'
      }, {
        name: 'Triangular Ruler',
        unified: '1F4D0',
        keywords: ['stationery', 'math', 'architect', 'sketch'],
        sheet: [26, 38],
        shortName: 'triangular_ruler'
      }, {
        name: 'Malaysia Flag',
        unified: '1F1F2-1F1FE',
        sheet: [3, 23],
        shortName: 'flag-my'
      }, {
        name: 'Squared Cjk Unified Ideograph-6307',
        unified: '1F22F',
        keywords: ['chinese', 'point', 'green-square', 'kanji'],
        sheet: [5, 7],
        shortName: 'u6307'
      }, {
        name: 'Waning Crescent Moon Symbol',
        unified: '1F318',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 43],
        shortName: 'waning_crescent_moon'
      }, {
        name: 'Person with Headscarf',
        unified: '1F9D5',
        sheet: [48, 34],
        skinVariations: [{
          unified: '1F9D5-1F3FB',
          sheet: [48, 35]
        }, {
          unified: '1F9D5-1F3FC',
          sheet: [48, 36]
        }, {
          unified: '1F9D5-1F3FD',
          sheet: [48, 37]
        }, {
          unified: '1F9D5-1F3FE',
          sheet: [48, 38]
        }, {
          unified: '1F9D5-1F3FF',
          sheet: [48, 39]
        }],
        shortName: 'person_with_headscarf'
      }, {
        name: 'Black Scissors',
        unified: '2702-FE0F',
        keywords: ['stationery', 'cut'],
        sheet: [54, 39],
        shortName: 'scissors'
      }, {
        name: 'Mozambique Flag',
        unified: '1F1F2-1F1FF',
        sheet: [3, 24],
        shortName: 'flag-mz'
      }, {
        name: 'Circled Ideograph Advantage',
        unified: '1F250',
        keywords: ['chinese', 'kanji', 'obtain', 'get', 'circle'],
        sheet: [5, 17],
        shortName: 'ideograph_advantage'
      }, {
        name: 'Crescent Moon',
        unified: '1F319',
        keywords: ['night', 'sleep', 'sky', 'evening', 'magic'],
        sheet: [5, 44],
        shortName: 'crescent_moon'
      }, {
        name: 'Card File Box',
        unified: '1F5C3-FE0F',
        keywords: ['business', 'stationery'],
        sheet: [30, 16],
        shortName: 'card_file_box'
      }, {
        name: 'Man in Tuxedo',
        unified: '1F935',
        keywords: ['couple', 'marriage', 'wedding', 'groom'],
        sheet: [39, 23],
        skinVariations: [{
          unified: '1F935-1F3FB',
          sheet: [39, 24]
        }, {
          unified: '1F935-1F3FC',
          sheet: [39, 25]
        }, {
          unified: '1F935-1F3FD',
          sheet: [39, 26]
        }, {
          unified: '1F935-1F3FE',
          sheet: [39, 27]
        }, {
          unified: '1F935-1F3FF',
          sheet: [39, 28]
        }],
        shortName: 'man_in_tuxedo'
      }, {
        name: 'Namibia Flag',
        unified: '1F1F3-1F1E6',
        sheet: [3, 25],
        shortName: 'flag-na'
      }, {
        name: 'Squared Cjk Unified Ideograph-5272',
        unified: '1F239',
        keywords: ['cut', 'divide', 'chinese', 'kanji', 'pink-square'],
        sheet: [5, 15],
        shortName: 'u5272'
      }, {
        name: 'New Moon with Face',
        unified: '1F31A',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 45],
        shortName: 'new_moon_with_face'
      }, {
        name: 'Bride with Veil',
        unified: '1F470',
        keywords: ['couple', 'marriage', 'wedding', 'woman', 'bride'],
        sheet: [22, 1],
        skinVariations: [{
          unified: '1F470-1F3FB',
          sheet: [22, 2]
        }, {
          unified: '1F470-1F3FC',
          sheet: [22, 3]
        }, {
          unified: '1F470-1F3FD',
          sheet: [22, 4]
        }, {
          unified: '1F470-1F3FE',
          sheet: [22, 5]
        }, {
          unified: '1F470-1F3FF',
          sheet: [22, 6]
        }],
        shortName: 'bride_with_veil'
      }, {
        name: 'File Cabinet',
        unified: '1F5C4-FE0F',
        keywords: ['filing', 'organizing'],
        sheet: [30, 17],
        shortName: 'file_cabinet'
      }, {
        name: 'New Caledonia Flag',
        unified: '1F1F3-1F1E8',
        sheet: [3, 26],
        shortName: 'flag-nc'
      }, {
        name: 'Squared Cjk Unified Ideograph-7121',
        unified: '1F21A',
        keywords: ['nothing', 'chinese', 'kanji', 'japanese', 'orange-square'],
        sheet: [5, 6],
        shortName: 'u7121'
      }, {
        name: 'First Quarter Moon with Face',
        unified: '1F31B',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 46],
        shortName: 'first_quarter_moon_with_face'
      }, {
        name: 'Wastebasket',
        unified: '1F5D1-FE0F',
        keywords: ['bin', 'trash', 'rubbish', 'garbage', 'toss'],
        sheet: [30, 18],
        shortName: 'wastebasket'
      }, {
        name: 'Pregnant Woman',
        unified: '1F930',
        keywords: ['baby'],
        sheet: [38, 50],
        skinVariations: [{
          unified: '1F930-1F3FB',
          sheet: [38, 51]
        }, {
          unified: '1F930-1F3FC',
          sheet: [38, 52]
        }, {
          unified: '1F930-1F3FD',
          sheet: [38, 53]
        }, {
          unified: '1F930-1F3FE',
          sheet: [38, 54]
        }, {
          unified: '1F930-1F3FF',
          sheet: [38, 55]
        }],
        shortName: 'pregnant_woman'
      }, {
        name: 'Niger Flag',
        unified: '1F1F3-1F1EA',
        sheet: [3, 27],
        shortName: 'flag-ne'
      }, {
        name: 'Squared Cjk Unified Ideograph-7981',
        unified: '1F232',
        keywords: ['kanji', 'japanese', 'chinese', 'forbidden', 'limit', 'restricted', 'red-square'],
        sheet: [5, 8],
        shortName: 'u7981'
      }, {
        name: 'Last Quarter Moon with Face',
        unified: '1F31C',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 47],
        shortName: 'last_quarter_moon_with_face'
      }, {
        name: 'Lock',
        unified: '1F512',
        keywords: ['security', 'password', 'padlock'],
        sheet: [27, 46],
        shortName: 'lock'
      }, {
        name: 'Breast-Feeding',
        unified: '1F931',
        sheet: [38, 56],
        skinVariations: [{
          unified: '1F931-1F3FB',
          sheet: [39, 0]
        }, {
          unified: '1F931-1F3FC',
          sheet: [39, 1]
        }, {
          unified: '1F931-1F3FD',
          sheet: [39, 2]
        }, {
          unified: '1F931-1F3FE',
          sheet: [39, 3]
        }, {
          unified: '1F931-1F3FF',
          sheet: [39, 4]
        }],
        shortName: 'breast-feeding'
      }, {
        name: 'Norfolk Island Flag',
        unified: '1F1F3-1F1EB',
        sheet: [3, 28],
        shortName: 'flag-nf'
      }, {
        name: 'Circled Ideograph Accept',
        unified: '1F251',
        keywords: ['ok', 'good', 'chinese', 'kanji', 'agree', 'yes', 'orange-circle'],
        sheet: [5, 18],
        shortName: 'accept'
      }, {
        name: 'Thermometer',
        unified: '1F321-FE0F',
        keywords: ['weather', 'temperature', 'hot', 'cold'],
        sheet: [5, 52],
        shortName: 'thermometer'
      }, {
        name: 'Baby Angel',
        unified: '1F47C',
        keywords: ['heaven', 'wings', 'halo'],
        sheet: [23, 37],
        skinVariations: [{
          unified: '1F47C-1F3FB',
          sheet: [23, 38]
        }, {
          unified: '1F47C-1F3FC',
          sheet: [23, 39]
        }, {
          unified: '1F47C-1F3FD',
          sheet: [23, 40]
        }, {
          unified: '1F47C-1F3FE',
          sheet: [23, 41]
        }, {
          unified: '1F47C-1F3FF',
          sheet: [23, 42]
        }],
        shortName: 'angel'
      }, {
        name: 'Open Lock',
        unified: '1F513',
        keywords: ['privacy', 'security'],
        sheet: [27, 47],
        shortName: 'unlock'
      }, {
        name: 'Nigeria Flag',
        unified: '1F1F3-1F1EC',
        sheet: [3, 29],
        shortName: 'flag-ng'
      }, {
        name: 'Squared Cjk Unified Ideograph-7533',
        unified: '1F238',
        keywords: ['chinese', 'japanese', 'kanji', 'orange-square'],
        sheet: [5, 14],
        shortName: 'u7533'
      }, {
        name: 'Father Christmas',
        unified: '1F385',
        keywords: ['festival', 'man', 'male', 'xmas', 'father christmas'],
        sheet: [7, 36],
        skinVariations: [{
          unified: '1F385-1F3FB',
          sheet: [7, 37]
        }, {
          unified: '1F385-1F3FC',
          sheet: [7, 38]
        }, {
          unified: '1F385-1F3FD',
          sheet: [7, 39]
        }, {
          unified: '1F385-1F3FE',
          sheet: [7, 40]
        }, {
          unified: '1F385-1F3FF',
          sheet: [7, 41]
        }],
        shortName: 'santa'
      }, {
        name: 'Lock with Ink Pen',
        unified: '1F50F',
        keywords: ['security', 'secret'],
        sheet: [27, 43],
        shortName: 'lock_with_ink_pen'
      }, {
        name: 'Black Sun with Rays',
        unified: '2600-FE0F',
        keywords: ['weather', 'nature', 'brightness', 'summer', 'beach', 'spring'],
        sheet: [52, 49],
        shortName: 'sunny'
      }, {
        name: 'Nicaragua Flag',
        unified: '1F1F3-1F1EE',
        sheet: [3, 30],
        shortName: 'flag-ni'
      }, {
        name: 'Squared Cjk Unified Ideograph-5408',
        unified: '1F234',
        keywords: ['japanese', 'chinese', 'join', 'kanji', 'red-square'],
        sheet: [5, 10],
        shortName: 'u5408'
      }, {
        name: 'Full Moon with Face',
        unified: '1F31D',
        keywords: ['nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
        sheet: [5, 48],
        shortName: 'full_moon_with_face'
      }, {
        name: 'Closed Lock with Key',
        unified: '1F510',
        keywords: ['security', 'privacy'],
        sheet: [27, 44],
        shortName: 'closed_lock_with_key'
      }, {
        name: 'Mother Christmas',
        unified: '1F936',
        keywords: ['woman', 'female', 'xmas', 'mother christmas'],
        sheet: [39, 29],
        skinVariations: [{
          unified: '1F936-1F3FB',
          sheet: [39, 30]
        }, {
          unified: '1F936-1F3FC',
          sheet: [39, 31]
        }, {
          unified: '1F936-1F3FD',
          sheet: [39, 32]
        }, {
          unified: '1F936-1F3FE',
          sheet: [39, 33]
        }, {
          unified: '1F936-1F3FF',
          sheet: [39, 34]
        }],
        shortNames: ['mother_christmas'],
        shortName: 'mrs_claus'
      }, {
        name: 'Netherlands Flag',
        unified: '1F1F3-1F1F1',
        sheet: [3, 31],
        shortName: 'flag-nl'
      }, {
        name: 'Squared Cjk Unified Ideograph-7a7a',
        unified: '1F233',
        keywords: ['kanji', 'japanese', 'chinese', 'empty', 'sky', 'blue-square'],
        sheet: [5, 9],
        shortName: 'u7a7a'
      }, {
        name: 'Sun with Face',
        unified: '1F31E',
        keywords: ['nature', 'morning', 'sky'],
        sheet: [5, 49],
        shortName: 'sun_with_face'
      }, {
        name: 'Key',
        unified: '1F511',
        keywords: ['lock', 'door', 'password'],
        sheet: [27, 45],
        shortName: 'key'
      }, {
        name: 'Superhero',
        unified: '1F9B8',
        sheet: [43, 30],
        skinVariations: [{
          unified: '1F9B8-1F3FB',
          sheet: [43, 31]
        }, {
          unified: '1F9B8-1F3FC',
          sheet: [43, 32]
        }, {
          unified: '1F9B8-1F3FD',
          sheet: [43, 33]
        }, {
          unified: '1F9B8-1F3FE',
          sheet: [43, 34]
        }, {
          unified: '1F9B8-1F3FF',
          sheet: [43, 35]
        }],
        shortName: 'superhero'
      }, {
        name: 'Norway Flag',
        unified: '1F1F3-1F1F4',
        sheet: [3, 32],
        shortName: 'flag-no'
      }, {
        name: 'Old Key',
        unified: '1F5DD-FE0F',
        keywords: ['lock', 'door', 'password'],
        sheet: [30, 22],
        shortName: 'old_key'
      }, {
        name: 'Male Superhero',
        unified: '1F9B8-200D-2642-FE0F',
        sheet: [43, 24],
        skinVariations: [{
          unified: '1F9B8-1F3FB-200D-2642-FE0F',
          sheet: [43, 25]
        }, {
          unified: '1F9B8-1F3FC-200D-2642-FE0F',
          sheet: [43, 26]
        }, {
          unified: '1F9B8-1F3FD-200D-2642-FE0F',
          sheet: [43, 27]
        }, {
          unified: '1F9B8-1F3FE-200D-2642-FE0F',
          sheet: [43, 28]
        }, {
          unified: '1F9B8-1F3FF-200D-2642-FE0F',
          sheet: [43, 29]
        }],
        shortName: 'male_superhero'
      }, {
        name: 'Ringed Planet',
        unified: '1FA90',
        sheet: [52, 4],
        shortName: 'ringed_planet'
      }, {
        name: 'Circled Ideograph Congratulation',
        unified: '3297-FE0F',
        keywords: ['chinese', 'kanji', 'japanese', 'red-circle'],
        sheet: [55, 46],
        shortName: 'congratulations'
      }, {
        name: 'Nepal Flag',
        unified: '1F1F3-1F1F5',
        sheet: [3, 33],
        shortName: 'flag-np'
      }, {
        name: 'Hammer',
        unified: '1F528',
        keywords: ['tools', 'build', 'create'],
        sheet: [28, 11],
        shortName: 'hammer'
      }, {
        name: 'Female Superhero',
        unified: '1F9B8-200D-2640-FE0F',
        sheet: [43, 18],
        skinVariations: [{
          unified: '1F9B8-1F3FB-200D-2640-FE0F',
          sheet: [43, 19]
        }, {
          unified: '1F9B8-1F3FC-200D-2640-FE0F',
          sheet: [43, 20]
        }, {
          unified: '1F9B8-1F3FD-200D-2640-FE0F',
          sheet: [43, 21]
        }, {
          unified: '1F9B8-1F3FE-200D-2640-FE0F',
          sheet: [43, 22]
        }, {
          unified: '1F9B8-1F3FF-200D-2640-FE0F',
          sheet: [43, 23]
        }],
        shortName: 'female_superhero'
      }, {
        name: 'White Medium Star',
        unified: '2B50',
        keywords: ['night', 'yellow'],
        sheet: [55, 42],
        shortName: 'star'
      }, {
        name: 'Circled Ideograph Secret',
        unified: '3299-FE0F',
        keywords: ['privacy', 'chinese', 'sshh', 'kanji', 'red-circle'],
        sheet: [55, 47],
        shortName: 'secret'
      }, {
        name: 'Nauru Flag',
        unified: '1F1F3-1F1F7',
        sheet: [3, 34],
        shortName: 'flag-nr'
      }, {
        name: 'Squared Cjk Unified Ideograph-55b6',
        unified: '1F23A',
        keywords: ['japanese', 'opening hours', 'orange-square'],
        sheet: [5, 16],
        shortName: 'u55b6'
      }, {
        name: 'Glowing Star',
        unified: '1F31F',
        keywords: ['night', 'sparkle', 'awesome', 'good', 'magic'],
        sheet: [5, 50],
        shortName: 'star2'
      }, {
        name: 'Supervillain',
        unified: '1F9B9',
        sheet: [43, 48],
        skinVariations: [{
          unified: '1F9B9-1F3FB',
          sheet: [43, 49]
        }, {
          unified: '1F9B9-1F3FC',
          sheet: [43, 50]
        }, {
          unified: '1F9B9-1F3FD',
          sheet: [43, 51]
        }, {
          unified: '1F9B9-1F3FE',
          sheet: [43, 52]
        }, {
          unified: '1F9B9-1F3FF',
          sheet: [43, 53]
        }],
        shortName: 'supervillain'
      }, {
        name: 'Axe',
        unified: '1FA93',
        sheet: [52, 7],
        shortName: 'axe'
      }, {
        name: 'Niue Flag',
        unified: '1F1F3-1F1FA',
        sheet: [3, 35],
        shortName: 'flag-nu'
      }, {
        name: 'Squared Cjk Unified Ideograph-6e80',
        unified: '1F235',
        keywords: ['full', 'chinese', 'japanese', 'red-square', 'kanji'],
        sheet: [5, 11],
        shortName: 'u6e80'
      }, {
        name: 'Shooting Star',
        unified: '1F320',
        keywords: ['night', 'photo'],
        sheet: [5, 51],
        shortName: 'stars'
      }, {
        name: 'Male Supervillain',
        unified: '1F9B9-200D-2642-FE0F',
        sheet: [43, 42],
        skinVariations: [{
          unified: '1F9B9-1F3FB-200D-2642-FE0F',
          sheet: [43, 43]
        }, {
          unified: '1F9B9-1F3FC-200D-2642-FE0F',
          sheet: [43, 44]
        }, {
          unified: '1F9B9-1F3FD-200D-2642-FE0F',
          sheet: [43, 45]
        }, {
          unified: '1F9B9-1F3FE-200D-2642-FE0F',
          sheet: [43, 46]
        }, {
          unified: '1F9B9-1F3FF-200D-2642-FE0F',
          sheet: [43, 47]
        }],
        shortName: 'male_supervillain'
      }, {
        name: 'Pick',
        unified: '26CF-FE0F',
        keywords: ['tools', 'dig'],
        sheet: [54, 5],
        shortName: 'pick'
      }, {
        name: 'New Zealand Flag',
        unified: '1F1F3-1F1FF',
        sheet: [3, 36],
        shortName: 'flag-nz'
      }, {
        name: 'Milky Way',
        unified: '1F30C',
        keywords: ['photo', 'space', 'stars'],
        sheet: [5, 31],
        shortName: 'milky_way'
      }, {
        name: 'Large Red Circle',
        unified: '1F534',
        keywords: ['shape', 'error', 'danger'],
        sheet: [28, 23],
        shortName: 'red_circle'
      }, {
        name: 'Female Supervillain',
        unified: '1F9B9-200D-2640-FE0F',
        sheet: [43, 36],
        skinVariations: [{
          unified: '1F9B9-1F3FB-200D-2640-FE0F',
          sheet: [43, 37]
        }, {
          unified: '1F9B9-1F3FC-200D-2640-FE0F',
          sheet: [43, 38]
        }, {
          unified: '1F9B9-1F3FD-200D-2640-FE0F',
          sheet: [43, 39]
        }, {
          unified: '1F9B9-1F3FE-200D-2640-FE0F',
          sheet: [43, 40]
        }, {
          unified: '1F9B9-1F3FF-200D-2640-FE0F',
          sheet: [43, 41]
        }],
        shortName: 'female_supervillain'
      }, {
        name: 'Hammer and Pick',
        unified: '2692-FE0F',
        keywords: ['tools', 'build', 'create'],
        sheet: [53, 41],
        shortName: 'hammer_and_pick'
      }, {
        name: 'Oman Flag',
        unified: '1F1F4-1F1F2',
        sheet: [3, 37],
        shortName: 'flag-om'
      }, {
        name: 'Hammer and Wrench',
        unified: '1F6E0-FE0F',
        keywords: ['tools', 'build', 'create'],
        sheet: [36, 42],
        shortName: 'hammer_and_wrench'
      }, {
        name: 'Large Orange Circle',
        unified: '1F7E0',
        sheet: [37, 3],
        shortName: 'large_orange_circle'
      }, {
        name: 'Mage',
        unified: '1F9D9',
        sheet: [49, 49],
        skinVariations: [{
          unified: '1F9D9-1F3FB',
          sheet: [49, 50]
        }, {
          unified: '1F9D9-1F3FC',
          sheet: [49, 51]
        }, {
          unified: '1F9D9-1F3FD',
          sheet: [49, 52]
        }, {
          unified: '1F9D9-1F3FE',
          sheet: [49, 53]
        }, {
          unified: '1F9D9-1F3FF',
          sheet: [49, 54]
        }],
        shortName: 'mage',
        obsoletedBy: '1F9D9-200D-2640-FE0F'
      }, {
        name: 'Cloud',
        unified: '2601-FE0F',
        keywords: ['weather', 'sky'],
        sheet: [52, 50],
        shortName: 'cloud'
      }, {
        name: 'Panama Flag',
        unified: '1F1F5-1F1E6',
        sheet: [3, 38],
        shortName: 'flag-pa'
      }, {
        name: 'Dagger Knife',
        unified: '1F5E1-FE0F',
        sheet: [30, 24],
        shortName: 'dagger_knife'
      }, {
        name: 'Large Yellow Circle',
        unified: '1F7E1',
        sheet: [37, 4],
        shortName: 'large_yellow_circle'
      }, {
        name: 'Male Mage',
        unified: '1F9D9-200D-2642-FE0F',
        sheet: [49, 43],
        skinVariations: [{
          unified: '1F9D9-1F3FB-200D-2642-FE0F',
          sheet: [49, 44]
        }, {
          unified: '1F9D9-1F3FC-200D-2642-FE0F',
          sheet: [49, 45]
        }, {
          unified: '1F9D9-1F3FD-200D-2642-FE0F',
          sheet: [49, 46]
        }, {
          unified: '1F9D9-1F3FE-200D-2642-FE0F',
          sheet: [49, 47]
        }, {
          unified: '1F9D9-1F3FF-200D-2642-FE0F',
          sheet: [49, 48]
        }],
        shortName: 'male_mage'
      }, {
        name: 'Sun Behind Cloud',
        unified: '26C5',
        keywords: ['weather', 'nature', 'cloudy', 'morning', 'fall', 'spring'],
        sheet: [54, 2],
        shortName: 'partly_sunny'
      }, {
        name: 'Peru Flag',
        unified: '1F1F5-1F1EA',
        sheet: [3, 39],
        shortName: 'flag-pe'
      }, {
        name: 'Large Green Circle',
        unified: '1F7E2',
        sheet: [37, 5],
        shortName: 'large_green_circle'
      }, {
        name: 'Female Mage',
        unified: '1F9D9-200D-2640-FE0F',
        obsoletes: '1F9D9',
        sheet: [49, 37],
        skinVariations: [{
          unified: '1F9D9-1F3FB-200D-2640-FE0F',
          sheet: [49, 38]
        }, {
          unified: '1F9D9-1F3FC-200D-2640-FE0F',
          sheet: [49, 39]
        }, {
          unified: '1F9D9-1F3FD-200D-2640-FE0F',
          sheet: [49, 40]
        }, {
          unified: '1F9D9-1F3FE-200D-2640-FE0F',
          sheet: [49, 41]
        }, {
          unified: '1F9D9-1F3FF-200D-2640-FE0F',
          sheet: [49, 42]
        }],
        shortName: 'female_mage'
      }, {
        name: 'Crossed Swords',
        unified: '2694-FE0F',
        keywords: ['weapon'],
        sheet: [53, 43],
        shortName: 'crossed_swords'
      }, {
        name: 'Thunder Cloud and Rain',
        unified: '26C8-FE0F',
        sheet: [54, 3],
        shortName: 'thunder_cloud_and_rain'
      }, {
        name: 'French Polynesia Flag',
        unified: '1F1F5-1F1EB',
        sheet: [3, 40],
        shortName: 'flag-pf'
      }, {
        name: 'Mostly Sunny',
        unified: '1F324-FE0F',
        sheet: [5, 53],
        shortNames: ['sun_small_cloud'],
        shortName: 'mostly_sunny'
      }, {
        name: 'Pistol',
        unified: '1F52B',
        keywords: ['violence', 'weapon', 'pistol', 'revolver'],
        sheet: [28, 14],
        shortName: 'gun'
      }, {
        name: 'Large Blue Circle',
        unified: '1F535',
        keywords: ['shape', 'icon', 'button'],
        sheet: [28, 24],
        shortName: 'large_blue_circle'
      }, {
        name: 'Fairy',
        unified: '1F9DA',
        sheet: [50, 10],
        skinVariations: [{
          unified: '1F9DA-1F3FB',
          sheet: [50, 11],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FC',
          sheet: [50, 12],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FD',
          sheet: [50, 13],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FE',
          sheet: [50, 14],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FF',
          sheet: [50, 15],
          hidden: ['facebook']
        }],
        shortName: 'fairy',
        obsoletedBy: '1F9DA-200D-2640-FE0F'
      }, {
        name: 'Papua New Guinea Flag',
        unified: '1F1F5-1F1EC',
        sheet: [3, 41],
        shortName: 'flag-pg'
      }, {
        name: 'Barely Sunny',
        unified: '1F325-FE0F',
        sheet: [5, 54],
        shortNames: ['sun_behind_cloud'],
        shortName: 'barely_sunny'
      }, {
        name: 'Bow and Arrow',
        unified: '1F3F9',
        keywords: ['sports'],
        sheet: [11, 21],
        shortName: 'bow_and_arrow'
      }, {
        name: 'Large Purple Circle',
        unified: '1F7E3',
        sheet: [37, 6],
        shortName: 'large_purple_circle'
      }, {
        name: 'Male Fairy',
        unified: '1F9DA-200D-2642-FE0F',
        sheet: [50, 4],
        skinVariations: [{
          unified: '1F9DA-1F3FB-200D-2642-FE0F',
          sheet: [50, 5],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FC-200D-2642-FE0F',
          sheet: [50, 6],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FD-200D-2642-FE0F',
          sheet: [50, 7],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FE-200D-2642-FE0F',
          sheet: [50, 8],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FF-200D-2642-FE0F',
          sheet: [50, 9],
          hidden: ['facebook']
        }],
        shortName: 'male_fairy'
      }, {
        name: 'Philippines Flag',
        unified: '1F1F5-1F1ED',
        sheet: [3, 42],
        shortName: 'flag-ph'
      }, {
        name: 'Partly Sunny Rain',
        unified: '1F326-FE0F',
        sheet: [5, 55],
        shortNames: ['sun_behind_rain_cloud'],
        shortName: 'partly_sunny_rain'
      }, {
        name: 'Shield',
        unified: '1F6E1-FE0F',
        keywords: ['protection', 'security'],
        sheet: [36, 43],
        shortName: 'shield'
      }, {
        name: 'Large Brown Circle',
        unified: '1F7E4',
        sheet: [37, 7],
        shortName: 'large_brown_circle'
      }, {
        name: 'Female Fairy',
        unified: '1F9DA-200D-2640-FE0F',
        obsoletes: '1F9DA',
        sheet: [49, 55],
        skinVariations: [{
          unified: '1F9DA-1F3FB-200D-2640-FE0F',
          sheet: [49, 56],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FC-200D-2640-FE0F',
          sheet: [50, 0],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FD-200D-2640-FE0F',
          sheet: [50, 1],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FE-200D-2640-FE0F',
          sheet: [50, 2],
          hidden: ['facebook']
        }, {
          unified: '1F9DA-1F3FF-200D-2640-FE0F',
          sheet: [50, 3],
          hidden: ['facebook']
        }],
        shortName: 'female_fairy'
      }, {
        name: 'Pakistan Flag',
        unified: '1F1F5-1F1F0',
        sheet: [3, 43],
        shortName: 'flag-pk'
      }, {
        name: 'Rain Cloud',
        unified: '1F327-FE0F',
        sheet: [5, 56],
        shortName: 'rain_cloud'
      }, {
        name: 'Wrench',
        unified: '1F527',
        keywords: ['tools', 'diy', 'ikea', 'fix', 'maintainer'],
        sheet: [28, 10],
        shortName: 'wrench'
      }, {
        name: 'Vampire',
        unified: '1F9DB',
        sheet: [50, 28],
        skinVariations: [{
          unified: '1F9DB-1F3FB',
          sheet: [50, 29]
        }, {
          unified: '1F9DB-1F3FC',
          sheet: [50, 30]
        }, {
          unified: '1F9DB-1F3FD',
          sheet: [50, 31]
        }, {
          unified: '1F9DB-1F3FE',
          sheet: [50, 32]
        }, {
          unified: '1F9DB-1F3FF',
          sheet: [50, 33]
        }],
        shortName: 'vampire',
        obsoletedBy: '1F9DB-200D-2640-FE0F'
      }, {
        name: 'Medium Black Circle',
        unified: '26AB',
        keywords: ['shape', 'button', 'round'],
        sheet: [53, 53],
        shortName: 'black_circle'
      }, {
        name: 'Poland Flag',
        unified: '1F1F5-1F1F1',
        sheet: [3, 44],
        shortName: 'flag-pl'
      }, {
        name: 'Snow Cloud',
        unified: '1F328-FE0F',
        sheet: [6, 0],
        shortName: 'snow_cloud'
      }, {
        name: 'Nut and Bolt',
        unified: '1F529',
        keywords: ['handy', 'tools', 'fix'],
        sheet: [28, 12],
        shortName: 'nut_and_bolt'
      }, {
        name: 'Male Vampire',
        unified: '1F9DB-200D-2642-FE0F',
        sheet: [50, 22],
        skinVariations: [{
          unified: '1F9DB-1F3FB-200D-2642-FE0F',
          sheet: [50, 23]
        }, {
          unified: '1F9DB-1F3FC-200D-2642-FE0F',
          sheet: [50, 24]
        }, {
          unified: '1F9DB-1F3FD-200D-2642-FE0F',
          sheet: [50, 25]
        }, {
          unified: '1F9DB-1F3FE-200D-2642-FE0F',
          sheet: [50, 26]
        }, {
          unified: '1F9DB-1F3FF-200D-2642-FE0F',
          sheet: [50, 27]
        }],
        shortName: 'male_vampire'
      }, {
        name: 'Medium White Circle',
        unified: '26AA',
        keywords: ['shape', 'round'],
        sheet: [53, 52],
        shortName: 'white_circle'
      }, {
        name: 'St. Pierre & Miquelon Flag',
        unified: '1F1F5-1F1F2',
        sheet: [3, 45],
        shortName: 'flag-pm'
      }, {
        name: 'Lightning',
        unified: '1F329-FE0F',
        sheet: [6, 1],
        shortNames: ['lightning_cloud'],
        shortName: 'lightning'
      }, {
        name: 'Large Red Square',
        unified: '1F7E5',
        sheet: [37, 8],
        shortName: 'large_red_square'
      }, {
        name: 'Female Vampire',
        unified: '1F9DB-200D-2640-FE0F',
        obsoletes: '1F9DB',
        sheet: [50, 16],
        skinVariations: [{
          unified: '1F9DB-1F3FB-200D-2640-FE0F',
          sheet: [50, 17]
        }, {
          unified: '1F9DB-1F3FC-200D-2640-FE0F',
          sheet: [50, 18]
        }, {
          unified: '1F9DB-1F3FD-200D-2640-FE0F',
          sheet: [50, 19]
        }, {
          unified: '1F9DB-1F3FE-200D-2640-FE0F',
          sheet: [50, 20]
        }, {
          unified: '1F9DB-1F3FF-200D-2640-FE0F',
          sheet: [50, 21]
        }],
        shortName: 'female_vampire'
      }, {
        name: 'Gear',
        unified: '2699-FE0F',
        keywords: ['cog'],
        sheet: [53, 47],
        shortName: 'gear'
      }, {
        name: 'Pitcairn Islands Flag',
        unified: '1F1F5-1F1F3',
        sheet: [3, 46],
        shortName: 'flag-pn'
      }, {
        name: 'Tornado',
        unified: '1F32A-FE0F',
        keywords: ['weather', 'cyclone', 'twister'],
        sheet: [6, 2],
        shortNames: ['tornado_cloud'],
        shortName: 'tornado'
      }, {
        name: 'Compression',
        unified: '1F5DC-FE0F',
        sheet: [30, 21],
        shortName: 'compression'
      }, {
        name: 'Large Orange Square',
        unified: '1F7E7',
        sheet: [37, 10],
        shortName: 'large_orange_square'
      }, {
        name: 'Merperson',
        unified: '1F9DC',
        sheet: [50, 46],
        skinVariations: [{
          unified: '1F9DC-1F3FB',
          sheet: [50, 47]
        }, {
          unified: '1F9DC-1F3FC',
          sheet: [50, 48]
        }, {
          unified: '1F9DC-1F3FD',
          sheet: [50, 49]
        }, {
          unified: '1F9DC-1F3FE',
          sheet: [50, 50]
        }, {
          unified: '1F9DC-1F3FF',
          sheet: [50, 51]
        }],
        shortName: 'merperson',
        obsoletedBy: '1F9DC-200D-2642-FE0F'
      }, {
        name: 'Puerto Rico Flag',
        unified: '1F1F5-1F1F7',
        sheet: [3, 47],
        shortName: 'flag-pr'
      }, {
        name: 'Fog',
        unified: '1F32B-FE0F',
        keywords: ['weather'],
        sheet: [6, 3],
        shortName: 'fog'
      }, {
        name: 'Large Yellow Square',
        unified: '1F7E8',
        sheet: [37, 11],
        shortName: 'large_yellow_square'
      }, {
        name: 'Merman',
        unified: '1F9DC-200D-2642-FE0F',
        obsoletes: '1F9DC',
        keywords: ['man', 'male', 'triton'],
        sheet: [50, 40],
        skinVariations: [{
          unified: '1F9DC-1F3FB-200D-2642-FE0F',
          sheet: [50, 41]
        }, {
          unified: '1F9DC-1F3FC-200D-2642-FE0F',
          sheet: [50, 42]
        }, {
          unified: '1F9DC-1F3FD-200D-2642-FE0F',
          sheet: [50, 43]
        }, {
          unified: '1F9DC-1F3FE-200D-2642-FE0F',
          sheet: [50, 44]
        }, {
          unified: '1F9DC-1F3FF-200D-2642-FE0F',
          sheet: [50, 45]
        }],
        shortName: 'merman'
      }, {
        name: 'Scales',
        unified: '2696-FE0F',
        sheet: [53, 45],
        shortName: 'scales'
      }, {
        name: 'Palestinian Territories Flag',
        unified: '1F1F5-1F1F8',
        sheet: [3, 48],
        shortName: 'flag-ps'
      }, {
        name: 'Wind Blowing Face',
        unified: '1F32C-FE0F',
        sheet: [6, 4],
        shortName: 'wind_blowing_face'
      }, {
        name: 'Large Green Square',
        unified: '1F7E9',
        sheet: [37, 12],
        shortName: 'large_green_square'
      }, {
        name: 'Probing Cane',
        unified: '1F9AF',
        sheet: [43, 3],
        shortName: 'probing_cane'
      }, {
        name: 'Mermaid',
        unified: '1F9DC-200D-2640-FE0F',
        keywords: ['woman', 'female', 'merwoman', 'ariel'],
        sheet: [50, 34],
        skinVariations: [{
          unified: '1F9DC-1F3FB-200D-2640-FE0F',
          sheet: [50, 35]
        }, {
          unified: '1F9DC-1F3FC-200D-2640-FE0F',
          sheet: [50, 36]
        }, {
          unified: '1F9DC-1F3FD-200D-2640-FE0F',
          sheet: [50, 37]
        }, {
          unified: '1F9DC-1F3FE-200D-2640-FE0F',
          sheet: [50, 38]
        }, {
          unified: '1F9DC-1F3FF-200D-2640-FE0F',
          sheet: [50, 39]
        }],
        shortName: 'mermaid'
      }, {
        name: 'Portugal Flag',
        unified: '1F1F5-1F1F9',
        sheet: [3, 49],
        shortName: 'flag-pt'
      }, {
        name: 'Cyclone',
        unified: '1F300',
        keywords: ['weather', 'swirl', 'blue', 'cloud', 'vortex', 'spiral', 'whirlpool', 'spin', 'tornado', 'hurricane', 'typhoon'],
        sheet: [5, 19],
        shortName: 'cyclone'
      }, {
        name: 'Link Symbol',
        unified: '1F517',
        keywords: ['rings', 'url'],
        sheet: [27, 51],
        shortName: 'link'
      }, {
        name: 'Large Blue Square',
        unified: '1F7E6',
        sheet: [37, 9],
        shortName: 'large_blue_square'
      }, {
        name: 'Elf',
        unified: '1F9DD',
        sheet: [51, 7],
        skinVariations: [{
          unified: '1F9DD-1F3FB',
          sheet: [51, 8]
        }, {
          unified: '1F9DD-1F3FC',
          sheet: [51, 9]
        }, {
          unified: '1F9DD-1F3FD',
          sheet: [51, 10]
        }, {
          unified: '1F9DD-1F3FE',
          sheet: [51, 11]
        }, {
          unified: '1F9DD-1F3FF',
          sheet: [51, 12]
        }],
        shortName: 'elf',
        obsoletedBy: '1F9DD-200D-2642-FE0F'
      }, {
        name: 'Palau Flag',
        unified: '1F1F5-1F1FC',
        sheet: [3, 50],
        shortName: 'flag-pw'
      }, {
        name: 'Rainbow',
        unified: '1F308',
        keywords: ['nature', 'happy', 'unicorn_face', 'photo', 'sky', 'spring'],
        sheet: [5, 27],
        shortName: 'rainbow'
      }, {
        name: 'Large Purple Square',
        unified: '1F7EA',
        sheet: [37, 13],
        shortName: 'large_purple_square'
      }, {
        name: 'Male Elf',
        unified: '1F9DD-200D-2642-FE0F',
        obsoletes: '1F9DD',
        sheet: [51, 1],
        skinVariations: [{
          unified: '1F9DD-1F3FB-200D-2642-FE0F',
          sheet: [51, 2]
        }, {
          unified: '1F9DD-1F3FC-200D-2642-FE0F',
          sheet: [51, 3]
        }, {
          unified: '1F9DD-1F3FD-200D-2642-FE0F',
          sheet: [51, 4]
        }, {
          unified: '1F9DD-1F3FE-200D-2642-FE0F',
          sheet: [51, 5]
        }, {
          unified: '1F9DD-1F3FF-200D-2642-FE0F',
          sheet: [51, 6]
        }],
        shortName: 'male_elf'
      }, {
        name: 'Chains',
        unified: '26D3-FE0F',
        keywords: ['lock', 'arrest'],
        sheet: [54, 7],
        shortName: 'chains'
      }, {
        name: 'Paraguay Flag',
        unified: '1F1F5-1F1FE',
        sheet: [3, 51],
        shortName: 'flag-py'
      }, {
        name: 'Closed Umbrella',
        unified: '1F302',
        keywords: ['weather', 'rain', 'drizzle'],
        sheet: [5, 21],
        shortName: 'closed_umbrella'
      }, {
        name: 'Large Brown Square',
        unified: '1F7EB',
        sheet: [37, 14],
        shortName: 'large_brown_square'
      }, {
        name: 'Female Elf',
        unified: '1F9DD-200D-2640-FE0F',
        sheet: [50, 52],
        skinVariations: [{
          unified: '1F9DD-1F3FB-200D-2640-FE0F',
          sheet: [50, 53]
        }, {
          unified: '1F9DD-1F3FC-200D-2640-FE0F',
          sheet: [50, 54]
        }, {
          unified: '1F9DD-1F3FD-200D-2640-FE0F',
          sheet: [50, 55]
        }, {
          unified: '1F9DD-1F3FE-200D-2640-FE0F',
          sheet: [50, 56]
        }, {
          unified: '1F9DD-1F3FF-200D-2640-FE0F',
          sheet: [51, 0]
        }],
        shortName: 'female_elf'
      }, {
        name: 'Toolbox',
        unified: '1F9F0',
        keywords: ['tools', 'diy', 'fix', 'maintainer', 'mechanic'],
        sheet: [51, 35],
        shortName: 'toolbox'
      }, {
        name: 'Qatar Flag',
        unified: '1F1F6-1F1E6',
        sheet: [3, 52],
        shortName: 'flag-qa'
      }, {
        name: 'Genie',
        unified: '1F9DE',
        sheet: [51, 15],
        shortName: 'genie',
        obsoletedBy: '1F9DE-200D-2642-FE0F'
      }, {
        name: 'Magnet',
        unified: '1F9F2',
        keywords: ['attraction', 'magnetic'],
        sheet: [51, 37],
        shortName: 'magnet'
      }, {
        name: 'Umbrella',
        unified: '2602-FE0F',
        keywords: ['rainy', 'weather', 'spring'],
        sheet: [52, 51],
        shortName: 'umbrella'
      }, {
        name: 'Black Large Square',
        unified: '2B1B',
        keywords: ['shape', 'icon', 'button'],
        sheet: [55, 40],
        shortName: 'black_large_square'
      }, {
        name: 'Réunion Flag',
        unified: '1F1F7-1F1EA',
        sheet: [3, 53],
        shortName: 'flag-re'
      }, {
        name: 'Male Genie',
        unified: '1F9DE-200D-2642-FE0F',
        obsoletes: '1F9DE',
        sheet: [51, 14],
        shortName: 'male_genie'
      }, {
        name: 'Umbrella with Rain Drops',
        unified: '2614',
        sheet: [52, 56],
        shortName: 'umbrella_with_rain_drops'
      }, {
        name: 'Alembic',
        unified: '2697-FE0F',
        keywords: ['distilling', 'science', 'experiment', 'chemistry'],
        sheet: [53, 46],
        shortName: 'alembic'
      }, {
        name: 'White Large Square',
        unified: '2B1C',
        keywords: ['shape', 'icon', 'stone', 'button'],
        sheet: [55, 41],
        shortName: 'white_large_square'
      }, {
        name: 'Romania Flag',
        unified: '1F1F7-1F1F4',
        sheet: [3, 54],
        shortName: 'flag-ro'
      }, {
        name: 'Female Genie',
        unified: '1F9DE-200D-2640-FE0F',
        sheet: [51, 13],
        shortName: 'female_genie'
      }, {
        name: 'Test Tube',
        unified: '1F9EA',
        keywords: ['chemistry', 'experiment', 'lab', 'science'],
        sheet: [51, 29],
        shortName: 'test_tube'
      }, {
        name: 'Black Medium Square',
        unified: '25FC-FE0F',
        keywords: ['shape', 'button', 'icon'],
        sheet: [52, 46],
        shortName: 'black_medium_square'
      }, {
        name: 'Umbrella on Ground',
        unified: '26F1-FE0F',
        sheet: [54, 12],
        shortName: 'umbrella_on_ground'
      }, {
        name: 'Serbia Flag',
        unified: '1F1F7-1F1F8',
        sheet: [3, 55],
        shortName: 'flag-rs'
      }, {
        name: 'Zombie',
        unified: '1F9DF',
        sheet: [51, 18],
        shortName: 'zombie',
        obsoletedBy: '1F9DF-200D-2642-FE0F'
      }, {
        name: 'Petri Dish',
        unified: '1F9EB',
        keywords: ['bacteria', 'biology', 'culture', 'lab'],
        sheet: [51, 30],
        shortName: 'petri_dish'
      }, {
        name: 'White Medium Square',
        unified: '25FB-FE0F',
        keywords: ['shape', 'stone', 'icon'],
        sheet: [52, 45],
        shortName: 'white_medium_square'
      }, {
        name: 'High Voltage Sign',
        unified: '26A1',
        keywords: ['thunder', 'weather', 'lightning bolt', 'fast'],
        sheet: [53, 51],
        shortName: 'zap'
      }, {
        name: 'Russia Flag',
        unified: '1F1F7-1F1FA',
        keywords: ['russian', 'federation', 'flag', 'nation', 'country', 'banner'],
        sheet: [3, 56],
        shortNames: ['flag-ru'],
        shortName: 'ru'
      }, {
        name: 'Male Zombie',
        unified: '1F9DF-200D-2642-FE0F',
        obsoletes: '1F9DF',
        sheet: [51, 17],
        shortName: 'male_zombie'
      }, {
        name: 'Dna Double Helix',
        unified: '1F9EC',
        keywords: ['biologist', 'genetics', 'life'],
        sheet: [51, 31],
        shortName: 'dna'
      }, {
        name: 'Black Medium Small Square',
        unified: '25FE',
        keywords: ['icon', 'shape', 'button'],
        sheet: [52, 48],
        shortName: 'black_medium_small_square'
      }, {
        name: 'Snowflake',
        unified: '2744-FE0F',
        keywords: ['winter', 'season', 'cold', 'weather', 'christmas', 'xmas'],
        sheet: [55, 19],
        shortName: 'snowflake'
      }, {
        name: 'Rwanda Flag',
        unified: '1F1F7-1F1FC',
        sheet: [4, 0],
        shortName: 'flag-rw'
      }, {
        name: 'Microscope',
        unified: '1F52C',
        keywords: ['laboratory', 'experiment', 'zoomin', 'science', 'study'],
        sheet: [28, 15],
        shortName: 'microscope'
      }, {
        name: 'Female Zombie',
        unified: '1F9DF-200D-2640-FE0F',
        sheet: [51, 16],
        shortName: 'female_zombie'
      }, {
        name: 'White Medium Small Square',
        unified: '25FD',
        keywords: ['shape', 'stone', 'icon', 'button'],
        sheet: [52, 47],
        shortName: 'white_medium_small_square'
      }, {
        name: 'Snowman',
        unified: '2603-FE0F',
        keywords: ['winter', 'season', 'cold', 'weather', 'christmas', 'xmas', 'frozen', 'without_snow'],
        sheet: [52, 52],
        shortName: 'snowman'
      }, {
        name: 'Saudi Arabia Flag',
        unified: '1F1F8-1F1E6',
        sheet: [4, 1],
        shortName: 'flag-sa'
      }, {
        name: 'Face Massage',
        unified: '1F486',
        sheet: [24, 51],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F486-1F3FB',
          sheet: [24, 52],
          hidden: ['facebook']
        }, {
          unified: '1F486-1F3FC',
          sheet: [24, 53],
          hidden: ['facebook']
        }, {
          unified: '1F486-1F3FD',
          sheet: [24, 54],
          hidden: ['facebook']
        }, {
          unified: '1F486-1F3FE',
          sheet: [24, 55],
          hidden: ['facebook']
        }, {
          unified: '1F486-1F3FF',
          sheet: [24, 56],
          hidden: ['facebook']
        }],
        shortName: 'massage',
        obsoletedBy: '1F486-200D-2640-FE0F'
      }, {
        name: 'Telescope',
        unified: '1F52D',
        keywords: ['stars', 'space', 'zoom', 'science', 'astronomy'],
        sheet: [28, 16],
        shortName: 'telescope'
      }, {
        name: 'Black Small Square',
        unified: '25AA-FE0F',
        keywords: ['shape', 'icon'],
        sheet: [52, 41],
        shortName: 'black_small_square'
      }, {
        name: 'Snowman Without Snow',
        unified: '26C4',
        sheet: [54, 1],
        shortName: 'snowman_without_snow'
      }, {
        name: 'Solomon Islands Flag',
        unified: '1F1F8-1F1E7',
        sheet: [4, 2],
        shortName: 'flag-sb'
      }, {
        name: 'Man Getting Massage',
        unified: '1F486-200D-2642-FE0F',
        sheet: [24, 45],
        skinVariations: [{
          unified: '1F486-1F3FB-200D-2642-FE0F',
          sheet: [24, 46]
        }, {
          unified: '1F486-1F3FC-200D-2642-FE0F',
          sheet: [24, 47]
        }, {
          unified: '1F486-1F3FD-200D-2642-FE0F',
          sheet: [24, 48]
        }, {
          unified: '1F486-1F3FE-200D-2642-FE0F',
          sheet: [24, 49]
        }, {
          unified: '1F486-1F3FF-200D-2642-FE0F',
          sheet: [24, 50]
        }],
        shortName: 'man-getting-massage'
      }, {
        name: 'Satellite Antenna',
        unified: '1F4E1',
        sheet: [26, 55],
        shortName: 'satellite_antenna'
      }, {
        name: 'White Small Square',
        unified: '25AB-FE0F',
        keywords: ['shape', 'icon'],
        sheet: [52, 42],
        shortName: 'white_small_square'
      }, {
        name: 'Comet',
        unified: '2604-FE0F',
        keywords: ['space'],
        sheet: [52, 53],
        shortName: 'comet'
      }, {
        name: 'Seychelles Flag',
        unified: '1F1F8-1F1E8',
        sheet: [4, 3],
        shortName: 'flag-sc'
      }, {
        name: 'Woman Getting Massage',
        unified: '1F486-200D-2640-FE0F',
        obsoletes: '1F486',
        sheet: [24, 39],
        skinVariations: [{
          unified: '1F486-1F3FB-200D-2640-FE0F',
          sheet: [24, 40]
        }, {
          unified: '1F486-1F3FC-200D-2640-FE0F',
          sheet: [24, 41]
        }, {
          unified: '1F486-1F3FD-200D-2640-FE0F',
          sheet: [24, 42]
        }, {
          unified: '1F486-1F3FE-200D-2640-FE0F',
          sheet: [24, 43]
        }, {
          unified: '1F486-1F3FF-200D-2640-FE0F',
          sheet: [24, 44]
        }],
        shortName: 'woman-getting-massage'
      }, {
        name: 'Syringe',
        unified: '1F489',
        keywords: ['health', 'hospital', 'drugs', 'blood', 'medicine', 'needle', 'doctor', 'nurse'],
        sheet: [25, 19],
        shortName: 'syringe'
      }, {
        name: 'Fire',
        unified: '1F525',
        keywords: ['hot', 'cook', 'flame'],
        sheet: [28, 8],
        shortName: 'fire'
      }, {
        name: 'Large Orange Diamond',
        unified: '1F536',
        keywords: ['shape', 'jewel', 'gem'],
        sheet: [28, 25],
        shortName: 'large_orange_diamond'
      }, {
        name: 'Sudan Flag',
        unified: '1F1F8-1F1E9',
        sheet: [4, 4],
        shortName: 'flag-sd'
      }, {
        name: 'Haircut',
        unified: '1F487',
        sheet: [25, 12],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F487-1F3FB',
          sheet: [25, 13],
          hidden: ['facebook']
        }, {
          unified: '1F487-1F3FC',
          sheet: [25, 14],
          hidden: ['facebook']
        }, {
          unified: '1F487-1F3FD',
          sheet: [25, 15],
          hidden: ['facebook']
        }, {
          unified: '1F487-1F3FE',
          sheet: [25, 16],
          hidden: ['facebook']
        }, {
          unified: '1F487-1F3FF',
          sheet: [25, 17],
          hidden: ['facebook']
        }],
        shortName: 'haircut',
        obsoletedBy: '1F487-200D-2640-FE0F'
      }, {
        name: 'Droplet',
        unified: '1F4A7',
        keywords: ['water', 'drip', 'faucet', 'spring'],
        sheet: [25, 49],
        shortName: 'droplet'
      }, {
        name: 'Large Blue Diamond',
        unified: '1F537',
        keywords: ['shape', 'jewel', 'gem'],
        sheet: [28, 26],
        shortName: 'large_blue_diamond'
      }, {
        name: 'Drop of Blood',
        unified: '1FA78',
        sheet: [51, 55],
        shortName: 'drop_of_blood'
      }, {
        name: 'Sweden Flag',
        unified: '1F1F8-1F1EA',
        sheet: [4, 5],
        shortName: 'flag-se'
      }, {
        name: 'Water Wave',
        unified: '1F30A',
        keywords: ['sea', 'water', 'wave', 'nature', 'tsunami', 'disaster'],
        sheet: [5, 29],
        shortName: 'ocean'
      }, {
        name: 'Man Getting Haircut',
        unified: '1F487-200D-2642-FE0F',
        sheet: [25, 6],
        skinVariations: [{
          unified: '1F487-1F3FB-200D-2642-FE0F',
          sheet: [25, 7]
        }, {
          unified: '1F487-1F3FC-200D-2642-FE0F',
          sheet: [25, 8]
        }, {
          unified: '1F487-1F3FD-200D-2642-FE0F',
          sheet: [25, 9]
        }, {
          unified: '1F487-1F3FE-200D-2642-FE0F',
          sheet: [25, 10]
        }, {
          unified: '1F487-1F3FF-200D-2642-FE0F',
          sheet: [25, 11]
        }],
        shortName: 'man-getting-haircut'
      }, {
        name: 'Pill',
        unified: '1F48A',
        keywords: ['health', 'medicine', 'doctor', 'pharmacy', 'drug'],
        sheet: [25, 20],
        shortName: 'pill'
      }, {
        name: 'Small Orange Diamond',
        unified: '1F538',
        keywords: ['shape', 'jewel', 'gem'],
        sheet: [28, 27],
        shortName: 'small_orange_diamond'
      }, {
        name: 'Singapore Flag',
        unified: '1F1F8-1F1EC',
        sheet: [4, 6],
        shortName: 'flag-sg'
      }, {
        name: 'Woman Getting Haircut',
        unified: '1F487-200D-2640-FE0F',
        obsoletes: '1F487',
        sheet: [25, 0],
        skinVariations: [{
          unified: '1F487-1F3FB-200D-2640-FE0F',
          sheet: [25, 1]
        }, {
          unified: '1F487-1F3FC-200D-2640-FE0F',
          sheet: [25, 2]
        }, {
          unified: '1F487-1F3FD-200D-2640-FE0F',
          sheet: [25, 3]
        }, {
          unified: '1F487-1F3FE-200D-2640-FE0F',
          sheet: [25, 4]
        }, {
          unified: '1F487-1F3FF-200D-2640-FE0F',
          sheet: [25, 5]
        }],
        shortName: 'woman-getting-haircut'
      }, {
        name: 'Small Blue Diamond',
        unified: '1F539',
        keywords: ['shape', 'jewel', 'gem'],
        sheet: [28, 28],
        shortName: 'small_blue_diamond'
      }, {
        name: 'Adhesive Bandage',
        unified: '1FA79',
        sheet: [51, 56],
        shortName: 'adhesive_bandage'
      }, {
        name: 'St. Helena Flag',
        unified: '1F1F8-1F1ED',
        sheet: [4, 7],
        shortName: 'flag-sh'
      }, {
        name: 'Up-Pointing Red Triangle',
        unified: '1F53A',
        keywords: ['shape', 'direction', 'up', 'top'],
        sheet: [28, 29],
        shortName: 'small_red_triangle'
      }, {
        name: 'Pedestrian',
        unified: '1F6B6',
        sheet: [36, 2],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F6B6-1F3FB',
          sheet: [36, 3],
          hidden: ['facebook']
        }, {
          unified: '1F6B6-1F3FC',
          sheet: [36, 4],
          hidden: ['facebook']
        }, {
          unified: '1F6B6-1F3FD',
          sheet: [36, 5],
          hidden: ['facebook']
        }, {
          unified: '1F6B6-1F3FE',
          sheet: [36, 6],
          hidden: ['facebook']
        }, {
          unified: '1F6B6-1F3FF',
          sheet: [36, 7],
          hidden: ['facebook']
        }],
        shortName: 'walking',
        obsoletedBy: '1F6B6-200D-2642-FE0F'
      }, {
        name: 'Stethoscope',
        unified: '1FA7A',
        sheet: [52, 0],
        shortName: 'stethoscope'
      }, {
        name: 'Slovenia Flag',
        unified: '1F1F8-1F1EE',
        sheet: [4, 8],
        shortName: 'flag-si'
      }, {
        name: 'Down-Pointing Red Triangle',
        unified: '1F53B',
        keywords: ['shape', 'direction', 'bottom'],
        sheet: [28, 30],
        shortName: 'small_red_triangle_down'
      }, {
        name: 'Door',
        unified: '1F6AA',
        keywords: ['house', 'entry', 'exit'],
        sheet: [35, 1],
        shortName: 'door'
      }, {
        name: 'Man Walking',
        unified: '1F6B6-200D-2642-FE0F',
        obsoletes: '1F6B6',
        sheet: [35, 53],
        skinVariations: [{
          unified: '1F6B6-1F3FB-200D-2642-FE0F',
          sheet: [35, 54]
        }, {
          unified: '1F6B6-1F3FC-200D-2642-FE0F',
          sheet: [35, 55]
        }, {
          unified: '1F6B6-1F3FD-200D-2642-FE0F',
          sheet: [35, 56]
        }, {
          unified: '1F6B6-1F3FE-200D-2642-FE0F',
          sheet: [36, 0]
        }, {
          unified: '1F6B6-1F3FF-200D-2642-FE0F',
          sheet: [36, 1]
        }],
        shortName: 'man-walking'
      }, {
        name: 'Svalbard & Jan Mayen Flag',
        unified: '1F1F8-1F1EF',
        sheet: [4, 9],
        shortName: 'flag-sj'
      }, {
        name: 'Diamond Shape with a Dot Inside',
        unified: '1F4A0',
        keywords: ['jewel', 'blue', 'gem', 'crystal', 'fancy'],
        sheet: [25, 42],
        shortName: 'diamond_shape_with_a_dot_inside'
      }, {
        name: 'Woman Walking',
        unified: '1F6B6-200D-2640-FE0F',
        sheet: [35, 47],
        skinVariations: [{
          unified: '1F6B6-1F3FB-200D-2640-FE0F',
          sheet: [35, 48]
        }, {
          unified: '1F6B6-1F3FC-200D-2640-FE0F',
          sheet: [35, 49]
        }, {
          unified: '1F6B6-1F3FD-200D-2640-FE0F',
          sheet: [35, 50]
        }, {
          unified: '1F6B6-1F3FE-200D-2640-FE0F',
          sheet: [35, 51]
        }, {
          unified: '1F6B6-1F3FF-200D-2640-FE0F',
          sheet: [35, 52]
        }],
        shortName: 'woman-walking'
      }, {
        name: 'Bed',
        unified: '1F6CF-FE0F',
        keywords: ['sleep', 'rest'],
        sheet: [36, 37],
        shortName: 'bed'
      }, {
        name: 'Slovakia Flag',
        unified: '1F1F8-1F1F0',
        sheet: [4, 10],
        shortName: 'flag-sk'
      }, {
        name: 'Radio Button',
        unified: '1F518',
        keywords: ['input', 'old', 'music', 'circle'],
        sheet: [27, 52],
        shortName: 'radio_button'
      }, {
        name: 'Couch and Lamp',
        unified: '1F6CB-FE0F',
        keywords: ['read', 'chill'],
        sheet: [36, 28],
        shortName: 'couch_and_lamp'
      }, {
        name: 'Standing Person',
        unified: '1F9CD',
        sheet: [44, 31],
        skinVariations: [{
          unified: '1F9CD-1F3FB',
          sheet: [44, 32]
        }, {
          unified: '1F9CD-1F3FC',
          sheet: [44, 33]
        }, {
          unified: '1F9CD-1F3FD',
          sheet: [44, 34]
        }, {
          unified: '1F9CD-1F3FE',
          sheet: [44, 35]
        }, {
          unified: '1F9CD-1F3FF',
          sheet: [44, 36]
        }],
        shortName: 'standing_person'
      }, {
        name: 'Sierra Leone Flag',
        unified: '1F1F8-1F1F1',
        sheet: [4, 11],
        shortName: 'flag-sl'
      }, {
        name: 'White Square Button',
        unified: '1F533',
        keywords: ['shape', 'input'],
        sheet: [28, 22],
        shortName: 'white_square_button'
      }, {
        name: 'Man Standing',
        unified: '1F9CD-200D-2642-FE0F',
        sheet: [44, 25],
        skinVariations: [{
          unified: '1F9CD-1F3FB-200D-2642-FE0F',
          sheet: [44, 26]
        }, {
          unified: '1F9CD-1F3FC-200D-2642-FE0F',
          sheet: [44, 27]
        }, {
          unified: '1F9CD-1F3FD-200D-2642-FE0F',
          sheet: [44, 28]
        }, {
          unified: '1F9CD-1F3FE-200D-2642-FE0F',
          sheet: [44, 29]
        }, {
          unified: '1F9CD-1F3FF-200D-2642-FE0F',
          sheet: [44, 30]
        }],
        shortName: 'man_standing'
      }, {
        name: 'Chair',
        unified: '1FA91',
        sheet: [52, 5],
        shortName: 'chair'
      }, {
        name: 'San Marino Flag',
        unified: '1F1F8-1F1F2',
        sheet: [4, 12],
        shortName: 'flag-sm'
      }, {
        name: 'Black Square Button',
        unified: '1F532',
        keywords: ['shape', 'input', 'frame'],
        sheet: [28, 21],
        shortName: 'black_square_button'
      }, {
        name: 'Toilet',
        unified: '1F6BD',
        keywords: ['restroom', 'wc', 'washroom', 'bathroom', 'potty'],
        sheet: [36, 14],
        shortName: 'toilet'
      }, {
        name: 'Woman Standing',
        unified: '1F9CD-200D-2640-FE0F',
        sheet: [44, 19],
        skinVariations: [{
          unified: '1F9CD-1F3FB-200D-2640-FE0F',
          sheet: [44, 20]
        }, {
          unified: '1F9CD-1F3FC-200D-2640-FE0F',
          sheet: [44, 21]
        }, {
          unified: '1F9CD-1F3FD-200D-2640-FE0F',
          sheet: [44, 22]
        }, {
          unified: '1F9CD-1F3FE-200D-2640-FE0F',
          sheet: [44, 23]
        }, {
          unified: '1F9CD-1F3FF-200D-2640-FE0F',
          sheet: [44, 24]
        }],
        shortName: 'woman_standing'
      }, {
        name: 'Senegal Flag',
        unified: '1F1F8-1F1F3',
        sheet: [4, 13],
        shortName: 'flag-sn'
      }, {
        name: 'Shower',
        unified: '1F6BF',
        keywords: ['clean', 'water', 'bathroom'],
        sheet: [36, 16],
        shortName: 'shower'
      }, {
        name: 'Kneeling Person',
        unified: '1F9CE',
        sheet: [44, 49],
        skinVariations: [{
          unified: '1F9CE-1F3FB',
          sheet: [44, 50]
        }, {
          unified: '1F9CE-1F3FC',
          sheet: [44, 51]
        }, {
          unified: '1F9CE-1F3FD',
          sheet: [44, 52]
        }, {
          unified: '1F9CE-1F3FE',
          sheet: [44, 53]
        }, {
          unified: '1F9CE-1F3FF',
          sheet: [44, 54]
        }],
        shortName: 'kneeling_person'
      }, {
        name: 'Somalia Flag',
        unified: '1F1F8-1F1F4',
        sheet: [4, 14],
        shortName: 'flag-so'
      }, {
        name: 'Bathtub',
        unified: '1F6C1',
        keywords: ['clean', 'shower', 'bathroom'],
        sheet: [36, 23],
        shortName: 'bathtub'
      }, {
        name: 'Man Kneeling',
        unified: '1F9CE-200D-2642-FE0F',
        sheet: [44, 43],
        skinVariations: [{
          unified: '1F9CE-1F3FB-200D-2642-FE0F',
          sheet: [44, 44]
        }, {
          unified: '1F9CE-1F3FC-200D-2642-FE0F',
          sheet: [44, 45]
        }, {
          unified: '1F9CE-1F3FD-200D-2642-FE0F',
          sheet: [44, 46]
        }, {
          unified: '1F9CE-1F3FE-200D-2642-FE0F',
          sheet: [44, 47]
        }, {
          unified: '1F9CE-1F3FF-200D-2642-FE0F',
          sheet: [44, 48]
        }],
        shortName: 'man_kneeling'
      }, {
        name: 'Suriname Flag',
        unified: '1F1F8-1F1F7',
        sheet: [4, 15],
        shortName: 'flag-sr'
      }, {
        name: 'Woman Kneeling',
        unified: '1F9CE-200D-2640-FE0F',
        sheet: [44, 37],
        skinVariations: [{
          unified: '1F9CE-1F3FB-200D-2640-FE0F',
          sheet: [44, 38]
        }, {
          unified: '1F9CE-1F3FC-200D-2640-FE0F',
          sheet: [44, 39]
        }, {
          unified: '1F9CE-1F3FD-200D-2640-FE0F',
          sheet: [44, 40]
        }, {
          unified: '1F9CE-1F3FE-200D-2640-FE0F',
          sheet: [44, 41]
        }, {
          unified: '1F9CE-1F3FF-200D-2640-FE0F',
          sheet: [44, 42]
        }],
        shortName: 'woman_kneeling'
      }, {
        name: 'Razor',
        unified: '1FA92',
        sheet: [52, 6],
        shortName: 'razor'
      }, {
        name: 'South Sudan Flag',
        unified: '1F1F8-1F1F8',
        sheet: [4, 16],
        shortName: 'flag-ss'
      }, {
        name: 'Person with Probing Cane',
        unified: '1F9D1-200D-1F9AF',
        sheet: [47, 7],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F9AF',
          sheet: [47, 8],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F9AF',
          sheet: [47, 9],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F9AF',
          sheet: [47, 10],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F9AF',
          sheet: [47, 11],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F9AF',
          sheet: [47, 12],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'person_with_probing_cane'
      }, {
        name: 'Lotion Bottle',
        unified: '1F9F4',
        keywords: ['moisturizer', 'sunscreen'],
        sheet: [51, 39],
        shortName: 'lotion_bottle'
      }, {
        name: 'São Tomé & Príncipe Flag',
        unified: '1F1F8-1F1F9',
        sheet: [4, 17],
        shortName: 'flag-st'
      }, {
        name: 'Man with Probing Cane',
        unified: '1F468-200D-1F9AF',
        sheet: [16, 17],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F9AF',
          sheet: [16, 18]
        }, {
          unified: '1F468-1F3FC-200D-1F9AF',
          sheet: [16, 19]
        }, {
          unified: '1F468-1F3FD-200D-1F9AF',
          sheet: [16, 20]
        }, {
          unified: '1F468-1F3FE-200D-1F9AF',
          sheet: [16, 21]
        }, {
          unified: '1F468-1F3FF-200D-1F9AF',
          sheet: [16, 22]
        }],
        shortName: 'man_with_probing_cane'
      }, {
        name: 'Safety Pin',
        unified: '1F9F7',
        keywords: ['diaper'],
        sheet: [51, 42],
        shortName: 'safety_pin'
      }, {
        name: 'El Salvador Flag',
        unified: '1F1F8-1F1FB',
        sheet: [4, 18],
        shortName: 'flag-sv'
      }, {
        name: 'Woman with Probing Cane',
        unified: '1F469-200D-1F9AF',
        sheet: [19, 2],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F9AF',
          sheet: [19, 3]
        }, {
          unified: '1F469-1F3FC-200D-1F9AF',
          sheet: [19, 4]
        }, {
          unified: '1F469-1F3FD-200D-1F9AF',
          sheet: [19, 5]
        }, {
          unified: '1F469-1F3FE-200D-1F9AF',
          sheet: [19, 6]
        }, {
          unified: '1F469-1F3FF-200D-1F9AF',
          sheet: [19, 7]
        }],
        shortName: 'woman_with_probing_cane'
      }, {
        name: 'Broom',
        unified: '1F9F9',
        keywords: ['cleaning', 'sweeping', 'witch'],
        sheet: [51, 44],
        shortName: 'broom'
      }, {
        name: 'Sint Maarten Flag',
        unified: '1F1F8-1F1FD',
        sheet: [4, 19],
        shortName: 'flag-sx'
      }, {
        name: 'Person in Motorized Wheelchair',
        unified: '1F9D1-200D-1F9BC',
        sheet: [47, 37],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F9BC',
          sheet: [47, 38],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F9BC',
          sheet: [47, 39],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F9BC',
          sheet: [47, 40],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F9BC',
          sheet: [47, 41],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F9BC',
          sheet: [47, 42],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'person_in_motorized_wheelchair'
      }, {
        name: 'Basket',
        unified: '1F9FA',
        keywords: ['laundry'],
        sheet: [51, 45],
        shortName: 'basket'
      }, {
        name: 'Syria Flag',
        unified: '1F1F8-1F1FE',
        sheet: [4, 20],
        shortName: 'flag-sy'
      }, {
        name: 'Man in Motorized Wheelchair',
        unified: '1F468-200D-1F9BC',
        sheet: [16, 47],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F9BC',
          sheet: [16, 48]
        }, {
          unified: '1F468-1F3FC-200D-1F9BC',
          sheet: [16, 49]
        }, {
          unified: '1F468-1F3FD-200D-1F9BC',
          sheet: [16, 50]
        }, {
          unified: '1F468-1F3FE-200D-1F9BC',
          sheet: [16, 51]
        }, {
          unified: '1F468-1F3FF-200D-1F9BC',
          sheet: [16, 52]
        }],
        shortName: 'man_in_motorized_wheelchair'
      }, {
        name: 'Roll of Paper',
        unified: '1F9FB',
        sheet: [51, 46],
        shortName: 'roll_of_paper'
      }, {
        name: 'Eswatini Flag',
        unified: '1F1F8-1F1FF',
        sheet: [4, 21],
        shortName: 'flag-sz'
      }, {
        name: 'Woman in Motorized Wheelchair',
        unified: '1F469-200D-1F9BC',
        sheet: [19, 32],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F9BC',
          sheet: [19, 33]
        }, {
          unified: '1F469-1F3FC-200D-1F9BC',
          sheet: [19, 34]
        }, {
          unified: '1F469-1F3FD-200D-1F9BC',
          sheet: [19, 35]
        }, {
          unified: '1F469-1F3FE-200D-1F9BC',
          sheet: [19, 36]
        }, {
          unified: '1F469-1F3FF-200D-1F9BC',
          sheet: [19, 37]
        }],
        shortName: 'woman_in_motorized_wheelchair'
      }, {
        name: 'Bar of Soap',
        unified: '1F9FC',
        keywords: ['bar', 'bathing', 'cleaning', 'lather'],
        sheet: [51, 47],
        shortName: 'soap'
      }, {
        name: 'Tristan Da Cunha Flag',
        unified: '1F1F9-1F1E6',
        sheet: [4, 22],
        shortName: 'flag-ta'
      }, {
        name: 'Person in Manual Wheelchair',
        unified: '1F9D1-200D-1F9BD',
        sheet: [47, 43],
        hidden: ['google', 'twitter', 'facebook'],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F9BD',
          sheet: [47, 44],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F9BD',
          sheet: [47, 45],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F9BD',
          sheet: [47, 46],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F9BD',
          sheet: [47, 47],
          hidden: ['google', 'twitter', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F9BD',
          sheet: [47, 48],
          hidden: ['google', 'twitter', 'facebook']
        }],
        shortName: 'person_in_manual_wheelchair'
      }, {
        name: 'Sponge',
        unified: '1F9FD',
        keywords: ['absorbing', 'cleaning', 'porous'],
        sheet: [51, 48],
        shortName: 'sponge'
      }, {
        name: 'Turks & Caicos Islands Flag',
        unified: '1F1F9-1F1E8',
        sheet: [4, 23],
        shortName: 'flag-tc'
      }, {
        name: 'Man in Manual Wheelchair',
        unified: '1F468-200D-1F9BD',
        sheet: [16, 53],
        skinVariations: [{
          unified: '1F468-1F3FB-200D-1F9BD',
          sheet: [16, 54]
        }, {
          unified: '1F468-1F3FC-200D-1F9BD',
          sheet: [16, 55]
        }, {
          unified: '1F468-1F3FD-200D-1F9BD',
          sheet: [16, 56]
        }, {
          unified: '1F468-1F3FE-200D-1F9BD',
          sheet: [17, 0]
        }, {
          unified: '1F468-1F3FF-200D-1F9BD',
          sheet: [17, 1]
        }],
        shortName: 'man_in_manual_wheelchair'
      }, {
        name: 'Fire Extinguisher',
        unified: '1F9EF',
        keywords: ['quench'],
        sheet: [51, 34],
        shortName: 'fire_extinguisher'
      }, {
        name: 'Chad Flag',
        unified: '1F1F9-1F1E9',
        sheet: [4, 24],
        shortName: 'flag-td'
      }, {
        name: 'Woman in Manual Wheelchair',
        unified: '1F469-200D-1F9BD',
        sheet: [19, 38],
        skinVariations: [{
          unified: '1F469-1F3FB-200D-1F9BD',
          sheet: [19, 39]
        }, {
          unified: '1F469-1F3FC-200D-1F9BD',
          sheet: [19, 40]
        }, {
          unified: '1F469-1F3FD-200D-1F9BD',
          sheet: [19, 41]
        }, {
          unified: '1F469-1F3FE-200D-1F9BD',
          sheet: [19, 42]
        }, {
          unified: '1F469-1F3FF-200D-1F9BD',
          sheet: [19, 43]
        }],
        shortName: 'woman_in_manual_wheelchair'
      }, {
        name: 'Shopping Trolley',
        unified: '1F6D2',
        sheet: [36, 40],
        shortName: 'shopping_trolley'
      }, {
        name: 'French Southern Territories Flag',
        unified: '1F1F9-1F1EB',
        sheet: [4, 25],
        shortName: 'flag-tf'
      }, {
        name: 'Runner',
        unified: '1F3C3',
        sheet: [9, 1],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F3C3-1F3FB',
          sheet: [9, 2],
          hidden: ['facebook']
        }, {
          unified: '1F3C3-1F3FC',
          sheet: [9, 3],
          hidden: ['facebook']
        }, {
          unified: '1F3C3-1F3FD',
          sheet: [9, 4],
          hidden: ['facebook']
        }, {
          unified: '1F3C3-1F3FE',
          sheet: [9, 5],
          hidden: ['facebook']
        }, {
          unified: '1F3C3-1F3FF',
          sheet: [9, 6],
          hidden: ['facebook']
        }],
        shortNames: ['running'],
        shortName: 'runner',
        obsoletedBy: '1F3C3-200D-2642-FE0F'
      }, {
        name: 'Smoking Symbol',
        unified: '1F6AC',
        keywords: ['kills', 'tobacco', 'cigarette', 'joint', 'smoke'],
        sheet: [35, 3],
        shortName: 'smoking'
      }, {
        name: 'Togo Flag',
        unified: '1F1F9-1F1EC',
        sheet: [4, 26],
        shortName: 'flag-tg'
      }, {
        name: 'Man Running',
        unified: '1F3C3-200D-2642-FE0F',
        obsoletes: '1F3C3',
        sheet: [8, 52],
        skinVariations: [{
          unified: '1F3C3-1F3FB-200D-2642-FE0F',
          sheet: [8, 53]
        }, {
          unified: '1F3C3-1F3FC-200D-2642-FE0F',
          sheet: [8, 54]
        }, {
          unified: '1F3C3-1F3FD-200D-2642-FE0F',
          sheet: [8, 55]
        }, {
          unified: '1F3C3-1F3FE-200D-2642-FE0F',
          sheet: [8, 56]
        }, {
          unified: '1F3C3-1F3FF-200D-2642-FE0F',
          sheet: [9, 0]
        }],
        shortName: 'man-running'
      }, {
        name: 'Coffin',
        unified: '26B0-FE0F',
        keywords: ['vampire', 'dead', 'die', 'death', 'rip', 'graveyard', 'cemetery', 'casket', 'funeral', 'box'],
        sheet: [53, 54],
        shortName: 'coffin'
      }, {
        name: 'Thailand Flag',
        unified: '1F1F9-1F1ED',
        sheet: [4, 27],
        shortName: 'flag-th'
      }, {
        name: 'Woman Running',
        unified: '1F3C3-200D-2640-FE0F',
        sheet: [8, 46],
        skinVariations: [{
          unified: '1F3C3-1F3FB-200D-2640-FE0F',
          sheet: [8, 47]
        }, {
          unified: '1F3C3-1F3FC-200D-2640-FE0F',
          sheet: [8, 48]
        }, {
          unified: '1F3C3-1F3FD-200D-2640-FE0F',
          sheet: [8, 49]
        }, {
          unified: '1F3C3-1F3FE-200D-2640-FE0F',
          sheet: [8, 50]
        }, {
          unified: '1F3C3-1F3FF-200D-2640-FE0F',
          sheet: [8, 51]
        }],
        shortName: 'woman-running'
      }, {
        name: 'Funeral Urn',
        unified: '26B1-FE0F',
        keywords: ['dead', 'die', 'death', 'rip', 'ashes'],
        sheet: [53, 55],
        shortName: 'funeral_urn'
      }, {
        name: 'Tajikistan Flag',
        unified: '1F1F9-1F1EF',
        sheet: [4, 28],
        shortName: 'flag-tj'
      }, {
        name: 'Dancer',
        unified: '1F483',
        keywords: ['female', 'girl', 'woman', 'fun'],
        sheet: [24, 26],
        skinVariations: [{
          unified: '1F483-1F3FB',
          sheet: [24, 27]
        }, {
          unified: '1F483-1F3FC',
          sheet: [24, 28]
        }, {
          unified: '1F483-1F3FD',
          sheet: [24, 29]
        }, {
          unified: '1F483-1F3FE',
          sheet: [24, 30]
        }, {
          unified: '1F483-1F3FF',
          sheet: [24, 31]
        }],
        shortName: 'dancer'
      }, {
        name: 'Moyai',
        unified: '1F5FF',
        keywords: ['rock', 'easter island', 'moai'],
        sheet: [30, 34],
        shortName: 'moyai'
      }, {
        name: 'Tokelau Flag',
        unified: '1F1F9-1F1F0',
        sheet: [4, 29],
        shortName: 'flag-tk'
      }, {
        name: 'Man Dancing',
        unified: '1F57A',
        keywords: ['male', 'boy', 'fun', 'dancer'],
        sheet: [29, 37],
        skinVariations: [{
          unified: '1F57A-1F3FB',
          sheet: [29, 38]
        }, {
          unified: '1F57A-1F3FC',
          sheet: [29, 39]
        }, {
          unified: '1F57A-1F3FD',
          sheet: [29, 40]
        }, {
          unified: '1F57A-1F3FE',
          sheet: [29, 41]
        }, {
          unified: '1F57A-1F3FF',
          sheet: [29, 42]
        }],
        shortName: 'man_dancing'
      }, {
        name: 'Timor-Leste Flag',
        unified: '1F1F9-1F1F1',
        sheet: [4, 30],
        shortName: 'flag-tl'
      }, {
        name: 'Man in Business Suit Levitating',
        unified: '1F574-FE0F',
        sheet: [29, 9],
        skinVariations: [{
          unified: '1F574-1F3FB',
          sheet: [29, 10]
        }, {
          unified: '1F574-1F3FC',
          sheet: [29, 11]
        }, {
          unified: '1F574-1F3FD',
          sheet: [29, 12]
        }, {
          unified: '1F574-1F3FE',
          sheet: [29, 13]
        }, {
          unified: '1F574-1F3FF',
          sheet: [29, 14]
        }],
        shortName: 'man_in_business_suit_levitating'
      }, {
        name: 'Turkmenistan Flag',
        unified: '1F1F9-1F1F2',
        sheet: [4, 31],
        shortName: 'flag-tm'
      }, {
        name: 'Woman with Bunny Ears',
        unified: '1F46F',
        sheet: [22, 0],
        shortName: 'dancers',
        obsoletedBy: '1F46F-200D-2640-FE0F'
      }, {
        name: 'Tunisia Flag',
        unified: '1F1F9-1F1F3',
        sheet: [4, 32],
        shortName: 'flag-tn'
      }, {
        name: 'Man with Bunny Ears Partying',
        unified: '1F46F-200D-2642-FE0F',
        sheet: [21, 56],
        shortName: 'man-with-bunny-ears-partying'
      }, {
        name: 'Tonga Flag',
        unified: '1F1F9-1F1F4',
        sheet: [4, 33],
        shortName: 'flag-to'
      }, {
        name: 'Woman with Bunny Ears Partying',
        unified: '1F46F-200D-2640-FE0F',
        obsoletes: '1F46F',
        sheet: [21, 55],
        shortName: 'woman-with-bunny-ears-partying'
      }, {
        name: 'Turkey Flag',
        unified: '1F1F9-1F1F7',
        sheet: [4, 34],
        shortName: 'flag-tr'
      }, {
        name: 'Person in Steamy Room',
        unified: '1F9D6',
        sheet: [48, 52],
        skinVariations: [{
          unified: '1F9D6-1F3FB',
          sheet: [48, 53]
        }, {
          unified: '1F9D6-1F3FC',
          sheet: [48, 54]
        }, {
          unified: '1F9D6-1F3FD',
          sheet: [48, 55]
        }, {
          unified: '1F9D6-1F3FE',
          sheet: [48, 56]
        }, {
          unified: '1F9D6-1F3FF',
          sheet: [49, 0]
        }],
        shortName: 'person_in_steamy_room',
        obsoletedBy: '1F9D6-200D-2642-FE0F'
      }, {
        name: 'Trinidad & Tobago Flag',
        unified: '1F1F9-1F1F9',
        sheet: [4, 35],
        shortName: 'flag-tt'
      }, {
        name: 'Man in Steamy Room',
        unified: '1F9D6-200D-2642-FE0F',
        obsoletes: '1F9D6',
        keywords: ['male', 'man', 'spa', 'steamroom', 'sauna'],
        sheet: [48, 46],
        skinVariations: [{
          unified: '1F9D6-1F3FB-200D-2642-FE0F',
          sheet: [48, 47]
        }, {
          unified: '1F9D6-1F3FC-200D-2642-FE0F',
          sheet: [48, 48]
        }, {
          unified: '1F9D6-1F3FD-200D-2642-FE0F',
          sheet: [48, 49]
        }, {
          unified: '1F9D6-1F3FE-200D-2642-FE0F',
          sheet: [48, 50]
        }, {
          unified: '1F9D6-1F3FF-200D-2642-FE0F',
          sheet: [48, 51]
        }],
        shortName: 'man_in_steamy_room'
      }, {
        name: 'Tuvalu Flag',
        unified: '1F1F9-1F1FB',
        sheet: [4, 36],
        shortName: 'flag-tv'
      }, {
        name: 'Woman in Steamy Room',
        unified: '1F9D6-200D-2640-FE0F',
        keywords: ['female', 'woman', 'spa', 'steamroom', 'sauna'],
        sheet: [48, 40],
        skinVariations: [{
          unified: '1F9D6-1F3FB-200D-2640-FE0F',
          sheet: [48, 41]
        }, {
          unified: '1F9D6-1F3FC-200D-2640-FE0F',
          sheet: [48, 42]
        }, {
          unified: '1F9D6-1F3FD-200D-2640-FE0F',
          sheet: [48, 43]
        }, {
          unified: '1F9D6-1F3FE-200D-2640-FE0F',
          sheet: [48, 44]
        }, {
          unified: '1F9D6-1F3FF-200D-2640-FE0F',
          sheet: [48, 45]
        }],
        shortName: 'woman_in_steamy_room'
      }, {
        name: 'Taiwan Flag',
        unified: '1F1F9-1F1FC',
        sheet: [4, 37],
        shortName: 'flag-tw'
      }, {
        name: 'Person Climbing',
        unified: '1F9D7',
        sheet: [49, 13],
        skinVariations: [{
          unified: '1F9D7-1F3FB',
          sheet: [49, 14]
        }, {
          unified: '1F9D7-1F3FC',
          sheet: [49, 15]
        }, {
          unified: '1F9D7-1F3FD',
          sheet: [49, 16]
        }, {
          unified: '1F9D7-1F3FE',
          sheet: [49, 17]
        }, {
          unified: '1F9D7-1F3FF',
          sheet: [49, 18]
        }],
        shortName: 'person_climbing',
        obsoletedBy: '1F9D7-200D-2640-FE0F'
      }, {
        name: 'Tanzania Flag',
        unified: '1F1F9-1F1FF',
        sheet: [4, 38],
        shortName: 'flag-tz'
      }, {
        name: 'Man Climbing',
        unified: '1F9D7-200D-2642-FE0F',
        sheet: [49, 7],
        skinVariations: [{
          unified: '1F9D7-1F3FB-200D-2642-FE0F',
          sheet: [49, 8]
        }, {
          unified: '1F9D7-1F3FC-200D-2642-FE0F',
          sheet: [49, 9]
        }, {
          unified: '1F9D7-1F3FD-200D-2642-FE0F',
          sheet: [49, 10]
        }, {
          unified: '1F9D7-1F3FE-200D-2642-FE0F',
          sheet: [49, 11]
        }, {
          unified: '1F9D7-1F3FF-200D-2642-FE0F',
          sheet: [49, 12]
        }],
        shortName: 'man_climbing'
      }, {
        name: 'Ukraine Flag',
        unified: '1F1FA-1F1E6',
        sheet: [4, 39],
        shortName: 'flag-ua'
      }, {
        name: 'Woman Climbing',
        unified: '1F9D7-200D-2640-FE0F',
        obsoletes: '1F9D7',
        sheet: [49, 1],
        skinVariations: [{
          unified: '1F9D7-1F3FB-200D-2640-FE0F',
          sheet: [49, 2]
        }, {
          unified: '1F9D7-1F3FC-200D-2640-FE0F',
          sheet: [49, 3]
        }, {
          unified: '1F9D7-1F3FD-200D-2640-FE0F',
          sheet: [49, 4]
        }, {
          unified: '1F9D7-1F3FE-200D-2640-FE0F',
          sheet: [49, 5]
        }, {
          unified: '1F9D7-1F3FF-200D-2640-FE0F',
          sheet: [49, 6]
        }],
        shortName: 'woman_climbing'
      }, {
        name: 'Uganda Flag',
        unified: '1F1FA-1F1EC',
        sheet: [4, 40],
        shortName: 'flag-ug'
      }, {
        name: 'Fencer',
        unified: '1F93A',
        sheet: [40, 32],
        shortName: 'fencer'
      }, {
        name: 'U.s. Outlying Islands Flag',
        unified: '1F1FA-1F1F2',
        sheet: [4, 41],
        shortName: 'flag-um'
      }, {
        name: 'Horse Racing',
        unified: '1F3C7',
        keywords: ['animal', 'betting', 'competition', 'gambling', 'luck'],
        sheet: [9, 27],
        skinVariations: [{
          unified: '1F3C7-1F3FB',
          sheet: [9, 28]
        }, {
          unified: '1F3C7-1F3FC',
          sheet: [9, 29]
        }, {
          unified: '1F3C7-1F3FD',
          sheet: [9, 30]
        }, {
          unified: '1F3C7-1F3FE',
          sheet: [9, 31]
        }, {
          unified: '1F3C7-1F3FF',
          sheet: [9, 32]
        }],
        shortName: 'horse_racing'
      }, {
        name: 'United Nations Flag',
        unified: '1F1FA-1F1F3',
        sheet: [4, 42],
        shortName: 'flag-un'
      }, {
        name: 'Skier',
        unified: '26F7-FE0F',
        keywords: ['sports', 'winter', 'snow'],
        sheet: [54, 17],
        shortName: 'skier'
      }, {
        name: 'United States Flag',
        unified: '1F1FA-1F1F8',
        keywords: ['united', 'states', 'america', 'flag', 'nation', 'country', 'banner'],
        sheet: [4, 43],
        shortNames: ['flag-us'],
        shortName: 'us'
      }, {
        name: 'Snowboarder',
        unified: '1F3C2',
        keywords: ['sports', 'winter'],
        sheet: [8, 40],
        skinVariations: [{
          unified: '1F3C2-1F3FB',
          sheet: [8, 41]
        }, {
          unified: '1F3C2-1F3FC',
          sheet: [8, 42]
        }, {
          unified: '1F3C2-1F3FD',
          sheet: [8, 43]
        }, {
          unified: '1F3C2-1F3FE',
          sheet: [8, 44]
        }, {
          unified: '1F3C2-1F3FF',
          sheet: [8, 45]
        }],
        shortName: 'snowboarder'
      }, {
        name: 'Uruguay Flag',
        unified: '1F1FA-1F1FE',
        sheet: [4, 44],
        shortName: 'flag-uy'
      }, {
        name: 'Golfer',
        unified: '1F3CC-FE0F',
        sheet: [10, 26],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F3CC-1F3FB',
          sheet: [10, 27],
          hidden: ['facebook']
        }, {
          unified: '1F3CC-1F3FC',
          sheet: [10, 28],
          hidden: ['facebook']
        }, {
          unified: '1F3CC-1F3FD',
          sheet: [10, 29],
          hidden: ['facebook']
        }, {
          unified: '1F3CC-1F3FE',
          sheet: [10, 30],
          hidden: ['facebook']
        }, {
          unified: '1F3CC-1F3FF',
          sheet: [10, 31],
          hidden: ['facebook']
        }],
        shortName: 'golfer',
        obsoletedBy: '1F3CC-FE0F-200D-2642-FE0F'
      }, {
        name: 'Uzbekistan Flag',
        unified: '1F1FA-1F1FF',
        sheet: [4, 45],
        shortName: 'flag-uz'
      }, {
        name: 'Man Golfing',
        unified: '1F3CC-FE0F-200D-2642-FE0F',
        obsoletes: '1F3CC-FE0F',
        sheet: [10, 20],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F3CC-1F3FB-200D-2642-FE0F',
          sheet: [10, 21]
        }, {
          unified: '1F3CC-1F3FC-200D-2642-FE0F',
          sheet: [10, 22]
        }, {
          unified: '1F3CC-1F3FD-200D-2642-FE0F',
          sheet: [10, 23]
        }, {
          unified: '1F3CC-1F3FE-200D-2642-FE0F',
          sheet: [10, 24]
        }, {
          unified: '1F3CC-1F3FF-200D-2642-FE0F',
          sheet: [10, 25]
        }],
        shortName: 'man-golfing'
      }, {
        name: 'Vatican City Flag',
        unified: '1F1FB-1F1E6',
        sheet: [4, 46],
        shortName: 'flag-va'
      }, {
        name: 'Woman Golfing',
        unified: '1F3CC-FE0F-200D-2640-FE0F',
        sheet: [10, 14],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F3CC-1F3FB-200D-2640-FE0F',
          sheet: [10, 15]
        }, {
          unified: '1F3CC-1F3FC-200D-2640-FE0F',
          sheet: [10, 16]
        }, {
          unified: '1F3CC-1F3FD-200D-2640-FE0F',
          sheet: [10, 17]
        }, {
          unified: '1F3CC-1F3FE-200D-2640-FE0F',
          sheet: [10, 18]
        }, {
          unified: '1F3CC-1F3FF-200D-2640-FE0F',
          sheet: [10, 19]
        }],
        shortName: 'woman-golfing'
      }, {
        name: 'St. Vincent & Grenadines Flag',
        unified: '1F1FB-1F1E8',
        sheet: [4, 47],
        shortName: 'flag-vc'
      }, {
        name: 'Surfer',
        unified: '1F3C4',
        sheet: [9, 19],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F3C4-1F3FB',
          sheet: [9, 20],
          hidden: ['facebook']
        }, {
          unified: '1F3C4-1F3FC',
          sheet: [9, 21],
          hidden: ['facebook']
        }, {
          unified: '1F3C4-1F3FD',
          sheet: [9, 22],
          hidden: ['facebook']
        }, {
          unified: '1F3C4-1F3FE',
          sheet: [9, 23],
          hidden: ['facebook']
        }, {
          unified: '1F3C4-1F3FF',
          sheet: [9, 24],
          hidden: ['facebook']
        }],
        shortName: 'surfer',
        obsoletedBy: '1F3C4-200D-2642-FE0F'
      }, {
        name: 'Venezuela Flag',
        unified: '1F1FB-1F1EA',
        sheet: [4, 48],
        shortName: 'flag-ve'
      }, {
        name: 'Man Surfing',
        unified: '1F3C4-200D-2642-FE0F',
        obsoletes: '1F3C4',
        sheet: [9, 13],
        skinVariations: [{
          unified: '1F3C4-1F3FB-200D-2642-FE0F',
          sheet: [9, 14]
        }, {
          unified: '1F3C4-1F3FC-200D-2642-FE0F',
          sheet: [9, 15]
        }, {
          unified: '1F3C4-1F3FD-200D-2642-FE0F',
          sheet: [9, 16]
        }, {
          unified: '1F3C4-1F3FE-200D-2642-FE0F',
          sheet: [9, 17]
        }, {
          unified: '1F3C4-1F3FF-200D-2642-FE0F',
          sheet: [9, 18]
        }],
        shortName: 'man-surfing'
      }, {
        name: 'British Virgin Islands Flag',
        unified: '1F1FB-1F1EC',
        sheet: [4, 49],
        shortName: 'flag-vg'
      }, {
        name: 'Woman Surfing',
        unified: '1F3C4-200D-2640-FE0F',
        sheet: [9, 7],
        skinVariations: [{
          unified: '1F3C4-1F3FB-200D-2640-FE0F',
          sheet: [9, 8]
        }, {
          unified: '1F3C4-1F3FC-200D-2640-FE0F',
          sheet: [9, 9]
        }, {
          unified: '1F3C4-1F3FD-200D-2640-FE0F',
          sheet: [9, 10]
        }, {
          unified: '1F3C4-1F3FE-200D-2640-FE0F',
          sheet: [9, 11]
        }, {
          unified: '1F3C4-1F3FF-200D-2640-FE0F',
          sheet: [9, 12]
        }],
        shortName: 'woman-surfing'
      }, {
        name: 'U.s. Virgin Islands Flag',
        unified: '1F1FB-1F1EE',
        sheet: [4, 50],
        shortName: 'flag-vi'
      }, {
        name: 'Rowboat',
        unified: '1F6A3',
        sheet: [34, 46],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F6A3-1F3FB',
          sheet: [34, 47],
          hidden: ['facebook']
        }, {
          unified: '1F6A3-1F3FC',
          sheet: [34, 48],
          hidden: ['facebook']
        }, {
          unified: '1F6A3-1F3FD',
          sheet: [34, 49],
          hidden: ['facebook']
        }, {
          unified: '1F6A3-1F3FE',
          sheet: [34, 50],
          hidden: ['facebook']
        }, {
          unified: '1F6A3-1F3FF',
          sheet: [34, 51],
          hidden: ['facebook']
        }],
        shortName: 'rowboat',
        obsoletedBy: '1F6A3-200D-2642-FE0F'
      }, {
        name: 'Vietnam Flag',
        unified: '1F1FB-1F1F3',
        sheet: [4, 51],
        shortName: 'flag-vn'
      }, {
        name: 'Man Rowing Boat',
        unified: '1F6A3-200D-2642-FE0F',
        obsoletes: '1F6A3',
        sheet: [34, 40],
        skinVariations: [{
          unified: '1F6A3-1F3FB-200D-2642-FE0F',
          sheet: [34, 41]
        }, {
          unified: '1F6A3-1F3FC-200D-2642-FE0F',
          sheet: [34, 42]
        }, {
          unified: '1F6A3-1F3FD-200D-2642-FE0F',
          sheet: [34, 43]
        }, {
          unified: '1F6A3-1F3FE-200D-2642-FE0F',
          sheet: [34, 44]
        }, {
          unified: '1F6A3-1F3FF-200D-2642-FE0F',
          sheet: [34, 45]
        }],
        shortName: 'man-rowing-boat'
      }, {
        name: 'Vanuatu Flag',
        unified: '1F1FB-1F1FA',
        sheet: [4, 52],
        shortName: 'flag-vu'
      }, {
        name: 'Woman Rowing Boat',
        unified: '1F6A3-200D-2640-FE0F',
        sheet: [34, 34],
        skinVariations: [{
          unified: '1F6A3-1F3FB-200D-2640-FE0F',
          sheet: [34, 35]
        }, {
          unified: '1F6A3-1F3FC-200D-2640-FE0F',
          sheet: [34, 36]
        }, {
          unified: '1F6A3-1F3FD-200D-2640-FE0F',
          sheet: [34, 37]
        }, {
          unified: '1F6A3-1F3FE-200D-2640-FE0F',
          sheet: [34, 38]
        }, {
          unified: '1F6A3-1F3FF-200D-2640-FE0F',
          sheet: [34, 39]
        }],
        shortName: 'woman-rowing-boat'
      }, {
        name: 'Wallis & Futuna Flag',
        unified: '1F1FC-1F1EB',
        sheet: [4, 53],
        shortName: 'flag-wf'
      }, {
        name: 'Swimmer',
        unified: '1F3CA',
        sheet: [9, 47],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F3CA-1F3FB',
          sheet: [9, 48],
          hidden: ['facebook']
        }, {
          unified: '1F3CA-1F3FC',
          sheet: [9, 49],
          hidden: ['facebook']
        }, {
          unified: '1F3CA-1F3FD',
          sheet: [9, 50],
          hidden: ['facebook']
        }, {
          unified: '1F3CA-1F3FE',
          sheet: [9, 51],
          hidden: ['facebook']
        }, {
          unified: '1F3CA-1F3FF',
          sheet: [9, 52],
          hidden: ['facebook']
        }],
        shortName: 'swimmer',
        obsoletedBy: '1F3CA-200D-2642-FE0F'
      }, {
        name: 'Samoa Flag',
        unified: '1F1FC-1F1F8',
        sheet: [4, 54],
        shortName: 'flag-ws'
      }, {
        name: 'Man Swimming',
        unified: '1F3CA-200D-2642-FE0F',
        obsoletes: '1F3CA',
        sheet: [9, 41],
        skinVariations: [{
          unified: '1F3CA-1F3FB-200D-2642-FE0F',
          sheet: [9, 42]
        }, {
          unified: '1F3CA-1F3FC-200D-2642-FE0F',
          sheet: [9, 43]
        }, {
          unified: '1F3CA-1F3FD-200D-2642-FE0F',
          sheet: [9, 44]
        }, {
          unified: '1F3CA-1F3FE-200D-2642-FE0F',
          sheet: [9, 45]
        }, {
          unified: '1F3CA-1F3FF-200D-2642-FE0F',
          sheet: [9, 46]
        }],
        shortName: 'man-swimming'
      }, {
        name: 'Kosovo Flag',
        unified: '1F1FD-1F1F0',
        sheet: [4, 55],
        shortName: 'flag-xk'
      }, {
        name: 'Woman Swimming',
        unified: '1F3CA-200D-2640-FE0F',
        sheet: [9, 35],
        skinVariations: [{
          unified: '1F3CA-1F3FB-200D-2640-FE0F',
          sheet: [9, 36]
        }, {
          unified: '1F3CA-1F3FC-200D-2640-FE0F',
          sheet: [9, 37]
        }, {
          unified: '1F3CA-1F3FD-200D-2640-FE0F',
          sheet: [9, 38]
        }, {
          unified: '1F3CA-1F3FE-200D-2640-FE0F',
          sheet: [9, 39]
        }, {
          unified: '1F3CA-1F3FF-200D-2640-FE0F',
          sheet: [9, 40]
        }],
        shortName: 'woman-swimming'
      }, {
        name: 'Yemen Flag',
        unified: '1F1FE-1F1EA',
        sheet: [4, 56],
        shortName: 'flag-ye'
      }, {
        name: 'Person with Ball',
        unified: '26F9-FE0F',
        sheet: [54, 31],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '26F9-1F3FB',
          sheet: [54, 32],
          hidden: ['facebook']
        }, {
          unified: '26F9-1F3FC',
          sheet: [54, 33],
          hidden: ['facebook']
        }, {
          unified: '26F9-1F3FD',
          sheet: [54, 34],
          hidden: ['facebook']
        }, {
          unified: '26F9-1F3FE',
          sheet: [54, 35],
          hidden: ['facebook']
        }, {
          unified: '26F9-1F3FF',
          sheet: [54, 36],
          hidden: ['facebook']
        }],
        shortName: 'person_with_ball',
        obsoletedBy: '26F9-FE0F-200D-2642-FE0F'
      }, {
        name: 'Mayotte Flag',
        unified: '1F1FE-1F1F9',
        sheet: [5, 0],
        shortName: 'flag-yt'
      }, {
        name: 'Man Bouncing Ball',
        unified: '26F9-FE0F-200D-2642-FE0F',
        obsoletes: '26F9-FE0F',
        sheet: [54, 25],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '26F9-1F3FB-200D-2642-FE0F',
          sheet: [54, 26]
        }, {
          unified: '26F9-1F3FC-200D-2642-FE0F',
          sheet: [54, 27]
        }, {
          unified: '26F9-1F3FD-200D-2642-FE0F',
          sheet: [54, 28]
        }, {
          unified: '26F9-1F3FE-200D-2642-FE0F',
          sheet: [54, 29]
        }, {
          unified: '26F9-1F3FF-200D-2642-FE0F',
          sheet: [54, 30]
        }],
        shortName: 'man-bouncing-ball'
      }, {
        name: 'South Africa Flag',
        unified: '1F1FF-1F1E6',
        sheet: [5, 1],
        shortName: 'flag-za'
      }, {
        name: 'Woman Bouncing Ball',
        unified: '26F9-FE0F-200D-2640-FE0F',
        sheet: [54, 19],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '26F9-1F3FB-200D-2640-FE0F',
          sheet: [54, 20]
        }, {
          unified: '26F9-1F3FC-200D-2640-FE0F',
          sheet: [54, 21]
        }, {
          unified: '26F9-1F3FD-200D-2640-FE0F',
          sheet: [54, 22]
        }, {
          unified: '26F9-1F3FE-200D-2640-FE0F',
          sheet: [54, 23]
        }, {
          unified: '26F9-1F3FF-200D-2640-FE0F',
          sheet: [54, 24]
        }],
        shortName: 'woman-bouncing-ball'
      }, {
        name: 'Zambia Flag',
        unified: '1F1FF-1F1F2',
        sheet: [5, 2],
        shortName: 'flag-zm'
      }, {
        name: 'Weight Lifter',
        unified: '1F3CB-FE0F',
        sheet: [10, 8],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F3CB-1F3FB',
          sheet: [10, 9],
          hidden: ['facebook']
        }, {
          unified: '1F3CB-1F3FC',
          sheet: [10, 10],
          hidden: ['facebook']
        }, {
          unified: '1F3CB-1F3FD',
          sheet: [10, 11],
          hidden: ['facebook']
        }, {
          unified: '1F3CB-1F3FE',
          sheet: [10, 12],
          hidden: ['facebook']
        }, {
          unified: '1F3CB-1F3FF',
          sheet: [10, 13],
          hidden: ['facebook']
        }],
        shortName: 'weight_lifter',
        obsoletedBy: '1F3CB-FE0F-200D-2642-FE0F'
      }, {
        name: 'Zimbabwe Flag',
        unified: '1F1FF-1F1FC',
        sheet: [5, 3],
        shortName: 'flag-zw'
      }, {
        name: 'Man Lifting Weights',
        unified: '1F3CB-FE0F-200D-2642-FE0F',
        obsoletes: '1F3CB-FE0F',
        sheet: [10, 2],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F3CB-1F3FB-200D-2642-FE0F',
          sheet: [10, 3]
        }, {
          unified: '1F3CB-1F3FC-200D-2642-FE0F',
          sheet: [10, 4]
        }, {
          unified: '1F3CB-1F3FD-200D-2642-FE0F',
          sheet: [10, 5]
        }, {
          unified: '1F3CB-1F3FE-200D-2642-FE0F',
          sheet: [10, 6]
        }, {
          unified: '1F3CB-1F3FF-200D-2642-FE0F',
          sheet: [10, 7]
        }],
        shortName: 'man-lifting-weights'
      }, {
        name: 'Woman Lifting Weights',
        unified: '1F3CB-FE0F-200D-2640-FE0F',
        sheet: [9, 53],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F3CB-1F3FB-200D-2640-FE0F',
          sheet: [9, 54]
        }, {
          unified: '1F3CB-1F3FC-200D-2640-FE0F',
          sheet: [9, 55]
        }, {
          unified: '1F3CB-1F3FD-200D-2640-FE0F',
          sheet: [9, 56]
        }, {
          unified: '1F3CB-1F3FE-200D-2640-FE0F',
          sheet: [10, 0]
        }, {
          unified: '1F3CB-1F3FF-200D-2640-FE0F',
          sheet: [10, 1]
        }],
        shortName: 'woman-lifting-weights'
      }, {
        name: 'England Flag',
        unified: '1F3F4-E0067-E0062-E0065-E006E-E0067-E007F',
        sheet: [11, 14],
        shortName: 'flag-england'
      }, {
        name: 'Scotland Flag',
        unified: '1F3F4-E0067-E0062-E0073-E0063-E0074-E007F',
        sheet: [11, 15],
        shortName: 'flag-scotland'
      }, {
        name: 'Bicyclist',
        unified: '1F6B4',
        sheet: [35, 23],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F6B4-1F3FB',
          sheet: [35, 24],
          hidden: ['facebook']
        }, {
          unified: '1F6B4-1F3FC',
          sheet: [35, 25],
          hidden: ['facebook']
        }, {
          unified: '1F6B4-1F3FD',
          sheet: [35, 26],
          hidden: ['facebook']
        }, {
          unified: '1F6B4-1F3FE',
          sheet: [35, 27],
          hidden: ['facebook']
        }, {
          unified: '1F6B4-1F3FF',
          sheet: [35, 28],
          hidden: ['facebook']
        }],
        shortName: 'bicyclist',
        obsoletedBy: '1F6B4-200D-2642-FE0F'
      }, {
        name: 'Wales Flag',
        unified: '1F3F4-E0067-E0062-E0077-E006C-E0073-E007F',
        sheet: [11, 16],
        shortName: 'flag-wales'
      }, {
        name: 'Man Biking',
        unified: '1F6B4-200D-2642-FE0F',
        obsoletes: '1F6B4',
        sheet: [35, 17],
        skinVariations: [{
          unified: '1F6B4-1F3FB-200D-2642-FE0F',
          sheet: [35, 18]
        }, {
          unified: '1F6B4-1F3FC-200D-2642-FE0F',
          sheet: [35, 19]
        }, {
          unified: '1F6B4-1F3FD-200D-2642-FE0F',
          sheet: [35, 20]
        }, {
          unified: '1F6B4-1F3FE-200D-2642-FE0F',
          sheet: [35, 21]
        }, {
          unified: '1F6B4-1F3FF-200D-2642-FE0F',
          sheet: [35, 22]
        }],
        shortName: 'man-biking'
      }, {
        name: 'Woman Biking',
        unified: '1F6B4-200D-2640-FE0F',
        sheet: [35, 11],
        skinVariations: [{
          unified: '1F6B4-1F3FB-200D-2640-FE0F',
          sheet: [35, 12]
        }, {
          unified: '1F6B4-1F3FC-200D-2640-FE0F',
          sheet: [35, 13]
        }, {
          unified: '1F6B4-1F3FD-200D-2640-FE0F',
          sheet: [35, 14]
        }, {
          unified: '1F6B4-1F3FE-200D-2640-FE0F',
          sheet: [35, 15]
        }, {
          unified: '1F6B4-1F3FF-200D-2640-FE0F',
          sheet: [35, 16]
        }],
        shortName: 'woman-biking'
      }, {
        name: 'Mountain Bicyclist',
        unified: '1F6B5',
        sheet: [35, 41],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F6B5-1F3FB',
          sheet: [35, 42],
          hidden: ['facebook']
        }, {
          unified: '1F6B5-1F3FC',
          sheet: [35, 43],
          hidden: ['facebook']
        }, {
          unified: '1F6B5-1F3FD',
          sheet: [35, 44],
          hidden: ['facebook']
        }, {
          unified: '1F6B5-1F3FE',
          sheet: [35, 45],
          hidden: ['facebook']
        }, {
          unified: '1F6B5-1F3FF',
          sheet: [35, 46],
          hidden: ['facebook']
        }],
        shortName: 'mountain_bicyclist',
        obsoletedBy: '1F6B5-200D-2642-FE0F'
      }, {
        name: 'Man Mountain Biking',
        unified: '1F6B5-200D-2642-FE0F',
        obsoletes: '1F6B5',
        sheet: [35, 35],
        skinVariations: [{
          unified: '1F6B5-1F3FB-200D-2642-FE0F',
          sheet: [35, 36]
        }, {
          unified: '1F6B5-1F3FC-200D-2642-FE0F',
          sheet: [35, 37]
        }, {
          unified: '1F6B5-1F3FD-200D-2642-FE0F',
          sheet: [35, 38]
        }, {
          unified: '1F6B5-1F3FE-200D-2642-FE0F',
          sheet: [35, 39]
        }, {
          unified: '1F6B5-1F3FF-200D-2642-FE0F',
          sheet: [35, 40]
        }],
        shortName: 'man-mountain-biking'
      }, {
        name: 'Woman Mountain Biking',
        unified: '1F6B5-200D-2640-FE0F',
        sheet: [35, 29],
        skinVariations: [{
          unified: '1F6B5-1F3FB-200D-2640-FE0F',
          sheet: [35, 30]
        }, {
          unified: '1F6B5-1F3FC-200D-2640-FE0F',
          sheet: [35, 31]
        }, {
          unified: '1F6B5-1F3FD-200D-2640-FE0F',
          sheet: [35, 32]
        }, {
          unified: '1F6B5-1F3FE-200D-2640-FE0F',
          sheet: [35, 33]
        }, {
          unified: '1F6B5-1F3FF-200D-2640-FE0F',
          sheet: [35, 34]
        }],
        shortName: 'woman-mountain-biking'
      }, {
        name: 'Person Doing Cartwheel',
        unified: '1F938',
        sheet: [40, 8],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F938-1F3FB',
          sheet: [40, 9],
          hidden: ['facebook']
        }, {
          unified: '1F938-1F3FC',
          sheet: [40, 10],
          hidden: ['facebook']
        }, {
          unified: '1F938-1F3FD',
          sheet: [40, 11],
          hidden: ['facebook']
        }, {
          unified: '1F938-1F3FE',
          sheet: [40, 12],
          hidden: ['facebook']
        }, {
          unified: '1F938-1F3FF',
          sheet: [40, 13],
          hidden: ['facebook']
        }],
        shortName: 'person_doing_cartwheel'
      }, {
        name: 'Man Cartwheeling',
        unified: '1F938-200D-2642-FE0F',
        sheet: [40, 2],
        skinVariations: [{
          unified: '1F938-1F3FB-200D-2642-FE0F',
          sheet: [40, 3]
        }, {
          unified: '1F938-1F3FC-200D-2642-FE0F',
          sheet: [40, 4]
        }, {
          unified: '1F938-1F3FD-200D-2642-FE0F',
          sheet: [40, 5]
        }, {
          unified: '1F938-1F3FE-200D-2642-FE0F',
          sheet: [40, 6]
        }, {
          unified: '1F938-1F3FF-200D-2642-FE0F',
          sheet: [40, 7]
        }],
        shortName: 'man-cartwheeling'
      }, {
        name: 'Woman Cartwheeling',
        unified: '1F938-200D-2640-FE0F',
        sheet: [39, 53],
        skinVariations: [{
          unified: '1F938-1F3FB-200D-2640-FE0F',
          sheet: [39, 54]
        }, {
          unified: '1F938-1F3FC-200D-2640-FE0F',
          sheet: [39, 55]
        }, {
          unified: '1F938-1F3FD-200D-2640-FE0F',
          sheet: [39, 56]
        }, {
          unified: '1F938-1F3FE-200D-2640-FE0F',
          sheet: [40, 0]
        }, {
          unified: '1F938-1F3FF-200D-2640-FE0F',
          sheet: [40, 1]
        }],
        shortName: 'woman-cartwheeling'
      }, {
        name: 'Wrestlers',
        unified: '1F93C',
        sheet: [40, 35],
        shortName: 'wrestlers'
      }, {
        name: 'Man Wrestling',
        unified: '1F93C-200D-2642-FE0F',
        sheet: [40, 34],
        shortName: 'man-wrestling'
      }, {
        name: 'Woman Wrestling',
        unified: '1F93C-200D-2640-FE0F',
        sheet: [40, 33],
        shortName: 'woman-wrestling'
      }, {
        name: 'Water Polo',
        unified: '1F93D',
        sheet: [40, 48],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F93D-1F3FB',
          sheet: [40, 49],
          hidden: ['facebook']
        }, {
          unified: '1F93D-1F3FC',
          sheet: [40, 50],
          hidden: ['facebook']
        }, {
          unified: '1F93D-1F3FD',
          sheet: [40, 51],
          hidden: ['facebook']
        }, {
          unified: '1F93D-1F3FE',
          sheet: [40, 52],
          hidden: ['facebook']
        }, {
          unified: '1F93D-1F3FF',
          sheet: [40, 53],
          hidden: ['facebook']
        }],
        shortName: 'water_polo'
      }, {
        name: 'Man Playing Water Polo',
        unified: '1F93D-200D-2642-FE0F',
        sheet: [40, 42],
        skinVariations: [{
          unified: '1F93D-1F3FB-200D-2642-FE0F',
          sheet: [40, 43]
        }, {
          unified: '1F93D-1F3FC-200D-2642-FE0F',
          sheet: [40, 44]
        }, {
          unified: '1F93D-1F3FD-200D-2642-FE0F',
          sheet: [40, 45]
        }, {
          unified: '1F93D-1F3FE-200D-2642-FE0F',
          sheet: [40, 46]
        }, {
          unified: '1F93D-1F3FF-200D-2642-FE0F',
          sheet: [40, 47]
        }],
        shortName: 'man-playing-water-polo'
      }, {
        name: 'Woman Playing Water Polo',
        unified: '1F93D-200D-2640-FE0F',
        sheet: [40, 36],
        skinVariations: [{
          unified: '1F93D-1F3FB-200D-2640-FE0F',
          sheet: [40, 37]
        }, {
          unified: '1F93D-1F3FC-200D-2640-FE0F',
          sheet: [40, 38]
        }, {
          unified: '1F93D-1F3FD-200D-2640-FE0F',
          sheet: [40, 39]
        }, {
          unified: '1F93D-1F3FE-200D-2640-FE0F',
          sheet: [40, 40]
        }, {
          unified: '1F93D-1F3FF-200D-2640-FE0F',
          sheet: [40, 41]
        }],
        shortName: 'woman-playing-water-polo'
      }, {
        name: 'Handball',
        unified: '1F93E',
        sheet: [41, 9],
        hidden: ['facebook'],
        skinVariations: [{
          unified: '1F93E-1F3FB',
          sheet: [41, 10],
          hidden: ['facebook']
        }, {
          unified: '1F93E-1F3FC',
          sheet: [41, 11],
          hidden: ['facebook']
        }, {
          unified: '1F93E-1F3FD',
          sheet: [41, 12],
          hidden: ['facebook']
        }, {
          unified: '1F93E-1F3FE',
          sheet: [41, 13],
          hidden: ['facebook']
        }, {
          unified: '1F93E-1F3FF',
          sheet: [41, 14],
          hidden: ['facebook']
        }],
        shortName: 'handball'
      }, {
        name: 'Man Playing Handball',
        unified: '1F93E-200D-2642-FE0F',
        sheet: [41, 3],
        skinVariations: [{
          unified: '1F93E-1F3FB-200D-2642-FE0F',
          sheet: [41, 4]
        }, {
          unified: '1F93E-1F3FC-200D-2642-FE0F',
          sheet: [41, 5]
        }, {
          unified: '1F93E-1F3FD-200D-2642-FE0F',
          sheet: [41, 6]
        }, {
          unified: '1F93E-1F3FE-200D-2642-FE0F',
          sheet: [41, 7]
        }, {
          unified: '1F93E-1F3FF-200D-2642-FE0F',
          sheet: [41, 8]
        }],
        shortName: 'man-playing-handball'
      }, {
        name: 'Woman Playing Handball',
        unified: '1F93E-200D-2640-FE0F',
        sheet: [40, 54],
        skinVariations: [{
          unified: '1F93E-1F3FB-200D-2640-FE0F',
          sheet: [40, 55]
        }, {
          unified: '1F93E-1F3FC-200D-2640-FE0F',
          sheet: [40, 56]
        }, {
          unified: '1F93E-1F3FD-200D-2640-FE0F',
          sheet: [41, 0]
        }, {
          unified: '1F93E-1F3FE-200D-2640-FE0F',
          sheet: [41, 1]
        }, {
          unified: '1F93E-1F3FF-200D-2640-FE0F',
          sheet: [41, 2]
        }],
        shortName: 'woman-playing-handball'
      }, {
        name: 'Juggling',
        unified: '1F939',
        sheet: [40, 26],
        skinVariations: [{
          unified: '1F939-1F3FB',
          sheet: [40, 27]
        }, {
          unified: '1F939-1F3FC',
          sheet: [40, 28]
        }, {
          unified: '1F939-1F3FD',
          sheet: [40, 29]
        }, {
          unified: '1F939-1F3FE',
          sheet: [40, 30]
        }, {
          unified: '1F939-1F3FF',
          sheet: [40, 31]
        }],
        shortName: 'juggling'
      }, {
        name: 'Man Juggling',
        unified: '1F939-200D-2642-FE0F',
        sheet: [40, 20],
        skinVariations: [{
          unified: '1F939-1F3FB-200D-2642-FE0F',
          sheet: [40, 21]
        }, {
          unified: '1F939-1F3FC-200D-2642-FE0F',
          sheet: [40, 22]
        }, {
          unified: '1F939-1F3FD-200D-2642-FE0F',
          sheet: [40, 23]
        }, {
          unified: '1F939-1F3FE-200D-2642-FE0F',
          sheet: [40, 24]
        }, {
          unified: '1F939-1F3FF-200D-2642-FE0F',
          sheet: [40, 25]
        }],
        shortName: 'man-juggling'
      }, {
        name: 'Woman Juggling',
        unified: '1F939-200D-2640-FE0F',
        sheet: [40, 14],
        skinVariations: [{
          unified: '1F939-1F3FB-200D-2640-FE0F',
          sheet: [40, 15]
        }, {
          unified: '1F939-1F3FC-200D-2640-FE0F',
          sheet: [40, 16]
        }, {
          unified: '1F939-1F3FD-200D-2640-FE0F',
          sheet: [40, 17]
        }, {
          unified: '1F939-1F3FE-200D-2640-FE0F',
          sheet: [40, 18]
        }, {
          unified: '1F939-1F3FF-200D-2640-FE0F',
          sheet: [40, 19]
        }],
        shortName: 'woman-juggling'
      }, {
        name: 'Person in Lotus Position',
        unified: '1F9D8',
        sheet: [49, 31],
        skinVariations: [{
          unified: '1F9D8-1F3FB',
          sheet: [49, 32]
        }, {
          unified: '1F9D8-1F3FC',
          sheet: [49, 33]
        }, {
          unified: '1F9D8-1F3FD',
          sheet: [49, 34]
        }, {
          unified: '1F9D8-1F3FE',
          sheet: [49, 35]
        }, {
          unified: '1F9D8-1F3FF',
          sheet: [49, 36]
        }],
        shortName: 'person_in_lotus_position',
        obsoletedBy: '1F9D8-200D-2640-FE0F'
      }, {
        name: 'Man in Lotus Position',
        unified: '1F9D8-200D-2642-FE0F',
        keywords: ['man', 'male', 'meditation', 'yoga', 'serenity', 'zen', 'mindfulness'],
        sheet: [49, 25],
        skinVariations: [{
          unified: '1F9D8-1F3FB-200D-2642-FE0F',
          sheet: [49, 26]
        }, {
          unified: '1F9D8-1F3FC-200D-2642-FE0F',
          sheet: [49, 27]
        }, {
          unified: '1F9D8-1F3FD-200D-2642-FE0F',
          sheet: [49, 28]
        }, {
          unified: '1F9D8-1F3FE-200D-2642-FE0F',
          sheet: [49, 29]
        }, {
          unified: '1F9D8-1F3FF-200D-2642-FE0F',
          sheet: [49, 30]
        }],
        shortName: 'man_in_lotus_position'
      }, {
        name: 'Woman in Lotus Position',
        unified: '1F9D8-200D-2640-FE0F',
        obsoletes: '1F9D8',
        keywords: ['woman', 'female', 'meditation', 'yoga', 'serenity', 'zen', 'mindfulness'],
        sheet: [49, 19],
        skinVariations: [{
          unified: '1F9D8-1F3FB-200D-2640-FE0F',
          sheet: [49, 20]
        }, {
          unified: '1F9D8-1F3FC-200D-2640-FE0F',
          sheet: [49, 21]
        }, {
          unified: '1F9D8-1F3FD-200D-2640-FE0F',
          sheet: [49, 22]
        }, {
          unified: '1F9D8-1F3FE-200D-2640-FE0F',
          sheet: [49, 23]
        }, {
          unified: '1F9D8-1F3FF-200D-2640-FE0F',
          sheet: [49, 24]
        }],
        shortName: 'woman_in_lotus_position'
      }, {
        name: 'Bath',
        unified: '1F6C0',
        keywords: ['clean', 'shower', 'bathroom'],
        sheet: [36, 17],
        skinVariations: [{
          unified: '1F6C0-1F3FB',
          sheet: [36, 18]
        }, {
          unified: '1F6C0-1F3FC',
          sheet: [36, 19]
        }, {
          unified: '1F6C0-1F3FD',
          sheet: [36, 20]
        }, {
          unified: '1F6C0-1F3FE',
          sheet: [36, 21]
        }, {
          unified: '1F6C0-1F3FF',
          sheet: [36, 22]
        }],
        shortName: 'bath'
      }, {
        name: 'Sleeping Accommodation',
        unified: '1F6CC',
        sheet: [36, 29],
        skinVariations: [{
          unified: '1F6CC-1F3FB',
          sheet: [36, 30]
        }, {
          unified: '1F6CC-1F3FC',
          sheet: [36, 31]
        }, {
          unified: '1F6CC-1F3FD',
          sheet: [36, 32]
        }, {
          unified: '1F6CC-1F3FE',
          sheet: [36, 33]
        }, {
          unified: '1F6CC-1F3FF',
          sheet: [36, 34]
        }],
        shortName: 'sleeping_accommodation'
      }, {
        name: 'People Holding Hands',
        unified: '1F9D1-200D-1F91D-200D-1F9D1',
        sheet: [46, 38],
        skinVariations: [{
          unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FB',
          sheet: [46, 39]
        }, {
          unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FC',
          sheet: [46, 40],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FD',
          sheet: [46, 41],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FE',
          sheet: [46, 42],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FF',
          sheet: [46, 43],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FB',
          sheet: [46, 44]
        }, {
          unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FC',
          sheet: [46, 45]
        }, {
          unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FD',
          sheet: [46, 46],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FE',
          sheet: [46, 47],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FF',
          sheet: [46, 48],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FB',
          sheet: [46, 49]
        }, {
          unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FC',
          sheet: [46, 50]
        }, {
          unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FD',
          sheet: [46, 51]
        }, {
          unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FE',
          sheet: [46, 52],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FF',
          sheet: [46, 53],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FB',
          sheet: [46, 54]
        }, {
          unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FC',
          sheet: [46, 55]
        }, {
          unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FD',
          sheet: [46, 56]
        }, {
          unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FE',
          sheet: [47, 0]
        }, {
          unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FF',
          sheet: [47, 1],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FB',
          sheet: [47, 2]
        }, {
          unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FC',
          sheet: [47, 3]
        }, {
          unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FD',
          sheet: [47, 4]
        }, {
          unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FE',
          sheet: [47, 5]
        }, {
          unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FF',
          sheet: [47, 6]
        }],
        shortName: 'people_holding_hands'
      }, {
        name: 'Two Women Holding Hands',
        unified: '1F46D',
        keywords: ['pair', 'friendship', 'couple', 'love', 'like', 'female', 'people', 'human'],
        sheet: [21, 11],
        skinVariations: [{
          unified: '1F46D-1F3FB',
          sheet: [21, 12]
        }, {
          unified: '1F46D-1F3FC',
          sheet: [21, 13]
        }, {
          unified: '1F46D-1F3FD',
          sheet: [21, 14]
        }, {
          unified: '1F46D-1F3FE',
          sheet: [21, 15]
        }, {
          unified: '1F46D-1F3FF',
          sheet: [21, 16]
        }, {
          unified: '1F469-1F3FB-200D-1F91D-200D-1F469-1F3FC',
          sheet: [21, 17],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FB-200D-1F91D-200D-1F469-1F3FD',
          sheet: [21, 18],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FB-200D-1F91D-200D-1F469-1F3FE',
          sheet: [21, 19],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FB-200D-1F91D-200D-1F469-1F3FF',
          sheet: [21, 20],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FC-200D-1F91D-200D-1F469-1F3FB',
          sheet: [21, 21]
        }, {
          unified: '1F469-1F3FC-200D-1F91D-200D-1F469-1F3FD',
          sheet: [21, 22],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FC-200D-1F91D-200D-1F469-1F3FE',
          sheet: [21, 23],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FC-200D-1F91D-200D-1F469-1F3FF',
          sheet: [21, 24],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FD-200D-1F91D-200D-1F469-1F3FB',
          sheet: [21, 25]
        }, {
          unified: '1F469-1F3FD-200D-1F91D-200D-1F469-1F3FC',
          sheet: [21, 26]
        }, {
          unified: '1F469-1F3FD-200D-1F91D-200D-1F469-1F3FE',
          sheet: [21, 27],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FD-200D-1F91D-200D-1F469-1F3FF',
          sheet: [21, 28],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FE-200D-1F91D-200D-1F469-1F3FB',
          sheet: [21, 29]
        }, {
          unified: '1F469-1F3FE-200D-1F91D-200D-1F469-1F3FC',
          sheet: [21, 30]
        }, {
          unified: '1F469-1F3FE-200D-1F91D-200D-1F469-1F3FD',
          sheet: [21, 31]
        }, {
          unified: '1F469-1F3FE-200D-1F91D-200D-1F469-1F3FF',
          sheet: [21, 32],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F469-1F3FF-200D-1F91D-200D-1F469-1F3FB',
          sheet: [21, 33]
        }, {
          unified: '1F469-1F3FF-200D-1F91D-200D-1F469-1F3FC',
          sheet: [21, 34]
        }, {
          unified: '1F469-1F3FF-200D-1F91D-200D-1F469-1F3FD',
          sheet: [21, 35]
        }, {
          unified: '1F469-1F3FF-200D-1F91D-200D-1F469-1F3FE',
          sheet: [21, 36]
        }],
        shortNames: ['women_holding_hands'],
        shortName: 'two_women_holding_hands'
      }, {
        name: 'Man and Woman Holding Hands',
        unified: '1F46B',
        keywords: ['pair', 'people', 'human', 'love', 'date', 'dating', 'like', 'affection', 'valentines', 'marriage'],
        sheet: [20, 16],
        skinVariations: [{
          unified: '1F46B-1F3FB',
          sheet: [20, 17]
        }, {
          unified: '1F46B-1F3FC',
          sheet: [20, 18]
        }, {
          unified: '1F46B-1F3FD',
          sheet: [20, 19]
        }, {
          unified: '1F46B-1F3FE',
          sheet: [20, 20]
        }, {
          unified: '1F46B-1F3FF',
          sheet: [20, 21]
        }, {
          unified: '1F469-1F3FB-200D-1F91D-200D-1F468-1F3FC',
          sheet: [20, 22]
        }, {
          unified: '1F469-1F3FB-200D-1F91D-200D-1F468-1F3FD',
          sheet: [20, 23]
        }, {
          unified: '1F469-1F3FB-200D-1F91D-200D-1F468-1F3FE',
          sheet: [20, 24]
        }, {
          unified: '1F469-1F3FB-200D-1F91D-200D-1F468-1F3FF',
          sheet: [20, 25]
        }, {
          unified: '1F469-1F3FC-200D-1F91D-200D-1F468-1F3FB',
          sheet: [20, 26]
        }, {
          unified: '1F469-1F3FC-200D-1F91D-200D-1F468-1F3FD',
          sheet: [20, 27]
        }, {
          unified: '1F469-1F3FC-200D-1F91D-200D-1F468-1F3FE',
          sheet: [20, 28]
        }, {
          unified: '1F469-1F3FC-200D-1F91D-200D-1F468-1F3FF',
          sheet: [20, 29]
        }, {
          unified: '1F469-1F3FD-200D-1F91D-200D-1F468-1F3FB',
          sheet: [20, 30]
        }, {
          unified: '1F469-1F3FD-200D-1F91D-200D-1F468-1F3FC',
          sheet: [20, 31]
        }, {
          unified: '1F469-1F3FD-200D-1F91D-200D-1F468-1F3FE',
          sheet: [20, 32]
        }, {
          unified: '1F469-1F3FD-200D-1F91D-200D-1F468-1F3FF',
          sheet: [20, 33]
        }, {
          unified: '1F469-1F3FE-200D-1F91D-200D-1F468-1F3FB',
          sheet: [20, 34]
        }, {
          unified: '1F469-1F3FE-200D-1F91D-200D-1F468-1F3FC',
          sheet: [20, 35]
        }, {
          unified: '1F469-1F3FE-200D-1F91D-200D-1F468-1F3FD',
          sheet: [20, 36]
        }, {
          unified: '1F469-1F3FE-200D-1F91D-200D-1F468-1F3FF',
          sheet: [20, 37]
        }, {
          unified: '1F469-1F3FF-200D-1F91D-200D-1F468-1F3FB',
          sheet: [20, 38]
        }, {
          unified: '1F469-1F3FF-200D-1F91D-200D-1F468-1F3FC',
          sheet: [20, 39]
        }, {
          unified: '1F469-1F3FF-200D-1F91D-200D-1F468-1F3FD',
          sheet: [20, 40]
        }, {
          unified: '1F469-1F3FF-200D-1F91D-200D-1F468-1F3FE',
          sheet: [20, 41]
        }],
        shortNames: ['man_and_woman_holding_hands', 'woman_and_man_holding_hands'],
        shortName: 'couple'
      }, {
        name: 'Two Men Holding Hands',
        unified: '1F46C',
        keywords: ['pair', 'couple', 'love', 'like', 'bromance', 'friendship', 'people', 'human'],
        sheet: [20, 42],
        skinVariations: [{
          unified: '1F46C-1F3FB',
          sheet: [20, 43]
        }, {
          unified: '1F46C-1F3FC',
          sheet: [20, 44]
        }, {
          unified: '1F46C-1F3FD',
          sheet: [20, 45]
        }, {
          unified: '1F46C-1F3FE',
          sheet: [20, 46]
        }, {
          unified: '1F46C-1F3FF',
          sheet: [20, 47]
        }, {
          unified: '1F468-1F3FB-200D-1F91D-200D-1F468-1F3FC',
          sheet: [20, 48],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FB-200D-1F91D-200D-1F468-1F3FD',
          sheet: [20, 49],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FB-200D-1F91D-200D-1F468-1F3FE',
          sheet: [20, 50],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FB-200D-1F91D-200D-1F468-1F3FF',
          sheet: [20, 51],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FC-200D-1F91D-200D-1F468-1F3FB',
          sheet: [20, 52]
        }, {
          unified: '1F468-1F3FC-200D-1F91D-200D-1F468-1F3FD',
          sheet: [20, 53],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FC-200D-1F91D-200D-1F468-1F3FE',
          sheet: [20, 54],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FC-200D-1F91D-200D-1F468-1F3FF',
          sheet: [20, 55],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FD-200D-1F91D-200D-1F468-1F3FB',
          sheet: [20, 56]
        }, {
          unified: '1F468-1F3FD-200D-1F91D-200D-1F468-1F3FC',
          sheet: [21, 0]
        }, {
          unified: '1F468-1F3FD-200D-1F91D-200D-1F468-1F3FE',
          sheet: [21, 1],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FD-200D-1F91D-200D-1F468-1F3FF',
          sheet: [21, 2],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FE-200D-1F91D-200D-1F468-1F3FB',
          sheet: [21, 3]
        }, {
          unified: '1F468-1F3FE-200D-1F91D-200D-1F468-1F3FC',
          sheet: [21, 4]
        }, {
          unified: '1F468-1F3FE-200D-1F91D-200D-1F468-1F3FD',
          sheet: [21, 5]
        }, {
          unified: '1F468-1F3FE-200D-1F91D-200D-1F468-1F3FF',
          sheet: [21, 6],
          hidden: ['google', 'facebook']
        }, {
          unified: '1F468-1F3FF-200D-1F91D-200D-1F468-1F3FB',
          sheet: [21, 7]
        }, {
          unified: '1F468-1F3FF-200D-1F91D-200D-1F468-1F3FC',
          sheet: [21, 8]
        }, {
          unified: '1F468-1F3FF-200D-1F91D-200D-1F468-1F3FD',
          sheet: [21, 9]
        }, {
          unified: '1F468-1F3FF-200D-1F91D-200D-1F468-1F3FE',
          sheet: [21, 10]
        }],
        shortNames: ['men_holding_hands'],
        shortName: 'two_men_holding_hands'
      }, {
        name: 'Kiss',
        unified: '1F48F',
        sheet: [25, 25],
        shortName: 'couplekiss',
        obsoletedBy: '1F469-200D-2764-FE0F-200D-1F48B-200D-1F468'
      }, {
        name: 'Woman Kiss Man',
        unified: '1F469-200D-2764-FE0F-200D-1F48B-200D-1F468',
        obsoletes: '1F48F',
        sheet: [20, 7],
        shortName: 'woman-kiss-man'
      }, {
        name: 'Man Kiss Man',
        unified: '1F468-200D-2764-FE0F-200D-1F48B-200D-1F468',
        sheet: [17, 21],
        shortName: 'man-kiss-man'
      }, {
        name: 'Woman Kiss Woman',
        unified: '1F469-200D-2764-FE0F-200D-1F48B-200D-1F469',
        sheet: [20, 8],
        shortName: 'woman-kiss-woman'
      }, {
        name: 'Couple with Heart',
        unified: '1F491',
        sheet: [25, 27],
        shortName: 'couple_with_heart',
        obsoletedBy: '1F469-200D-2764-FE0F-200D-1F468'
      }, {
        name: 'Woman Heart Man',
        unified: '1F469-200D-2764-FE0F-200D-1F468',
        obsoletes: '1F491',
        sheet: [20, 5],
        shortName: 'woman-heart-man'
      }, {
        name: 'Man Heart Man',
        unified: '1F468-200D-2764-FE0F-200D-1F468',
        sheet: [17, 20],
        shortName: 'man-heart-man'
      }, {
        name: 'Woman Heart Woman',
        unified: '1F469-200D-2764-FE0F-200D-1F469',
        sheet: [20, 6],
        shortName: 'woman-heart-woman'
      }, {
        name: 'Family',
        unified: '1F46A',
        sheet: [20, 15],
        shortNames: ['man-woman-boy'],
        shortName: 'family',
        obsoletedBy: '1F468-200D-1F469-200D-1F466'
      }, {
        name: 'Man Woman Boy',
        unified: '1F468-200D-1F469-200D-1F466',
        obsoletes: '1F46A',
        sheet: [15, 33],
        shortNames: ['family'],
        shortName: 'man-woman-boy'
      }, {
        name: 'Man Woman Girl',
        unified: '1F468-200D-1F469-200D-1F467',
        sheet: [15, 35],
        shortName: 'man-woman-girl'
      }, {
        name: 'Man Woman Girl Boy',
        unified: '1F468-200D-1F469-200D-1F467-200D-1F466',
        sheet: [15, 36],
        shortName: 'man-woman-girl-boy'
      }, {
        name: 'Man Woman Boy Boy',
        unified: '1F468-200D-1F469-200D-1F466-200D-1F466',
        sheet: [15, 34],
        shortName: 'man-woman-boy-boy'
      }, {
        name: 'Man Woman Girl Girl',
        unified: '1F468-200D-1F469-200D-1F467-200D-1F467',
        sheet: [15, 37],
        shortName: 'man-woman-girl-girl'
      }, {
        name: 'Man Man Boy',
        unified: '1F468-200D-1F468-200D-1F466',
        sheet: [15, 28],
        shortName: 'man-man-boy'
      }, {
        name: 'Man Man Girl',
        unified: '1F468-200D-1F468-200D-1F467',
        sheet: [15, 30],
        shortName: 'man-man-girl'
      }, {
        name: 'Man Man Girl Boy',
        unified: '1F468-200D-1F468-200D-1F467-200D-1F466',
        sheet: [15, 31],
        shortName: 'man-man-girl-boy'
      }, {
        name: 'Man Man Boy Boy',
        unified: '1F468-200D-1F468-200D-1F466-200D-1F466',
        sheet: [15, 29],
        shortName: 'man-man-boy-boy'
      }, {
        name: 'Man Man Girl Girl',
        unified: '1F468-200D-1F468-200D-1F467-200D-1F467',
        sheet: [15, 32],
        shortName: 'man-man-girl-girl'
      }, {
        name: 'Woman Woman Boy',
        unified: '1F469-200D-1F469-200D-1F466',
        sheet: [18, 18],
        shortName: 'woman-woman-boy'
      }, {
        name: 'Woman Woman Girl',
        unified: '1F469-200D-1F469-200D-1F467',
        sheet: [18, 20],
        shortName: 'woman-woman-girl'
      }, {
        name: 'Woman Woman Girl Boy',
        unified: '1F469-200D-1F469-200D-1F467-200D-1F466',
        sheet: [18, 21],
        shortName: 'woman-woman-girl-boy'
      }, {
        name: 'Woman Woman Boy Boy',
        unified: '1F469-200D-1F469-200D-1F466-200D-1F466',
        sheet: [18, 19],
        shortName: 'woman-woman-boy-boy'
      }, {
        name: 'Woman Woman Girl Girl',
        unified: '1F469-200D-1F469-200D-1F467-200D-1F467',
        sheet: [18, 22],
        shortName: 'woman-woman-girl-girl'
      }, {
        name: 'Man Boy',
        unified: '1F468-200D-1F466',
        sheet: [15, 24],
        shortName: 'man-boy'
      }, {
        name: 'Man Boy Boy',
        unified: '1F468-200D-1F466-200D-1F466',
        sheet: [15, 23],
        shortName: 'man-boy-boy'
      }, {
        name: 'Man Girl',
        unified: '1F468-200D-1F467',
        sheet: [15, 27],
        shortName: 'man-girl'
      }, {
        name: 'Man Girl Boy',
        unified: '1F468-200D-1F467-200D-1F466',
        sheet: [15, 25],
        shortName: 'man-girl-boy'
      }, {
        name: 'Man Girl Girl',
        unified: '1F468-200D-1F467-200D-1F467',
        sheet: [15, 26],
        shortName: 'man-girl-girl'
      }, {
        name: 'Woman Boy',
        unified: '1F469-200D-1F466',
        sheet: [18, 14],
        shortName: 'woman-boy'
      }, {
        name: 'Woman Boy Boy',
        unified: '1F469-200D-1F466-200D-1F466',
        sheet: [18, 13],
        shortName: 'woman-boy-boy'
      }, {
        name: 'Woman Girl',
        unified: '1F469-200D-1F467',
        sheet: [18, 17],
        shortName: 'woman-girl'
      }, {
        name: 'Woman Girl Boy',
        unified: '1F469-200D-1F467-200D-1F466',
        sheet: [18, 15],
        shortName: 'woman-girl-boy'
      }, {
        name: 'Woman Girl Girl',
        unified: '1F469-200D-1F467-200D-1F467',
        sheet: [18, 16],
        shortName: 'woman-girl-girl'
      }, {
        name: 'Speaking Head in Silhouette',
        unified: '1F5E3-FE0F',
        sheet: [30, 25],
        shortName: 'speaking_head_in_silhouette'
      }, {
        name: 'Bust in Silhouette',
        unified: '1F464',
        keywords: ['user', 'person', 'human'],
        sheet: [14, 24],
        shortName: 'bust_in_silhouette'
      }, {
        name: 'Busts in Silhouette',
        unified: '1F465',
        keywords: ['user', 'person', 'human', 'group', 'team'],
        sheet: [14, 25],
        shortName: 'busts_in_silhouette'
      }, {
        name: 'Footprints',
        unified: '1F463',
        keywords: ['feet', 'tracking', 'walking', 'beach'],
        sheet: [14, 23],
        shortName: 'footprints'
      }];
      var _skins = [{
        name: 'Emoji Modifier Fitzpatrick Type-1-2',
        unified: '1F3FB',
        sheet: [11, 23],
        shortName: 'skin-tone-2'
      }, {
        name: 'Emoji Modifier Fitzpatrick Type-3',
        unified: '1F3FC',
        sheet: [11, 24],
        shortName: 'skin-tone-3'
      }, {
        name: 'Emoji Modifier Fitzpatrick Type-4',
        unified: '1F3FD',
        sheet: [11, 25],
        shortName: 'skin-tone-4'
      }, {
        name: 'Emoji Modifier Fitzpatrick Type-5',
        unified: '1F3FE',
        sheet: [11, 26],
        shortName: 'skin-tone-5'
      }, {
        name: 'Emoji Modifier Fitzpatrick Type-6',
        unified: '1F3FF',
        sheet: [11, 27],
        shortName: 'skin-tone-6'
      }];
      var COLONS_REGEX = /^(?:\:([^\:]+)\:)(?:\:skin-tone-(\d)\:)?$/;
      var SKINS = ['1F3FA', '1F3FB', '1F3FC', '1F3FD', '1F3FE', '1F3FF'];
      var _DEFAULT_BACKGROUNDFN = function _DEFAULT_BACKGROUNDFN(set, sheetSize) {
        return "https://unpkg.com/emoji-datasource-".concat(set, "@5.0.1/img/").concat(set, "/sheets-256/").concat(sheetSize, ".png");
      };
      var _EmojiService = /*#__PURE__*/function () {
        function EmojiService() {
          _classCallCheck(this, EmojiService);
          this.uncompressed = false;
          this.names = {};
          this.emojis = [];
          if (!this.uncompressed) {
            this.uncompress(_emojis);
            this.uncompressed = true;
          }
        }
        _createClass(EmojiService, [{
          key: "uncompress",
          value: function uncompress(list) {
            var _this = this;
            this.emojis = list.map(function (emoji) {
              var data = Object.assign({}, emoji);
              if (!data.shortNames) {
                data.shortNames = [];
              }
              data.shortNames.unshift(data.shortName);
              data.id = data.shortName;
              data["native"] = _this.unifiedToNative(data.unified);
              if (!data.skinVariations) {
                data.skinVariations = [];
              }
              if (!data.keywords) {
                data.keywords = [];
              }
              if (!data.emoticons) {
                data.emoticons = [];
              }
              if (!data.hidden) {
                data.hidden = [];
              }
              if (!data.text) {
                data.text = '';
              }
              if (data.obsoletes) {
                // get keywords from emoji that it obsoletes since that is shared
                var f = list.find(function (x) {
                  return x.unified === data.obsoletes;
                });
                if (f) {
                  if (f.keywords) {
                    data.keywords = [].concat(_toConsumableArray(data.keywords), _toConsumableArray(f.keywords), [f.shortName]);
                  } else {
                    data.keywords = [].concat(_toConsumableArray(data.keywords), [f.shortName]);
                  }
                }
              }
              _this.names[data.unified] = data;
              var _iterator = _createForOfIteratorHelper(data.shortNames),
                _step;
              try {
                for (_iterator.s(); !(_step = _iterator.n()).done;) {
                  var n = _step.value;
                  _this.names[n] = data;
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
              return data;
            });
          }
        }, {
          key: "getData",
          value: function getData(emoji, skin, set) {
            var emojiData;
            if (typeof emoji === 'string') {
              var matches = emoji.match(COLONS_REGEX);
              if (matches) {
                emoji = matches[1];
                if (matches[2]) {
                  skin = parseInt(matches[2], 10);
                }
              }
              if (this.names.hasOwnProperty(emoji)) {
                emojiData = this.names[emoji];
              } else {
                return null;
              }
            } else if (emoji.id) {
              emojiData = this.names[emoji.id];
            } else if (emoji.unified) {
              emojiData = this.names[emoji.unified.toUpperCase()];
            }
            if (!emojiData) {
              emojiData = emoji;
              emojiData.custom = true;
            }
            var hasSkinVariations = emojiData.skinVariations && emojiData.skinVariations.length;
            if (hasSkinVariations && skin && skin > 1 && set) {
              emojiData = Object.assign({}, emojiData);
              var skinKey = SKINS[skin - 1];
              var variationData = emojiData.skinVariations.find(function (n) {
                return n.unified.includes(skinKey);
              });
              if (!variationData.hidden || !variationData.hidden.includes(set)) {
                emojiData.skinTone = skin;
                emojiData = Object.assign(Object.assign({}, emojiData), variationData);
              }
              emojiData["native"] = this.unifiedToNative(emojiData.unified);
            }
            emojiData.set = set || '';
            return emojiData;
          }
        }, {
          key: "unifiedToNative",
          value: function unifiedToNative(unified) {
            var codePoints = unified.split('-').map(function (u) {
              return parseInt("0x".concat(u), 16);
            });
            return String.fromCodePoint.apply(String, _toConsumableArray(codePoints));
          }
        }, {
          key: "emojiSpriteStyles",
          value: function emojiSpriteStyles(sheet) {
            var set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'apple';
            var size = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 24;
            var sheetSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 64;
            var sheetRows = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 57;
            var backgroundImageFn = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : _DEFAULT_BACKGROUNDFN;
            var sheetColumns = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 57;
            return {
              width: "".concat(size, "px"),
              height: "".concat(size, "px"),
              display: 'inline-block',
              'background-image': "url(".concat(backgroundImageFn(set, sheetSize), ")"),
              'background-size': "".concat(100 * sheetColumns, "% ").concat(100 * sheetRows, "%"),
              'background-position': this.getSpritePosition(sheet, sheetColumns)
            };
          }
        }, {
          key: "getSpritePosition",
          value: function getSpritePosition(sheet, sheetColumns) {
            var _sheet = _slicedToArray(sheet, 2),
              sheetX = _sheet[0],
              sheetY = _sheet[1];
            var multiply = 100 / (sheetColumns - 1);
            return "".concat(multiply * sheetX, "% ").concat(multiply * sheetY, "%");
          }
        }, {
          key: "sanitize",
          value: function sanitize(emoji) {
            if (emoji === null) {
              return null;
            }
            var id = emoji.id || emoji.shortNames[0];
            var colons = ":".concat(id, ":");
            if (emoji.skinTone) {
              colons += ":skin-tone-".concat(emoji.skinTone, ":");
            }
            emoji.colons = colons;
            return Object.assign({}, emoji);
          }
        }, {
          key: "getSanitizedData",
          value: function getSanitizedData(emoji, skin, set) {
            return this.sanitize(this.getData(emoji, skin, set));
          }
        }]);
        return EmojiService;
      }();
      _EmojiService.ɵfac = function EmojiService_Factory(t) {
        return new (t || _EmojiService)();
      };
      _EmojiService.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({
        factory: function EmojiService_Factory() {
          return new _EmojiService();
        },
        token: _EmojiService,
        providedIn: "root"
      });
      var _EmojiComponent = /*#__PURE__*/function () {
        function EmojiComponent(emojiService) {
          _classCallCheck(this, EmojiComponent);
          this.emojiService = emojiService;
          this.skin = 1;
          this.set = 'apple';
          this.sheetSize = 64;
          /** Renders the native unicode emoji */
          this.isNative = false;
          this.forceSize = false;
          this.tooltip = false;
          this.size = 24;
          this.emoji = '';
          this.hideObsolete = false;
          this.SHEET_COLUMNS = 57;
          this.emojiOver = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.emojiLeave = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.emojiClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.title = '';
          this.label = '';
          this.custom = false;
          this.isVisible = true;
          // TODO: replace 4.0.3 w/ dynamic get verison from emoji-datasource in package.json
          this.backgroundImageFn = _DEFAULT_BACKGROUNDFN;
        }
        _createClass(EmojiComponent, [{
          key: "ngOnChanges",
          value: function ngOnChanges() {
            if (!this.emoji) {
              return this.isVisible = false;
            }
            var data = this.getData();
            if (!data) {
              return this.isVisible = false;
            }
            // const children = this.children;
            this.unified = data["native"] || null;
            if (data.custom) {
              this.custom = data.custom;
            }
            if (!data.unified && !data.custom) {
              return this.isVisible = false;
            }
            if (this.tooltip) {
              this.title = data.shortNames[0];
            }
            if (data.obsoletedBy && this.hideObsolete) {
              return this.isVisible = false;
            }
            this.label = [data["native"]].concat(data.shortNames).filter(Boolean).join(', ');
            if (this.isNative && data.unified && data["native"]) {
              // hide older emoji before the split into gendered emoji
              this.style = {
                fontSize: "".concat(this.size, "px")
              };
              if (this.forceSize) {
                this.style.display = 'inline-block';
                this.style.width = "".concat(this.size, "px");
                this.style.height = "".concat(this.size, "px");
                this.style['word-break'] = 'keep-all';
              }
            } else if (data.custom) {
              this.style = {
                width: "".concat(this.size, "px"),
                height: "".concat(this.size, "px"),
                display: 'inline-block'
              };
              if (data.spriteUrl && this.sheetRows && this.sheetColumns) {
                this.style = Object.assign(Object.assign({}, this.style), {
                  backgroundImage: "url(".concat(data.spriteUrl, ")"),
                  backgroundSize: "".concat(100 * this.sheetColumns, "% ").concat(100 * this.sheetRows, "%"),
                  backgroundPosition: this.emojiService.getSpritePosition(data.sheet, this.sheetColumns)
                });
              } else {
                this.style = Object.assign(Object.assign({}, this.style), {
                  backgroundImage: "url(".concat(data.imageUrl, ")"),
                  backgroundSize: 'contain'
                });
              }
            } else {
              if (data.hidden.length && data.hidden.includes(this.set)) {
                if (this.fallback) {
                  this.style = {
                    fontSize: "".concat(this.size, "px")
                  };
                  this.unified = this.fallback(data, this);
                } else {
                  return this.isVisible = false;
                }
              } else {
                this.style = this.emojiService.emojiSpriteStyles(data.sheet, this.set, this.size, this.sheetSize, this.sheetRows, this.backgroundImageFn, this.SHEET_COLUMNS);
              }
            }
            return this.isVisible = true;
          }
        }, {
          key: "getData",
          value: function getData() {
            return this.emojiService.getData(this.emoji, this.skin, this.set);
          }
        }, {
          key: "getSanitizedData",
          value: function getSanitizedData() {
            return this.emojiService.getSanitizedData(this.emoji, this.skin, this.set);
          }
        }, {
          key: "handleClick",
          value: function handleClick($event) {
            var emoji = this.getSanitizedData();
            this.emojiClick.emit({
              emoji: emoji,
              $event: $event
            });
          }
        }, {
          key: "handleOver",
          value: function handleOver($event) {
            var emoji = this.getSanitizedData();
            this.emojiOver.emit({
              emoji: emoji,
              $event: $event
            });
          }
        }, {
          key: "handleLeave",
          value: function handleLeave($event) {
            var emoji = this.getSanitizedData();
            this.emojiLeave.emit({
              emoji: emoji,
              $event: $event
            });
          }
        }]);
        return EmojiComponent;
      }();
      _EmojiComponent.ɵfac = function EmojiComponent_Factory(t) {
        return new (t || _EmojiComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_EmojiService));
      };
      _EmojiComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _EmojiComponent,
        selectors: [["ngx-emoji"]],
        inputs: {
          skin: "skin",
          set: "set",
          sheetSize: "sheetSize",
          isNative: "isNative",
          forceSize: "forceSize",
          tooltip: "tooltip",
          size: "size",
          emoji: "emoji",
          hideObsolete: "hideObsolete",
          SHEET_COLUMNS: "SHEET_COLUMNS",
          backgroundImageFn: "backgroundImageFn",
          fallback: "fallback",
          sheetRows: "sheetRows",
          sheetColumns: "sheetColumns",
          useButton: "useButton"
        },
        outputs: {
          emojiOver: "emojiOver",
          emojiLeave: "emojiLeave",
          emojiClick: "emojiClick"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
        ngContentSelectors: _c0,
        decls: 2,
        vars: 2,
        consts: [["type", "button", "class", "emoji-mart-emoji", 3, "title", "emoji-mart-emoji-native", "emoji-mart-emoji-custom", "click", "mouseenter", "mouseleave", 4, "ngIf"], ["class", "emoji-mart-emoji", 3, "title", "emoji-mart-emoji-native", "emoji-mart-emoji-custom", "click", "mouseenter", "mouseleave", 4, "ngIf"], ["type", "button", 1, "emoji-mart-emoji", 3, "title", "click", "mouseenter", "mouseleave"], [3, "ngStyle"], [3, "ngIf"], [1, "emoji-mart-emoji", 3, "title", "click", "mouseenter", "mouseleave"]],
        template: function EmojiComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](_c0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, EmojiComponent_button_0_Template, 4, 8, "button", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, EmojiComponent_span_1_Template, 4, 8, "span", 1);
          }
          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.useButton && ctx.isVisible);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.useButton && ctx.isVisible);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgStyle],
        encapsulation: 2,
        changeDetection: 0
      });
      _EmojiComponent.ctorParameters = function () {
        return [{
          type: _EmojiService
        }];
      };
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "skin", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "set", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "sheetSize", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "isNative", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "forceSize", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "tooltip", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "size", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "emoji", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "fallback", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "hideObsolete", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "SHEET_COLUMNS", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "sheetRows", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "sheetColumns", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "useButton", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _EmojiComponent.prototype, "emojiOver", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _EmojiComponent.prototype, "emojiLeave", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _EmojiComponent.prototype, "emojiClick", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _EmojiComponent.prototype, "backgroundImageFn", void 0);
      var _EmojiModule = /*#__PURE__*/_createClass(function EmojiModule() {
        _classCallCheck(this, EmojiModule);
      });
      _EmojiModule.ɵfac = function EmojiModule_Factory(t) {
        return new (t || _EmojiModule)();
      };
      _EmojiModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: _EmojiModule
      });
      _EmojiModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule]]
      });
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_EmojiService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [];
        }, null);
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_EmojiComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'ngx-emoji',
            template: "\n    <button\n      *ngIf=\"useButton && isVisible\"\n      type=\"button\"\n      (click)=\"handleClick($event)\"\n      (mouseenter)=\"handleOver($event)\"\n      (mouseleave)=\"handleLeave($event)\"\n      [title]=\"title\"\n      [attr.aria-label]=\"label\"\n      class=\"emoji-mart-emoji\"\n      [class.emoji-mart-emoji-native]=\"isNative\"\n      [class.emoji-mart-emoji-custom]=\"custom\"\n    >\n      <span [ngStyle]=\"style\">\n        <ng-template [ngIf]=\"isNative\">{{ unified }}</ng-template>\n        <ng-content></ng-content>\n      </span>\n    </button>\n\n    <span\n      *ngIf=\"!useButton && isVisible\"\n      (click)=\"handleClick($event)\"\n      (mouseenter)=\"handleOver($event)\"\n      (mouseleave)=\"handleLeave($event)\"\n      [title]=\"title\"\n      [attr.aria-label]=\"label\"\n      class=\"emoji-mart-emoji\"\n      [class.emoji-mart-emoji-native]=\"isNative\"\n      [class.emoji-mart-emoji-custom]=\"custom\"\n    >\n      <span [ngStyle]=\"style\">\n        <ng-template [ngIf]=\"isNative\">{{ unified }}</ng-template>\n        <ng-content></ng-content>\n      </span>\n    </span>\n  ",
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false
          }]
        }], function () {
          return [{
            type: _EmojiService
          }];
        }, {
          skin: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          set: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          sheetSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          isNative: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          forceSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          tooltip: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          size: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emoji: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          hideObsolete: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          SHEET_COLUMNS: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiOver: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          emojiLeave: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          emojiClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          backgroundImageFn: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          fallback: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          sheetRows: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          sheetColumns: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          useButton: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_EmojiModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
          args: [{
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule],
            exports: [_EmojiComponent],
            declarations: [_EmojiComponent]
          }]
        }], null, null);
      })();
      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](_EmojiModule, {
          declarations: function declarations() {
            return [_EmojiComponent];
          },
          imports: function imports() {
            return [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule];
          },
          exports: function exports() {
            return [_EmojiComponent];
          }
        });
      })();

      /**
       * Generated bundle index. Do not edit.
       */

      //# sourceMappingURL=ctrl-ngx-emoji-mart-ngx-emoji.js.map

      /***/
    },

    /***/46180:
    /*!****************************************************************************************!*\
      !*** ./node_modules/@ctrl/ngx-emoji-mart/__ivy_ngcc__/fesm2015/ctrl-ngx-emoji-mart.js ***!
      \****************************************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"AnchorsComponent": function AnchorsComponent() {
          return (/* binding */_AnchorsComponent
          );
        },
        /* harmony export */"CategoryComponent": function CategoryComponent() {
          return (/* binding */_CategoryComponent
          );
        },
        /* harmony export */"EmojiFrequentlyService": function EmojiFrequentlyService() {
          return (/* binding */_EmojiFrequentlyService
          );
        },
        /* harmony export */"EmojiSearch": function EmojiSearch() {
          return (/* binding */_EmojiSearch
          );
        },
        /* harmony export */"PickerComponent": function PickerComponent() {
          return (/* binding */_PickerComponent
          );
        },
        /* harmony export */"PickerModule": function PickerModule() {
          return (/* binding */_PickerModule
          );
        },
        /* harmony export */"PreviewComponent": function PreviewComponent() {
          return (/* binding */_PreviewComponent
          );
        },
        /* harmony export */"SearchComponent": function SearchComponent() {
          return (/* binding */_SearchComponent
          );
        },
        /* harmony export */"SkinComponent": function SkinComponent() {
          return (/* binding */_SkinComponent
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! tslib */64762);
      /* harmony import */
      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @angular/core */37716);
      /* harmony import */
      var _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @ctrl/ngx-emoji-mart/ngx-emoji */62558);
      /* harmony import */
      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @angular/common */38583);
      /* harmony import */
      var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! @angular/forms */3679);
      function AnchorsComponent_ng_template_1_span_0_Template(rf, ctx) {
        if (rf & 1) {
          var _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AnchorsComponent_ng_template_1_span_0_Template_span_click_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
            var idx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().index;
            var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r4.handleClick($event, idx_r2);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "svg", 4);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "path");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceHTML"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "span", 5);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var category_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
          var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("color", category_r1.name === ctx_r3.selected ? ctx_r3.color : null);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("emoji-mart-anchor-selected", category_r1.name === ctx_r3.selected);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("title", ctx_r3.i18n.categories[category_r1.id]);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("d", ctx_r3.icons[category_r1.id]);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("background-color", ctx_r3.color);
        }
      }
      function AnchorsComponent_ng_template_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, AnchorsComponent_ng_template_1_span_0_Template, 5, 8, "span", 2);
        }
        if (rf & 2) {
          var category_r1 = ctx.$implicit;
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", category_r1.anchor !== false);
        }
      }
      var _c0 = ["container"];
      var _c1 = ["label"];
      function CategoryComponent_ng_template_6_ngx_emoji_0_Template(rf, ctx) {
        if (rf & 1) {
          var _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ngx-emoji", 8);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("emojiOver", function CategoryComponent_ng_template_6_ngx_emoji_0_Template_ngx_emoji_emojiOver_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r7);
            var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
            return ctx_r6.emojiOver.emit($event);
          })("emojiLeave", function CategoryComponent_ng_template_6_ngx_emoji_0_Template_ngx_emoji_emojiLeave_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r7);
            var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
            return ctx_r8.emojiLeave.emit($event);
          })("emojiClick", function CategoryComponent_ng_template_6_ngx_emoji_0_Template_ngx_emoji_emojiClick_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r7);
            var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
            return ctx_r9.emojiClick.emit($event);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var emoji_r5 = ctx.$implicit;
          var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("emoji", emoji_r5)("size", ctx_r4.emojiSize)("skin", ctx_r4.emojiSkin)("isNative", ctx_r4.emojiIsNative)("set", ctx_r4.emojiSet)("sheetSize", ctx_r4.emojiSheetSize)("forceSize", ctx_r4.emojiForceSize)("tooltip", ctx_r4.emojiTooltip)("backgroundImageFn", ctx_r4.emojiBackgroundImageFn)("hideObsolete", ctx_r4.hideObsolete);
        }
      }
      function CategoryComponent_ng_template_6_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, CategoryComponent_ng_template_6_ngx_emoji_0_Template, 1, 10, "ngx-emoji", 7);
        }
        if (rf & 2) {
          var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r2.emojis)("ngForTrackBy", ctx_r2.trackById);
        }
      }
      function CategoryComponent_div_7_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "ngx-emoji", 9);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 10);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("emoji", ctx_r3.notFoundEmoji)("skin", ctx_r3.emojiSkin)("isNative", ctx_r3.emojiIsNative)("set", ctx_r3.emojiSet)("sheetSize", ctx_r3.emojiSheetSize)("forceSize", ctx_r3.emojiForceSize)("tooltip", ctx_r3.emojiTooltip)("backgroundImageFn", ctx_r3.emojiBackgroundImageFn)("useButton", ctx_r3.emojiUseButton);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r3.i18n.notfound, " ");
        }
      }
      var _c2 = ["scrollRef"];
      var _c3 = ["previewRef"];
      var _c4 = ["searchRef"];
      var _c5 = ["categoryRef"];
      function PickerComponent_emoji_search_3_Template(rf, ctx) {
        if (rf & 1) {
          var _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "emoji-search", 8, 9);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("searchResults", function PickerComponent_emoji_search_3_Template_emoji_search_searchResults_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
            var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r5.handleSearch($event);
          })("enterKey", function PickerComponent_emoji_search_3_Template_emoji_search_enterKey_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
            var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r7.handleEnterKey($event);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("i18n", ctx_r0.i18n)("include", ctx_r0.include)("exclude", ctx_r0.exclude)("custom", ctx_r0.custom)("autoFocus", ctx_r0.autoFocus)("icons", ctx_r0.searchIcons)("emojisToShowFilter", ctx_r0.emojisToShowFilter);
        }
      }
      function PickerComponent_emoji_category_6_Template(rf, ctx) {
        if (rf & 1) {
          var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "emoji-category", 10, 11);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("emojiOver", function PickerComponent_emoji_category_6_Template_emoji_category_emojiOver_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);
            var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r11.handleEmojiOver($event);
          })("emojiLeave", function PickerComponent_emoji_category_6_Template_emoji_category_emojiLeave_0_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);
            var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r13.handleEmojiLeave();
          })("emojiClick", function PickerComponent_emoji_category_6_Template_emoji_category_emojiClick_0_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r12);
            var ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r14.handleEmojiClick($event);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var category_r8 = ctx.$implicit;
          var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", category_r8.id)("name", category_r8.name)("emojis", category_r8.emojis)("perLine", ctx_r2.perLine)("totalFrequentLines", ctx_r2.totalFrequentLines)("hasStickyPosition", ctx_r2.isNative)("i18n", ctx_r2.i18n)("hideObsolete", ctx_r2.hideObsolete)("notFoundEmoji", ctx_r2.notFoundEmoji)("custom", category_r8.id == ctx_r2.RECENT_CATEGORY.id ? ctx_r2.CUSTOM_CATEGORY.emojis : undefined)("recent", category_r8.id == ctx_r2.RECENT_CATEGORY.id ? ctx_r2.recent : undefined)("emojiIsNative", ctx_r2.isNative)("emojiSkin", ctx_r2.skin)("emojiSize", ctx_r2.emojiSize)("emojiSet", ctx_r2.set)("emojiSheetSize", ctx_r2.sheetSize)("emojiForceSize", ctx_r2.isNative)("emojiTooltip", ctx_r2.emojiTooltip)("emojiBackgroundImageFn", ctx_r2.backgroundImageFn)("emojiUseButton", false);
        }
      }
      function PickerComponent_div_7_Template(rf, ctx) {
        if (rf & 1) {
          var _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "emoji-preview", 12, 13);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("skinChange", function PickerComponent_div_7_Template_emoji_preview_skinChange_1_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r17);
            var ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r16.handleSkinChange($event);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", ctx_r3.title)("emoji", ctx_r3.previewEmoji)("idleEmoji", ctx_r3.emoji)("emojiIsNative", ctx_r3.isNative)("emojiSize", 38)("emojiSkin", ctx_r3.skin)("emojiSet", ctx_r3.set)("i18n", ctx_r3.i18n)("emojiSheetSize", ctx_r3.sheetSize)("emojiBackgroundImageFn", ctx_r3.backgroundImageFn);
        }
      }
      function PreviewComponent_div_0_span_7_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 6);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var short_name_r4 = ctx.$implicit;
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" :", short_name_r4, ": ");
        }
      }
      function PreviewComponent_div_0_span_9_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 10);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var emoticon_r5 = ctx.$implicit;
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", emoticon_r5, " ");
        }
      }
      function PreviewComponent_div_0_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "ngx-emoji", 3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 4);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 5);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 6);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, PreviewComponent_div_0_span_7_Template, 2, 1, "span", 7);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 8);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, PreviewComponent_div_0_span_9_Template, 2, 1, "span", 9);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("emoji", ctx_r0.emoji)("size", 38)("isNative", ctx_r0.emojiIsNative)("skin", ctx_r0.emojiSkin)("size", ctx_r0.emojiSize)("set", ctx_r0.emojiSet)("sheetSize", ctx_r0.emojiSheetSize)("backgroundImageFn", ctx_r0.emojiBackgroundImageFn);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r0.emojiData.name);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.emojiData.shortNames);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.listedEmoticons);
        }
      }
      function PreviewComponent_div_1_ngx_emoji_2_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "ngx-emoji", 15);
        }
        if (rf & 2) {
          var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("isNative", ctx_r6.emojiIsNative)("skin", ctx_r6.emojiSkin)("set", ctx_r6.emojiSet)("emoji", ctx_r6.idleEmoji)("backgroundImageFn", ctx_r6.emojiBackgroundImageFn)("size", 38);
        }
      }
      function PreviewComponent_div_1_Template(rf, ctx) {
        if (rf & 1) {
          var _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, PreviewComponent_div_1_ngx_emoji_2_Template, 1, 6, "ngx-emoji", 11);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 4);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 12);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 13);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "emoji-skins", 14);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("changeSkin", function PreviewComponent_div_1_Template_emoji_skins_changeSkin_7_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
            var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r7.skinChange.emit($event);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r1.idleEmoji && ctx_r1.idleEmoji.length);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r1.title);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("skin", ctx_r1.emojiSkin)("i18n", ctx_r1.i18n);
        }
      }
      var _c6 = ["inputRef"];
      function SkinComponent_span_1_Template(rf, ctx) {
        if (rf & 1) {
          var _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 2);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "span", 3);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function SkinComponent_span_1_Template_span_click_1_listener() {
            var restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);
            var skinTone_r1 = restoredCtx.$implicit;
            var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r2.handleClick(skinTone_r1);
          })("keyup.enter", function SkinComponent_span_1_Template_span_keyup_enter_1_listener() {
            var restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);
            var skinTone_r1 = restoredCtx.$implicit;
            var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r4.handleClick(skinTone_r1);
          })("keyup.space", function SkinComponent_span_1_Template_span_keyup_space_1_listener() {
            var restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);
            var skinTone_r1 = restoredCtx.$implicit;
            var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
            return ctx_r5.handleClick(skinTone_r1);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var skinTone_r1 = ctx.$implicit;
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("selected", skinTone_r1 === ctx_r0.skin);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("emoji-mart-skin emoji-mart-skin-tone-", skinTone_r1, "");
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("tabIndex", ctx_r0.tabIndex(skinTone_r1))("title", ctx_r0.i18n.skintones[skinTone_r1]);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-hidden", !ctx_r0.isVisible(skinTone_r1))("aria-pressed", ctx_r0.pressed(skinTone_r1))("aria-haspopup", !!ctx_r0.isSelected(skinTone_r1))("aria-expanded", ctx_r0.expanded(skinTone_r1))("aria-label", ctx_r0.i18n.skintones[skinTone_r1]);
        }
      }
      var _AnchorsComponent = /*#__PURE__*/function () {
        function AnchorsComponent() {
          _classCallCheck(this, AnchorsComponent);
          this.categories = [];
          this.icons = {};
          this.anchorClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
        }
        _createClass(AnchorsComponent, [{
          key: "trackByFn",
          value: function trackByFn(idx, cat) {
            return cat.id;
          }
        }, {
          key: "handleClick",
          value: function handleClick($event, index) {
            this.anchorClick.emit({
              category: this.categories[index],
              index: index
            });
          }
        }]);
        return AnchorsComponent;
      }();
      _AnchorsComponent.ɵfac = function AnchorsComponent_Factory(t) {
        return new (t || _AnchorsComponent)();
      };
      _AnchorsComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _AnchorsComponent,
        selectors: [["emoji-mart-anchors"]],
        inputs: {
          categories: "categories",
          icons: "icons",
          color: "color",
          selected: "selected",
          i18n: "i18n"
        },
        outputs: {
          anchorClick: "anchorClick"
        },
        decls: 2,
        vars: 2,
        consts: [[1, "emoji-mart-anchors"], ["ngFor", "", 3, "ngForOf", "ngForTrackBy"], ["class", "emoji-mart-anchor", 3, "emoji-mart-anchor-selected", "color", "click", 4, "ngIf"], [1, "emoji-mart-anchor", 3, "click"], ["xmlns", "http://www.w3.org/2000/svg", "viewBox", "0 0 24 24", "width", "24", "height", "24"], [1, "emoji-mart-anchor-bar"]],
        template: function AnchorsComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AnchorsComponent_ng_template_1_Template, 1, 1, "ng-template", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }
          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.categories)("ngForTrackBy", ctx.trackByFn);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf],
        encapsulation: 2,
        changeDetection: 0
      });
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _AnchorsComponent.prototype, "categories", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _AnchorsComponent.prototype, "color", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _AnchorsComponent.prototype, "selected", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _AnchorsComponent.prototype, "i18n", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _AnchorsComponent.prototype, "icons", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _AnchorsComponent.prototype, "anchorClick", void 0);
      var _EmojiFrequentlyService = /*#__PURE__*/function () {
        function EmojiFrequentlyService() {
          _classCallCheck(this, EmojiFrequentlyService);
          this.NAMESPACE = 'emoji-mart';
          this.frequently = null;
          this.defaults = {};
          this.initialized = false;
          this.DEFAULTS = ['+1', 'grinning', 'kissing_heart', 'heart_eyes', 'laughing', 'stuck_out_tongue_winking_eye', 'sweat_smile', 'joy', 'scream', 'disappointed', 'unamused', 'weary', 'sob', 'sunglasses', 'heart', 'poop'];
        }
        _createClass(EmojiFrequentlyService, [{
          key: "init",
          value: function init() {
            this.frequently = JSON.parse(localStorage.getItem("".concat(this.NAMESPACE, ".frequently")) || 'null');
            this.initialized = true;
          }
        }, {
          key: "add",
          value: function add(emoji) {
            if (!this.initialized) {
              this.init();
            }
            if (!this.frequently) {
              this.frequently = this.defaults;
            }
            if (!this.frequently[emoji.id]) {
              this.frequently[emoji.id] = 0;
            }
            this.frequently[emoji.id] += 1;
            localStorage.setItem("".concat(this.NAMESPACE, ".last"), emoji.id);
            localStorage.setItem("".concat(this.NAMESPACE, ".frequently"), JSON.stringify(this.frequently));
          }
        }, {
          key: "get",
          value: function get(perLine, totalLines) {
            var _this2 = this;
            if (!this.initialized) {
              this.init();
            }
            if (this.frequently === null) {
              this.defaults = {};
              var result = [];
              for (var i = 0; i < perLine; i++) {
                this.defaults[this.DEFAULTS[i]] = perLine - i;
                result.push(this.DEFAULTS[i]);
              }
              return result;
            }
            var quantity = perLine * totalLines;
            var frequentlyKeys = Object.keys(this.frequently);
            var sorted = frequentlyKeys.sort(function (a, b) {
              return _this2.frequently[a] - _this2.frequently[b];
            }).reverse();
            var sliced = sorted.slice(0, quantity);
            var last = localStorage.getItem("".concat(this.NAMESPACE, ".last"));
            if (last && !sliced.includes(last)) {
              sliced.pop();
              sliced.push(last);
            }
            return sliced;
          }
        }]);
        return EmojiFrequentlyService;
      }();
      _EmojiFrequentlyService.ɵfac = function EmojiFrequentlyService_Factory(t) {
        return new (t || _EmojiFrequentlyService)();
      };
      _EmojiFrequentlyService.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({
        factory: function EmojiFrequentlyService_Factory() {
          return new _EmojiFrequentlyService();
        },
        token: _EmojiFrequentlyService,
        providedIn: "root"
      });
      var _CategoryComponent = /*#__PURE__*/function () {
        function CategoryComponent(ref, emojiService, frequently) {
          _classCallCheck(this, CategoryComponent);
          this.ref = ref;
          this.emojiService = emojiService;
          this.frequently = frequently;
          this.hasStickyPosition = true;
          this.name = '';
          this.perLine = 9;
          this.totalFrequentLines = 4;
          this.recent = [];
          this.custom = [];
          this.hideObsolete = true;
          this.emojiOver = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.emojiLeave = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.emojiClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.containerStyles = {};
          this.labelStyles = {};
          this.labelSpanStyles = {};
          this.margin = 0;
          this.minMargin = 0;
          this.maxMargin = 0;
          this.top = 0;
        }
        _createClass(CategoryComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.emojis = this.getEmojis();
            if (!this.emojis) {
              this.containerStyles = {
                display: 'none'
              };
            }
            if (!this.hasStickyPosition) {
              this.labelStyles = {
                height: 28
              };
              // this.labelSpanStyles = { position: 'absolute' };
            }
          }
        }, {
          key: "memoizeSize",
          value: function memoizeSize() {
            var parent = this.container.nativeElement.parentNode.parentNode;
            var _this$container$nativ = this.container.nativeElement.getBoundingClientRect(),
              top = _this$container$nativ.top,
              height = _this$container$nativ.height;
            var parentTop = parent.getBoundingClientRect().top;
            var labelHeight = this.label.nativeElement.getBoundingClientRect().height;
            this.top = top - parentTop + parent.scrollTop;
            if (height === 0) {
              this.maxMargin = 0;
            } else {
              this.maxMargin = height - labelHeight;
            }
          }
        }, {
          key: "handleScroll",
          value: function handleScroll(scrollTop) {
            var margin = scrollTop - this.top;
            margin = margin < this.minMargin ? this.minMargin : margin;
            margin = margin > this.maxMargin ? this.maxMargin : margin;
            if (margin === this.margin) {
              return false;
            }
            if (!this.hasStickyPosition) {
              this.label.nativeElement.style.top = "".concat(margin, "px");
            }
            this.margin = margin;
            return true;
          }
        }, {
          key: "getEmojis",
          value: function getEmojis() {
            var _this3 = this;
            if (this.name === 'Recent') {
              var frequentlyUsed = this.recent || this.frequently.get(this.perLine, this.totalFrequentLines);
              if (!frequentlyUsed || !frequentlyUsed.length) {
                frequentlyUsed = this.frequently.get(this.perLine, this.totalFrequentLines);
              }
              if (frequentlyUsed.length) {
                this.emojis = frequentlyUsed.map(function (id) {
                  var emoji = _this3.custom.filter(function (e) {
                    return e.id === id;
                  })[0];
                  if (emoji) {
                    return emoji;
                  }
                  return id;
                }).filter(function (id) {
                  return !!_this3.emojiService.getData(id);
                });
              }
              if ((!this.emojis || this.emojis.length === 0) && frequentlyUsed.length > 0) {
                return null;
              }
            }
            if (this.emojis) {
              this.emojis = this.emojis.slice(0);
            }
            return this.emojis;
          }
        }, {
          key: "updateDisplay",
          value: function updateDisplay(display) {
            this.containerStyles.display = display;
            this.getEmojis();
            this.ref.detectChanges();
          }
        }, {
          key: "trackById",
          value: function trackById(index, item) {
            return item;
          }
        }]);
        return CategoryComponent;
      }();
      _CategoryComponent.ɵfac = function CategoryComponent_Factory(t) {
        return new (t || _CategoryComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_EmojiFrequentlyService));
      };
      _CategoryComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _CategoryComponent,
        selectors: [["emoji-category"]],
        viewQuery: function CategoryComponent_Query(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c1, 7);
          }
          if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.container = _t.first);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.label = _t.first);
          }
        },
        inputs: {
          hasStickyPosition: "hasStickyPosition",
          name: "name",
          perLine: "perLine",
          totalFrequentLines: "totalFrequentLines",
          recent: "recent",
          custom: "custom",
          hideObsolete: "hideObsolete",
          emojis: "emojis",
          i18n: "i18n",
          id: "id",
          notFoundEmoji: "notFoundEmoji",
          emojiIsNative: "emojiIsNative",
          emojiSkin: "emojiSkin",
          emojiSize: "emojiSize",
          emojiSet: "emojiSet",
          emojiSheetSize: "emojiSheetSize",
          emojiForceSize: "emojiForceSize",
          emojiTooltip: "emojiTooltip",
          emojiBackgroundImageFn: "emojiBackgroundImageFn",
          emojiUseButton: "emojiUseButton"
        },
        outputs: {
          emojiOver: "emojiOver",
          emojiLeave: "emojiLeave",
          emojiClick: "emojiClick"
        },
        decls: 8,
        vars: 10,
        consts: [[1, "emoji-mart-category", 3, "ngStyle"], ["container", ""], [1, "emoji-mart-category-label", 3, "ngStyle"], ["aria-hidden", "true", 3, "ngStyle"], ["label", ""], [3, "ngIf"], [4, "ngIf"], [3, "emoji", "size", "skin", "isNative", "set", "sheetSize", "forceSize", "tooltip", "backgroundImageFn", "hideObsolete", "emojiOver", "emojiLeave", "emojiClick", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "emoji", "size", "skin", "isNative", "set", "sheetSize", "forceSize", "tooltip", "backgroundImageFn", "hideObsolete", "emojiOver", "emojiLeave", "emojiClick"], ["size", "38", 3, "emoji", "skin", "isNative", "set", "sheetSize", "forceSize", "tooltip", "backgroundImageFn", "useButton"], [1, "emoji-mart-no-results-label"]],
        template: function CategoryComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "section", 0, 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "span", 3, 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, CategoryComponent_ng_template_6_Template, 1, 2, "ng-template", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, CategoryComponent_div_7_Template, 5, 10, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }
          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("emoji-mart-no-results", ctx.emojis && !ctx.emojis.length);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.containerStyles);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.i18n.categories[ctx.id]);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.labelStyles);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("data-name", ctx.name);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.labelSpanStyles);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.i18n.categories[ctx.id], " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.emojis);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.emojis && !ctx.emojis.length);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgStyle, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiComponent],
        encapsulation: 2,
        changeDetection: 0
      });
      _CategoryComponent.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
        }, {
          type: _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService
        }, {
          type: _EmojiFrequentlyService
        }];
      };
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojis", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "hasStickyPosition", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "name", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "perLine", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "totalFrequentLines", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "recent", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "custom", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "i18n", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "id", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "hideObsolete", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "notFoundEmoji", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojiIsNative", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojiSkin", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojiSize", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojiSet", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojiSheetSize", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojiForceSize", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojiTooltip", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojiBackgroundImageFn", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _CategoryComponent.prototype, "emojiUseButton", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _CategoryComponent.prototype, "emojiOver", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _CategoryComponent.prototype, "emojiLeave", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _CategoryComponent.prototype, "emojiClick", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)('container', {
        "static": true
      })], _CategoryComponent.prototype, "container", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)('label', {
        "static": true
      })], _CategoryComponent.prototype, "label", void 0);
      function uniq(arr) {
        return arr.reduce(function (acc, item) {
          if (!acc.includes(item)) {
            acc.push(item);
          }
          return acc;
        }, []);
      }
      function intersect(a, b) {
        var uniqA = uniq(a);
        var uniqB = uniq(b);
        return uniqA.filter(function (item) {
          return uniqB.indexOf(item) >= 0;
        });
      }
      // https://github.com/sonicdoe/measure-scrollbar
      function measureScrollbar() {
        if (typeof document === 'undefined') {
          return 0;
        }
        var div = document.createElement('div');
        div.style.width = '100px';
        div.style.height = '100px';
        div.style.overflow = 'scroll';
        div.style.position = 'absolute';
        div.style.top = '-9999px';
        document.body.appendChild(div);
        var scrollbarWidth = div.offsetWidth - div.clientWidth;
        document.body.removeChild(div);
        return scrollbarWidth;
      }
      var _EmojiSearch = /*#__PURE__*/function () {
        function EmojiSearch(emojiService) {
          var _this4 = this;
          _classCallCheck(this, EmojiSearch);
          this.emojiService = emojiService;
          this.originalPool = {};
          this.index = {};
          this.emojisList = {};
          this.emoticonsList = {};
          this.emojiSearch = {};
          var _iterator2 = _createForOfIteratorHelper(this.emojiService.emojis),
            _step2;
          try {
            var _loop = function _loop() {
              var emojiData = _step2.value;
              var shortNames = emojiData.shortNames,
                emoticons = emojiData.emoticons;
              var id = shortNames[0];
              emoticons.forEach(function (emoticon) {
                if (_this4.emoticonsList[emoticon]) {
                  return;
                }
                _this4.emoticonsList[emoticon] = id;
              });
              _this4.emojisList[id] = _this4.emojiService.getSanitizedData(id);
              _this4.originalPool[id] = emojiData;
            };
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              _loop();
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
        _createClass(EmojiSearch, [{
          key: "addCustomToPool",
          value: function addCustomToPool(custom, pool) {
            var _this5 = this;
            custom.forEach(function (emoji) {
              var emojiId = emoji.id || emoji.shortNames[0];
              if (emojiId && !pool[emojiId]) {
                pool[emojiId] = _this5.emojiService.getData(emoji);
                _this5.emojisList[emojiId] = _this5.emojiService.getSanitizedData(emoji);
              }
            });
          }
        }, {
          key: "search",
          value: function search(value, emojisToShowFilter) {
            var _this6 = this;
            var maxResults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 75;
            var include = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
            var exclude = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
            var custom = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];
            this.addCustomToPool(custom, this.originalPool);
            var results;
            var pool = this.originalPool;
            if (value.length) {
              if (value === '-' || value === '-1') {
                return [this.emojisList['-1']];
              }
              if (value === '+' || value === '+1') {
                return [this.emojisList['+1']];
              }
              var values = value.toLowerCase().split(/[\s|,|\-|_]+/);
              var allResults = [];
              if (values.length > 2) {
                values = [values[0], values[1]];
              }
              if (include.length || exclude.length) {
                pool = {};
                _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.categories.forEach(function (category) {
                  var isIncluded = include && include.length ? include.indexOf(category.id) > -1 : true;
                  var isExcluded = exclude && exclude.length ? exclude.indexOf(category.id) > -1 : false;
                  if (!isIncluded || isExcluded) {
                    return;
                  }
                  category.emojis.forEach(function (emojiId) {
                    // Need to make sure that pool gets keyed
                    // with the correct id, which is why we call emojiService.getData below
                    var emoji = _this6.emojiService.getData(emojiId);
                    pool[emoji.id] = emoji;
                  });
                });
                if (custom.length) {
                  var customIsIncluded = include && include.length ? include.indexOf('custom') > -1 : true;
                  var customIsExcluded = exclude && exclude.length ? exclude.indexOf('custom') > -1 : false;
                  if (customIsIncluded && !customIsExcluded) {
                    this.addCustomToPool(custom, pool);
                  }
                }
              }
              allResults = values.map(function (v) {
                var aPool = pool;
                var aIndex = _this6.index;
                var length = 0;
                // tslint:disable-next-line: prefer-for-of
                for (var charIndex = 0; charIndex < v.length; charIndex++) {
                  var _char = v[charIndex];
                  length++;
                  if (!aIndex[_char]) {
                    aIndex[_char] = {};
                  }
                  aIndex = aIndex[_char];
                  if (!aIndex.results) {
                    (function () {
                      var scores = {};
                      aIndex.results = [];
                      aIndex.pool = {};
                      for (var _i2 = 0, _Object$keys = Object.keys(aPool); _i2 < _Object$keys.length; _i2++) {
                        var _id = _Object$keys[_i2];
                        var emoji = aPool[_id];
                        if (!_this6.emojiSearch[_id]) {
                          _this6.emojiSearch[_id] = _this6.buildSearch(emoji.short_names, emoji.name, emoji.id, emoji.keywords, emoji.emoticons);
                        }
                        var query = _this6.emojiSearch[_id];
                        var sub = v.substr(0, length);
                        var subIndex = query.indexOf(sub);
                        if (subIndex !== -1) {
                          var score = subIndex + 1;
                          if (sub === _id) {
                            score = 0;
                          }
                          aIndex.results.push(_this6.emojisList[_id]);
                          aIndex.pool[_id] = emoji;
                          scores[_id] = score;
                        }
                      }
                      aIndex.results.sort(function (a, b) {
                        var aScore = scores[a.id];
                        var bScore = scores[b.id];
                        return aScore - bScore;
                      });
                    })();
                  }
                  aPool = aIndex.pool;
                }
                return aIndex.results;
              }).filter(function (a) {
                return a;
              });
              if (allResults.length > 1) {
                results = intersect.apply(null, allResults);
              } else if (allResults.length) {
                results = allResults[0];
              } else {
                results = [];
              }
            }
            if (results) {
              if (emojisToShowFilter) {
                results = results.filter(function (result) {
                  if (result && result.id) {
                    return emojisToShowFilter(_this6.emojiService.names[result.id]);
                  }
                  return false;
                });
              }
              if (results && results.length > maxResults) {
                results = results.slice(0, maxResults);
              }
            }
            return results || null;
          }
        }, {
          key: "buildSearch",
          value: function buildSearch(shortNames, name, id, keywords, emoticons) {
            var search = [];
            var addToSearch = function addToSearch(strings, split) {
              if (!strings) {
                return;
              }
              (Array.isArray(strings) ? strings : [strings]).forEach(function (str) {
                (split ? str.split(/[-|_|\s]+/) : [str]).forEach(function (s) {
                  s = s.toLowerCase();
                  if (!search.includes(s)) {
                    search.push(s);
                  }
                });
              });
            };
            addToSearch(shortNames, true);
            addToSearch(name, true);
            addToSearch(id, true);
            addToSearch(keywords, true);
            addToSearch(emoticons, false);
            return search.join(',');
          }
        }]);
        return EmojiSearch;
      }();
      _EmojiSearch.ɵfac = function EmojiSearch_Factory(t) {
        return new (t || _EmojiSearch)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService));
      };
      _EmojiSearch.ctorParameters = function () {
        return [{
          type: _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService
        }];
      };
      _EmojiSearch.ɵprov = (0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({
        factory: function EmojiSearch_Factory() {
          return new _EmojiSearch((0, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"])(_ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService));
        },
        token: _EmojiSearch,
        providedIn: "root"
      });

      /* tslint:disable max-line-length */
      var categories = {
        activity: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24m10 11h-5c.3-2.5 1.3-4.8 2-6.1a10 10 0 0 1 3 6.1m-9 0V2a10 10 0 0 1 4.4 1.6A18 18 0 0 0 15 11h-2zm-2 0H9a18 18 0 0 0-2.4-7.4A10 10 0 0 1 11 2.1V11zm0 2v9a10 10 0 0 1-4.4-1.6A18 18 0 0 0 9 13h2zm4 0a18 18 0 0 0 2.4 7.4 10 10 0 0 1-4.4 1.5V13h2zM5 4.9c.7 1.3 1.7 3.6 2 6.1H2a10 10 0 0 1 3-6.1M2 13h5c-.3 2.5-1.3 4.8-2 6.1A10 10 0 0 1 2 13m17 6.1c-.7-1.3-1.7-3.6-2-6.1h5a10 10 0 0 1-3 6.1",
        custom: "M10 1h3v21h-3zm10.186 4l1.5 2.598L3.5 18.098 2 15.5zM2 7.598L3.5 5l18.186 10.5-1.5 2.598z",
        flags: "M0 0l6 24h2L2 0zm21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.6 3h7.8l2 8H8.6l-2-8zm8.8 10l-2.9 1.9-.4-1.9h3.3zm3.6 0l-1.5-6h2l2 8H16l3-2z",
        foods: "M17 5c-1.8 0-2.9.4-3.7 1 .5-1.3 1.8-3 4.7-3a1 1 0 0 0 0-2c-3 0-4.6 1.3-5.5 2.5l-.2.2c-.6-1.9-1.5-3.7-3-3.7C8.5 0 7.7.3 7 1c-2 1.5-1.7 2.9-.5 4C3.6 5.2 0 7.4 0 13c0 4.6 5 11 9 11 2 0 2.4-.5 3-1 .6.5 1 1 3 1 4 0 9-6.4 9-11 0-6-4-8-7-8M8.2 2.5c.7-.5 1-.5 1-.5.4.2 1 1.4 1.4 3-1.6-.6-2.8-1.3-3-1.8l.6-.7M15 22c-1 0-1.2-.1-1.6-.4l-.1-.2a2 2 0 0 0-2.6 0l-.1.2c-.4.3-.5.4-1.6.4-2.8 0-7-5.4-7-9 0-6 4.5-6 5-6 2 0 2.5.4 3.4 1.2l.3.3a2 2 0 0 0 2.6 0l.3-.3c1-.8 1.5-1.2 3.4-1.2.5 0 5 .1 5 6 0 3.6-4.2 9-7 9",
        nature: "M15.5 8a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3m-7 0a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3m10.43-8h-.02c-.97 0-2.14.79-3.02 1.5A13.88 13.88 0 0 0 12 .99c-1.28 0-2.62.13-3.87.51C7.24.8 6.07 0 5.09 0h-.02C3.35 0 .07 2.67 0 7.03c-.04 2.47.28 4.23 1.04 5 .26.27.88.69 1.3.9.19 3.17.92 5.23 2.53 6.37.9.64 2.19.95 3.2 1.1-.03.2-.07.4-.07.6 0 1.77 2.35 3 4 3s4-1.23 4-3c0-.2-.04-.4-.07-.59 2.57-.38 5.43-1.87 5.92-7.58.4-.22.89-.57 1.1-.8.77-.76 1.09-2.52 1.05-5C23.93 2.67 20.65 0 18.93 0M3.23 9.13c-.24.29-.84 1.16-.9 1.24A9.67 9.67 0 0 1 2 7.08c.05-3.28 2.48-4.97 3.1-5.03.25.02.72.27 1.26.65A7.95 7.95 0 0 0 4 7.82c-.14.55-.4.86-.79 1.31M12 22c-.9 0-1.95-.7-2-1 0-.65.47-1.24 1-1.6v.6a1 1 0 1 0 2 0v-.6c.52.36 1 .95 1 1.6-.05.3-1.1 1-2 1m3-3.48v.02a4.75 4.75 0 0 0-1.26-1.02c1.09-.52 2.24-1.33 2.24-2.22 0-1.84-1.78-2.2-3.98-2.2s-3.98.36-3.98 2.2c0 .89 1.15 1.7 2.24 2.22A4.8 4.8 0 0 0 9 18.54v-.03a6.1 6.1 0 0 1-2.97-.84c-1.3-.92-1.84-3.04-1.86-6.48l.03-.04c.5-.82 1.49-1.45 1.8-3.1C6 6 7.36 4.42 8.36 3.53c1.01-.35 2.2-.53 3.59-.53 1.45 0 2.68.2 3.73.57 1 .9 2.32 2.46 2.32 4.48.31 1.65 1.3 2.27 1.8 3.1l.1.18c-.06 5.97-1.95 7.01-4.9 7.19m6.63-8.2l-.11-.2a7.59 7.59 0 0 0-.74-.98 3.02 3.02 0 0 1-.79-1.32 7.93 7.93 0 0 0-2.35-5.12c.53-.38 1-.63 1.26-.65.64.07 3.05 1.77 3.1 5.03.02 1.81-.35 3.22-.37 3.24",
        objects: "M12 0a9 9 0 0 0-5 16.5V21s2 3 5 3 5-3 5-3v-4.5A9 9 0 0 0 12 0zm0 2a7 7 0 1 1 0 14 7 7 0 0 1 0-14zM9 17.5a9 9 0 0 0 6 0v.8a7 7 0 0 1-3 .7 7 7 0 0 1-3-.7v-.8zm.2 3a8.9 8.9 0 0 0 2.8.5c1 0 1.9-.2 2.8-.5-.6.7-1.6 1.5-2.8 1.5-1.1 0-2.1-.8-2.8-1.5zm5.5-8.1c-.8 0-1.1-.8-1.5-1.8-.5-1-.7-1.5-1.2-1.5s-.8.5-1.3 1.5c-.4 1-.8 1.8-1.6 1.8h-.3c-.5-.2-.8-.7-1.3-1.8l-.2-1A3 3 0 0 0 7 9a1 1 0 0 1 0-2c1.7 0 2 1.4 2.2 2.1.5-1 1.3-2 2.8-2 1.5 0 2.3 1.1 2.7 2.1.2-.8.6-2.2 2.3-2.2a1 1 0 1 1 0 2c-.2 0-.3.5-.3.7a6.5 6.5 0 0 1-.3 1c-.5 1-.8 1.7-1.7 1.7",
        people: "M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24m0 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20M8 7a2 2 0 1 0 0 4 2 2 0 0 0 0-4m8 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-.8 8c-.7 1.2-1.8 2-3.3 2-1.5 0-2.7-.8-3.4-2H15m3-2H6a6 6 0 1 0 12 0",
        places: "M6.5 12a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5m0 3c-.3 0-.5-.2-.5-.5s.2-.5.5-.5.5.2.5.5-.2.5-.5.5m11-3a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5m0 3c-.3 0-.5-.2-.5-.5s.2-.5.5-.5.5.2.5.5-.2.5-.5.5m5-5.5l-1-.4-.1-.1h.6c.6 0 1-.4 1-1 0-1-.9-2-2-2h-.6l-.8-1.7A3 3 0 0 0 16.8 2H7.2a3 3 0 0 0-2.8 2.3L3.6 6H3a2 2 0 0 0-2 2c0 .6.4 1 1 1h.6v.1l-1 .4a2 2 0 0 0-1.4 2l.7 7.6a1 1 0 0 0 1 .9H3v1c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-1h6v1c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-1h1.1a1 1 0 0 0 1-.9l.7-7.5a2 2 0 0 0-1.3-2.1M6.3 4.9c.1-.5.5-.9 1-.9h9.5c.4 0 .8.4 1 .9L19.2 9H4.7l1.6-4.1zM7 21H5v-1h2v1zm12 0h-2v-1h2v1zm2.2-3H2.8l-.7-6.6.9-.4h18l.9.4-.7 6.6z",
        recent: "M13 4h-2v7H9v2h2v2h2v-2h4v-2h-4zm-1-4a12 12 0 1 0 0 24 12 12 0 0 0 0-24m0 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20",
        symbols: "M0 0h11v2H0zm4 11h3V6h4V4H0v2h4zm11.5 6a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5m0-2.99a.5.5 0 0 1 0 .99c-.28 0-.5-.22-.5-.5s.22-.49.5-.49m6 5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5m0 2.99a.5.5 0 0 1-.5-.5.5.5 0 0 1 1 .01.5.5 0 0 1-.5.49m.5-9l-9 9 1.51 1.5 9-9zm-5-2c2.2 0 4-1.12 4-2.5V2s.98-.16 1.5.95C23 4.05 23 6 23 6s1-1.12 1-3.13C24-.02 21 0 21 0h-2v6.35A5.85 5.85 0 0 0 17 6c-2.2 0-4 1.12-4 2.5s1.8 2.5 4 2.5m-6.7 9.48L8.82 18.9a47.54 47.54 0 0 1-1.44 1.13c-.3-.3-.99-1.02-2.04-2.19.9-.83 1.47-1.46 1.72-1.89s.38-.87.38-1.33c0-.6-.27-1.18-.82-1.76-.54-.58-1.33-.87-2.35-.87-1 0-1.79.29-2.34.87-.56.6-.83 1.18-.83 1.79 0 .81.42 1.75 1.25 2.8a6.57 6.57 0 0 0-1.8 1.79 3.46 3.46 0 0 0-.51 1.83c0 .86.3 1.56.92 2.1a3.5 3.5 0 0 0 2.42.83c1.17 0 2.44-.38 3.81-1.14L8.23 24h2.82l-2.09-2.38 1.34-1.14zM3.56 14.1a1.02 1.02 0 0 1 .73-.28c.31 0 .56.08.75.25a.85.85 0 0 1 .28.66c0 .52-.42 1.11-1.26 1.78-.53-.65-.8-1.23-.8-1.74a.9.9 0 0 1 .3-.67m.18 7.9c-.43 0-.78-.12-1.06-.35-.28-.23-.41-.49-.41-.76 0-.6.5-1.3 1.52-2.09a31.23 31.23 0 0 0 2.25 2.44c-.92.5-1.69.76-2.3.76"
      };
      var search = {
        search: "M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z",
        "delete": "M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z"
      };
      var I18N = {
        search: 'Search',
        emojilist: 'List of emoji',
        notfound: 'No Emoji Found',
        clear: 'Clear',
        categories: {
          search: 'Search Results',
          recent: 'Frequently Used',
          people: 'Smileys & People',
          nature: 'Animals & Nature',
          foods: 'Food & Drink',
          activity: 'Activity',
          places: 'Travel & Places',
          objects: 'Objects',
          symbols: 'Symbols',
          flags: 'Flags',
          custom: 'Custom'
        },
        skintones: {
          1: 'Default Skin Tone',
          2: 'Light Skin Tone',
          3: 'Medium-Light Skin Tone',
          4: 'Medium Skin Tone',
          5: 'Medium-Dark Skin Tone',
          6: 'Dark Skin Tone'
        }
      };
      var _PickerComponent = /*#__PURE__*/function () {
        function PickerComponent(ref, frequently) {
          var _this7 = this;
          _classCallCheck(this, PickerComponent);
          this.ref = ref;
          this.frequently = frequently;
          this.perLine = 9;
          this.totalFrequentLines = 4;
          this.i18n = {};
          this.style = {};
          this.title = 'Emoji Mart™';
          this.emoji = 'department_store';
          this.darkMode = !!(typeof matchMedia === 'function' && matchMedia('(prefers-color-scheme: dark)').matches);
          this.color = '#ae65c5';
          this.hideObsolete = true;
          /** all categories shown */
          this.categories = [];
          /** used to temporarily draw categories */
          this.activeCategories = [];
          this.set = 'apple';
          this.skin = 1;
          /** Renders the native unicode emoji */
          this.isNative = false;
          this.emojiSize = 24;
          this.sheetSize = 64;
          this.showPreview = true;
          this.emojiTooltip = false;
          this.autoFocus = false;
          this.custom = [];
          this.hideRecent = true;
          this.notFoundEmoji = 'sleuth_or_spy';
          this.categoriesIcons = categories;
          this.searchIcons = search;
          this.useButton = false;
          this.enableFrequentEmojiSort = false;
          this.enableSearch = true;
          this.showSingleCategory = false;
          this.emojiClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.emojiSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.skinChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.scrollHeight = 0;
          this.clientHeight = 0;
          this.firstRender = true;
          this.NAMESPACE = 'emoji-mart';
          this.measureScrollbar = 0;
          this.RECENT_CATEGORY = {
            id: 'recent',
            name: 'Recent',
            emojis: null
          };
          this.SEARCH_CATEGORY = {
            id: 'search',
            name: 'Search',
            emojis: null,
            anchor: false
          };
          this.CUSTOM_CATEGORY = {
            id: 'custom',
            name: 'Custom',
            emojis: []
          };
          this.backgroundImageFn = function (set, sheetSize) {
            return "https://unpkg.com/emoji-datasource-".concat(_this7.set, "@5.0.1/img/").concat(_this7.set, "/sheets-256/").concat(_this7.sheetSize, ".png");
          };
        }
        _createClass(PickerComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this8 = this;
            // measure scroll
            this.measureScrollbar = measureScrollbar();
            this.i18n = Object.assign(Object.assign({}, I18N), this.i18n);
            this.i18n.categories = Object.assign(Object.assign({}, I18N.categories), this.i18n.categories);
            this.skin = JSON.parse(localStorage.getItem("".concat(this.NAMESPACE, ".skin")) || 'null') || this.skin;
            var allCategories = _toConsumableArray(_ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.categories);
            if (this.custom.length > 0) {
              this.CUSTOM_CATEGORY.emojis = this.custom.map(function (emoji) {
                return Object.assign(Object.assign({}, emoji), {
                  // `<Category />` expects emoji to have an `id`.
                  id: emoji.shortNames[0],
                  custom: true
                });
              });
              allCategories.push(this.CUSTOM_CATEGORY);
            }
            if (this.include !== undefined) {
              allCategories.sort(function (a, b) {
                if (_this8.include.indexOf(a.id) > _this8.include.indexOf(b.id)) {
                  return 1;
                }
                return -1;
              });
            }
            var _iterator3 = _createForOfIteratorHelper(allCategories),
              _step3;
            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                var category = _step3.value;
                var isIncluded = this.include && this.include.length ? this.include.indexOf(category.id) > -1 : true;
                var isExcluded = this.exclude && this.exclude.length ? this.exclude.indexOf(category.id) > -1 : false;
                if (!isIncluded || isExcluded) {
                  continue;
                }
                if (this.emojisToShowFilter) {
                  var newEmojis = [];
                  var emojis = category.emojis;
                  // tslint:disable-next-line: prefer-for-of
                  for (var emojiIndex = 0; emojiIndex < emojis.length; emojiIndex++) {
                    var emoji = emojis[emojiIndex];
                    if (this.emojisToShowFilter(emoji)) {
                      newEmojis.push(emoji);
                    }
                  }
                  if (newEmojis.length) {
                    var newCategory = {
                      emojis: newEmojis,
                      name: category.name,
                      id: category.id
                    };
                    this.categories.push(newCategory);
                  }
                } else {
                  this.categories.push(category);
                }
                this.categoriesIcons = Object.assign(Object.assign({}, categories), this.categoriesIcons);
                this.searchIcons = Object.assign(Object.assign({}, search), this.searchIcons);
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
            var includeRecent = this.include && this.include.length ? this.include.indexOf(this.RECENT_CATEGORY.id) > -1 : true;
            var excludeRecent = this.exclude && this.exclude.length ? this.exclude.indexOf(this.RECENT_CATEGORY.id) > -1 : false;
            if (includeRecent && !excludeRecent) {
              this.hideRecent = false;
              this.categories.unshift(this.RECENT_CATEGORY);
            }
            if (this.categories[0]) {
              this.categories[0].first = true;
            }
            this.categories.unshift(this.SEARCH_CATEGORY);
            this.selected = this.categories.filter(function (category) {
              return category.first;
            })[0].name;
            // Need to be careful if small number of categories
            var categoriesToLoadFirst = Math.min(this.categories.length, 3);
            this.setActiveCategories(this.activeCategories = this.categories.slice(0, categoriesToLoadFirst));
            // Trim last active category
            var lastActiveCategoryEmojis = this.categories[categoriesToLoadFirst - 1].emojis.slice();
            this.categories[categoriesToLoadFirst - 1].emojis = lastActiveCategoryEmojis.slice(0, 60);
            this.ref.markForCheck();
            setTimeout(function () {
              // Restore last category
              _this8.categories[categoriesToLoadFirst - 1].emojis = lastActiveCategoryEmojis;
              _this8.setActiveCategories(_this8.categories);
              _this8.ref.markForCheck();
              setTimeout(function () {
                return _this8.updateCategoriesSize();
              });
            });
          }
        }, {
          key: "setActiveCategories",
          value: function setActiveCategories(categoriesToMakeActive) {
            var _this9 = this;
            if (this.showSingleCategory) {
              this.activeCategories = categoriesToMakeActive.filter(function (x) {
                return x.name === _this9.selected || x === _this9.SEARCH_CATEGORY;
              });
            } else {
              this.activeCategories = categoriesToMakeActive;
            }
          }
        }, {
          key: "updateCategoriesSize",
          value: function updateCategoriesSize() {
            this.categoryRefs.forEach(function (component) {
              return component.memoizeSize();
            });
            if (this.scrollRef) {
              var target = this.scrollRef.nativeElement;
              this.scrollHeight = target.scrollHeight;
              this.clientHeight = target.clientHeight;
            }
          }
        }, {
          key: "handleAnchorClick",
          value: function handleAnchorClick($event) {
            this.updateCategoriesSize();
            this.selected = $event.category.name;
            this.setActiveCategories(this.categories);
            if (this.SEARCH_CATEGORY.emojis) {
              this.handleSearch(null);
              this.searchRef.clear();
              this.handleAnchorClick($event);
              return;
            }
            var component = this.categoryRefs.find(function (n) {
              return n.id === $event.category.id;
            });
            if (component) {
              var top = component.top;
              if ($event.category.first) {
                top = 0;
              } else {
                top += 1;
              }
              this.scrollRef.nativeElement.scrollTop = top;
            }
            this.selected = $event.category.name;
            this.nextScroll = $event.category.name;
          }
        }, {
          key: "categoryTrack",
          value: function categoryTrack(index, item) {
            return item.id;
          }
        }, {
          key: "handleScroll",
          value: function handleScroll() {
            var _this10 = this;
            if (this.nextScroll) {
              this.selected = this.nextScroll;
              this.nextScroll = undefined;
              return;
            }
            if (!this.scrollRef) {
              return;
            }
            if (this.showSingleCategory) {
              return;
            }
            var activeCategory = null;
            if (this.SEARCH_CATEGORY.emojis) {
              activeCategory = this.SEARCH_CATEGORY;
            } else {
              var target = this.scrollRef.nativeElement;
              // check scroll is not at bottom
              if (target.scrollTop === 0) {
                // hit the TOP
                activeCategory = this.categories.find(function (n) {
                  return n.first === true;
                });
              } else if (target.scrollHeight - target.scrollTop === this.clientHeight) {
                // scrolled to bottom activate last category
                activeCategory = this.categories[this.categories.length - 1];
              } else {
                // scrolling
                var _iterator4 = _createForOfIteratorHelper(this.categories),
                  _step4;
                try {
                  var _loop2 = function _loop2() {
                    var category = _step4.value;
                    var component = _this10.categoryRefs.find(function (n) {
                      return n.id === category.id;
                    });
                    var active = component.handleScroll(target.scrollTop);
                    if (active) {
                      activeCategory = category;
                    }
                  };
                  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                    _loop2();
                  }
                } catch (err) {
                  _iterator4.e(err);
                } finally {
                  _iterator4.f();
                }
              }
              this.scrollTop = target.scrollTop;
            }
            if (activeCategory) {
              this.selected = activeCategory.name;
            }
          }
        }, {
          key: "handleSearch",
          value: function handleSearch($emojis) {
            this.SEARCH_CATEGORY.emojis = $emojis;
            var _iterator5 = _createForOfIteratorHelper(this.categoryRefs.toArray()),
              _step5;
            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                var component = _step5.value;
                if (component.name === 'Search') {
                  component.emojis = $emojis;
                  component.updateDisplay($emojis ? 'block' : 'none');
                } else {
                  component.updateDisplay($emojis ? 'none' : 'block');
                }
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }
            this.scrollRef.nativeElement.scrollTop = 0;
            this.handleScroll();
          }
        }, {
          key: "handleEnterKey",
          value: function handleEnterKey($event, emoji) {
            if (!emoji) {
              if (this.SEARCH_CATEGORY.emojis !== null && this.SEARCH_CATEGORY.emojis.length) {
                emoji = this.SEARCH_CATEGORY.emojis[0];
                if (emoji) {
                  this.emojiSelect.emit({
                    $event: $event,
                    emoji: emoji
                  });
                } else {
                  return;
                }
              }
            }
            if (!this.hideRecent && !this.recent) {
              this.frequently.add(emoji);
            }
            var component = this.categoryRefs.toArray()[1];
            if (component && this.enableFrequentEmojiSort) {
              component.getEmojis();
              component.ref.markForCheck();
            }
          }
        }, {
          key: "handleEmojiOver",
          value: function handleEmojiOver($event) {
            if (!this.showPreview || !this.previewRef) {
              return;
            }
            var emojiData = this.CUSTOM_CATEGORY.emojis.find(function (customEmoji) {
              return customEmoji.id === $event.emoji.id;
            });
            if (emojiData) {
              $event.emoji = Object.assign({}, emojiData);
            }
            this.previewEmoji = $event.emoji;
            clearTimeout(this.leaveTimeout);
          }
        }, {
          key: "handleEmojiLeave",
          value: function handleEmojiLeave() {
            var _this11 = this;
            if (!this.showPreview || !this.previewRef) {
              return;
            }
            this.leaveTimeout = setTimeout(function () {
              _this11.previewEmoji = null;
              _this11.previewRef.ref.markForCheck();
            }, 16);
          }
        }, {
          key: "handleEmojiClick",
          value: function handleEmojiClick($event) {
            this.emojiClick.emit($event);
            this.emojiSelect.emit($event);
            this.handleEnterKey($event.$event, $event.emoji);
          }
        }, {
          key: "handleSkinChange",
          value: function handleSkinChange(skin) {
            this.skin = skin;
            localStorage.setItem("".concat(this.NAMESPACE, ".skin"), String(skin));
            this.skinChange.emit(skin);
          }
        }, {
          key: "getWidth",
          value: function getWidth() {
            if (this.style && this.style.width) {
              return this.style.width;
            }
            return this.perLine * (this.emojiSize + 12) + 12 + 2 + this.measureScrollbar + 'px';
          }
        }]);
        return PickerComponent;
      }();
      _PickerComponent.ɵfac = function PickerComponent_Factory(t) {
        return new (t || _PickerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_EmojiFrequentlyService));
      };
      _PickerComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _PickerComponent,
        selectors: [["emoji-mart"]],
        viewQuery: function PickerComponent_Query(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c2, 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c3, 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c4, 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c5, 5);
          }
          if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.scrollRef = _t.first);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.previewRef = _t.first);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.searchRef = _t.first);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.categoryRefs = _t);
          }
        },
        inputs: {
          perLine: "perLine",
          totalFrequentLines: "totalFrequentLines",
          i18n: "i18n",
          style: "style",
          title: "title",
          emoji: "emoji",
          darkMode: "darkMode",
          color: "color",
          hideObsolete: "hideObsolete",
          categories: "categories",
          activeCategories: "activeCategories",
          set: "set",
          skin: "skin",
          isNative: "isNative",
          emojiSize: "emojiSize",
          sheetSize: "sheetSize",
          showPreview: "showPreview",
          emojiTooltip: "emojiTooltip",
          autoFocus: "autoFocus",
          custom: "custom",
          hideRecent: "hideRecent",
          notFoundEmoji: "notFoundEmoji",
          categoriesIcons: "categoriesIcons",
          searchIcons: "searchIcons",
          useButton: "useButton",
          enableFrequentEmojiSort: "enableFrequentEmojiSort",
          enableSearch: "enableSearch",
          showSingleCategory: "showSingleCategory",
          backgroundImageFn: "backgroundImageFn",
          emojisToShowFilter: "emojisToShowFilter",
          include: "include",
          exclude: "exclude"
        },
        outputs: {
          emojiClick: "emojiClick",
          emojiSelect: "emojiSelect",
          skinChange: "skinChange"
        },
        decls: 8,
        vars: 16,
        consts: [[3, "ngStyle"], [1, "emoji-mart-bar"], [3, "categories", "color", "selected", "i18n", "icons", "anchorClick"], [3, "i18n", "include", "exclude", "custom", "autoFocus", "icons", "emojisToShowFilter", "searchResults", "enterKey", 4, "ngIf"], [1, "emoji-mart-scroll", 3, "scroll"], ["scrollRef", ""], [3, "id", "name", "emojis", "perLine", "totalFrequentLines", "hasStickyPosition", "i18n", "hideObsolete", "notFoundEmoji", "custom", "recent", "emojiIsNative", "emojiSkin", "emojiSize", "emojiSet", "emojiSheetSize", "emojiForceSize", "emojiTooltip", "emojiBackgroundImageFn", "emojiUseButton", "emojiOver", "emojiLeave", "emojiClick", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "emoji-mart-bar", 4, "ngIf"], [3, "i18n", "include", "exclude", "custom", "autoFocus", "icons", "emojisToShowFilter", "searchResults", "enterKey"], ["searchRef", ""], [3, "id", "name", "emojis", "perLine", "totalFrequentLines", "hasStickyPosition", "i18n", "hideObsolete", "notFoundEmoji", "custom", "recent", "emojiIsNative", "emojiSkin", "emojiSize", "emojiSet", "emojiSheetSize", "emojiForceSize", "emojiTooltip", "emojiBackgroundImageFn", "emojiUseButton", "emojiOver", "emojiLeave", "emojiClick"], ["categoryRef", ""], [3, "title", "emoji", "idleEmoji", "emojiIsNative", "emojiSize", "emojiSkin", "emojiSet", "i18n", "emojiSheetSize", "emojiBackgroundImageFn", "skinChange"], ["previewRef", ""]],
        template: function PickerComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "section", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "emoji-mart-anchors", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("anchorClick", function PickerComponent_Template_emoji_mart_anchors_anchorClick_2_listener($event) {
              return ctx.handleAnchorClick($event);
            });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, PickerComponent_emoji_search_3_Template, 2, 7, "emoji-search", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "section", 4, 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("scroll", function PickerComponent_Template_section_scroll_4_listener() {
              return ctx.handleScroll();
            });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, PickerComponent_emoji_category_6_Template, 2, 20, "emoji-category", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, PickerComponent_div_7_Template, 3, 10, "div", 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }
          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("emoji-mart ", ctx.darkMode ? "emoji-mart-dark" : "", "");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx.getWidth());
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.style);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("categories", ctx.categories)("color", ctx.color)("selected", ctx.selected)("i18n", ctx.i18n)("icons", ctx.categoriesIcons);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.enableSearch);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.i18n.emojilist);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.activeCategories)("ngForTrackBy", ctx.categoryTrack);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.showPreview);
          }
        },
        directives: function directives() {
          return [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgStyle, _AnchorsComponent, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf, _SearchComponent, _CategoryComponent, _PreviewComponent];
        },
        encapsulation: 2,
        changeDetection: 0
      });
      _PickerComponent.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
        }, {
          type: _EmojiFrequentlyService
        }];
      };
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "perLine", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "totalFrequentLines", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "i18n", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "style", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "title", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "emoji", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "darkMode", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "color", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "hideObsolete", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "categories", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "activeCategories", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "set", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "skin", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "isNative", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "emojiSize", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "sheetSize", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "emojisToShowFilter", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "showPreview", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "emojiTooltip", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "autoFocus", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "custom", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "hideRecent", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "include", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "exclude", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "notFoundEmoji", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "categoriesIcons", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "searchIcons", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "useButton", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "enableFrequentEmojiSort", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "enableSearch", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "showSingleCategory", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _PickerComponent.prototype, "emojiClick", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _PickerComponent.prototype, "emojiSelect", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _PickerComponent.prototype, "skinChange", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)('scrollRef', {
        "static": true
      })], _PickerComponent.prototype, "scrollRef", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)('previewRef')], _PickerComponent.prototype, "previewRef", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)('searchRef', {
        "static": true
      })], _PickerComponent.prototype, "searchRef", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChildren)('categoryRef')], _PickerComponent.prototype, "categoryRefs", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PickerComponent.prototype, "backgroundImageFn", void 0);
      var _PreviewComponent = /*#__PURE__*/function () {
        function PreviewComponent(ref, emojiService) {
          _classCallCheck(this, PreviewComponent);
          this.ref = ref;
          this.emojiService = emojiService;
          this.skinChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.emojiData = {};
        }
        _createClass(PreviewComponent, [{
          key: "ngOnChanges",
          value: function ngOnChanges() {
            if (!this.emoji) {
              return;
            }
            this.emojiData = this.emojiService.getData(this.emoji, this.emojiSkin, this.emojiSet);
            var knownEmoticons = [];
            var listedEmoticons = [];
            var emoitcons = this.emojiData.emoticons || [];
            emoitcons.forEach(function (emoticon) {
              if (knownEmoticons.indexOf(emoticon.toLowerCase()) >= 0) {
                return;
              }
              knownEmoticons.push(emoticon.toLowerCase());
              listedEmoticons.push(emoticon);
            });
            this.listedEmoticons = listedEmoticons;
          }
        }]);
        return PreviewComponent;
      }();
      _PreviewComponent.ɵfac = function PreviewComponent_Factory(t) {
        return new (t || _PreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService));
      };
      _PreviewComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _PreviewComponent,
        selectors: [["emoji-preview"]],
        inputs: {
          title: "title",
          emoji: "emoji",
          idleEmoji: "idleEmoji",
          i18n: "i18n",
          emojiIsNative: "emojiIsNative",
          emojiSkin: "emojiSkin",
          emojiSize: "emojiSize",
          emojiSet: "emojiSet",
          emojiSheetSize: "emojiSheetSize",
          emojiBackgroundImageFn: "emojiBackgroundImageFn"
        },
        outputs: {
          skinChange: "skinChange"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
        decls: 2,
        vars: 2,
        consts: [["class", "emoji-mart-preview", 4, "ngIf"], [1, "emoji-mart-preview"], [1, "emoji-mart-preview-emoji"], [3, "emoji", "size", "isNative", "skin", "set", "sheetSize", "backgroundImageFn"], [1, "emoji-mart-preview-data"], [1, "emoji-mart-preview-name"], [1, "emoji-mart-preview-shortname"], ["class", "emoji-mart-preview-shortname", 4, "ngFor", "ngForOf"], [1, "emoji-mart-preview-emoticons"], ["class", "emoji-mart-preview-emoticon", 4, "ngFor", "ngForOf"], [1, "emoji-mart-preview-emoticon"], [3, "isNative", "skin", "set", "emoji", "backgroundImageFn", "size", 4, "ngIf"], [1, "emoji-mart-title-label"], [1, "emoji-mart-preview-skins"], [3, "skin", "i18n", "changeSkin"], [3, "isNative", "skin", "set", "emoji", "backgroundImageFn", "size"]],
        template: function PreviewComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, PreviewComponent_div_0_Template, 10, 11, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, PreviewComponent_div_1_Template, 8, 4, "div", 0);
          }
          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.emoji && ctx.emojiData);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.emoji);
          }
        },
        directives: function directives() {
          return [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiComponent, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf, _SkinComponent];
        },
        encapsulation: 2,
        changeDetection: 0
      });
      _PreviewComponent.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
        }, {
          type: _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService
        }];
      };
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "title", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "emoji", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "idleEmoji", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "i18n", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "emojiIsNative", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "emojiSkin", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "emojiSize", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "emojiSet", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "emojiSheetSize", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _PreviewComponent.prototype, "emojiBackgroundImageFn", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _PreviewComponent.prototype, "skinChange", void 0);
      var id = 0;
      var _SearchComponent = /*#__PURE__*/function () {
        function SearchComponent(emojiSearch) {
          _classCallCheck(this, SearchComponent);
          this.emojiSearch = emojiSearch;
          this.maxResults = 75;
          this.autoFocus = false;
          this.include = [];
          this.exclude = [];
          this.custom = [];
          this.searchResults = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.enterKey = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.isSearching = false;
          this.query = '';
          this.inputId = "emoji-mart-search-".concat(++id);
        }
        _createClass(SearchComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            this.icon = this.icons.search;
          }
        }, {
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            if (this.autoFocus) {
              this.inputRef.nativeElement.focus();
            }
          }
        }, {
          key: "clear",
          value: function clear() {
            this.query = '';
            this.handleSearch('');
            this.inputRef.nativeElement.focus();
          }
        }, {
          key: "handleEnterKey",
          value: function handleEnterKey($event) {
            if (!this.query) {
              return;
            }
            this.enterKey.emit($event);
            $event.preventDefault();
          }
        }, {
          key: "handleSearch",
          value: function handleSearch(value) {
            if (value === '') {
              this.icon = this.icons.search;
              this.isSearching = false;
            } else {
              this.icon = this.icons["delete"];
              this.isSearching = true;
            }
            var emojis = this.emojiSearch.search(this.query, this.emojisToShowFilter, this.maxResults, this.include, this.exclude, this.custom);
            this.searchResults.emit(emojis);
          }
        }, {
          key: "handleChange",
          value: function handleChange() {
            this.handleSearch(this.query);
          }
        }]);
        return SearchComponent;
      }();
      _SearchComponent.ɵfac = function SearchComponent_Factory(t) {
        return new (t || _SearchComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_EmojiSearch));
      };
      _SearchComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _SearchComponent,
        selectors: [["emoji-search"]],
        viewQuery: function SearchComponent_Query(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c6, 7);
          }
          if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.inputRef = _t.first);
          }
        },
        inputs: {
          maxResults: "maxResults",
          autoFocus: "autoFocus",
          include: "include",
          exclude: "exclude",
          custom: "custom",
          i18n: "i18n",
          icons: "icons",
          emojisToShowFilter: "emojisToShowFilter"
        },
        outputs: {
          searchResults: "searchResults",
          enterKey: "enterKey"
        },
        decls: 8,
        vars: 9,
        consts: [[1, "emoji-mart-search"], ["type", "search", 3, "id", "placeholder", "autofocus", "ngModel", "keyup.enter", "ngModelChange"], ["inputRef", ""], [1, "emoji-mart-sr-only", 3, "htmlFor"], ["type", "button", 1, "emoji-mart-search-icon", 3, "disabled", "click", "keyup.enter"], ["xmlns", "http://www.w3.org/2000/svg", "viewBox", "0 0 20 20", "width", "13", "height", "13", "opacity", "0.5"]],
        template: function SearchComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "input", 1, 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keyup.enter", function SearchComponent_Template_input_keyup_enter_1_listener($event) {
              return ctx.handleEnterKey($event);
            })("ngModelChange", function SearchComponent_Template_input_ngModelChange_1_listener($event) {
              return ctx.query = $event;
            })("ngModelChange", function SearchComponent_Template_input_ngModelChange_1_listener() {
              return ctx.handleChange();
            });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "label", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "button", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function SearchComponent_Template_button_click_5_listener() {
              return ctx.clear();
            })("keyup.enter", function SearchComponent_Template_button_keyup_enter_5_listener() {
              return ctx.clear();
            });
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "svg", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "path");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }
          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.inputId)("placeholder", ctx.i18n.search)("autofocus", ctx.autoFocus)("ngModel", ctx.query);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("htmlFor", ctx.inputId);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.i18n.search, " ");
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", !ctx.isSearching);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.i18n.clear);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("d", ctx.icon);
          }
        },
        directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_4__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgModel],
        encapsulation: 2
      });
      _SearchComponent.ctorParameters = function () {
        return [{
          type: _EmojiSearch
        }];
      };
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SearchComponent.prototype, "maxResults", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SearchComponent.prototype, "autoFocus", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SearchComponent.prototype, "i18n", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SearchComponent.prototype, "include", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SearchComponent.prototype, "exclude", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SearchComponent.prototype, "custom", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SearchComponent.prototype, "icons", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SearchComponent.prototype, "emojisToShowFilter", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _SearchComponent.prototype, "searchResults", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _SearchComponent.prototype, "enterKey", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild)('inputRef', {
        "static": true
      })], _SearchComponent.prototype, "inputRef", void 0);
      var _SkinComponent = /*#__PURE__*/function () {
        function SkinComponent() {
          _classCallCheck(this, SkinComponent);
          this.changeSkin = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
          this.opened = false;
          this.skinTones = [1, 2, 3, 4, 5, 6];
        }
        _createClass(SkinComponent, [{
          key: "toggleOpen",
          value: function toggleOpen() {
            this.opened = !this.opened;
          }
        }, {
          key: "isSelected",
          value: function isSelected(skinTone) {
            return skinTone === this.skin;
          }
        }, {
          key: "isVisible",
          value: function isVisible(skinTone) {
            return this.opened || this.isSelected(skinTone);
          }
        }, {
          key: "pressed",
          value: function pressed(skinTone) {
            return this.opened ? !!this.isSelected(skinTone) : '';
          }
        }, {
          key: "tabIndex",
          value: function tabIndex(skinTone) {
            return this.isVisible(skinTone) ? '0' : '';
          }
        }, {
          key: "expanded",
          value: function expanded(skinTone) {
            return this.isSelected(skinTone) ? this.opened : '';
          }
        }, {
          key: "handleClick",
          value: function handleClick(skin) {
            if (!this.opened) {
              this.opened = true;
              return;
            }
            this.opened = false;
            if (skin !== this.skin) {
              this.changeSkin.emit(skin);
            }
          }
        }]);
        return SkinComponent;
      }();
      _SkinComponent.ɵfac = function SkinComponent_Factory(t) {
        return new (t || _SkinComponent)();
      };
      _SkinComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: _SkinComponent,
        selectors: [["emoji-skins"]],
        inputs: {
          skin: "skin",
          i18n: "i18n"
        },
        outputs: {
          changeSkin: "changeSkin"
        },
        decls: 2,
        vars: 3,
        consts: [[1, "emoji-mart-skin-swatches"], ["class", "emoji-mart-skin-swatch", 3, "selected", 4, "ngFor", "ngForOf"], [1, "emoji-mart-skin-swatch"], ["role", "button", 3, "tabIndex", "title", "click", "keyup.enter", "keyup.space"]],
        template: function SkinComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "section", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, SkinComponent_span_1_Template, 2, 12, "span", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }
          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("opened", ctx.opened);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.skinTones);
          }
        },
        directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf],
        encapsulation: 2,
        changeDetection: 0
      });
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SkinComponent.prototype, "skin", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input)()], _SkinComponent.prototype, "i18n", void 0);
      (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__decorate)([(0, _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output)()], _SkinComponent.prototype, "changeSkin", void 0);
      var _PickerModule = /*#__PURE__*/_createClass(function PickerModule() {
        _classCallCheck(this, PickerModule);
      });
      _PickerModule.ɵfac = function PickerModule_Factory(t) {
        return new (t || _PickerModule)();
      };
      _PickerModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: _PickerModule
      });
      _PickerModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormsModule, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiModule]]
      });
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_AnchorsComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'emoji-mart-anchors',
            template: "\n  <div class=\"emoji-mart-anchors\">\n    <ng-template ngFor let-category [ngForOf]=\"categories\" let-idx=\"index\" [ngForTrackBy]=\"trackByFn\">\n      <span\n        *ngIf=\"category.anchor !== false\"\n        [attr.title]=\"i18n.categories[category.id]\"\n        (click)=\"this.handleClick($event, idx)\"\n        class=\"emoji-mart-anchor\"\n        [class.emoji-mart-anchor-selected]=\"category.name === selected\"\n        [style.color]=\"category.name === selected ? color : null\"\n      >\n        <div>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n            <path [attr.d]=\"icons[category.id]\" />\n          </svg>\n        </div>\n        <span class=\"emoji-mart-anchor-bar\" [style.background-color]=\"color\"></span>\n      </span>\n    </ng-template>\n  </div>\n  ",
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false
          }]
        }], function () {
          return [];
        }, {
          categories: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          icons: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          anchorClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          color: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          selected: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          i18n: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_EmojiFrequentlyService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [];
        }, null);
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_CategoryComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'emoji-category',
            template: "\n  <section #container class=\"emoji-mart-category\"\n    [attr.aria-label]=\"i18n.categories[id]\"\n    [class.emoji-mart-no-results]=\"emojis && !emojis.length\"\n    [ngStyle]=\"containerStyles\">\n    <div class=\"emoji-mart-category-label\"\n      [ngStyle]=\"labelStyles\"\n      [attr.data-name]=\"name\">\n      <!-- already labeled by the section aria-label -->\n      <span #label [ngStyle]=\"labelSpanStyles\" aria-hidden=\"true\">\n        {{ i18n.categories[id] }}\n      </span>\n    </div>\n\n    <ng-template [ngIf]=\"emojis\">\n      <ngx-emoji\n        *ngFor=\"let emoji of emojis; trackBy: trackById\"\n        [emoji]=\"emoji\"\n        [size]=\"emojiSize\"\n        [skin]=\"emojiSkin\"\n        [isNative]=\"emojiIsNative\"\n        [set]=\"emojiSet\"\n        [sheetSize]=\"emojiSheetSize\"\n        [forceSize]=\"emojiForceSize\"\n        [tooltip]=\"emojiTooltip\"\n        [backgroundImageFn]=\"emojiBackgroundImageFn\"\n        [hideObsolete]=\"hideObsolete\"\n        (emojiOver)=\"emojiOver.emit($event)\"\n        (emojiLeave)=\"emojiLeave.emit($event)\"\n        (emojiClick)=\"emojiClick.emit($event)\"\n      ></ngx-emoji>\n    </ng-template>\n\n    <div *ngIf=\"emojis && !emojis.length\">\n      <div>\n        <ngx-emoji\n          [emoji]=\"notFoundEmoji\"\n          size=\"38\"\n          [skin]=\"emojiSkin\"\n          [isNative]=\"emojiIsNative\"\n          [set]=\"emojiSet\"\n          [sheetSize]=\"emojiSheetSize\"\n          [forceSize]=\"emojiForceSize\"\n          [tooltip]=\"emojiTooltip\"\n          [backgroundImageFn]=\"emojiBackgroundImageFn\"\n          [useButton]=\"emojiUseButton\"\n        ></ngx-emoji>\n      </div>\n\n      <div class=\"emoji-mart-no-results-label\">\n        {{ i18n.notfound }}\n      </div>\n    </div>\n\n  </section>\n  ",
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
          }, {
            type: _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService
          }, {
            type: _EmojiFrequentlyService
          }];
        }, {
          hasStickyPosition: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          name: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          perLine: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          totalFrequentLines: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          recent: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          custom: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          hideObsolete: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiOver: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          emojiLeave: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          emojiClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          emojis: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          i18n: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          id: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          notFoundEmoji: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiIsNative: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiSkin: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiSet: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiSheetSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiForceSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiTooltip: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiBackgroundImageFn: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiUseButton: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          container: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
            args: ['container', {
              "static": true
            }]
          }],
          label: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
            args: ['label', {
              "static": true
            }]
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_EmojiSearch, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
          args: [{
            providedIn: 'root'
          }]
        }], function () {
          return [{
            type: _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService
          }];
        }, null);
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_PickerComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'emoji-mart',
            template: "<section class=\"emoji-mart {{ darkMode ? 'emoji-mart-dark' : '' }}\"\n  [style.width]=\"getWidth()\"\n  [ngStyle]=\"style\">\n  <div class=\"emoji-mart-bar\">\n    <emoji-mart-anchors\n      [categories]=\"categories\"\n      (anchorClick)=\"handleAnchorClick($event)\"\n      [color]=\"color\"\n      [selected]=\"selected\"\n      [i18n]=\"i18n\"\n      [icons]=\"categoriesIcons\"\n    ></emoji-mart-anchors>\n  </div>\n  <emoji-search\n    *ngIf=\"enableSearch\"\n    #searchRef\n    [i18n]=\"i18n\"\n    (searchResults)=\"handleSearch($event)\"\n    (enterKey)=\"handleEnterKey($event)\"\n    [include]=\"include\"\n    [exclude]=\"exclude\"\n    [custom]=\"custom\"\n    [autoFocus]=\"autoFocus\"\n    [icons]=\"searchIcons\"\n    [emojisToShowFilter]=\"emojisToShowFilter\"\n  ></emoji-search>\n  <section #scrollRef class=\"emoji-mart-scroll\" (scroll)=\"handleScroll()\" [attr.aria-label]=\"i18n.emojilist\">\n    <emoji-category\n      *ngFor=\"let category of activeCategories; let idx = index; trackBy: categoryTrack\"\n      #categoryRef\n      [id]=\"category.id\"\n      [name]=\"category.name\"\n      [emojis]=\"category.emojis\"\n      [perLine]=\"perLine\"\n      [totalFrequentLines]=\"totalFrequentLines\"\n      [hasStickyPosition]=\"isNative\"\n      [i18n]=\"i18n\"\n      [hideObsolete]=\"hideObsolete\"\n      [notFoundEmoji]=\"notFoundEmoji\"\n      [custom]=\"category.id == RECENT_CATEGORY.id ? CUSTOM_CATEGORY.emojis : undefined\"\n      [recent]=\"category.id == RECENT_CATEGORY.id ? recent : undefined\"\n      [emojiIsNative]=\"isNative\"\n      [emojiSkin]=\"skin\"\n      [emojiSize]=\"emojiSize\"\n      [emojiSet]=\"set\"\n      [emojiSheetSize]=\"sheetSize\"\n      [emojiForceSize]=\"isNative\"\n      [emojiTooltip]=\"emojiTooltip\"\n      [emojiBackgroundImageFn]=\"backgroundImageFn\"\n      [emojiUseButton]=\"false\"\n      (emojiOver)=\"handleEmojiOver($event)\"\n      (emojiLeave)=\"handleEmojiLeave()\"\n      (emojiClick)=\"handleEmojiClick($event)\"\n    ></emoji-category>\n  </section>\n  <div class=\"emoji-mart-bar\" *ngIf=\"showPreview\">\n    <emoji-preview\n      #previewRef\n      [title]=\"title\"\n      [emoji]=\"previewEmoji\"\n      [idleEmoji]=\"emoji\"\n      [emojiIsNative]=\"isNative\"\n      [emojiSize]=\"38\"\n      [emojiSkin]=\"skin\"\n      [emojiSet]=\"set\"\n      [i18n]=\"i18n\"\n      [emojiSheetSize]=\"sheetSize\"\n      [emojiBackgroundImageFn]=\"backgroundImageFn\"\n      (skinChange)=\"handleSkinChange($event)\"\n    ></emoji-preview>\n  </div>\n</section>\n",
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
          }, {
            type: _EmojiFrequentlyService
          }];
        }, {
          perLine: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          totalFrequentLines: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          i18n: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          style: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          title: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emoji: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          darkMode: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          color: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          hideObsolete: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          categories: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          activeCategories: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          set: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          skin: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          isNative: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          sheetSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          showPreview: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiTooltip: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          autoFocus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          custom: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          hideRecent: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          notFoundEmoji: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          categoriesIcons: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          searchIcons: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          useButton: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          enableFrequentEmojiSort: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          enableSearch: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          showSingleCategory: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiClick: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          emojiSelect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          skinChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          backgroundImageFn: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojisToShowFilter: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          include: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          exclude: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          scrollRef: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
            args: ['scrollRef', {
              "static": true
            }]
          }],
          previewRef: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
            args: ['previewRef']
          }],
          searchRef: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
            args: ['searchRef', {
              "static": true
            }]
          }],
          categoryRefs: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChildren,
            args: ['categoryRef']
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_PreviewComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'emoji-preview',
            template: "\n  <div class=\"emoji-mart-preview\" *ngIf=\"emoji && emojiData\">\n    <div class=\"emoji-mart-preview-emoji\">\n      <ngx-emoji\n        [emoji]=\"emoji\"\n        [size]=\"38\"\n        [isNative]=\"emojiIsNative\"\n        [skin]=\"emojiSkin\"\n        [size]=\"emojiSize\"\n        [set]=\"emojiSet\"\n        [sheetSize]=\"emojiSheetSize\"\n        [backgroundImageFn]=\"emojiBackgroundImageFn\"\n      ></ngx-emoji>\n    </div>\n\n    <div class=\"emoji-mart-preview-data\">\n      <div class=\"emoji-mart-preview-name\">{{ emojiData.name }}</div>\n      <div class=\"emoji-mart-preview-shortname\">\n        <span class=\"emoji-mart-preview-shortname\" *ngFor=\"let short_name of emojiData.shortNames\">\n          :{{ short_name }}:\n        </span>\n      </div>\n      <div class=\"emoji-mart-preview-emoticons\">\n        <span class=\"emoji-mart-preview-emoticon\" *ngFor=\"let emoticon of listedEmoticons\">\n          {{ emoticon }}\n        </span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"emoji-mart-preview\" *ngIf=\"!emoji\">\n    <div class=\"emoji-mart-preview-emoji\">\n      <ngx-emoji *ngIf=\"idleEmoji && idleEmoji.length\"\n        [isNative]=\"emojiIsNative\"\n        [skin]=\"emojiSkin\"\n        [set]=\"emojiSet\"\n        [emoji]=\"idleEmoji\"\n        [backgroundImageFn]=\"emojiBackgroundImageFn\"\n        [size]=\"38\"\n      ></ngx-emoji>\n    </div>\n\n    <div class=\"emoji-mart-preview-data\">\n      <span class=\"emoji-mart-title-label\">{{ title }}</span>\n    </div>\n\n    <div class=\"emoji-mart-preview-skins\">\n      <emoji-skins [skin]=\"emojiSkin\" (changeSkin)=\"skinChange.emit($event)\" [i18n]=\"i18n\">\n      </emoji-skins>\n    </div>\n  </div>\n  ",
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
          }, {
            type: _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService
          }];
        }, {
          skinChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          title: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emoji: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          idleEmoji: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          i18n: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiIsNative: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiSkin: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiSet: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiSheetSize: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojiBackgroundImageFn: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_SearchComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'emoji-search',
            template: "\n    <div class=\"emoji-mart-search\">\n      <input\n        [id]=\"inputId\"\n        #inputRef\n        type=\"search\"\n        (keyup.enter)=\"handleEnterKey($event)\"\n        [placeholder]=\"i18n.search\"\n        [autofocus]=\"autoFocus\"\n        [(ngModel)]=\"query\"\n        (ngModelChange)=\"handleChange()\"\n      />\n      <!--\n      Use a <label> in addition to the placeholder for accessibility, but place it off-screen\n      http://www.maxability.co.in/2016/01/placeholder-attribute-and-why-it-is-not-accessible/\n      -->\n      <label class=\"emoji-mart-sr-only\" [htmlFor]=\"inputId\">\n        {{ i18n.search }}\n      </label>\n      <button\n        type=\"button\"\n        class=\"emoji-mart-search-icon\"\n        (click)=\"clear()\"\n        (keyup.enter)=\"clear()\"\n        [disabled]=\"!isSearching\"\n        [attr.aria-label]=\"i18n.clear\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          width=\"13\"\n          height=\"13\"\n          opacity=\"0.5\"\n        >\n          <path [attr.d]=\"icon\" />\n        </svg>\n      </button>\n    </div>\n  ",
            preserveWhitespaces: false
          }]
        }], function () {
          return [{
            type: _EmojiSearch
          }];
        }, {
          maxResults: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          autoFocus: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          include: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          exclude: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          custom: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          searchResults: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          enterKey: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          i18n: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          icons: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          emojisToShowFilter: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          inputRef: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
            args: ['inputRef', {
              "static": true
            }]
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_SkinComponent, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
          args: [{
            selector: 'emoji-skins',
            template: "\n    <section\n      class=\"emoji-mart-skin-swatches\"\n      [class.opened]=\"opened\"\n    >\n      <span\n        *ngFor=\"let skinTone of skinTones\"\n        class=\"emoji-mart-skin-swatch\"\n        [class.selected]=\"skinTone === skin\"\n      >\n        <span\n          (click)=\"this.handleClick(skinTone)\"\n          (keyup.enter)=\"handleClick(skinTone)\"\n          (keyup.space)=\"handleClick(skinTone)\"\n          class=\"emoji-mart-skin emoji-mart-skin-tone-{{ skinTone }}\"\n          role=\"button\"\n          [tabIndex]=\"tabIndex(skinTone)\"\n          [attr.aria-hidden]=\"!isVisible(skinTone)\"\n          [attr.aria-pressed]=\"pressed(skinTone)\"\n          [attr.aria-haspopup]=\"!!isSelected(skinTone)\"\n          [attr.aria-expanded]=\"expanded(skinTone)\"\n          [attr.aria-label]=\"i18n.skintones[skinTone]\"\n          [title]=\"i18n.skintones[skinTone]\"\n        ></span>\n      </span>\n    </section>\n  ",
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false
          }]
        }], function () {
          return [];
        }, {
          changeSkin: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
          }],
          skin: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }],
          i18n: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
          }]
        });
      })();
      (function () {
        (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_PickerModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
          args: [{
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormsModule, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiModule],
            exports: [_PickerComponent, _AnchorsComponent, _CategoryComponent, _SearchComponent, _PreviewComponent, _SkinComponent],
            declarations: [_PickerComponent, _AnchorsComponent, _CategoryComponent, _SearchComponent, _PreviewComponent, _SkinComponent]
          }]
        }], null, null);
      })();
      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](_PickerModule, {
          declarations: function declarations() {
            return [_PickerComponent, _AnchorsComponent, _CategoryComponent, _SearchComponent, _PreviewComponent, _SkinComponent];
          },
          imports: function imports() {
            return [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.FormsModule, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiModule];
          },
          exports: function exports() {
            return [_PickerComponent, _AnchorsComponent, _CategoryComponent, _SearchComponent, _PreviewComponent, _SkinComponent];
          }
        });
      })();

      /**
       * Generated bundle index. Do not edit.
       */

      //# sourceMappingURL=ctrl-ngx-emoji-mart.js.map

      /***/
    },

    /***/43874:
    /*!*********************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/contrib/has-cors.js ***!
      \*********************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"hasCORS": function hasCORS() {
          return (/* binding */_hasCORS
          );
        }
        /* harmony export */
      });
      // imported from https://github.com/component/has-cors
      var value = false;
      try {
        value = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();
      } catch (err) {
        // if XMLHttp support is disabled in IE then it will throw
        // when trying to create
      }
      var _hasCORS = value;

      /***/
    },

    /***/46038:
    /*!********************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/contrib/parseqs.js ***!
      \********************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"encode": function encode() {
          return (/* binding */_encode
          );
        },
        /* harmony export */"decode": function decode() {
          return (/* binding */_decode
          );
        }
        /* harmony export */
      });
      // imported from https://github.com/galkn/querystring
      /**
       * Compiles a querystring
       * Returns string representation of the object
       *
       * @param {Object}
       * @api private
       */
      function _encode(obj) {
        var str = '';
        for (var i in obj) {
          if (obj.hasOwnProperty(i)) {
            if (str.length) str += '&';
            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
          }
        }
        return str;
      }
      /**
       * Parses a simple querystring into an object
       *
       * @param {String} qs
       * @api private
       */
      function _decode(qs) {
        var qry = {};
        var pairs = qs.split('&');
        for (var i = 0, l = pairs.length; i < l; i++) {
          var pair = pairs[i].split('=');
          qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
        }
        return qry;
      }

      /***/
    },

    /***/35357:
    /*!*********************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/contrib/parseuri.js ***!
      \*********************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"parse": function parse() {
          return (/* binding */_parse
          );
        }
        /* harmony export */
      });
      // imported from https://github.com/galkn/parseuri
      /**
       * Parses an URI
       *
       * @author Steven Levithan <stevenlevithan.com> (MIT license)
       * @api private
       */
      var re = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
      var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];
      function _parse(str) {
        var src = str,
          b = str.indexOf('['),
          e = str.indexOf(']');
        if (b != -1 && e != -1) {
          str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
        }
        var m = re.exec(str || ''),
          uri = {},
          i = 14;
        while (i--) {
          uri[parts[i]] = m[i] || '';
        }
        if (b != -1 && e != -1) {
          uri.source = src;
          uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
          uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
          uri.ipv6uri = true;
        }
        uri.pathNames = pathNames(uri, uri['path']);
        uri.queryKey = queryKey(uri, uri['query']);
        return uri;
      }
      function pathNames(obj, path) {
        var regx = /\/{2,9}/g,
          names = path.replace(regx, "/").split("/");
        if (path.slice(0, 1) == '/' || path.length === 0) {
          names.splice(0, 1);
        }
        if (path.slice(-1) == '/') {
          names.splice(names.length - 1, 1);
        }
        return names;
      }
      function queryKey(uri, query) {
        var data = {};
        query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {
          if ($1) {
            data[$1] = $2;
          }
        });
        return data;
      }

      /***/
    },

    /***/89585:
    /*!******************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/contrib/yeast.js ***!
      \******************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"encode": function encode() {
          return (/* binding */_encode2
          );
        },
        /* harmony export */"decode": function decode() {
          return (/* binding */_decode2
          );
        },
        /* harmony export */"yeast": function yeast() {
          return (/* binding */_yeast
          );
        }
        /* harmony export */
      });
      // imported from https://github.com/unshiftio/yeast

      var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),
        length = 64,
        map = {};
      var seed = 0,
        i = 0,
        prev;
      /**
       * Return a string representing the specified number.
       *
       * @param {Number} num The number to convert.
       * @returns {String} The string representation of the number.
       * @api public
       */
      function _encode2(num) {
        var encoded = '';
        do {
          encoded = alphabet[num % length] + encoded;
          num = Math.floor(num / length);
        } while (num > 0);
        return encoded;
      }
      /**
       * Return the integer value specified by the given string.
       *
       * @param {String} str The string to convert.
       * @returns {Number} The integer value represented by the string.
       * @api public
       */
      function _decode2(str) {
        var decoded = 0;
        for (i = 0; i < str.length; i++) {
          decoded = decoded * length + map[str.charAt(i)];
        }
        return decoded;
      }
      /**
       * Yeast: A tiny growing id generator.
       *
       * @returns {String} A unique id.
       * @api public
       */
      function _yeast() {
        var now = _encode2(+new Date());
        if (now !== prev) return seed = 0, prev = now;
        return now + '.' + _encode2(seed++);
      }
      //
      // Map each character to its index.
      //
      for (; i < length; i++) {
        map[alphabet[i]] = i;
      }

      /***/
    },

    /***/51708:
    /*!***********************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/globalThis.browser.js ***!
      \***********************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"globalThisShim": function globalThisShim() {
          return (/* binding */_globalThisShim
          );
        }
        /* harmony export */
      });
      var _globalThisShim = function () {
        if (typeof self !== "undefined") {
          return self;
        } else if (typeof window !== "undefined") {
          return window;
        } else {
          return Function("return this")();
        }
      }();

      /***/
    },

    /***/88813:
    /*!**********************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/index.js ***!
      \**********************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Socket": function Socket() {
          return (/* reexport safe */_socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket
          );
        },
        /* harmony export */"protocol": function protocol() {
          return (/* binding */_protocol
          );
        },
        /* harmony export */"Transport": function Transport() {
          return (/* reexport safe */_transport_js__WEBPACK_IMPORTED_MODULE_1__.Transport
          );
        },
        /* harmony export */"transports": function transports() {
          return (/* reexport safe */_transports_index_js__WEBPACK_IMPORTED_MODULE_2__.transports
          );
        },
        /* harmony export */"installTimerFunctions": function installTimerFunctions() {
          return (/* reexport safe */_util_js__WEBPACK_IMPORTED_MODULE_3__.installTimerFunctions
          );
        },
        /* harmony export */"parse": function parse() {
          return (/* reexport safe */_contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__.parse
          );
        },
        /* harmony export */"nextTick": function nextTick() {
          return (/* reexport safe */_transports_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_5__.nextTick
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _socket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./socket.js */27932);
      /* harmony import */
      var _transport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./transport.js */5203);
      /* harmony import */
      var _transports_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./transports/index.js */51282);
      /* harmony import */
      var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./util.js */63163);
      /* harmony import */
      var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./contrib/parseuri.js */35357);
      /* harmony import */
      var _transports_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! ./transports/websocket-constructor.js */39527);
      var _protocol = _socket_js__WEBPACK_IMPORTED_MODULE_0__.Socket.protocol;

      /***/
    },

    /***/27932:
    /*!***********************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/socket.js ***!
      \***********************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Socket": function Socket() {
          return (/* binding */_Socket
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _transports_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./transports/index.js */51282);
      /* harmony import */
      var _util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./util.js */63163);
      /* harmony import */
      var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./contrib/parseqs.js */46038);
      /* harmony import */
      var _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./contrib/parseuri.js */35357);
      /* harmony import */
      var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! @socket.io/component-emitter */88760);
      /* harmony import */
      var engine_io_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! engine.io-parser */45621);
      var _Socket = /*#__PURE__*/function (_socket_io_component_) {
        _inherits(_Socket, _socket_io_component_);
        var _super = _createSuper(_Socket);
        /**
         * Socket constructor.
         *
         * @param {String|Object} uri or options
         * @param {Object} opts - options
         * @api public
         */
        function _Socket(uri) {
          var _this12;
          var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          _classCallCheck(this, _Socket);
          _this12 = _super.call(this);
          if (uri && "object" === typeof uri) {
            opts = uri;
            uri = null;
          }
          if (uri) {
            uri = (0, _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(uri);
            opts.hostname = uri.host;
            opts.secure = uri.protocol === "https" || uri.protocol === "wss";
            opts.port = uri.port;
            if (uri.query) opts.query = uri.query;
          } else if (opts.host) {
            opts.hostname = (0, _contrib_parseuri_js__WEBPACK_IMPORTED_MODULE_3__.parse)(opts.host).host;
          }
          (0, _util_js__WEBPACK_IMPORTED_MODULE_1__.installTimerFunctions)(_assertThisInitialized(_this12), opts);
          _this12.secure = null != opts.secure ? opts.secure : typeof location !== "undefined" && "https:" === location.protocol;
          if (opts.hostname && !opts.port) {
            // if no port is specified manually, use the protocol default
            opts.port = _this12.secure ? "443" : "80";
          }
          _this12.hostname = opts.hostname || (typeof location !== "undefined" ? location.hostname : "localhost");
          _this12.port = opts.port || (typeof location !== "undefined" && location.port ? location.port : _this12.secure ? "443" : "80");
          _this12.transports = opts.transports || ["polling", "websocket"];
          _this12.readyState = "";
          _this12.writeBuffer = [];
          _this12.prevBufferLen = 0;
          _this12.opts = Object.assign({
            path: "/engine.io",
            agent: false,
            withCredentials: false,
            upgrade: true,
            timestampParam: "t",
            rememberUpgrade: false,
            rejectUnauthorized: true,
            perMessageDeflate: {
              threshold: 1024
            },
            transportOptions: {},
            closeOnBeforeunload: true
          }, opts);
          _this12.opts.path = _this12.opts.path.replace(/\/$/, "") + "/";
          if (typeof _this12.opts.query === "string") {
            _this12.opts.query = (0, _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__.decode)(_this12.opts.query);
          }
          // set on handshake
          _this12.id = null;
          _this12.upgrades = null;
          _this12.pingInterval = null;
          _this12.pingTimeout = null;
          // set on heartbeat
          _this12.pingTimeoutTimer = null;
          if (typeof addEventListener === "function") {
            if (_this12.opts.closeOnBeforeunload) {
              // Firefox closes the connection when the "beforeunload" event is emitted but not Chrome. This event listener
              // ensures every browser behaves the same (no "disconnect" event at the Socket.IO level when the page is
              // closed/reloaded)
              _this12.beforeunloadEventListener = function () {
                if (_this12.transport) {
                  // silently close the transport
                  _this12.transport.removeAllListeners();
                  _this12.transport.close();
                }
              };
              addEventListener("beforeunload", _this12.beforeunloadEventListener, false);
            }
            if (_this12.hostname !== "localhost") {
              _this12.offlineEventListener = function () {
                _this12.onClose("transport close", {
                  description: "network connection lost"
                });
              };
              addEventListener("offline", _this12.offlineEventListener, false);
            }
          }
          _this12.open();
          return _this12;
        }
        /**
         * Creates transport of the given type.
         *
         * @param {String} transport name
         * @return {Transport}
         * @api private
         */
        _createClass(_Socket, [{
          key: "createTransport",
          value: function createTransport(name) {
            var query = Object.assign({}, this.opts.query);
            // append engine.io protocol identifier
            query.EIO = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;
            // transport name
            query.transport = name;
            // session id if we already have one
            if (this.id) query.sid = this.id;
            var opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {
              query: query,
              socket: this,
              hostname: this.hostname,
              secure: this.secure,
              port: this.port
            });
            return new _transports_index_js__WEBPACK_IMPORTED_MODULE_0__.transports[name](opts);
          }
          /**
           * Initializes transport to use and starts probe.
           *
           * @api private
           */
        }, {
          key: "open",
          value: function open() {
            var _this13 = this;
            var transport;
            if (this.opts.rememberUpgrade && _Socket.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1) {
              transport = "websocket";
            } else if (0 === this.transports.length) {
              // Emit error on next tick so it can be listened to
              this.setTimeoutFn(function () {
                _this13.emitReserved("error", "No transports available");
              }, 0);
              return;
            } else {
              transport = this.transports[0];
            }
            this.readyState = "opening";
            // Retry with the next transport if the transport is disabled (jsonp: false)
            try {
              transport = this.createTransport(transport);
            } catch (e) {
              this.transports.shift();
              this.open();
              return;
            }
            transport.open();
            this.setTransport(transport);
          }
          /**
           * Sets the current transport. Disables the existing one (if any).
           *
           * @api private
           */
        }, {
          key: "setTransport",
          value: function setTransport(transport) {
            var _this14 = this;
            if (this.transport) {
              this.transport.removeAllListeners();
            }
            // set up transport
            this.transport = transport;
            // set up transport listeners
            transport.on("drain", this.onDrain.bind(this)).on("packet", this.onPacket.bind(this)).on("error", this.onError.bind(this)).on("close", function (reason) {
              return _this14.onClose("transport close", reason);
            });
          }
          /**
           * Probes a transport.
           *
           * @param {String} transport name
           * @api private
           */
        }, {
          key: "probe",
          value: function probe(name) {
            var _this15 = this;
            var transport = this.createTransport(name);
            var failed = false;
            _Socket.priorWebsocketSuccess = false;
            var onTransportOpen = function onTransportOpen() {
              if (failed) return;
              transport.send([{
                type: "ping",
                data: "probe"
              }]);
              transport.once("packet", function (msg) {
                if (failed) return;
                if ("pong" === msg.type && "probe" === msg.data) {
                  _this15.upgrading = true;
                  _this15.emitReserved("upgrading", transport);
                  if (!transport) return;
                  _Socket.priorWebsocketSuccess = "websocket" === transport.name;
                  _this15.transport.pause(function () {
                    if (failed) return;
                    if ("closed" === _this15.readyState) return;
                    cleanup();
                    _this15.setTransport(transport);
                    transport.send([{
                      type: "upgrade"
                    }]);
                    _this15.emitReserved("upgrade", transport);
                    transport = null;
                    _this15.upgrading = false;
                    _this15.flush();
                  });
                } else {
                  var err = new Error("probe error");
                  // @ts-ignore
                  err.transport = transport.name;
                  _this15.emitReserved("upgradeError", err);
                }
              });
            };
            function freezeTransport() {
              if (failed) return;
              // Any callback called by transport should be ignored since now
              failed = true;
              cleanup();
              transport.close();
              transport = null;
            }
            // Handle any error that happens while probing
            var onerror = function onerror(err) {
              var error = new Error("probe error: " + err);
              // @ts-ignore
              error.transport = transport.name;
              freezeTransport();
              _this15.emitReserved("upgradeError", error);
            };
            function onTransportClose() {
              onerror("transport closed");
            }
            // When the socket is closed while we're probing
            function onclose() {
              onerror("socket closed");
            }
            // When the socket is upgraded while we're probing
            function onupgrade(to) {
              if (transport && to.name !== transport.name) {
                freezeTransport();
              }
            }
            // Remove all listeners on the transport and on self
            var cleanup = function cleanup() {
              transport.removeListener("open", onTransportOpen);
              transport.removeListener("error", onerror);
              transport.removeListener("close", onTransportClose);
              _this15.off("close", onclose);
              _this15.off("upgrading", onupgrade);
            };
            transport.once("open", onTransportOpen);
            transport.once("error", onerror);
            transport.once("close", onTransportClose);
            this.once("close", onclose);
            this.once("upgrading", onupgrade);
            transport.open();
          }
          /**
           * Called when connection is deemed open.
           *
           * @api private
           */
        }, {
          key: "onOpen",
          value: function onOpen() {
            this.readyState = "open";
            _Socket.priorWebsocketSuccess = "websocket" === this.transport.name;
            this.emitReserved("open");
            this.flush();
            // we check for `readyState` in case an `open`
            // listener already closed the socket
            if ("open" === this.readyState && this.opts.upgrade && this.transport.pause) {
              var i = 0;
              var l = this.upgrades.length;
              for (; i < l; i++) {
                this.probe(this.upgrades[i]);
              }
            }
          }
          /**
           * Handles a packet.
           *
           * @api private
           */
        }, {
          key: "onPacket",
          value: function onPacket(packet) {
            if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
              this.emitReserved("packet", packet);
              // Socket is live - any packet counts
              this.emitReserved("heartbeat");
              switch (packet.type) {
                case "open":
                  this.onHandshake(JSON.parse(packet.data));
                  break;
                case "ping":
                  this.resetPingTimeout();
                  this.sendPacket("pong");
                  this.emitReserved("ping");
                  this.emitReserved("pong");
                  break;
                case "error":
                  var err = new Error("server error");
                  // @ts-ignore
                  err.code = packet.data;
                  this.onError(err);
                  break;
                case "message":
                  this.emitReserved("data", packet.data);
                  this.emitReserved("message", packet.data);
                  break;
              }
            } else {}
          }
          /**
           * Called upon handshake completion.
           *
           * @param {Object} data - handshake obj
           * @api private
           */
        }, {
          key: "onHandshake",
          value: function onHandshake(data) {
            this.emitReserved("handshake", data);
            this.id = data.sid;
            this.transport.query.sid = data.sid;
            this.upgrades = this.filterUpgrades(data.upgrades);
            this.pingInterval = data.pingInterval;
            this.pingTimeout = data.pingTimeout;
            this.maxPayload = data.maxPayload;
            this.onOpen();
            // In case open handler closes socket
            if ("closed" === this.readyState) return;
            this.resetPingTimeout();
          }
          /**
           * Sets and resets ping timeout timer based on server pings.
           *
           * @api private
           */
        }, {
          key: "resetPingTimeout",
          value: function resetPingTimeout() {
            var _this16 = this;
            this.clearTimeoutFn(this.pingTimeoutTimer);
            this.pingTimeoutTimer = this.setTimeoutFn(function () {
              _this16.onClose("ping timeout");
            }, this.pingInterval + this.pingTimeout);
            if (this.opts.autoUnref) {
              this.pingTimeoutTimer.unref();
            }
          }
          /**
           * Called on `drain` event
           *
           * @api private
           */
        }, {
          key: "onDrain",
          value: function onDrain() {
            this.writeBuffer.splice(0, this.prevBufferLen);
            // setting prevBufferLen = 0 is very important
            // for example, when upgrading, upgrade packet is sent over,
            // and a nonzero prevBufferLen could cause problems on `drain`
            this.prevBufferLen = 0;
            if (0 === this.writeBuffer.length) {
              this.emitReserved("drain");
            } else {
              this.flush();
            }
          }
          /**
           * Flush write buffers.
           *
           * @api private
           */
        }, {
          key: "flush",
          value: function flush() {
            if ("closed" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
              var packets = this.getWritablePackets();
              this.transport.send(packets);
              // keep track of current length of writeBuffer
              // splice writeBuffer and callbackBuffer on `drain`
              this.prevBufferLen = packets.length;
              this.emitReserved("flush");
            }
          }
          /**
           * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP
           * long-polling)
           *
           * @private
           */
        }, {
          key: "getWritablePackets",
          value: function getWritablePackets() {
            var shouldCheckPayloadSize = this.maxPayload && this.transport.name === "polling" && this.writeBuffer.length > 1;
            if (!shouldCheckPayloadSize) {
              return this.writeBuffer;
            }
            var payloadSize = 1; // first packet type
            for (var i = 0; i < this.writeBuffer.length; i++) {
              var data = this.writeBuffer[i].data;
              if (data) {
                payloadSize += (0, _util_js__WEBPACK_IMPORTED_MODULE_1__.byteLength)(data);
              }
              if (i > 0 && payloadSize > this.maxPayload) {
                return this.writeBuffer.slice(0, i);
              }
              payloadSize += 2; // separator + packet type
            }

            return this.writeBuffer;
          }
          /**
           * Sends a message.
           *
           * @param {String} message.
           * @param {Function} callback function.
           * @param {Object} options.
           * @return {Socket} for chaining.
           * @api public
           */
        }, {
          key: "write",
          value: function write(msg, options, fn) {
            this.sendPacket("message", msg, options, fn);
            return this;
          }
        }, {
          key: "send",
          value: function send(msg, options, fn) {
            this.sendPacket("message", msg, options, fn);
            return this;
          }
          /**
           * Sends a packet.
           *
           * @param {String} packet type.
           * @param {String} data.
           * @param {Object} options.
           * @param {Function} callback function.
           * @api private
           */
        }, {
          key: "sendPacket",
          value: function sendPacket(type, data, options, fn) {
            if ("function" === typeof data) {
              fn = data;
              data = undefined;
            }
            if ("function" === typeof options) {
              fn = options;
              options = null;
            }
            if ("closing" === this.readyState || "closed" === this.readyState) {
              return;
            }
            options = options || {};
            options.compress = false !== options.compress;
            var packet = {
              type: type,
              data: data,
              options: options
            };
            this.emitReserved("packetCreate", packet);
            this.writeBuffer.push(packet);
            if (fn) this.once("flush", fn);
            this.flush();
          }
          /**
           * Closes the connection.
           *
           * @api public
           */
        }, {
          key: "close",
          value: function close() {
            var _this17 = this;
            var close = function close() {
              _this17.onClose("forced close");
              _this17.transport.close();
            };
            var cleanupAndClose = function cleanupAndClose() {
              _this17.off("upgrade", cleanupAndClose);
              _this17.off("upgradeError", cleanupAndClose);
              close();
            };
            var waitForUpgrade = function waitForUpgrade() {
              // wait for upgrade to finish since we can't send packets while pausing a transport
              _this17.once("upgrade", cleanupAndClose);
              _this17.once("upgradeError", cleanupAndClose);
            };
            if ("opening" === this.readyState || "open" === this.readyState) {
              this.readyState = "closing";
              if (this.writeBuffer.length) {
                this.once("drain", function () {
                  if (_this17.upgrading) {
                    waitForUpgrade();
                  } else {
                    close();
                  }
                });
              } else if (this.upgrading) {
                waitForUpgrade();
              } else {
                close();
              }
            }
            return this;
          }
          /**
           * Called upon transport error
           *
           * @api private
           */
        }, {
          key: "onError",
          value: function onError(err) {
            _Socket.priorWebsocketSuccess = false;
            this.emitReserved("error", err);
            this.onClose("transport error", err);
          }
          /**
           * Called upon transport close.
           *
           * @api private
           */
        }, {
          key: "onClose",
          value: function onClose(reason, description) {
            if ("opening" === this.readyState || "open" === this.readyState || "closing" === this.readyState) {
              // clear timers
              this.clearTimeoutFn(this.pingTimeoutTimer);
              // stop event from firing again for transport
              this.transport.removeAllListeners("close");
              // ensure transport won't stay open
              this.transport.close();
              // ignore further transport communication
              this.transport.removeAllListeners();
              if (typeof removeEventListener === "function") {
                removeEventListener("beforeunload", this.beforeunloadEventListener, false);
                removeEventListener("offline", this.offlineEventListener, false);
              }
              // set ready state
              this.readyState = "closed";
              // clear session id
              this.id = null;
              // emit close event
              this.emitReserved("close", reason, description);
              // clean buffers after, so users can still
              // grab the buffers on `close` event
              this.writeBuffer = [];
              this.prevBufferLen = 0;
            }
          }
          /**
           * Filters upgrades, returning only those matching client transports.
           *
           * @param {Array} server upgrades
           * @api private
           *
           */
        }, {
          key: "filterUpgrades",
          value: function filterUpgrades(upgrades) {
            var filteredUpgrades = [];
            var i = 0;
            var j = upgrades.length;
            for (; i < j; i++) {
              if (~this.transports.indexOf(upgrades[i])) filteredUpgrades.push(upgrades[i]);
            }
            return filteredUpgrades;
          }
        }]);
        return _Socket;
      }(_socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_4__.Emitter);
      _Socket.protocol = engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.protocol;

      /***/
    },

    /***/5203:
    /*!**************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/transport.js ***!
      \**************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Transport": function Transport() {
          return (/* binding */_Transport
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var engine_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! engine.io-parser */45621);
      /* harmony import */
      var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @socket.io/component-emitter */88760);
      /* harmony import */
      var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./util.js */63163);
      var TransportError = /*#__PURE__*/function (_Error) {
        _inherits(TransportError, _Error);
        var _super2 = _createSuper(TransportError);
        function TransportError(reason, description, context) {
          var _this18;
          _classCallCheck(this, TransportError);
          _this18 = _super2.call(this, reason);
          _this18.description = description;
          _this18.context = context;
          _this18.type = "TransportError";
          return _this18;
        }
        return _createClass(TransportError);
      }( /*#__PURE__*/_wrapNativeSuper(Error));
      var _Transport = /*#__PURE__*/function (_socket_io_component_2) {
        _inherits(_Transport, _socket_io_component_2);
        var _super3 = _createSuper(_Transport);
        /**
         * Transport abstract constructor.
         *
         * @param {Object} options.
         * @api private
         */
        function _Transport(opts) {
          var _this19;
          _classCallCheck(this, _Transport);
          _this19 = _super3.call(this);
          _this19.writable = false;
          (0, _util_js__WEBPACK_IMPORTED_MODULE_2__.installTimerFunctions)(_assertThisInitialized(_this19), opts);
          _this19.opts = opts;
          _this19.query = opts.query;
          _this19.readyState = "";
          _this19.socket = opts.socket;
          return _this19;
        }
        /**
         * Emits an error.
         *
         * @param {String} reason
         * @param description
         * @param context - the error context
         * @return {Transport} for chaining
         * @api protected
         */
        _createClass(_Transport, [{
          key: "onError",
          value: function onError(reason, description, context) {
            _get(_getPrototypeOf(_Transport.prototype), "emitReserved", this).call(this, "error", new TransportError(reason, description, context));
            return this;
          }
          /**
           * Opens the transport.
           *
           * @api public
           */
        }, {
          key: "open",
          value: function open() {
            if ("closed" === this.readyState || "" === this.readyState) {
              this.readyState = "opening";
              this.doOpen();
            }
            return this;
          }
          /**
           * Closes the transport.
           *
           * @api public
           */
        }, {
          key: "close",
          value: function close() {
            if ("opening" === this.readyState || "open" === this.readyState) {
              this.doClose();
              this.onClose();
            }
            return this;
          }
          /**
           * Sends multiple packets.
           *
           * @param {Array} packets
           * @api public
           */
        }, {
          key: "send",
          value: function send(packets) {
            if ("open" === this.readyState) {
              this.write(packets);
            } else {
              // this might happen if the transport was silently closed in the beforeunload event handler
            }
          }
          /**
           * Called upon open
           *
           * @api protected
           */
        }, {
          key: "onOpen",
          value: function onOpen() {
            this.readyState = "open";
            this.writable = true;
            _get(_getPrototypeOf(_Transport.prototype), "emitReserved", this).call(this, "open");
          }
          /**
           * Called with data.
           *
           * @param {String} data
           * @api protected
           */
        }, {
          key: "onData",
          value: function onData(data) {
            var packet = (0, engine_io_parser__WEBPACK_IMPORTED_MODULE_0__.decodePacket)(data, this.socket.binaryType);
            this.onPacket(packet);
          }
          /**
           * Called with a decoded packet.
           *
           * @api protected
           */
        }, {
          key: "onPacket",
          value: function onPacket(packet) {
            _get(_getPrototypeOf(_Transport.prototype), "emitReserved", this).call(this, "packet", packet);
          }
          /**
           * Called upon close.
           *
           * @api protected
           */
        }, {
          key: "onClose",
          value: function onClose(details) {
            this.readyState = "closed";
            _get(_getPrototypeOf(_Transport.prototype), "emitReserved", this).call(this, "close", details);
          }
        }]);
        return _Transport;
      }(_socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter);
      /***/
    },
    /***/51282:
    /*!*********************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/transports/index.js ***!
      \*********************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"transports": function transports() {
          return (/* binding */_transports
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _polling_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./polling.js */35544);
      /* harmony import */
      var _websocket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./websocket.js */65211);
      var _transports = {
        websocket: _websocket_js__WEBPACK_IMPORTED_MODULE_1__.WS,
        polling: _polling_js__WEBPACK_IMPORTED_MODULE_0__.Polling
      };

      /***/
    },

    /***/35544:
    /*!***********************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/transports/polling.js ***!
      \***********************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Polling": function Polling() {
          return (/* binding */_Polling
          );
        },
        /* harmony export */"Request": function Request() {
          return (/* binding */_Request
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../transport.js */5203);
      /* harmony import */
      var _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../contrib/yeast.js */89585);
      /* harmony import */
      var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../contrib/parseqs.js */46038);
      /* harmony import */
      var engine_io_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! engine.io-parser */45621);
      /* harmony import */
      var _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./xmlhttprequest.js */1532);
      /* harmony import */
      var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! @socket.io/component-emitter */88760);
      /* harmony import */
      var _util_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ../util.js */63163);
      /* harmony import */
      var _globalThis_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! ../globalThis.js */51708);
      function empty() {}
      var hasXHR2 = function () {
        var xhr = new _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_4__.XHR({
          xdomain: false
        });
        return null != xhr.responseType;
      }();
      var _Polling = /*#__PURE__*/function (_transport_js__WEBPAC) {
        _inherits(_Polling, _transport_js__WEBPAC);
        var _super4 = _createSuper(_Polling);
        /**
         * XHR Polling constructor.
         *
         * @param {Object} opts
         * @api public
         */
        function _Polling(opts) {
          var _this20;
          _classCallCheck(this, _Polling);
          _this20 = _super4.call(this, opts);
          _this20.polling = false;
          if (typeof location !== "undefined") {
            var isSSL = "https:" === location.protocol;
            var port = location.port;
            // some user agents have empty `location.port`
            if (!port) {
              port = isSSL ? "443" : "80";
            }
            _this20.xd = typeof location !== "undefined" && opts.hostname !== location.hostname || port !== opts.port;
            _this20.xs = opts.secure !== isSSL;
          }
          /**
           * XHR supports binary
           */
          var forceBase64 = opts && opts.forceBase64;
          _this20.supportsBinary = hasXHR2 && !forceBase64;
          return _this20;
        }
        /**
         * Transport name.
         */
        _createClass(_Polling, [{
          key: "name",
          get: function get() {
            return "polling";
          }
          /**
           * Opens the socket (triggers polling). We write a PING message to determine
           * when the transport is open.
           *
           * @api private
           */
        }, {
          key: "doOpen",
          value: function doOpen() {
            this.poll();
          }
          /**
           * Pauses polling.
           *
           * @param {Function} callback upon buffers are flushed and transport is paused
           * @api private
           */
        }, {
          key: "pause",
          value: function pause(onPause) {
            var _this21 = this;
            this.readyState = "pausing";
            var pause = function pause() {
              _this21.readyState = "paused";
              onPause();
            };
            if (this.polling || !this.writable) {
              var total = 0;
              if (this.polling) {
                total++;
                this.once("pollComplete", function () {
                  --total || pause();
                });
              }
              if (!this.writable) {
                total++;
                this.once("drain", function () {
                  --total || pause();
                });
              }
            } else {
              pause();
            }
          }
          /**
           * Starts polling cycle.
           *
           * @api public
           */
        }, {
          key: "poll",
          value: function poll() {
            this.polling = true;
            this.doPoll();
            this.emitReserved("poll");
          }
          /**
           * Overloads onData to detect payloads.
           *
           * @api private
           */
        }, {
          key: "onData",
          value: function onData(data) {
            var _this22 = this;
            var callback = function callback(packet) {
              // if its the first message we consider the transport open
              if ("opening" === _this22.readyState && packet.type === "open") {
                _this22.onOpen();
              }
              // if its a close packet, we close the ongoing requests
              if ("close" === packet.type) {
                _this22.onClose({
                  description: "transport closed by the server"
                });
                return false;
              }
              // otherwise bypass onData and handle the message
              _this22.onPacket(packet);
            };
            // decode payload
            (0, engine_io_parser__WEBPACK_IMPORTED_MODULE_3__.decodePayload)(data, this.socket.binaryType).forEach(callback);
            // if an event did not trigger closing
            if ("closed" !== this.readyState) {
              // if we got data we're not polling
              this.polling = false;
              this.emitReserved("pollComplete");
              if ("open" === this.readyState) {
                this.poll();
              } else {}
            }
          }
          /**
           * For polling, send a close packet.
           *
           * @api private
           */
        }, {
          key: "doClose",
          value: function doClose() {
            var _this23 = this;
            var close = function close() {
              _this23.write([{
                type: "close"
              }]);
            };
            if ("open" === this.readyState) {
              close();
            } else {
              // in case we're trying to close while
              // handshaking is in progress (GH-164)
              this.once("open", close);
            }
          }
          /**
           * Writes a packets payload.
           *
           * @param {Array} data packets
           * @param {Function} drain callback
           * @api private
           */
        }, {
          key: "write",
          value: function write(packets) {
            var _this24 = this;
            this.writable = false;
            (0, engine_io_parser__WEBPACK_IMPORTED_MODULE_3__.encodePayload)(packets, function (data) {
              _this24.doWrite(data, function () {
                _this24.writable = true;
                _this24.emitReserved("drain");
              });
            });
          }
          /**
           * Generates uri for connection.
           *
           * @api private
           */
        }, {
          key: "uri",
          value: function uri() {
            var query = this.query || {};
            var schema = this.opts.secure ? "https" : "http";
            var port = "";
            // cache busting is forced
            if (false !== this.opts.timestampRequests) {
              query[this.opts.timestampParam] = (0, _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_1__.yeast)();
            }
            if (!this.supportsBinary && !query.sid) {
              query.b64 = 1;
            }
            // avoid port if default for schema
            if (this.opts.port && ("https" === schema && Number(this.opts.port) !== 443 || "http" === schema && Number(this.opts.port) !== 80)) {
              port = ":" + this.opts.port;
            }
            var encodedQuery = (0, _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_2__.encode)(query);
            var ipv6 = this.opts.hostname.indexOf(":") !== -1;
            return schema + "://" + (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? "?" + encodedQuery : "");
          }
          /**
           * Creates a request.
           *
           * @param {String} method
           * @api private
           */
        }, {
          key: "request",
          value: function request() {
            var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            Object.assign(opts, {
              xd: this.xd,
              xs: this.xs
            }, this.opts);
            return new _Request(this.uri(), opts);
          }
          /**
           * Sends data.
           *
           * @param {String} data to send.
           * @param {Function} called upon flush.
           * @api private
           */
        }, {
          key: "doWrite",
          value: function doWrite(data, fn) {
            var _this25 = this;
            var req = this.request({
              method: "POST",
              data: data
            });
            req.on("success", fn);
            req.on("error", function (xhrStatus, context) {
              _this25.onError("xhr post error", xhrStatus, context);
            });
          }
          /**
           * Starts a poll cycle.
           *
           * @api private
           */
        }, {
          key: "doPoll",
          value: function doPoll() {
            var _this26 = this;
            var req = this.request();
            req.on("data", this.onData.bind(this));
            req.on("error", function (xhrStatus, context) {
              _this26.onError("xhr poll error", xhrStatus, context);
            });
            this.pollXhr = req;
          }
        }]);
        return _Polling;
      }(_transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport);
      var _Request = /*#__PURE__*/function (_socket_io_component_3) {
        _inherits(_Request, _socket_io_component_3);
        var _super5 = _createSuper(_Request);
        /**
         * Request constructor
         *
         * @param {Object} options
         * @api public
         */
        function _Request(uri, opts) {
          var _this27;
          _classCallCheck(this, _Request);
          _this27 = _super5.call(this);
          (0, _util_js__WEBPACK_IMPORTED_MODULE_6__.installTimerFunctions)(_assertThisInitialized(_this27), opts);
          _this27.opts = opts;
          _this27.method = opts.method || "GET";
          _this27.uri = uri;
          _this27.async = false !== opts.async;
          _this27.data = undefined !== opts.data ? opts.data : null;
          _this27.create();
          return _this27;
        }
        /**
         * Creates the XHR object and sends the request.
         *
         * @api private
         */
        _createClass(_Request, [{
          key: "create",
          value: function create() {
            var _this28 = this;
            var opts = (0, _util_js__WEBPACK_IMPORTED_MODULE_6__.pick)(this.opts, "agent", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref");
            opts.xdomain = !!this.opts.xd;
            opts.xscheme = !!this.opts.xs;
            var xhr = this.xhr = new _xmlhttprequest_js__WEBPACK_IMPORTED_MODULE_4__.XHR(opts);
            try {
              xhr.open(this.method, this.uri, this.async);
              try {
                if (this.opts.extraHeaders) {
                  xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
                  for (var i in this.opts.extraHeaders) {
                    if (this.opts.extraHeaders.hasOwnProperty(i)) {
                      xhr.setRequestHeader(i, this.opts.extraHeaders[i]);
                    }
                  }
                }
              } catch (e) {}
              if ("POST" === this.method) {
                try {
                  xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
                } catch (e) {}
              }
              try {
                xhr.setRequestHeader("Accept", "*/*");
              } catch (e) {}
              // ie6 check
              if ("withCredentials" in xhr) {
                xhr.withCredentials = this.opts.withCredentials;
              }
              if (this.opts.requestTimeout) {
                xhr.timeout = this.opts.requestTimeout;
              }
              xhr.onreadystatechange = function () {
                if (4 !== xhr.readyState) return;
                if (200 === xhr.status || 1223 === xhr.status) {
                  _this28.onLoad();
                } else {
                  // make sure the `error` event handler that's user-set
                  // does not throw in the same tick and gets caught here
                  _this28.setTimeoutFn(function () {
                    _this28.onError(typeof xhr.status === "number" ? xhr.status : 0);
                  }, 0);
                }
              };
              xhr.send(this.data);
            } catch (e) {
              // Need to defer since .create() is called directly from the constructor
              // and thus the 'error' event can only be only bound *after* this exception
              // occurs.  Therefore, also, we cannot throw here at all.
              this.setTimeoutFn(function () {
                _this28.onError(e);
              }, 0);
              return;
            }
            if (typeof document !== "undefined") {
              this.index = _Request.requestsCount++;
              _Request.requests[this.index] = this;
            }
          }
          /**
           * Called upon error.
           *
           * @api private
           */
        }, {
          key: "onError",
          value: function onError(err) {
            this.emitReserved("error", err, this.xhr);
            this.cleanup(true);
          }
          /**
           * Cleans up house.
           *
           * @api private
           */
        }, {
          key: "cleanup",
          value: function cleanup(fromError) {
            if ("undefined" === typeof this.xhr || null === this.xhr) {
              return;
            }
            this.xhr.onreadystatechange = empty;
            if (fromError) {
              try {
                this.xhr.abort();
              } catch (e) {}
            }
            if (typeof document !== "undefined") {
              delete _Request.requests[this.index];
            }
            this.xhr = null;
          }
          /**
           * Called upon load.
           *
           * @api private
           */
        }, {
          key: "onLoad",
          value: function onLoad() {
            var data = this.xhr.responseText;
            if (data !== null) {
              this.emitReserved("data", data);
              this.emitReserved("success");
              this.cleanup();
            }
          }
          /**
           * Aborts the request.
           *
           * @api public
           */
        }, {
          key: "abort",
          value: function abort() {
            this.cleanup();
          }
        }]);
        return _Request;
      }(_socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__.Emitter);
      _Request.requestsCount = 0;
      _Request.requests = {};
      /**
       * Aborts pending requests when unloading the window. This is needed to prevent
       * memory leaks (e.g. when using IE) and to ensure that no spurious error is
       * emitted.
       */
      if (typeof document !== "undefined") {
        // @ts-ignore
        if (typeof attachEvent === "function") {
          // @ts-ignore
          attachEvent("onunload", unloadHandler);
        } else if (typeof addEventListener === "function") {
          var terminationEvent = "onpagehide" in _globalThis_js__WEBPACK_IMPORTED_MODULE_7__.globalThisShim ? "pagehide" : "unload";
          addEventListener(terminationEvent, unloadHandler, false);
        }
      }
      function unloadHandler() {
        for (var i in _Request.requests) {
          if (_Request.requests.hasOwnProperty(i)) {
            _Request.requests[i].abort();
          }
        }
      }

      /***/
    },

    /***/39527:
    /*!*********************************************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js ***!
      \*********************************************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"nextTick": function nextTick() {
          return (/* binding */_nextTick
          );
        },
        /* harmony export */"WebSocket": function WebSocket() {
          return (/* binding */_WebSocket
          );
        },
        /* harmony export */"usingBrowserWebSocket": function usingBrowserWebSocket() {
          return (/* binding */_usingBrowserWebSocket
          );
        },
        /* harmony export */"defaultBinaryType": function defaultBinaryType() {
          return (/* binding */_defaultBinaryType
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _globalThis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../globalThis.js */51708);
      var _nextTick = function () {
        var isPromiseAvailable = typeof Promise === "function" && typeof Promise.resolve === "function";
        if (isPromiseAvailable) {
          return function (cb) {
            return Promise.resolve().then(cb);
          };
        } else {
          return function (cb, setTimeoutFn) {
            return setTimeoutFn(cb, 0);
          };
        }
      }();
      var _WebSocket = _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.WebSocket || _globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim.MozWebSocket;
      var _usingBrowserWebSocket = true;
      var _defaultBinaryType = "arraybuffer";

      /***/
    },

    /***/65211:
    /*!*************************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/transports/websocket.js ***!
      \*************************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"WS": function WS() {
          return (/* binding */_WS
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../transport.js */5203);
      /* harmony import */
      var _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../contrib/parseqs.js */46038);
      /* harmony import */
      var _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ../contrib/yeast.js */89585);
      /* harmony import */
      var _util_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ../util.js */63163);
      /* harmony import */
      var _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./websocket-constructor.js */39527);
      /* harmony import */
      var engine_io_parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! engine.io-parser */45621);

      // detect ReactNative environment
      var isReactNative = typeof navigator !== "undefined" && typeof navigator.product === "string" && navigator.product.toLowerCase() === "reactnative";
      var _WS = /*#__PURE__*/function (_transport_js__WEBPAC2) {
        _inherits(_WS, _transport_js__WEBPAC2);
        var _super6 = _createSuper(_WS);
        /**
         * WebSocket transport constructor.
         *
         * @api {Object} connection options
         * @api public
         */
        function _WS(opts) {
          var _this29;
          _classCallCheck(this, _WS);
          _this29 = _super6.call(this, opts);
          _this29.supportsBinary = !opts.forceBase64;
          return _this29;
        }
        /**
         * Transport name.
         *
         * @api public
         */
        _createClass(_WS, [{
          key: "name",
          get: function get() {
            return "websocket";
          }
          /**
           * Opens socket.
           *
           * @api private
           */
        }, {
          key: "doOpen",
          value: function doOpen() {
            if (!this.check()) {
              // let probe timeout
              return;
            }
            var uri = this.uri();
            var protocols = this.opts.protocols;
            // React Native only supports the 'headers' option, and will print a warning if anything else is passed
            var opts = isReactNative ? {} : (0, _util_js__WEBPACK_IMPORTED_MODULE_3__.pick)(this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity");
            if (this.opts.extraHeaders) {
              opts.headers = this.opts.extraHeaders;
            }
            try {
              this.ws = _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.usingBrowserWebSocket && !isReactNative ? protocols ? new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.WebSocket(uri, protocols) : new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.WebSocket(uri) : new _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.WebSocket(uri, protocols, opts);
            } catch (err) {
              return this.emitReserved("error", err);
            }
            this.ws.binaryType = this.socket.binaryType || _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.defaultBinaryType;
            this.addEventListeners();
          }
          /**
           * Adds event listeners to the socket
           *
           * @api private
           */
        }, {
          key: "addEventListeners",
          value: function addEventListeners() {
            var _this30 = this;
            this.ws.onopen = function () {
              if (_this30.opts.autoUnref) {
                _this30.ws._socket.unref();
              }
              _this30.onOpen();
            };
            this.ws.onclose = function (closeEvent) {
              return _this30.onClose({
                description: "websocket connection closed",
                context: closeEvent
              });
            };
            this.ws.onmessage = function (ev) {
              return _this30.onData(ev.data);
            };
            this.ws.onerror = function (e) {
              return _this30.onError("websocket error", e);
            };
          }
          /**
           * Writes data to socket.
           *
           * @param {Array} array of packets.
           * @api private
           */
        }, {
          key: "write",
          value: function write(packets) {
            var _this31 = this;
            this.writable = false;
            // encodePacket efficient as it uses WS framing
            // no need for encodePayload
            var _loop3 = function _loop3(i) {
              var packet = packets[i];
              var lastPacket = i === packets.length - 1;
              (0, engine_io_parser__WEBPACK_IMPORTED_MODULE_5__.encodePacket)(packet, _this31.supportsBinary, function (data) {
                // always create a new object (GH-437)
                var opts = {};
                if (!_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.usingBrowserWebSocket) {
                  if (packet.options) {
                    opts.compress = packet.options.compress;
                  }
                  if (_this31.opts.perMessageDeflate) {
                    var len =
                    // @ts-ignore
                    "string" === typeof data ? Buffer.byteLength(data) : data.length;
                    if (len < _this31.opts.perMessageDeflate.threshold) {
                      opts.compress = false;
                    }
                  }
                }
                // Sometimes the websocket has already been closed but the browser didn't
                // have a chance of informing us about it yet, in that case send will
                // throw an error
                try {
                  if (_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.usingBrowserWebSocket) {
                    // TypeError is thrown when passing the second argument on Safari
                    _this31.ws.send(data);
                  } else {
                    _this31.ws.send(data, opts);
                  }
                } catch (e) {}
                if (lastPacket) {
                  // fake drain
                  // defer to next tick to allow Socket to clear writeBuffer
                  (0, _websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.nextTick)(function () {
                    _this31.writable = true;
                    _this31.emitReserved("drain");
                  }, _this31.setTimeoutFn);
                }
              });
            };
            for (var i = 0; i < packets.length; i++) {
              _loop3(i);
            }
          }
          /**
           * Closes socket.
           *
           * @api private
           */
        }, {
          key: "doClose",
          value: function doClose() {
            if (typeof this.ws !== "undefined") {
              this.ws.close();
              this.ws = null;
            }
          }
          /**
           * Generates uri for connection.
           *
           * @api private
           */
        }, {
          key: "uri",
          value: function uri() {
            var query = this.query || {};
            var schema = this.opts.secure ? "wss" : "ws";
            var port = "";
            // avoid port if default for schema
            if (this.opts.port && ("wss" === schema && Number(this.opts.port) !== 443 || "ws" === schema && Number(this.opts.port) !== 80)) {
              port = ":" + this.opts.port;
            }
            // append timestamp to URI
            if (this.opts.timestampRequests) {
              query[this.opts.timestampParam] = (0, _contrib_yeast_js__WEBPACK_IMPORTED_MODULE_2__.yeast)();
            }
            // communicate binary support capabilities
            if (!this.supportsBinary) {
              query.b64 = 1;
            }
            var encodedQuery = (0, _contrib_parseqs_js__WEBPACK_IMPORTED_MODULE_1__.encode)(query);
            var ipv6 = this.opts.hostname.indexOf(":") !== -1;
            return schema + "://" + (ipv6 ? "[" + this.opts.hostname + "]" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? "?" + encodedQuery : "");
          }
          /**
           * Feature detection for WebSocket.
           *
           * @return {Boolean} whether this transport is available.
           * @api public
           */
        }, {
          key: "check",
          value: function check() {
            return !!_websocket_constructor_js__WEBPACK_IMPORTED_MODULE_4__.WebSocket;
          }
        }]);
        return _WS;
      }(_transport_js__WEBPACK_IMPORTED_MODULE_0__.Transport);
      /***/
    },
    /***/1532:
    /*!**************************************************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js ***!
      \**************************************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"XHR": function XHR() {
          return (/* binding */_XHR
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../contrib/has-cors.js */43874);
      /* harmony import */
      var _globalThis_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ../globalThis.js */51708);
      // browser shim for xmlhttprequest module

      function _XHR(opts) {
        var xdomain = opts.xdomain;
        // XMLHttpRequest can be disabled on IE
        try {
          if ("undefined" !== typeof XMLHttpRequest && (!xdomain || _contrib_has_cors_js__WEBPACK_IMPORTED_MODULE_0__.hasCORS)) {
            return new XMLHttpRequest();
          }
        } catch (e) {}
        if (!xdomain) {
          try {
            return new _globalThis_js__WEBPACK_IMPORTED_MODULE_1__.globalThisShim[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
          } catch (e) {}
        }
      }

      /***/
    },

    /***/63163:
    /*!*********************************************************!*\
      !*** ./node_modules/engine.io-client/build/esm/util.js ***!
      \*********************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"pick": function pick() {
          return (/* binding */_pick
          );
        },
        /* harmony export */"installTimerFunctions": function installTimerFunctions() {
          return (/* binding */_installTimerFunctions
          );
        },
        /* harmony export */"byteLength": function byteLength() {
          return (/* binding */_byteLength
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _globalThis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./globalThis.js */51708);
      function _pick(obj) {
        for (var _len = arguments.length, attr = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          attr[_key - 1] = arguments[_key];
        }
        return attr.reduce(function (acc, k) {
          if (obj.hasOwnProperty(k)) {
            acc[k] = obj[k];
          }
          return acc;
        }, {});
      }
      // Keep a reference to the real timeout functions so they can be used when overridden
      var NATIVE_SET_TIMEOUT = setTimeout;
      var NATIVE_CLEAR_TIMEOUT = clearTimeout;
      function _installTimerFunctions(obj, opts) {
        if (opts.useNativeTimers) {
          obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);
          obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);
        } else {
          obj.setTimeoutFn = setTimeout.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);
          obj.clearTimeoutFn = clearTimeout.bind(_globalThis_js__WEBPACK_IMPORTED_MODULE_0__.globalThisShim);
        }
      }
      // base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)
      var BASE64_OVERHEAD = 1.33;
      // we could also have used `new Blob([obj]).size`, but it isn't supported in IE9
      function _byteLength(obj) {
        if (typeof obj === "string") {
          return utf8Length(obj);
        }
        // arraybuffer or blob
        return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);
      }
      function utf8Length(str) {
        var c = 0,
          length = 0;
        for (var i = 0, l = str.length; i < l; i++) {
          c = str.charCodeAt(i);
          if (c < 0x80) {
            length += 1;
          } else if (c < 0x800) {
            length += 2;
          } else if (c < 0xd800 || c >= 0xe000) {
            length += 3;
          } else {
            i++;
            length += 4;
          }
        }
        return length;
      }

      /***/
    },

    /***/17107:
    /*!************************************************************!*\
      !*** ./node_modules/engine.io-parser/build/esm/commons.js ***!
      \************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"PACKET_TYPES": function PACKET_TYPES() {
          return (/* binding */_PACKET_TYPES
          );
        },
        /* harmony export */"PACKET_TYPES_REVERSE": function PACKET_TYPES_REVERSE() {
          return (/* binding */_PACKET_TYPES_REVERSE
          );
        },
        /* harmony export */"ERROR_PACKET": function ERROR_PACKET() {
          return (/* binding */_ERROR_PACKET
          );
        }
        /* harmony export */
      });
      var _PACKET_TYPES = Object.create(null); // no Map = no polyfill
      _PACKET_TYPES["open"] = "0";
      _PACKET_TYPES["close"] = "1";
      _PACKET_TYPES["ping"] = "2";
      _PACKET_TYPES["pong"] = "3";
      _PACKET_TYPES["message"] = "4";
      _PACKET_TYPES["upgrade"] = "5";
      _PACKET_TYPES["noop"] = "6";
      var _PACKET_TYPES_REVERSE = Object.create(null);
      Object.keys(_PACKET_TYPES).forEach(function (key) {
        _PACKET_TYPES_REVERSE[_PACKET_TYPES[key]] = key;
      });
      var _ERROR_PACKET = {
        type: "error",
        data: "parser error"
      };

      /***/
    },

    /***/10641:
    /*!*******************************************************************************!*\
      !*** ./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js ***!
      \*******************************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"encode": function encode() {
          return (/* binding */_encode3
          );
        },
        /* harmony export */"decode": function decode() {
          return (/* binding */_decode3
          );
        }
        /* harmony export */
      });
      var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
      // Use a lookup table to find the index.
      var lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);
      for (var i = 0; i < chars.length; i++) {
        lookup[chars.charCodeAt(i)] = i;
      }
      var _encode3 = function _encode3(arraybuffer) {
        var bytes = new Uint8Array(arraybuffer),
          i,
          len = bytes.length,
          base64 = '';
        for (i = 0; i < len; i += 3) {
          base64 += chars[bytes[i] >> 2];
          base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];
          base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];
          base64 += chars[bytes[i + 2] & 63];
        }
        if (len % 3 === 2) {
          base64 = base64.substring(0, base64.length - 1) + '=';
        } else if (len % 3 === 1) {
          base64 = base64.substring(0, base64.length - 2) + '==';
        }
        return base64;
      };
      var _decode3 = function _decode3(base64) {
        var bufferLength = base64.length * 0.75,
          len = base64.length,
          i,
          p = 0,
          encoded1,
          encoded2,
          encoded3,
          encoded4;
        if (base64[base64.length - 1] === '=') {
          bufferLength--;
          if (base64[base64.length - 2] === '=') {
            bufferLength--;
          }
        }
        var arraybuffer = new ArrayBuffer(bufferLength),
          bytes = new Uint8Array(arraybuffer);
        for (i = 0; i < len; i += 4) {
          encoded1 = lookup[base64.charCodeAt(i)];
          encoded2 = lookup[base64.charCodeAt(i + 1)];
          encoded3 = lookup[base64.charCodeAt(i + 2)];
          encoded4 = lookup[base64.charCodeAt(i + 3)];
          bytes[p++] = encoded1 << 2 | encoded2 >> 4;
          bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
          bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
        }
        return arraybuffer;
      };

      /***/
    },

    /***/88515:
    /*!*************************************************************************!*\
      !*** ./node_modules/engine.io-parser/build/esm/decodePacket.browser.js ***!
      \*************************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./commons.js */17107);
      /* harmony import */
      var _contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./contrib/base64-arraybuffer.js */10641);
      var withNativeArrayBuffer = typeof ArrayBuffer === "function";
      var decodePacket = function decodePacket(encodedPacket, binaryType) {
        if (typeof encodedPacket !== "string") {
          return {
            type: "message",
            data: mapBinary(encodedPacket, binaryType)
          };
        }
        var type = encodedPacket.charAt(0);
        if (type === "b") {
          return {
            type: "message",
            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)
          };
        }
        var packetType = _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type];
        if (!packetType) {
          return _commons_js__WEBPACK_IMPORTED_MODULE_0__.ERROR_PACKET;
        }
        return encodedPacket.length > 1 ? {
          type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type],
          data: encodedPacket.substring(1)
        } : {
          type: _commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES_REVERSE[type]
        };
      };
      var decodeBase64Packet = function decodeBase64Packet(data, binaryType) {
        if (withNativeArrayBuffer) {
          var decoded = (0, _contrib_base64_arraybuffer_js__WEBPACK_IMPORTED_MODULE_1__.decode)(data);
          return mapBinary(decoded, binaryType);
        } else {
          return {
            base64: true,
            data: data
          }; // fallback for old browsers
        }
      };

      var mapBinary = function mapBinary(data, binaryType) {
        switch (binaryType) {
          case "blob":
            return data instanceof ArrayBuffer ? new Blob([data]) : data;
          case "arraybuffer":
          default:
            return data;
          // assuming the data is already an ArrayBuffer
        }
      };
      /* harmony default export */
      __webpack_exports__["default"] = decodePacket;

      /***/
    },

    /***/50074:
    /*!*************************************************************************!*\
      !*** ./node_modules/engine.io-parser/build/esm/encodePacket.browser.js ***!
      \*************************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony import */
      var _commons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./commons.js */17107);
      var withNativeBlob = typeof Blob === "function" || typeof Blob !== "undefined" && Object.prototype.toString.call(Blob) === "[object BlobConstructor]";
      var withNativeArrayBuffer = typeof ArrayBuffer === "function";
      // ArrayBuffer.isView method is not defined in IE10
      var isView = function isView(obj) {
        return typeof ArrayBuffer.isView === "function" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;
      };
      var encodePacket = function encodePacket(_ref, supportsBinary, callback) {
        var type = _ref.type,
          data = _ref.data;
        if (withNativeBlob && data instanceof Blob) {
          if (supportsBinary) {
            return callback(data);
          } else {
            return encodeBlobAsBase64(data, callback);
          }
        } else if (withNativeArrayBuffer && (data instanceof ArrayBuffer || isView(data))) {
          if (supportsBinary) {
            return callback(data);
          } else {
            return encodeBlobAsBase64(new Blob([data]), callback);
          }
        }
        // plain string
        return callback(_commons_js__WEBPACK_IMPORTED_MODULE_0__.PACKET_TYPES[type] + (data || ""));
      };
      var encodeBlobAsBase64 = function encodeBlobAsBase64(data, callback) {
        var fileReader = new FileReader();
        fileReader.onload = function () {
          var content = fileReader.result.split(",")[1];
          callback("b" + content);
        };
        return fileReader.readAsDataURL(data);
      };
      /* harmony default export */
      __webpack_exports__["default"] = encodePacket;

      /***/
    },

    /***/45621:
    /*!**********************************************************!*\
      !*** ./node_modules/engine.io-parser/build/esm/index.js ***!
      \**********************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"protocol": function protocol() {
          return (/* binding */_protocol2
          );
        },
        /* harmony export */"encodePacket": function encodePacket() {
          return (/* reexport safe */_encodePacket_js__WEBPACK_IMPORTED_MODULE_0__["default"]
          );
        },
        /* harmony export */"encodePayload": function encodePayload() {
          return (/* binding */_encodePayload
          );
        },
        /* harmony export */"decodePacket": function decodePacket() {
          return (/* reexport safe */_decodePacket_js__WEBPACK_IMPORTED_MODULE_1__["default"]
          );
        },
        /* harmony export */"decodePayload": function decodePayload() {
          return (/* binding */_decodePayload
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./encodePacket.js */50074);
      /* harmony import */
      var _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./decodePacket.js */88515);
      var SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text
      var _encodePayload = function _encodePayload(packets, callback) {
        // some packets may be added to the array while encoding, so the initial length must be saved
        var length = packets.length;
        var encodedPackets = new Array(length);
        var count = 0;
        packets.forEach(function (packet, i) {
          // force base64 encoding for binary packets
          (0, _encodePacket_js__WEBPACK_IMPORTED_MODULE_0__["default"])(packet, false, function (encodedPacket) {
            encodedPackets[i] = encodedPacket;
            if (++count === length) {
              callback(encodedPackets.join(SEPARATOR));
            }
          });
        });
      };
      var _decodePayload = function _decodePayload(encodedPayload, binaryType) {
        var encodedPackets = encodedPayload.split(SEPARATOR);
        var packets = [];
        for (var i = 0; i < encodedPackets.length; i++) {
          var decodedPacket = (0, _decodePacket_js__WEBPACK_IMPORTED_MODULE_1__["default"])(encodedPackets[i], binaryType);
          packets.push(decodedPacket);
          if (decodedPacket.type === "error") {
            break;
          }
        }
        return packets;
      };
      var _protocol2 = 4;

      /***/
    },

    /***/23815:
    /*!***************************************!*\
      !*** ./node_modules/lodash/lodash.js ***!
      \***************************************/
    /***/
    function _(module, exports, __webpack_require__) {
      /* module decorator */module = __webpack_require__.nmd(module);
      var __WEBPACK_AMD_DEFINE_RESULT__; /**
                                         * @license
                                         * Lodash <https://lodash.com/>
                                         * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
                                         * Released under MIT license <https://lodash.com/license>
                                         * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
                                         * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
                                         */
      ;
      (function () {
        /** Used as a safe reference for `undefined` in pre-ES5 environments. */
        var undefined;

        /** Used as the semantic version number. */
        var VERSION = '4.17.21';

        /** Used as the size to enable large array optimizations. */
        var LARGE_ARRAY_SIZE = 200;

        /** Error message constants. */
        var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
          FUNC_ERROR_TEXT = 'Expected a function',
          INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

        /** Used to stand-in for `undefined` hash values. */
        var HASH_UNDEFINED = '__lodash_hash_undefined__';

        /** Used as the maximum memoize cache size. */
        var MAX_MEMOIZE_SIZE = 500;

        /** Used as the internal argument placeholder. */
        var PLACEHOLDER = '__lodash_placeholder__';

        /** Used to compose bitmasks for cloning. */
        var CLONE_DEEP_FLAG = 1,
          CLONE_FLAT_FLAG = 2,
          CLONE_SYMBOLS_FLAG = 4;

        /** Used to compose bitmasks for value comparisons. */
        var COMPARE_PARTIAL_FLAG = 1,
          COMPARE_UNORDERED_FLAG = 2;

        /** Used to compose bitmasks for function metadata. */
        var WRAP_BIND_FLAG = 1,
          WRAP_BIND_KEY_FLAG = 2,
          WRAP_CURRY_BOUND_FLAG = 4,
          WRAP_CURRY_FLAG = 8,
          WRAP_CURRY_RIGHT_FLAG = 16,
          WRAP_PARTIAL_FLAG = 32,
          WRAP_PARTIAL_RIGHT_FLAG = 64,
          WRAP_ARY_FLAG = 128,
          WRAP_REARG_FLAG = 256,
          WRAP_FLIP_FLAG = 512;

        /** Used as default options for `_.truncate`. */
        var DEFAULT_TRUNC_LENGTH = 30,
          DEFAULT_TRUNC_OMISSION = '...';

        /** Used to detect hot functions by number of calls within a span of milliseconds. */
        var HOT_COUNT = 800,
          HOT_SPAN = 16;

        /** Used to indicate the type of lazy iteratees. */
        var LAZY_FILTER_FLAG = 1,
          LAZY_MAP_FLAG = 2,
          LAZY_WHILE_FLAG = 3;

        /** Used as references for various `Number` constants. */
        var INFINITY = 1 / 0,
          MAX_SAFE_INTEGER = 9007199254740991,
          MAX_INTEGER = 1.7976931348623157e+308,
          NAN = 0 / 0;

        /** Used as references for the maximum length and index of an array. */
        var MAX_ARRAY_LENGTH = 4294967295,
          MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
          HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

        /** Used to associate wrap methods with their bit flags. */
        var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];

        /** `Object#toString` result references. */
        var argsTag = '[object Arguments]',
          arrayTag = '[object Array]',
          asyncTag = '[object AsyncFunction]',
          boolTag = '[object Boolean]',
          dateTag = '[object Date]',
          domExcTag = '[object DOMException]',
          errorTag = '[object Error]',
          funcTag = '[object Function]',
          genTag = '[object GeneratorFunction]',
          mapTag = '[object Map]',
          numberTag = '[object Number]',
          nullTag = '[object Null]',
          objectTag = '[object Object]',
          promiseTag = '[object Promise]',
          proxyTag = '[object Proxy]',
          regexpTag = '[object RegExp]',
          setTag = '[object Set]',
          stringTag = '[object String]',
          symbolTag = '[object Symbol]',
          undefinedTag = '[object Undefined]',
          weakMapTag = '[object WeakMap]',
          weakSetTag = '[object WeakSet]';
        var arrayBufferTag = '[object ArrayBuffer]',
          dataViewTag = '[object DataView]',
          float32Tag = '[object Float32Array]',
          float64Tag = '[object Float64Array]',
          int8Tag = '[object Int8Array]',
          int16Tag = '[object Int16Array]',
          int32Tag = '[object Int32Array]',
          uint8Tag = '[object Uint8Array]',
          uint8ClampedTag = '[object Uint8ClampedArray]',
          uint16Tag = '[object Uint16Array]',
          uint32Tag = '[object Uint32Array]';

        /** Used to match empty string literals in compiled template source. */
        var reEmptyStringLeading = /\b__p \+= '';/g,
          reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
          reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

        /** Used to match HTML entities and HTML characters. */
        var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
          reUnescapedHtml = /[&<>"']/g,
          reHasEscapedHtml = RegExp(reEscapedHtml.source),
          reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

        /** Used to match template delimiters. */
        var reEscape = /<%-([\s\S]+?)%>/g,
          reEvaluate = /<%([\s\S]+?)%>/g,
          reInterpolate = /<%=([\s\S]+?)%>/g;

        /** Used to match property names within property paths. */
        var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
          reIsPlainProp = /^\w*$/,
          rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

        /**
         * Used to match `RegExp`
         * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
         */
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
          reHasRegExpChar = RegExp(reRegExpChar.source);

        /** Used to match leading whitespace. */
        var reTrimStart = /^\s+/;

        /** Used to match a single whitespace character. */
        var reWhitespace = /\s/;

        /** Used to match wrap detail comments. */
        var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
          reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
          reSplitDetails = /,? & /;

        /** Used to match words composed of alphanumeric characters. */
        var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

        /**
         * Used to validate the `validate` option in `_.template` variable.
         *
         * Forbids characters which could potentially change the meaning of the function argument definition:
         * - "()," (modification of function parameters)
         * - "=" (default value)
         * - "[]{}" (destructuring of function parameters)
         * - "/" (beginning of a comment)
         * - whitespace
         */
        var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

        /** Used to match backslashes in property paths. */
        var reEscapeChar = /\\(\\)?/g;

        /**
         * Used to match
         * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
         */
        var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

        /** Used to match `RegExp` flags from their coerced string values. */
        var reFlags = /\w*$/;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect host constructors (Safari). */
        var reIsHostCtor = /^\[object .+?Constructor\]$/;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Used to detect unsigned integer values. */
        var reIsUint = /^(?:0|[1-9]\d*)$/;

        /** Used to match Latin Unicode letters (excluding mathematical operators). */
        var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

        /** Used to ensure capturing order of template delimiters. */
        var reNoMatch = /($^)/;

        /** Used to match unescaped characters in compiled string literals. */
        var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

        /** Used to compose unicode character classes. */
        var rsAstralRange = "\\ud800-\\udfff",
          rsComboMarksRange = "\\u0300-\\u036f",
          reComboHalfMarksRange = "\\ufe20-\\ufe2f",
          rsComboSymbolsRange = "\\u20d0-\\u20ff",
          rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
          rsDingbatRange = "\\u2700-\\u27bf",
          rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
          rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
          rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
          rsPunctuationRange = "\\u2000-\\u206f",
          rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
          rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
          rsVarRange = "\\ufe0e\\ufe0f",
          rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

        /** Used to compose unicode capture groups. */
        var rsApos = "['\u2019]",
          rsAstral = '[' + rsAstralRange + ']',
          rsBreak = '[' + rsBreakRange + ']',
          rsCombo = '[' + rsComboRange + ']',
          rsDigits = '\\d+',
          rsDingbat = '[' + rsDingbatRange + ']',
          rsLower = '[' + rsLowerRange + ']',
          rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
          rsFitz = "\\ud83c[\\udffb-\\udfff]",
          rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
          rsNonAstral = '[^' + rsAstralRange + ']',
          rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}",
          rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]",
          rsUpper = '[' + rsUpperRange + ']',
          rsZWJ = "\\u200d";

        /** Used to compose unicode regexes. */
        var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
          rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
          rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
          rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
          reOptMod = rsModifier + '?',
          rsOptVar = '[' + rsVarRange + ']?',
          rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
          rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
          rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
          rsSeq = rsOptVar + reOptMod + rsOptJoin,
          rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
          rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

        /** Used to match apostrophes. */
        var reApos = RegExp(rsApos, 'g');

        /**
         * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
         * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
         */
        var reComboMark = RegExp(rsCombo, 'g');

        /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
        var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

        /** Used to match complex or compound words. */
        var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');

        /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
        var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');

        /** Used to detect strings that need a more robust regexp to match words. */
        var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

        /** Used to assign default `context` object properties. */
        var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];

        /** Used to make template sourceURLs easier to identify. */
        var templateCounter = -1;

        /** Used to identify `toStringTag` values of typed arrays. */
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

        /** Used to identify `toStringTag` values supported by `_.clone`. */
        var cloneableTags = {};
        cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
        cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;

        /** Used to map Latin Unicode letters to basic Latin letters. */
        var deburredLetters = {
          // Latin-1 Supplement block.
          '\xc0': 'A',
          '\xc1': 'A',
          '\xc2': 'A',
          '\xc3': 'A',
          '\xc4': 'A',
          '\xc5': 'A',
          '\xe0': 'a',
          '\xe1': 'a',
          '\xe2': 'a',
          '\xe3': 'a',
          '\xe4': 'a',
          '\xe5': 'a',
          '\xc7': 'C',
          '\xe7': 'c',
          '\xd0': 'D',
          '\xf0': 'd',
          '\xc8': 'E',
          '\xc9': 'E',
          '\xca': 'E',
          '\xcb': 'E',
          '\xe8': 'e',
          '\xe9': 'e',
          '\xea': 'e',
          '\xeb': 'e',
          '\xcc': 'I',
          '\xcd': 'I',
          '\xce': 'I',
          '\xcf': 'I',
          '\xec': 'i',
          '\xed': 'i',
          '\xee': 'i',
          '\xef': 'i',
          '\xd1': 'N',
          '\xf1': 'n',
          '\xd2': 'O',
          '\xd3': 'O',
          '\xd4': 'O',
          '\xd5': 'O',
          '\xd6': 'O',
          '\xd8': 'O',
          '\xf2': 'o',
          '\xf3': 'o',
          '\xf4': 'o',
          '\xf5': 'o',
          '\xf6': 'o',
          '\xf8': 'o',
          '\xd9': 'U',
          '\xda': 'U',
          '\xdb': 'U',
          '\xdc': 'U',
          '\xf9': 'u',
          '\xfa': 'u',
          '\xfb': 'u',
          '\xfc': 'u',
          '\xdd': 'Y',
          '\xfd': 'y',
          '\xff': 'y',
          '\xc6': 'Ae',
          '\xe6': 'ae',
          '\xde': 'Th',
          '\xfe': 'th',
          '\xdf': 'ss',
          // Latin Extended-A block.
          "\u0100": 'A',
          "\u0102": 'A',
          "\u0104": 'A',
          "\u0101": 'a',
          "\u0103": 'a',
          "\u0105": 'a',
          "\u0106": 'C',
          "\u0108": 'C',
          "\u010A": 'C',
          "\u010C": 'C',
          "\u0107": 'c',
          "\u0109": 'c',
          "\u010B": 'c',
          "\u010D": 'c',
          "\u010E": 'D',
          "\u0110": 'D',
          "\u010F": 'd',
          "\u0111": 'd',
          "\u0112": 'E',
          "\u0114": 'E',
          "\u0116": 'E',
          "\u0118": 'E',
          "\u011A": 'E',
          "\u0113": 'e',
          "\u0115": 'e',
          "\u0117": 'e',
          "\u0119": 'e',
          "\u011B": 'e',
          "\u011C": 'G',
          "\u011E": 'G',
          "\u0120": 'G',
          "\u0122": 'G',
          "\u011D": 'g',
          "\u011F": 'g',
          "\u0121": 'g',
          "\u0123": 'g',
          "\u0124": 'H',
          "\u0126": 'H',
          "\u0125": 'h',
          "\u0127": 'h',
          "\u0128": 'I',
          "\u012A": 'I',
          "\u012C": 'I',
          "\u012E": 'I',
          "\u0130": 'I',
          "\u0129": 'i',
          "\u012B": 'i',
          "\u012D": 'i',
          "\u012F": 'i',
          "\u0131": 'i',
          "\u0134": 'J',
          "\u0135": 'j',
          "\u0136": 'K',
          "\u0137": 'k',
          "\u0138": 'k',
          "\u0139": 'L',
          "\u013B": 'L',
          "\u013D": 'L',
          "\u013F": 'L',
          "\u0141": 'L',
          "\u013A": 'l',
          "\u013C": 'l',
          "\u013E": 'l',
          "\u0140": 'l',
          "\u0142": 'l',
          "\u0143": 'N',
          "\u0145": 'N',
          "\u0147": 'N',
          "\u014A": 'N',
          "\u0144": 'n',
          "\u0146": 'n',
          "\u0148": 'n',
          "\u014B": 'n',
          "\u014C": 'O',
          "\u014E": 'O',
          "\u0150": 'O',
          "\u014D": 'o',
          "\u014F": 'o',
          "\u0151": 'o',
          "\u0154": 'R',
          "\u0156": 'R',
          "\u0158": 'R',
          "\u0155": 'r',
          "\u0157": 'r',
          "\u0159": 'r',
          "\u015A": 'S',
          "\u015C": 'S',
          "\u015E": 'S',
          "\u0160": 'S',
          "\u015B": 's',
          "\u015D": 's',
          "\u015F": 's',
          "\u0161": 's',
          "\u0162": 'T',
          "\u0164": 'T',
          "\u0166": 'T',
          "\u0163": 't',
          "\u0165": 't',
          "\u0167": 't',
          "\u0168": 'U',
          "\u016A": 'U',
          "\u016C": 'U',
          "\u016E": 'U',
          "\u0170": 'U',
          "\u0172": 'U',
          "\u0169": 'u',
          "\u016B": 'u',
          "\u016D": 'u',
          "\u016F": 'u',
          "\u0171": 'u',
          "\u0173": 'u',
          "\u0174": 'W',
          "\u0175": 'w',
          "\u0176": 'Y',
          "\u0177": 'y',
          "\u0178": 'Y',
          "\u0179": 'Z',
          "\u017B": 'Z',
          "\u017D": 'Z',
          "\u017A": 'z',
          "\u017C": 'z',
          "\u017E": 'z',
          "\u0132": 'IJ',
          "\u0133": 'ij',
          "\u0152": 'Oe',
          "\u0153": 'oe',
          "\u0149": "'n",
          "\u017F": 's'
        };

        /** Used to map characters to HTML entities. */
        var htmlEscapes = {
          '&': '&amp;',
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          "'": '&#39;'
        };

        /** Used to map HTML entities to characters. */
        var htmlUnescapes = {
          '&amp;': '&',
          '&lt;': '<',
          '&gt;': '>',
          '&quot;': '"',
          '&#39;': "'"
        };

        /** Used to escape characters for inclusion in compiled string literals. */
        var stringEscapes = {
          '\\': '\\',
          "'": "'",
          '\n': 'n',
          '\r': 'r',
          "\u2028": 'u2028',
          "\u2029": 'u2029'
        };

        /** Built-in method references without a dependency on `root`. */
        var freeParseFloat = parseFloat,
          freeParseInt = parseInt;

        /** Detect free variable `global` from Node.js. */
        var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

        /** Detect free variable `self`. */
        var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function('return this')();

        /** Detect free variable `exports`. */
        var freeExports = true && exports && !exports.nodeType && exports;

        /** Detect free variable `module`. */
        var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

        /** Detect the popular CommonJS extension `module.exports`. */
        var moduleExports = freeModule && freeModule.exports === freeExports;

        /** Detect free variable `process` from Node.js. */
        var freeProcess = moduleExports && freeGlobal.process;

        /** Used to access faster Node.js helpers. */
        var nodeUtil = function () {
          try {
            // Use `util.types` for Node.js 10+.
            var types = freeModule && freeModule.require && freeModule.require('util').types;
            if (types) {
              return types;
            }

            // Legacy `process.binding('util')` for Node.js < 10.
            return freeProcess && freeProcess.binding && freeProcess.binding('util');
          } catch (e) {}
        }();

        /* Node.js helper references. */
        var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
          nodeIsDate = nodeUtil && nodeUtil.isDate,
          nodeIsMap = nodeUtil && nodeUtil.isMap,
          nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
          nodeIsSet = nodeUtil && nodeUtil.isSet,
          nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

        /*--------------------------------------------------------------------------*/

        /**
         * A faster alternative to `Function#apply`, this function invokes `func`
         * with the `this` binding of `thisArg` and the arguments of `args`.
         *
         * @private
         * @param {Function} func The function to invoke.
         * @param {*} thisArg The `this` binding of `func`.
         * @param {Array} args The arguments to invoke `func` with.
         * @returns {*} Returns the result of `func`.
         */
        function apply(func, thisArg, args) {
          switch (args.length) {
            case 0:
              return func.call(thisArg);
            case 1:
              return func.call(thisArg, args[0]);
            case 2:
              return func.call(thisArg, args[0], args[1]);
            case 3:
              return func.call(thisArg, args[0], args[1], args[2]);
          }
          return func.apply(thisArg, args);
        }

        /**
         * A specialized version of `baseAggregator` for arrays.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} setter The function to set `accumulator` values.
         * @param {Function} iteratee The iteratee to transform keys.
         * @param {Object} accumulator The initial aggregated object.
         * @returns {Function} Returns `accumulator`.
         */
        function arrayAggregator(array, setter, iteratee, accumulator) {
          var index = -1,
            length = array == null ? 0 : array.length;
          while (++index < length) {
            var value = array[index];
            setter(accumulator, value, iteratee(value), array);
          }
          return accumulator;
        }

        /**
         * A specialized version of `_.forEach` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns `array`.
         */
        function arrayEach(array, iteratee) {
          var index = -1,
            length = array == null ? 0 : array.length;
          while (++index < length) {
            if (iteratee(array[index], index, array) === false) {
              break;
            }
          }
          return array;
        }

        /**
         * A specialized version of `_.forEachRight` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns `array`.
         */
        function arrayEachRight(array, iteratee) {
          var length = array == null ? 0 : array.length;
          while (length--) {
            if (iteratee(array[length], length, array) === false) {
              break;
            }
          }
          return array;
        }

        /**
         * A specialized version of `_.every` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} predicate The function invoked per iteration.
         * @returns {boolean} Returns `true` if all elements pass the predicate check,
         *  else `false`.
         */
        function arrayEvery(array, predicate) {
          var index = -1,
            length = array == null ? 0 : array.length;
          while (++index < length) {
            if (!predicate(array[index], index, array)) {
              return false;
            }
          }
          return true;
        }

        /**
         * A specialized version of `_.filter` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} predicate The function invoked per iteration.
         * @returns {Array} Returns the new filtered array.
         */
        function arrayFilter(array, predicate) {
          var index = -1,
            length = array == null ? 0 : array.length,
            resIndex = 0,
            result = [];
          while (++index < length) {
            var value = array[index];
            if (predicate(value, index, array)) {
              result[resIndex++] = value;
            }
          }
          return result;
        }

        /**
         * A specialized version of `_.includes` for arrays without support for
         * specifying an index to search from.
         *
         * @private
         * @param {Array} [array] The array to inspect.
         * @param {*} target The value to search for.
         * @returns {boolean} Returns `true` if `target` is found, else `false`.
         */
        function arrayIncludes(array, value) {
          var length = array == null ? 0 : array.length;
          return !!length && baseIndexOf(array, value, 0) > -1;
        }

        /**
         * This function is like `arrayIncludes` except that it accepts a comparator.
         *
         * @private
         * @param {Array} [array] The array to inspect.
         * @param {*} target The value to search for.
         * @param {Function} comparator The comparator invoked per element.
         * @returns {boolean} Returns `true` if `target` is found, else `false`.
         */
        function arrayIncludesWith(array, value, comparator) {
          var index = -1,
            length = array == null ? 0 : array.length;
          while (++index < length) {
            if (comparator(value, array[index])) {
              return true;
            }
          }
          return false;
        }

        /**
         * A specialized version of `_.map` for arrays without support for iteratee
         * shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns the new mapped array.
         */
        function arrayMap(array, iteratee) {
          var index = -1,
            length = array == null ? 0 : array.length,
            result = Array(length);
          while (++index < length) {
            result[index] = iteratee(array[index], index, array);
          }
          return result;
        }

        /**
         * Appends the elements of `values` to `array`.
         *
         * @private
         * @param {Array} array The array to modify.
         * @param {Array} values The values to append.
         * @returns {Array} Returns `array`.
         */
        function arrayPush(array, values) {
          var index = -1,
            length = values.length,
            offset = array.length;
          while (++index < length) {
            array[offset + index] = values[index];
          }
          return array;
        }

        /**
         * A specialized version of `_.reduce` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @param {*} [accumulator] The initial value.
         * @param {boolean} [initAccum] Specify using the first element of `array` as
         *  the initial value.
         * @returns {*} Returns the accumulated value.
         */
        function arrayReduce(array, iteratee, accumulator, initAccum) {
          var index = -1,
            length = array == null ? 0 : array.length;
          if (initAccum && length) {
            accumulator = array[++index];
          }
          while (++index < length) {
            accumulator = iteratee(accumulator, array[index], index, array);
          }
          return accumulator;
        }

        /**
         * A specialized version of `_.reduceRight` for arrays without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @param {*} [accumulator] The initial value.
         * @param {boolean} [initAccum] Specify using the last element of `array` as
         *  the initial value.
         * @returns {*} Returns the accumulated value.
         */
        function arrayReduceRight(array, iteratee, accumulator, initAccum) {
          var length = array == null ? 0 : array.length;
          if (initAccum && length) {
            accumulator = array[--length];
          }
          while (length--) {
            accumulator = iteratee(accumulator, array[length], length, array);
          }
          return accumulator;
        }

        /**
         * A specialized version of `_.some` for arrays without support for iteratee
         * shorthands.
         *
         * @private
         * @param {Array} [array] The array to iterate over.
         * @param {Function} predicate The function invoked per iteration.
         * @returns {boolean} Returns `true` if any element passes the predicate check,
         *  else `false`.
         */
        function arraySome(array, predicate) {
          var index = -1,
            length = array == null ? 0 : array.length;
          while (++index < length) {
            if (predicate(array[index], index, array)) {
              return true;
            }
          }
          return false;
        }

        /**
         * Gets the size of an ASCII `string`.
         *
         * @private
         * @param {string} string The string inspect.
         * @returns {number} Returns the string size.
         */
        var asciiSize = baseProperty('length');

        /**
         * Converts an ASCII `string` to an array.
         *
         * @private
         * @param {string} string The string to convert.
         * @returns {Array} Returns the converted array.
         */
        function asciiToArray(string) {
          return string.split('');
        }

        /**
         * Splits an ASCII `string` into an array of its words.
         *
         * @private
         * @param {string} The string to inspect.
         * @returns {Array} Returns the words of `string`.
         */
        function asciiWords(string) {
          return string.match(reAsciiWord) || [];
        }

        /**
         * The base implementation of methods like `_.findKey` and `_.findLastKey`,
         * without support for iteratee shorthands, which iterates over `collection`
         * using `eachFunc`.
         *
         * @private
         * @param {Array|Object} collection The collection to inspect.
         * @param {Function} predicate The function invoked per iteration.
         * @param {Function} eachFunc The function to iterate over `collection`.
         * @returns {*} Returns the found element or its key, else `undefined`.
         */
        function baseFindKey(collection, predicate, eachFunc) {
          var result;
          eachFunc(collection, function (value, key, collection) {
            if (predicate(value, key, collection)) {
              result = key;
              return false;
            }
          });
          return result;
        }

        /**
         * The base implementation of `_.findIndex` and `_.findLastIndex` without
         * support for iteratee shorthands.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {Function} predicate The function invoked per iteration.
         * @param {number} fromIndex The index to search from.
         * @param {boolean} [fromRight] Specify iterating from right to left.
         * @returns {number} Returns the index of the matched value, else `-1`.
         */
        function baseFindIndex(array, predicate, fromIndex, fromRight) {
          var length = array.length,
            index = fromIndex + (fromRight ? 1 : -1);
          while (fromRight ? index-- : ++index < length) {
            if (predicate(array[index], index, array)) {
              return index;
            }
          }
          return -1;
        }

        /**
         * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {*} value The value to search for.
         * @param {number} fromIndex The index to search from.
         * @returns {number} Returns the index of the matched value, else `-1`.
         */
        function baseIndexOf(array, value, fromIndex) {
          return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
        }

        /**
         * This function is like `baseIndexOf` except that it accepts a comparator.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {*} value The value to search for.
         * @param {number} fromIndex The index to search from.
         * @param {Function} comparator The comparator invoked per element.
         * @returns {number} Returns the index of the matched value, else `-1`.
         */
        function baseIndexOfWith(array, value, fromIndex, comparator) {
          var index = fromIndex - 1,
            length = array.length;
          while (++index < length) {
            if (comparator(array[index], value)) {
              return index;
            }
          }
          return -1;
        }

        /**
         * The base implementation of `_.isNaN` without support for number objects.
         *
         * @private
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
         */
        function baseIsNaN(value) {
          return value !== value;
        }

        /**
         * The base implementation of `_.mean` and `_.meanBy` without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} array The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {number} Returns the mean.
         */
        function baseMean(array, iteratee) {
          var length = array == null ? 0 : array.length;
          return length ? baseSum(array, iteratee) / length : NAN;
        }

        /**
         * The base implementation of `_.property` without support for deep paths.
         *
         * @private
         * @param {string} key The key of the property to get.
         * @returns {Function} Returns the new accessor function.
         */
        function baseProperty(key) {
          return function (object) {
            return object == null ? undefined : object[key];
          };
        }

        /**
         * The base implementation of `_.propertyOf` without support for deep paths.
         *
         * @private
         * @param {Object} object The object to query.
         * @returns {Function} Returns the new accessor function.
         */
        function basePropertyOf(object) {
          return function (key) {
            return object == null ? undefined : object[key];
          };
        }

        /**
         * The base implementation of `_.reduce` and `_.reduceRight`, without support
         * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
         *
         * @private
         * @param {Array|Object} collection The collection to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @param {*} accumulator The initial value.
         * @param {boolean} initAccum Specify using the first or last element of
         *  `collection` as the initial value.
         * @param {Function} eachFunc The function to iterate over `collection`.
         * @returns {*} Returns the accumulated value.
         */
        function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
          eachFunc(collection, function (value, index, collection) {
            accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
          });
          return accumulator;
        }

        /**
         * The base implementation of `_.sortBy` which uses `comparer` to define the
         * sort order of `array` and replaces criteria objects with their corresponding
         * values.
         *
         * @private
         * @param {Array} array The array to sort.
         * @param {Function} comparer The function to define sort order.
         * @returns {Array} Returns `array`.
         */
        function baseSortBy(array, comparer) {
          var length = array.length;
          array.sort(comparer);
          while (length--) {
            array[length] = array[length].value;
          }
          return array;
        }

        /**
         * The base implementation of `_.sum` and `_.sumBy` without support for
         * iteratee shorthands.
         *
         * @private
         * @param {Array} array The array to iterate over.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {number} Returns the sum.
         */
        function baseSum(array, iteratee) {
          var result,
            index = -1,
            length = array.length;
          while (++index < length) {
            var current = iteratee(array[index]);
            if (current !== undefined) {
              result = result === undefined ? current : result + current;
            }
          }
          return result;
        }

        /**
         * The base implementation of `_.times` without support for iteratee shorthands
         * or max array length checks.
         *
         * @private
         * @param {number} n The number of times to invoke `iteratee`.
         * @param {Function} iteratee The function invoked per iteration.
         * @returns {Array} Returns the array of results.
         */
        function baseTimes(n, iteratee) {
          var index = -1,
            result = Array(n);
          while (++index < n) {
            result[index] = iteratee(index);
          }
          return result;
        }

        /**
         * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
         * of key-value pairs for `object` corresponding to the property names of `props`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {Array} props The property names to get values for.
         * @returns {Object} Returns the key-value pairs.
         */
        function baseToPairs(object, props) {
          return arrayMap(props, function (key) {
            return [key, object[key]];
          });
        }

        /**
         * The base implementation of `_.trim`.
         *
         * @private
         * @param {string} string The string to trim.
         * @returns {string} Returns the trimmed string.
         */
        function baseTrim(string) {
          return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string;
        }

        /**
         * The base implementation of `_.unary` without support for storing metadata.
         *
         * @private
         * @param {Function} func The function to cap arguments for.
         * @returns {Function} Returns the new capped function.
         */
        function baseUnary(func) {
          return function (value) {
            return func(value);
          };
        }

        /**
         * The base implementation of `_.values` and `_.valuesIn` which creates an
         * array of `object` property values corresponding to the property names
         * of `props`.
         *
         * @private
         * @param {Object} object The object to query.
         * @param {Array} props The property names to get values for.
         * @returns {Object} Returns the array of property values.
         */
        function baseValues(object, props) {
          return arrayMap(props, function (key) {
            return object[key];
          });
        }

        /**
         * Checks if a `cache` value for `key` exists.
         *
         * @private
         * @param {Object} cache The cache to query.
         * @param {string} key The key of the entry to check.
         * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
         */
        function cacheHas(cache, key) {
          return cache.has(key);
        }

        /**
         * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
         * that is not found in the character symbols.
         *
         * @private
         * @param {Array} strSymbols The string symbols to inspect.
         * @param {Array} chrSymbols The character symbols to find.
         * @returns {number} Returns the index of the first unmatched string symbol.
         */
        function charsStartIndex(strSymbols, chrSymbols) {
          var index = -1,
            length = strSymbols.length;
          while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
          return index;
        }

        /**
         * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
         * that is not found in the character symbols.
         *
         * @private
         * @param {Array} strSymbols The string symbols to inspect.
         * @param {Array} chrSymbols The character symbols to find.
         * @returns {number} Returns the index of the last unmatched string symbol.
         */
        function charsEndIndex(strSymbols, chrSymbols) {
          var index = strSymbols.length;
          while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
          return index;
        }

        /**
         * Gets the number of `placeholder` occurrences in `array`.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {*} placeholder The placeholder to search for.
         * @returns {number} Returns the placeholder count.
         */
        function countHolders(array, placeholder) {
          var length = array.length,
            result = 0;
          while (length--) {
            if (array[length] === placeholder) {
              ++result;
            }
          }
          return result;
        }

        /**
         * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
         * letters to basic Latin letters.
         *
         * @private
         * @param {string} letter The matched letter to deburr.
         * @returns {string} Returns the deburred letter.
         */
        var deburrLetter = basePropertyOf(deburredLetters);

        /**
         * Used by `_.escape` to convert characters to HTML entities.
         *
         * @private
         * @param {string} chr The matched character to escape.
         * @returns {string} Returns the escaped character.
         */
        var escapeHtmlChar = basePropertyOf(htmlEscapes);

        /**
         * Used by `_.template` to escape characters for inclusion in compiled string literals.
         *
         * @private
         * @param {string} chr The matched character to escape.
         * @returns {string} Returns the escaped character.
         */
        function escapeStringChar(chr) {
          return '\\' + stringEscapes[chr];
        }

        /**
         * Gets the value at `key` of `object`.
         *
         * @private
         * @param {Object} [object] The object to query.
         * @param {string} key The key of the property to get.
         * @returns {*} Returns the property value.
         */
        function getValue(object, key) {
          return object == null ? undefined : object[key];
        }

        /**
         * Checks if `string` contains Unicode symbols.
         *
         * @private
         * @param {string} string The string to inspect.
         * @returns {boolean} Returns `true` if a symbol is found, else `false`.
         */
        function hasUnicode(string) {
          return reHasUnicode.test(string);
        }

        /**
         * Checks if `string` contains a word composed of Unicode symbols.
         *
         * @private
         * @param {string} string The string to inspect.
         * @returns {boolean} Returns `true` if a word is found, else `false`.
         */
        function hasUnicodeWord(string) {
          return reHasUnicodeWord.test(string);
        }

        /**
         * Converts `iterator` to an array.
         *
         * @private
         * @param {Object} iterator The iterator to convert.
         * @returns {Array} Returns the converted array.
         */
        function iteratorToArray(iterator) {
          var data,
            result = [];
          while (!(data = iterator.next()).done) {
            result.push(data.value);
          }
          return result;
        }

        /**
         * Converts `map` to its key-value pairs.
         *
         * @private
         * @param {Object} map The map to convert.
         * @returns {Array} Returns the key-value pairs.
         */
        function mapToArray(map) {
          var index = -1,
            result = Array(map.size);
          map.forEach(function (value, key) {
            result[++index] = [key, value];
          });
          return result;
        }

        /**
         * Creates a unary function that invokes `func` with its argument transformed.
         *
         * @private
         * @param {Function} func The function to wrap.
         * @param {Function} transform The argument transform.
         * @returns {Function} Returns the new function.
         */
        function overArg(func, transform) {
          return function (arg) {
            return func(transform(arg));
          };
        }

        /**
         * Replaces all `placeholder` elements in `array` with an internal placeholder
         * and returns an array of their indexes.
         *
         * @private
         * @param {Array} array The array to modify.
         * @param {*} placeholder The placeholder to replace.
         * @returns {Array} Returns the new array of placeholder indexes.
         */
        function replaceHolders(array, placeholder) {
          var index = -1,
            length = array.length,
            resIndex = 0,
            result = [];
          while (++index < length) {
            var value = array[index];
            if (value === placeholder || value === PLACEHOLDER) {
              array[index] = PLACEHOLDER;
              result[resIndex++] = index;
            }
          }
          return result;
        }

        /**
         * Converts `set` to an array of its values.
         *
         * @private
         * @param {Object} set The set to convert.
         * @returns {Array} Returns the values.
         */
        function setToArray(set) {
          var index = -1,
            result = Array(set.size);
          set.forEach(function (value) {
            result[++index] = value;
          });
          return result;
        }

        /**
         * Converts `set` to its value-value pairs.
         *
         * @private
         * @param {Object} set The set to convert.
         * @returns {Array} Returns the value-value pairs.
         */
        function setToPairs(set) {
          var index = -1,
            result = Array(set.size);
          set.forEach(function (value) {
            result[++index] = [value, value];
          });
          return result;
        }

        /**
         * A specialized version of `_.indexOf` which performs strict equality
         * comparisons of values, i.e. `===`.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {*} value The value to search for.
         * @param {number} fromIndex The index to search from.
         * @returns {number} Returns the index of the matched value, else `-1`.
         */
        function strictIndexOf(array, value, fromIndex) {
          var index = fromIndex - 1,
            length = array.length;
          while (++index < length) {
            if (array[index] === value) {
              return index;
            }
          }
          return -1;
        }

        /**
         * A specialized version of `_.lastIndexOf` which performs strict equality
         * comparisons of values, i.e. `===`.
         *
         * @private
         * @param {Array} array The array to inspect.
         * @param {*} value The value to search for.
         * @param {number} fromIndex The index to search from.
         * @returns {number} Returns the index of the matched value, else `-1`.
         */
        function strictLastIndexOf(array, value, fromIndex) {
          var index = fromIndex + 1;
          while (index--) {
            if (array[index] === value) {
              return index;
            }
          }
          return index;
        }

        /**
         * Gets the number of symbols in `string`.
         *
         * @private
         * @param {string} string The string to inspect.
         * @returns {number} Returns the string size.
         */
        function stringSize(string) {
          return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
        }

        /**
         * Converts `string` to an array.
         *
         * @private
         * @param {string} string The string to convert.
         * @returns {Array} Returns the converted array.
         */
        function stringToArray(string) {
          return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
        }

        /**
         * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
         * character of `string`.
         *
         * @private
         * @param {string} string The string to inspect.
         * @returns {number} Returns the index of the last non-whitespace character.
         */
        function trimmedEndIndex(string) {
          var index = string.length;
          while (index-- && reWhitespace.test(string.charAt(index))) {}
          return index;
        }

        /**
         * Used by `_.unescape` to convert HTML entities to characters.
         *
         * @private
         * @param {string} chr The matched character to unescape.
         * @returns {string} Returns the unescaped character.
         */
        var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

        /**
         * Gets the size of a Unicode `string`.
         *
         * @private
         * @param {string} string The string inspect.
         * @returns {number} Returns the string size.
         */
        function unicodeSize(string) {
          var result = reUnicode.lastIndex = 0;
          while (reUnicode.test(string)) {
            ++result;
          }
          return result;
        }

        /**
         * Converts a Unicode `string` to an array.
         *
         * @private
         * @param {string} string The string to convert.
         * @returns {Array} Returns the converted array.
         */
        function unicodeToArray(string) {
          return string.match(reUnicode) || [];
        }

        /**
         * Splits a Unicode `string` into an array of its words.
         *
         * @private
         * @param {string} The string to inspect.
         * @returns {Array} Returns the words of `string`.
         */
        function unicodeWords(string) {
          return string.match(reUnicodeWord) || [];
        }

        /*--------------------------------------------------------------------------*/

        /**
         * Create a new pristine `lodash` function using the `context` object.
         *
         * @static
         * @memberOf _
         * @since 1.1.0
         * @category Util
         * @param {Object} [context=root] The context object.
         * @returns {Function} Returns a new `lodash` function.
         * @example
         *
         * _.mixin({ 'foo': _.constant('foo') });
         *
         * var lodash = _.runInContext();
         * lodash.mixin({ 'bar': lodash.constant('bar') });
         *
         * _.isFunction(_.foo);
         * // => true
         * _.isFunction(_.bar);
         * // => false
         *
         * lodash.isFunction(lodash.foo);
         * // => false
         * lodash.isFunction(lodash.bar);
         * // => true
         *
         * // Create a suped-up `defer` in Node.js.
         * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
         */
        var runInContext = function runInContext(context) {
          context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

          /** Built-in constructor references. */
          var Array = context.Array,
            Date = context.Date,
            Error = context.Error,
            Function = context.Function,
            Math = context.Math,
            Object = context.Object,
            RegExp = context.RegExp,
            String = context.String,
            TypeError = context.TypeError;

          /** Used for built-in method references. */
          var arrayProto = Array.prototype,
            funcProto = Function.prototype,
            objectProto = Object.prototype;

          /** Used to detect overreaching core-js shims. */
          var coreJsData = context['__core-js_shared__'];

          /** Used to resolve the decompiled source of functions. */
          var funcToString = funcProto.toString;

          /** Used to check objects for own properties. */
          var hasOwnProperty = objectProto.hasOwnProperty;

          /** Used to generate unique IDs. */
          var idCounter = 0;

          /** Used to detect methods masquerading as native. */
          var maskSrcKey = function () {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
            return uid ? 'Symbol(src)_1.' + uid : '';
          }();

          /**
           * Used to resolve the
           * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
           * of values.
           */
          var nativeObjectToString = objectProto.toString;

          /** Used to infer the `Object` constructor. */
          var objectCtorString = funcToString.call(Object);

          /** Used to restore the original `_` reference in `_.noConflict`. */
          var oldDash = root._;

          /** Used to detect if a method is native. */
          var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

          /** Built-in value references. */
          var Buffer = moduleExports ? context.Buffer : undefined,
            Symbol = context.Symbol,
            Uint8Array = context.Uint8Array,
            allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
            getPrototype = overArg(Object.getPrototypeOf, Object),
            objectCreate = Object.create,
            propertyIsEnumerable = objectProto.propertyIsEnumerable,
            splice = arrayProto.splice,
            spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
            symIterator = Symbol ? Symbol.iterator : undefined,
            symToStringTag = Symbol ? Symbol.toStringTag : undefined;
          var defineProperty = function () {
            try {
              var func = getNative(Object, 'defineProperty');
              func({}, '', {});
              return func;
            } catch (e) {}
          }();

          /** Mocked built-ins. */
          var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
            ctxNow = Date && Date.now !== root.Date.now && Date.now,
            ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

          /* Built-in method references for those with the same name as other `lodash` methods. */
          var nativeCeil = Math.ceil,
            nativeFloor = Math.floor,
            nativeGetSymbols = Object.getOwnPropertySymbols,
            nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
            nativeIsFinite = context.isFinite,
            nativeJoin = arrayProto.join,
            nativeKeys = overArg(Object.keys, Object),
            nativeMax = Math.max,
            nativeMin = Math.min,
            nativeNow = Date.now,
            nativeParseInt = context.parseInt,
            nativeRandom = Math.random,
            nativeReverse = arrayProto.reverse;

          /* Built-in method references that are verified to be native. */
          var DataView = getNative(context, 'DataView'),
            Map = getNative(context, 'Map'),
            Promise = getNative(context, 'Promise'),
            Set = getNative(context, 'Set'),
            WeakMap = getNative(context, 'WeakMap'),
            nativeCreate = getNative(Object, 'create');

          /** Used to store function metadata. */
          var metaMap = WeakMap && new WeakMap();

          /** Used to lookup unminified function names. */
          var realNames = {};

          /** Used to detect maps, sets, and weakmaps. */
          var dataViewCtorString = toSource(DataView),
            mapCtorString = toSource(Map),
            promiseCtorString = toSource(Promise),
            setCtorString = toSource(Set),
            weakMapCtorString = toSource(WeakMap);

          /** Used to convert symbols to primitives and strings. */
          var symbolProto = Symbol ? Symbol.prototype : undefined,
            symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
            symbolToString = symbolProto ? symbolProto.toString : undefined;

          /*------------------------------------------------------------------------*/

          /**
           * Creates a `lodash` object which wraps `value` to enable implicit method
           * chain sequences. Methods that operate on and return arrays, collections,
           * and functions can be chained together. Methods that retrieve a single value
           * or may return a primitive value will automatically end the chain sequence
           * and return the unwrapped value. Otherwise, the value must be unwrapped
           * with `_#value`.
           *
           * Explicit chain sequences, which must be unwrapped with `_#value`, may be
           * enabled using `_.chain`.
           *
           * The execution of chained methods is lazy, that is, it's deferred until
           * `_#value` is implicitly or explicitly called.
           *
           * Lazy evaluation allows several methods to support shortcut fusion.
           * Shortcut fusion is an optimization to merge iteratee calls; this avoids
           * the creation of intermediate arrays and can greatly reduce the number of
           * iteratee executions. Sections of a chain sequence qualify for shortcut
           * fusion if the section is applied to an array and iteratees accept only
           * one argument. The heuristic for whether a section qualifies for shortcut
           * fusion is subject to change.
           *
           * Chaining is supported in custom builds as long as the `_#value` method is
           * directly or indirectly included in the build.
           *
           * In addition to lodash methods, wrappers have `Array` and `String` methods.
           *
           * The wrapper `Array` methods are:
           * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
           *
           * The wrapper `String` methods are:
           * `replace` and `split`
           *
           * The wrapper methods that support shortcut fusion are:
           * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
           * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
           * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
           *
           * The chainable wrapper methods are:
           * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
           * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
           * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
           * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
           * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
           * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
           * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
           * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
           * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
           * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
           * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
           * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
           * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
           * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
           * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
           * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
           * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
           * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
           * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
           * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
           * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
           * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
           * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
           * `zipObject`, `zipObjectDeep`, and `zipWith`
           *
           * The wrapper methods that are **not** chainable by default are:
           * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
           * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
           * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
           * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
           * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
           * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
           * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
           * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
           * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
           * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
           * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
           * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
           * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
           * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
           * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
           * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
           * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
           * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
           * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
           * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
           * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
           * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
           * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
           * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
           * `upperFirst`, `value`, and `words`
           *
           * @name _
           * @constructor
           * @category Seq
           * @param {*} value The value to wrap in a `lodash` instance.
           * @returns {Object} Returns the new `lodash` wrapper instance.
           * @example
           *
           * function square(n) {
           *   return n * n;
           * }
           *
           * var wrapped = _([1, 2, 3]);
           *
           * // Returns an unwrapped value.
           * wrapped.reduce(_.add);
           * // => 6
           *
           * // Returns a wrapped value.
           * var squares = wrapped.map(square);
           *
           * _.isArray(squares);
           * // => false
           *
           * _.isArray(squares.value());
           * // => true
           */
          function lodash(value) {
            if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
              if (value instanceof LodashWrapper) {
                return value;
              }
              if (hasOwnProperty.call(value, '__wrapped__')) {
                return wrapperClone(value);
              }
            }
            return new LodashWrapper(value);
          }

          /**
           * The base implementation of `_.create` without support for assigning
           * properties to the created object.
           *
           * @private
           * @param {Object} proto The object to inherit from.
           * @returns {Object} Returns the new object.
           */
          var baseCreate = function () {
            function object() {}
            return function (proto) {
              if (!isObject(proto)) {
                return {};
              }
              if (objectCreate) {
                return objectCreate(proto);
              }
              object.prototype = proto;
              var result = new object();
              object.prototype = undefined;
              return result;
            };
          }();

          /**
           * The function whose prototype chain sequence wrappers inherit from.
           *
           * @private
           */
          function baseLodash() {
            // No operation performed.
          }

          /**
           * The base constructor for creating `lodash` wrapper objects.
           *
           * @private
           * @param {*} value The value to wrap.
           * @param {boolean} [chainAll] Enable explicit method chain sequences.
           */
          function LodashWrapper(value, chainAll) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__chain__ = !!chainAll;
            this.__index__ = 0;
            this.__values__ = undefined;
          }

          /**
           * By default, the template delimiters used by lodash are like those in
           * embedded Ruby (ERB) as well as ES2015 template strings. Change the
           * following template settings to use alternative delimiters.
           *
           * @static
           * @memberOf _
           * @type {Object}
           */
          lodash.templateSettings = {
            /**
             * Used to detect `data` property values to be HTML-escaped.
             *
             * @memberOf _.templateSettings
             * @type {RegExp}
             */
            'escape': reEscape,
            /**
             * Used to detect code to be evaluated.
             *
             * @memberOf _.templateSettings
             * @type {RegExp}
             */
            'evaluate': reEvaluate,
            /**
             * Used to detect `data` property values to inject.
             *
             * @memberOf _.templateSettings
             * @type {RegExp}
             */
            'interpolate': reInterpolate,
            /**
             * Used to reference the data object in the template text.
             *
             * @memberOf _.templateSettings
             * @type {string}
             */
            'variable': '',
            /**
             * Used to import variables into the compiled template.
             *
             * @memberOf _.templateSettings
             * @type {Object}
             */
            'imports': {
              /**
               * A reference to the `lodash` function.
               *
               * @memberOf _.templateSettings.imports
               * @type {Function}
               */
              '_': lodash
            }
          };

          // Ensure wrappers are instances of `baseLodash`.
          lodash.prototype = baseLodash.prototype;
          lodash.prototype.constructor = lodash;
          LodashWrapper.prototype = baseCreate(baseLodash.prototype);
          LodashWrapper.prototype.constructor = LodashWrapper;

          /*------------------------------------------------------------------------*/

          /**
           * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
           *
           * @private
           * @constructor
           * @param {*} value The value to wrap.
           */
          function LazyWrapper(value) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__dir__ = 1;
            this.__filtered__ = false;
            this.__iteratees__ = [];
            this.__takeCount__ = MAX_ARRAY_LENGTH;
            this.__views__ = [];
          }

          /**
           * Creates a clone of the lazy wrapper object.
           *
           * @private
           * @name clone
           * @memberOf LazyWrapper
           * @returns {Object} Returns the cloned `LazyWrapper` object.
           */
          function lazyClone() {
            var result = new LazyWrapper(this.__wrapped__);
            result.__actions__ = copyArray(this.__actions__);
            result.__dir__ = this.__dir__;
            result.__filtered__ = this.__filtered__;
            result.__iteratees__ = copyArray(this.__iteratees__);
            result.__takeCount__ = this.__takeCount__;
            result.__views__ = copyArray(this.__views__);
            return result;
          }

          /**
           * Reverses the direction of lazy iteration.
           *
           * @private
           * @name reverse
           * @memberOf LazyWrapper
           * @returns {Object} Returns the new reversed `LazyWrapper` object.
           */
          function lazyReverse() {
            if (this.__filtered__) {
              var result = new LazyWrapper(this);
              result.__dir__ = -1;
              result.__filtered__ = true;
            } else {
              result = this.clone();
              result.__dir__ *= -1;
            }
            return result;
          }

          /**
           * Extracts the unwrapped value from its lazy wrapper.
           *
           * @private
           * @name value
           * @memberOf LazyWrapper
           * @returns {*} Returns the unwrapped value.
           */
          function lazyValue() {
            var array = this.__wrapped__.value(),
              dir = this.__dir__,
              isArr = isArray(array),
              isRight = dir < 0,
              arrLength = isArr ? array.length : 0,
              view = getView(0, arrLength, this.__views__),
              start = view.start,
              end = view.end,
              length = end - start,
              index = isRight ? end : start - 1,
              iteratees = this.__iteratees__,
              iterLength = iteratees.length,
              resIndex = 0,
              takeCount = nativeMin(length, this.__takeCount__);
            if (!isArr || !isRight && arrLength == length && takeCount == length) {
              return baseWrapperValue(array, this.__actions__);
            }
            var result = [];
            outer: while (length-- && resIndex < takeCount) {
              index += dir;
              var iterIndex = -1,
                value = array[index];
              while (++iterIndex < iterLength) {
                var data = iteratees[iterIndex],
                  iteratee = data.iteratee,
                  type = data.type,
                  computed = iteratee(value);
                if (type == LAZY_MAP_FLAG) {
                  value = computed;
                } else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) {
                    continue outer;
                  } else {
                    break outer;
                  }
                }
              }
              result[resIndex++] = value;
            }
            return result;
          }

          // Ensure `LazyWrapper` is an instance of `baseLodash`.
          LazyWrapper.prototype = baseCreate(baseLodash.prototype);
          LazyWrapper.prototype.constructor = LazyWrapper;

          /*------------------------------------------------------------------------*/

          /**
           * Creates a hash object.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */
          function Hash(entries) {
            var index = -1,
              length = entries == null ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }

          /**
           * Removes all key-value entries from the hash.
           *
           * @private
           * @name clear
           * @memberOf Hash
           */
          function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
            this.size = 0;
          }

          /**
           * Removes `key` and its value from the hash.
           *
           * @private
           * @name delete
           * @memberOf Hash
           * @param {Object} hash The hash to modify.
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */
          function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key];
            this.size -= result ? 1 : 0;
            return result;
          }

          /**
           * Gets the hash value for `key`.
           *
           * @private
           * @name get
           * @memberOf Hash
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */
          function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
              var result = data[key];
              return result === HASH_UNDEFINED ? undefined : result;
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined;
          }

          /**
           * Checks if a hash value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf Hash
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */
          function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
          }

          /**
           * Sets the hash `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf Hash
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the hash instance.
           */
          function hashSet(key, value) {
            var data = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
            return this;
          }

          // Add methods to `Hash`.
          Hash.prototype.clear = hashClear;
          Hash.prototype['delete'] = hashDelete;
          Hash.prototype.get = hashGet;
          Hash.prototype.has = hashHas;
          Hash.prototype.set = hashSet;

          /*------------------------------------------------------------------------*/

          /**
           * Creates an list cache object.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */
          function ListCache(entries) {
            var index = -1,
              length = entries == null ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }

          /**
           * Removes all key-value entries from the list cache.
           *
           * @private
           * @name clear
           * @memberOf ListCache
           */
          function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
          }

          /**
           * Removes `key` and its value from the list cache.
           *
           * @private
           * @name delete
           * @memberOf ListCache
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */
          function listCacheDelete(key) {
            var data = this.__data__,
              index = assocIndexOf(data, key);
            if (index < 0) {
              return false;
            }
            var lastIndex = data.length - 1;
            if (index == lastIndex) {
              data.pop();
            } else {
              splice.call(data, index, 1);
            }
            --this.size;
            return true;
          }

          /**
           * Gets the list cache value for `key`.
           *
           * @private
           * @name get
           * @memberOf ListCache
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */
          function listCacheGet(key) {
            var data = this.__data__,
              index = assocIndexOf(data, key);
            return index < 0 ? undefined : data[index][1];
          }

          /**
           * Checks if a list cache value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf ListCache
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */
          function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
          }

          /**
           * Sets the list cache `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf ListCache
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the list cache instance.
           */
          function listCacheSet(key, value) {
            var data = this.__data__,
              index = assocIndexOf(data, key);
            if (index < 0) {
              ++this.size;
              data.push([key, value]);
            } else {
              data[index][1] = value;
            }
            return this;
          }

          // Add methods to `ListCache`.
          ListCache.prototype.clear = listCacheClear;
          ListCache.prototype['delete'] = listCacheDelete;
          ListCache.prototype.get = listCacheGet;
          ListCache.prototype.has = listCacheHas;
          ListCache.prototype.set = listCacheSet;

          /*------------------------------------------------------------------------*/

          /**
           * Creates a map cache object to store key-value pairs.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */
          function MapCache(entries) {
            var index = -1,
              length = entries == null ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }

          /**
           * Removes all key-value entries from the map.
           *
           * @private
           * @name clear
           * @memberOf MapCache
           */
          function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
              'hash': new Hash(),
              'map': new (Map || ListCache)(),
              'string': new Hash()
            };
          }

          /**
           * Removes `key` and its value from the map.
           *
           * @private
           * @name delete
           * @memberOf MapCache
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */
          function mapCacheDelete(key) {
            var result = getMapData(this, key)['delete'](key);
            this.size -= result ? 1 : 0;
            return result;
          }

          /**
           * Gets the map value for `key`.
           *
           * @private
           * @name get
           * @memberOf MapCache
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */
          function mapCacheGet(key) {
            return getMapData(this, key).get(key);
          }

          /**
           * Checks if a map value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf MapCache
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */
          function mapCacheHas(key) {
            return getMapData(this, key).has(key);
          }

          /**
           * Sets the map `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf MapCache
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the map cache instance.
           */
          function mapCacheSet(key, value) {
            var data = getMapData(this, key),
              size = data.size;
            data.set(key, value);
            this.size += data.size == size ? 0 : 1;
            return this;
          }

          // Add methods to `MapCache`.
          MapCache.prototype.clear = mapCacheClear;
          MapCache.prototype['delete'] = mapCacheDelete;
          MapCache.prototype.get = mapCacheGet;
          MapCache.prototype.has = mapCacheHas;
          MapCache.prototype.set = mapCacheSet;

          /*------------------------------------------------------------------------*/

          /**
           *
           * Creates an array cache object to store unique values.
           *
           * @private
           * @constructor
           * @param {Array} [values] The values to cache.
           */
          function SetCache(values) {
            var index = -1,
              length = values == null ? 0 : values.length;
            this.__data__ = new MapCache();
            while (++index < length) {
              this.add(values[index]);
            }
          }

          /**
           * Adds `value` to the array cache.
           *
           * @private
           * @name add
           * @memberOf SetCache
           * @alias push
           * @param {*} value The value to cache.
           * @returns {Object} Returns the cache instance.
           */
          function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
          }

          /**
           * Checks if `value` is in the array cache.
           *
           * @private
           * @name has
           * @memberOf SetCache
           * @param {*} value The value to search for.
           * @returns {number} Returns `true` if `value` is found, else `false`.
           */
          function setCacheHas(value) {
            return this.__data__.has(value);
          }

          // Add methods to `SetCache`.
          SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
          SetCache.prototype.has = setCacheHas;

          /*------------------------------------------------------------------------*/

          /**
           * Creates a stack cache object to store key-value pairs.
           *
           * @private
           * @constructor
           * @param {Array} [entries] The key-value pairs to cache.
           */
          function Stack(entries) {
            var data = this.__data__ = new ListCache(entries);
            this.size = data.size;
          }

          /**
           * Removes all key-value entries from the stack.
           *
           * @private
           * @name clear
           * @memberOf Stack
           */
          function stackClear() {
            this.__data__ = new ListCache();
            this.size = 0;
          }

          /**
           * Removes `key` and its value from the stack.
           *
           * @private
           * @name delete
           * @memberOf Stack
           * @param {string} key The key of the value to remove.
           * @returns {boolean} Returns `true` if the entry was removed, else `false`.
           */
          function stackDelete(key) {
            var data = this.__data__,
              result = data['delete'](key);
            this.size = data.size;
            return result;
          }

          /**
           * Gets the stack value for `key`.
           *
           * @private
           * @name get
           * @memberOf Stack
           * @param {string} key The key of the value to get.
           * @returns {*} Returns the entry value.
           */
          function stackGet(key) {
            return this.__data__.get(key);
          }

          /**
           * Checks if a stack value for `key` exists.
           *
           * @private
           * @name has
           * @memberOf Stack
           * @param {string} key The key of the entry to check.
           * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
           */
          function stackHas(key) {
            return this.__data__.has(key);
          }

          /**
           * Sets the stack `key` to `value`.
           *
           * @private
           * @name set
           * @memberOf Stack
           * @param {string} key The key of the value to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns the stack cache instance.
           */
          function stackSet(key, value) {
            var data = this.__data__;
            if (data instanceof ListCache) {
              var pairs = data.__data__;
              if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                pairs.push([key, value]);
                this.size = ++data.size;
                return this;
              }
              data = this.__data__ = new MapCache(pairs);
            }
            data.set(key, value);
            this.size = data.size;
            return this;
          }

          // Add methods to `Stack`.
          Stack.prototype.clear = stackClear;
          Stack.prototype['delete'] = stackDelete;
          Stack.prototype.get = stackGet;
          Stack.prototype.has = stackHas;
          Stack.prototype.set = stackSet;

          /*------------------------------------------------------------------------*/

          /**
           * Creates an array of the enumerable property names of the array-like `value`.
           *
           * @private
           * @param {*} value The value to query.
           * @param {boolean} inherited Specify returning inherited property names.
           * @returns {Array} Returns the array of property names.
           */
          function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value),
              isArg = !isArr && isArguments(value),
              isBuff = !isArr && !isArg && isBuffer(value),
              isType = !isArr && !isArg && !isBuff && isTypedArray(value),
              skipIndexes = isArr || isArg || isBuff || isType,
              result = skipIndexes ? baseTimes(value.length, String) : [],
              length = result.length;
            for (var key in value) {
              if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (
              // Safari 9 has enumerable `arguments.length` in strict mode.
              key == 'length' ||
              // Node.js 0.10 has enumerable non-index properties on buffers.
              isBuff && (key == 'offset' || key == 'parent') ||
              // PhantomJS 2 has enumerable non-index properties on typed arrays.
              isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') ||
              // Skip index properties.
              isIndex(key, length)))) {
                result.push(key);
              }
            }
            return result;
          }

          /**
           * A specialized version of `_.sample` for arrays.
           *
           * @private
           * @param {Array} array The array to sample.
           * @returns {*} Returns the random element.
           */
          function arraySample(array) {
            var length = array.length;
            return length ? array[baseRandom(0, length - 1)] : undefined;
          }

          /**
           * A specialized version of `_.sampleSize` for arrays.
           *
           * @private
           * @param {Array} array The array to sample.
           * @param {number} n The number of elements to sample.
           * @returns {Array} Returns the random elements.
           */
          function arraySampleSize(array, n) {
            return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
          }

          /**
           * A specialized version of `_.shuffle` for arrays.
           *
           * @private
           * @param {Array} array The array to shuffle.
           * @returns {Array} Returns the new shuffled array.
           */
          function arrayShuffle(array) {
            return shuffleSelf(copyArray(array));
          }

          /**
           * This function is like `assignValue` except that it doesn't assign
           * `undefined` values.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {string} key The key of the property to assign.
           * @param {*} value The value to assign.
           */
          function assignMergeValue(object, key, value) {
            if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {
              baseAssignValue(object, key, value);
            }
          }

          /**
           * Assigns `value` to `key` of `object` if the existing value is not equivalent
           * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {string} key The key of the property to assign.
           * @param {*} value The value to assign.
           */
          function assignValue(object, key, value) {
            var objValue = object[key];
            if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
              baseAssignValue(object, key, value);
            }
          }

          /**
           * Gets the index at which the `key` is found in `array` of key-value pairs.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {*} key The key to search for.
           * @returns {number} Returns the index of the matched value, else `-1`.
           */
          function assocIndexOf(array, key) {
            var length = array.length;
            while (length--) {
              if (eq(array[length][0], key)) {
                return length;
              }
            }
            return -1;
          }

          /**
           * Aggregates elements of `collection` on `accumulator` with keys transformed
           * by `iteratee` and values set by `setter`.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} setter The function to set `accumulator` values.
           * @param {Function} iteratee The iteratee to transform keys.
           * @param {Object} accumulator The initial aggregated object.
           * @returns {Function} Returns `accumulator`.
           */
          function baseAggregator(collection, setter, iteratee, accumulator) {
            baseEach(collection, function (value, key, collection) {
              setter(accumulator, value, iteratee(value), collection);
            });
            return accumulator;
          }

          /**
           * The base implementation of `_.assign` without support for multiple sources
           * or `customizer` functions.
           *
           * @private
           * @param {Object} object The destination object.
           * @param {Object} source The source object.
           * @returns {Object} Returns `object`.
           */
          function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
          }

          /**
           * The base implementation of `_.assignIn` without support for multiple sources
           * or `customizer` functions.
           *
           * @private
           * @param {Object} object The destination object.
           * @param {Object} source The source object.
           * @returns {Object} Returns `object`.
           */
          function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object);
          }

          /**
           * The base implementation of `assignValue` and `assignMergeValue` without
           * value checks.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {string} key The key of the property to assign.
           * @param {*} value The value to assign.
           */
          function baseAssignValue(object, key, value) {
            if (key == '__proto__' && defineProperty) {
              defineProperty(object, key, {
                'configurable': true,
                'enumerable': true,
                'value': value,
                'writable': true
              });
            } else {
              object[key] = value;
            }
          }

          /**
           * The base implementation of `_.at` without support for individual paths.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {string[]} paths The property paths to pick.
           * @returns {Array} Returns the picked elements.
           */
          function baseAt(object, paths) {
            var index = -1,
              length = paths.length,
              result = Array(length),
              skip = object == null;
            while (++index < length) {
              result[index] = skip ? undefined : get(object, paths[index]);
            }
            return result;
          }

          /**
           * The base implementation of `_.clamp` which doesn't coerce arguments.
           *
           * @private
           * @param {number} number The number to clamp.
           * @param {number} [lower] The lower bound.
           * @param {number} upper The upper bound.
           * @returns {number} Returns the clamped number.
           */
          function baseClamp(number, lower, upper) {
            if (number === number) {
              if (upper !== undefined) {
                number = number <= upper ? number : upper;
              }
              if (lower !== undefined) {
                number = number >= lower ? number : lower;
              }
            }
            return number;
          }

          /**
           * The base implementation of `_.clone` and `_.cloneDeep` which tracks
           * traversed objects.
           *
           * @private
           * @param {*} value The value to clone.
           * @param {boolean} bitmask The bitmask flags.
           *  1 - Deep clone
           *  2 - Flatten inherited properties
           *  4 - Clone symbols
           * @param {Function} [customizer] The function to customize cloning.
           * @param {string} [key] The key of `value`.
           * @param {Object} [object] The parent object of `value`.
           * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
           * @returns {*} Returns the cloned value.
           */
          function baseClone(value, bitmask, customizer, key, object, stack) {
            var result,
              isDeep = bitmask & CLONE_DEEP_FLAG,
              isFlat = bitmask & CLONE_FLAT_FLAG,
              isFull = bitmask & CLONE_SYMBOLS_FLAG;
            if (customizer) {
              result = object ? customizer(value, key, object, stack) : customizer(value);
            }
            if (result !== undefined) {
              return result;
            }
            if (!isObject(value)) {
              return value;
            }
            var isArr = isArray(value);
            if (isArr) {
              result = initCloneArray(value);
              if (!isDeep) {
                return copyArray(value, result);
              }
            } else {
              var tag = getTag(value),
                isFunc = tag == funcTag || tag == genTag;
              if (isBuffer(value)) {
                return cloneBuffer(value, isDeep);
              }
              if (tag == objectTag || tag == argsTag || isFunc && !object) {
                result = isFlat || isFunc ? {} : initCloneObject(value);
                if (!isDeep) {
                  return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
                }
              } else {
                if (!cloneableTags[tag]) {
                  return object ? value : {};
                }
                result = initCloneByTag(value, tag, isDeep);
              }
            }
            // Check for circular references and return its corresponding clone.
            stack || (stack = new Stack());
            var stacked = stack.get(value);
            if (stacked) {
              return stacked;
            }
            stack.set(value, result);
            if (isSet(value)) {
              value.forEach(function (subValue) {
                result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
              });
            } else if (isMap(value)) {
              value.forEach(function (subValue, key) {
                result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
              });
            }
            var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
            var props = isArr ? undefined : keysFunc(value);
            arrayEach(props || value, function (subValue, key) {
              if (props) {
                key = subValue;
                subValue = value[key];
              }
              // Recursively populate clone (susceptible to call stack limits).
              assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
            });
            return result;
          }

          /**
           * The base implementation of `_.conforms` which doesn't clone `source`.
           *
           * @private
           * @param {Object} source The object of property predicates to conform to.
           * @returns {Function} Returns the new spec function.
           */
          function baseConforms(source) {
            var props = keys(source);
            return function (object) {
              return baseConformsTo(object, source, props);
            };
          }

          /**
           * The base implementation of `_.conformsTo` which accepts `props` to check.
           *
           * @private
           * @param {Object} object The object to inspect.
           * @param {Object} source The object of property predicates to conform to.
           * @returns {boolean} Returns `true` if `object` conforms, else `false`.
           */
          function baseConformsTo(object, source, props) {
            var length = props.length;
            if (object == null) {
              return !length;
            }
            object = Object(object);
            while (length--) {
              var key = props[length],
                predicate = source[key],
                value = object[key];
              if (value === undefined && !(key in object) || !predicate(value)) {
                return false;
              }
            }
            return true;
          }

          /**
           * The base implementation of `_.delay` and `_.defer` which accepts `args`
           * to provide to `func`.
           *
           * @private
           * @param {Function} func The function to delay.
           * @param {number} wait The number of milliseconds to delay invocation.
           * @param {Array} args The arguments to provide to `func`.
           * @returns {number|Object} Returns the timer id or timeout object.
           */
          function baseDelay(func, wait, args) {
            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            return setTimeout(function () {
              func.apply(undefined, args);
            }, wait);
          }

          /**
           * The base implementation of methods like `_.difference` without support
           * for excluding multiple arrays or iteratee shorthands.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {Array} values The values to exclude.
           * @param {Function} [iteratee] The iteratee invoked per element.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns the new array of filtered values.
           */
          function baseDifference(array, values, iteratee, comparator) {
            var index = -1,
              includes = arrayIncludes,
              isCommon = true,
              length = array.length,
              result = [],
              valuesLength = values.length;
            if (!length) {
              return result;
            }
            if (iteratee) {
              values = arrayMap(values, baseUnary(iteratee));
            }
            if (comparator) {
              includes = arrayIncludesWith;
              isCommon = false;
            } else if (values.length >= LARGE_ARRAY_SIZE) {
              includes = cacheHas;
              isCommon = false;
              values = new SetCache(values);
            }
            outer: while (++index < length) {
              var value = array[index],
                computed = iteratee == null ? value : iteratee(value);
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) {
                  if (values[valuesIndex] === computed) {
                    continue outer;
                  }
                }
                result.push(value);
              } else if (!includes(values, computed, comparator)) {
                result.push(value);
              }
            }
            return result;
          }

          /**
           * The base implementation of `_.forEach` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array|Object} Returns `collection`.
           */
          var baseEach = createBaseEach(baseForOwn);

          /**
           * The base implementation of `_.forEachRight` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array|Object} Returns `collection`.
           */
          var baseEachRight = createBaseEach(baseForOwnRight, true);

          /**
           * The base implementation of `_.every` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {boolean} Returns `true` if all elements pass the predicate check,
           *  else `false`
           */
          function baseEvery(collection, predicate) {
            var result = true;
            baseEach(collection, function (value, index, collection) {
              result = !!predicate(value, index, collection);
              return result;
            });
            return result;
          }

          /**
           * The base implementation of methods like `_.max` and `_.min` which accepts a
           * `comparator` to determine the extremum value.
           *
           * @private
           * @param {Array} array The array to iterate over.
           * @param {Function} iteratee The iteratee invoked per iteration.
           * @param {Function} comparator The comparator used to compare values.
           * @returns {*} Returns the extremum value.
           */
          function baseExtremum(array, iteratee, comparator) {
            var index = -1,
              length = array.length;
            while (++index < length) {
              var value = array[index],
                current = iteratee(value);
              if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {
                var computed = current,
                  result = value;
              }
            }
            return result;
          }

          /**
           * The base implementation of `_.fill` without an iteratee call guard.
           *
           * @private
           * @param {Array} array The array to fill.
           * @param {*} value The value to fill `array` with.
           * @param {number} [start=0] The start position.
           * @param {number} [end=array.length] The end position.
           * @returns {Array} Returns `array`.
           */
          function baseFill(array, value, start, end) {
            var length = array.length;
            start = toInteger(start);
            if (start < 0) {
              start = -start > length ? 0 : length + start;
            }
            end = end === undefined || end > length ? length : toInteger(end);
            if (end < 0) {
              end += length;
            }
            end = start > end ? 0 : toLength(end);
            while (start < end) {
              array[start++] = value;
            }
            return array;
          }

          /**
           * The base implementation of `_.filter` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {Array} Returns the new filtered array.
           */
          function baseFilter(collection, predicate) {
            var result = [];
            baseEach(collection, function (value, index, collection) {
              if (predicate(value, index, collection)) {
                result.push(value);
              }
            });
            return result;
          }

          /**
           * The base implementation of `_.flatten` with support for restricting flattening.
           *
           * @private
           * @param {Array} array The array to flatten.
           * @param {number} depth The maximum recursion depth.
           * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
           * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
           * @param {Array} [result=[]] The initial result value.
           * @returns {Array} Returns the new flattened array.
           */
          function baseFlatten(array, depth, predicate, isStrict, result) {
            var index = -1,
              length = array.length;
            predicate || (predicate = isFlattenable);
            result || (result = []);
            while (++index < length) {
              var value = array[index];
              if (depth > 0 && predicate(value)) {
                if (depth > 1) {
                  // Recursively flatten arrays (susceptible to call stack limits).
                  baseFlatten(value, depth - 1, predicate, isStrict, result);
                } else {
                  arrayPush(result, value);
                }
              } else if (!isStrict) {
                result[result.length] = value;
              }
            }
            return result;
          }

          /**
           * The base implementation of `baseForOwn` which iterates over `object`
           * properties returned by `keysFunc` and invokes `iteratee` for each property.
           * Iteratee functions may exit iteration early by explicitly returning `false`.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @param {Function} keysFunc The function to get the keys of `object`.
           * @returns {Object} Returns `object`.
           */
          var baseFor = createBaseFor();

          /**
           * This function is like `baseFor` except that it iterates over properties
           * in the opposite order.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @param {Function} keysFunc The function to get the keys of `object`.
           * @returns {Object} Returns `object`.
           */
          var baseForRight = createBaseFor(true);

          /**
           * The base implementation of `_.forOwn` without support for iteratee shorthands.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Object} Returns `object`.
           */
          function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys);
          }

          /**
           * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Object} Returns `object`.
           */
          function baseForOwnRight(object, iteratee) {
            return object && baseForRight(object, iteratee, keys);
          }

          /**
           * The base implementation of `_.functions` which creates an array of
           * `object` function property names filtered from `props`.
           *
           * @private
           * @param {Object} object The object to inspect.
           * @param {Array} props The property names to filter.
           * @returns {Array} Returns the function names.
           */
          function baseFunctions(object, props) {
            return arrayFilter(props, function (key) {
              return isFunction(object[key]);
            });
          }

          /**
           * The base implementation of `_.get` without support for default values.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Array|string} path The path of the property to get.
           * @returns {*} Returns the resolved value.
           */
          function baseGet(object, path) {
            path = castPath(path, object);
            var index = 0,
              length = path.length;
            while (object != null && index < length) {
              object = object[toKey(path[index++])];
            }
            return index && index == length ? object : undefined;
          }

          /**
           * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
           * `keysFunc` and `symbolsFunc` to get the enumerable property names and
           * symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Function} keysFunc The function to get the keys of `object`.
           * @param {Function} symbolsFunc The function to get the symbols of `object`.
           * @returns {Array} Returns the array of property names and symbols.
           */
          function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object);
            return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
          }

          /**
           * The base implementation of `getTag` without fallbacks for buggy environments.
           *
           * @private
           * @param {*} value The value to query.
           * @returns {string} Returns the `toStringTag`.
           */
          function baseGetTag(value) {
            if (value == null) {
              return value === undefined ? undefinedTag : nullTag;
            }
            return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
          }

          /**
           * The base implementation of `_.gt` which doesn't coerce arguments.
           *
           * @private
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if `value` is greater than `other`,
           *  else `false`.
           */
          function baseGt(value, other) {
            return value > other;
          }

          /**
           * The base implementation of `_.has` without support for deep paths.
           *
           * @private
           * @param {Object} [object] The object to query.
           * @param {Array|string} key The key to check.
           * @returns {boolean} Returns `true` if `key` exists, else `false`.
           */
          function baseHas(object, key) {
            return object != null && hasOwnProperty.call(object, key);
          }

          /**
           * The base implementation of `_.hasIn` without support for deep paths.
           *
           * @private
           * @param {Object} [object] The object to query.
           * @param {Array|string} key The key to check.
           * @returns {boolean} Returns `true` if `key` exists, else `false`.
           */
          function baseHasIn(object, key) {
            return object != null && key in Object(object);
          }

          /**
           * The base implementation of `_.inRange` which doesn't coerce arguments.
           *
           * @private
           * @param {number} number The number to check.
           * @param {number} start The start of the range.
           * @param {number} end The end of the range.
           * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
           */
          function baseInRange(number, start, end) {
            return number >= nativeMin(start, end) && number < nativeMax(start, end);
          }

          /**
           * The base implementation of methods like `_.intersection`, without support
           * for iteratee shorthands, that accepts an array of arrays to inspect.
           *
           * @private
           * @param {Array} arrays The arrays to inspect.
           * @param {Function} [iteratee] The iteratee invoked per element.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns the new array of shared values.
           */
          function baseIntersection(arrays, iteratee, comparator) {
            var includes = comparator ? arrayIncludesWith : arrayIncludes,
              length = arrays[0].length,
              othLength = arrays.length,
              othIndex = othLength,
              caches = Array(othLength),
              maxLength = Infinity,
              result = [];
            while (othIndex--) {
              var array = arrays[othIndex];
              if (othIndex && iteratee) {
                array = arrayMap(array, baseUnary(iteratee));
              }
              maxLength = nativeMin(array.length, maxLength);
              caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
            }
            array = arrays[0];
            var index = -1,
              seen = caches[0];
            outer: while (++index < length && result.length < maxLength) {
              var value = array[index],
                computed = iteratee ? iteratee(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
                    continue outer;
                  }
                }
                if (seen) {
                  seen.push(computed);
                }
                result.push(value);
              }
            }
            return result;
          }

          /**
           * The base implementation of `_.invert` and `_.invertBy` which inverts
           * `object` with values transformed by `iteratee` and set by `setter`.
           *
           * @private
           * @param {Object} object The object to iterate over.
           * @param {Function} setter The function to set `accumulator` values.
           * @param {Function} iteratee The iteratee to transform values.
           * @param {Object} accumulator The initial inverted object.
           * @returns {Function} Returns `accumulator`.
           */
          function baseInverter(object, setter, iteratee, accumulator) {
            baseForOwn(object, function (value, key, object) {
              setter(accumulator, iteratee(value), key, object);
            });
            return accumulator;
          }

          /**
           * The base implementation of `_.invoke` without support for individual
           * method arguments.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Array|string} path The path of the method to invoke.
           * @param {Array} args The arguments to invoke the method with.
           * @returns {*} Returns the result of the invoked method.
           */
          function baseInvoke(object, path, args) {
            path = castPath(path, object);
            object = parent(object, path);
            var func = object == null ? object : object[toKey(last(path))];
            return func == null ? undefined : apply(func, object, args);
          }

          /**
           * The base implementation of `_.isArguments`.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an `arguments` object,
           */
          function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
          }

          /**
           * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
           */
          function baseIsArrayBuffer(value) {
            return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
          }

          /**
           * The base implementation of `_.isDate` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
           */
          function baseIsDate(value) {
            return isObjectLike(value) && baseGetTag(value) == dateTag;
          }

          /**
           * The base implementation of `_.isEqual` which supports partial comparisons
           * and tracks traversed objects.
           *
           * @private
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @param {boolean} bitmask The bitmask flags.
           *  1 - Unordered comparison
           *  2 - Partial comparison
           * @param {Function} [customizer] The function to customize comparisons.
           * @param {Object} [stack] Tracks traversed `value` and `other` objects.
           * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
           */
          function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) {
              return true;
            }
            if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
              return value !== value && other !== other;
            }
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
          }

          /**
           * A specialized version of `baseIsEqual` for arrays and objects which performs
           * deep comparisons and tracks traversed objects enabling objects with circular
           * references to be compared.
           *
           * @private
           * @param {Object} object The object to compare.
           * @param {Object} other The other object to compare.
           * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
           * @param {Function} customizer The function to customize comparisons.
           * @param {Function} equalFunc The function to determine equivalents of values.
           * @param {Object} [stack] Tracks traversed `object` and `other` objects.
           * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
           */
          function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object),
              othIsArr = isArray(other),
              objTag = objIsArr ? arrayTag : getTag(object),
              othTag = othIsArr ? arrayTag : getTag(other);
            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;
            var objIsObj = objTag == objectTag,
              othIsObj = othTag == objectTag,
              isSameTag = objTag == othTag;
            if (isSameTag && isBuffer(object)) {
              if (!isBuffer(other)) {
                return false;
              }
              objIsArr = true;
              objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
              stack || (stack = new Stack());
              return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
              var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
                othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
              if (objIsWrapped || othIsWrapped) {
                var objUnwrapped = objIsWrapped ? object.value() : object,
                  othUnwrapped = othIsWrapped ? other.value() : other;
                stack || (stack = new Stack());
                return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
              }
            }
            if (!isSameTag) {
              return false;
            }
            stack || (stack = new Stack());
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
          }

          /**
           * The base implementation of `_.isMap` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a map, else `false`.
           */
          function baseIsMap(value) {
            return isObjectLike(value) && getTag(value) == mapTag;
          }

          /**
           * The base implementation of `_.isMatch` without support for iteratee shorthands.
           *
           * @private
           * @param {Object} object The object to inspect.
           * @param {Object} source The object of property values to match.
           * @param {Array} matchData The property names, values, and compare flags to match.
           * @param {Function} [customizer] The function to customize comparisons.
           * @returns {boolean} Returns `true` if `object` is a match, else `false`.
           */
          function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length,
              length = index,
              noCustomizer = !customizer;
            if (object == null) {
              return !length;
            }
            object = Object(object);
            while (index--) {
              var data = matchData[index];
              if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
                return false;
              }
            }
            while (++index < length) {
              data = matchData[index];
              var key = data[0],
                objValue = object[key],
                srcValue = data[1];
              if (noCustomizer && data[2]) {
                if (objValue === undefined && !(key in object)) {
                  return false;
                }
              } else {
                var stack = new Stack();
                if (customizer) {
                  var result = customizer(objValue, srcValue, key, object, source, stack);
                }
                if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
                  return false;
                }
              }
            }
            return true;
          }

          /**
           * The base implementation of `_.isNative` without bad shim checks.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a native function,
           *  else `false`.
           */
          function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) {
              return false;
            }
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
          }

          /**
           * The base implementation of `_.isRegExp` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
           */
          function baseIsRegExp(value) {
            return isObjectLike(value) && baseGetTag(value) == regexpTag;
          }

          /**
           * The base implementation of `_.isSet` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a set, else `false`.
           */
          function baseIsSet(value) {
            return isObjectLike(value) && getTag(value) == setTag;
          }

          /**
           * The base implementation of `_.isTypedArray` without Node.js optimizations.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
           */
          function baseIsTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
          }

          /**
           * The base implementation of `_.iteratee`.
           *
           * @private
           * @param {*} [value=_.identity] The value to convert to an iteratee.
           * @returns {Function} Returns the iteratee.
           */
          function baseIteratee(value) {
            // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
            // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
            if (typeof value == 'function') {
              return value;
            }
            if (value == null) {
              return identity;
            }
            if (typeof value == 'object') {
              return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
            }
            return property(value);
          }

          /**
           * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function baseKeys(object) {
            if (!isPrototype(object)) {
              return nativeKeys(object);
            }
            var result = [];
            for (var key in Object(object)) {
              if (hasOwnProperty.call(object, key) && key != 'constructor') {
                result.push(key);
              }
            }
            return result;
          }

          /**
           * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function baseKeysIn(object) {
            if (!isObject(object)) {
              return nativeKeysIn(object);
            }
            var isProto = isPrototype(object),
              result = [];
            for (var key in object) {
              if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
                result.push(key);
              }
            }
            return result;
          }

          /**
           * The base implementation of `_.lt` which doesn't coerce arguments.
           *
           * @private
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if `value` is less than `other`,
           *  else `false`.
           */
          function baseLt(value, other) {
            return value < other;
          }

          /**
           * The base implementation of `_.map` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} iteratee The function invoked per iteration.
           * @returns {Array} Returns the new mapped array.
           */
          function baseMap(collection, iteratee) {
            var index = -1,
              result = isArrayLike(collection) ? Array(collection.length) : [];
            baseEach(collection, function (value, key, collection) {
              result[++index] = iteratee(value, key, collection);
            });
            return result;
          }

          /**
           * The base implementation of `_.matches` which doesn't clone `source`.
           *
           * @private
           * @param {Object} source The object of property values to match.
           * @returns {Function} Returns the new spec function.
           */
          function baseMatches(source) {
            var matchData = getMatchData(source);
            if (matchData.length == 1 && matchData[0][2]) {
              return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            }
            return function (object) {
              return object === source || baseIsMatch(object, source, matchData);
            };
          }

          /**
           * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
           *
           * @private
           * @param {string} path The path of the property to get.
           * @param {*} srcValue The value to match.
           * @returns {Function} Returns the new spec function.
           */
          function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) {
              return matchesStrictComparable(toKey(path), srcValue);
            }
            return function (object) {
              var objValue = get(object, path);
              return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            };
          }

          /**
           * The base implementation of `_.merge` without support for multiple sources.
           *
           * @private
           * @param {Object} object The destination object.
           * @param {Object} source The source object.
           * @param {number} srcIndex The index of `source`.
           * @param {Function} [customizer] The function to customize merged values.
           * @param {Object} [stack] Tracks traversed source values and their merged
           *  counterparts.
           */
          function baseMerge(object, source, srcIndex, customizer, stack) {
            if (object === source) {
              return;
            }
            baseFor(source, function (srcValue, key) {
              stack || (stack = new Stack());
              if (isObject(srcValue)) {
                baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
              } else {
                var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;
                if (newValue === undefined) {
                  newValue = srcValue;
                }
                assignMergeValue(object, key, newValue);
              }
            }, keysIn);
          }

          /**
           * A specialized version of `baseMerge` for arrays and objects which performs
           * deep merges and tracks traversed objects enabling objects with circular
           * references to be merged.
           *
           * @private
           * @param {Object} object The destination object.
           * @param {Object} source The source object.
           * @param {string} key The key of the value to merge.
           * @param {number} srcIndex The index of `source`.
           * @param {Function} mergeFunc The function to merge values.
           * @param {Function} [customizer] The function to customize assigned values.
           * @param {Object} [stack] Tracks traversed source values and their merged
           *  counterparts.
           */
          function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
            var objValue = safeGet(object, key),
              srcValue = safeGet(source, key),
              stacked = stack.get(srcValue);
            if (stacked) {
              assignMergeValue(object, key, stacked);
              return;
            }
            var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;
            var isCommon = newValue === undefined;
            if (isCommon) {
              var isArr = isArray(srcValue),
                isBuff = !isArr && isBuffer(srcValue),
                isTyped = !isArr && !isBuff && isTypedArray(srcValue);
              newValue = srcValue;
              if (isArr || isBuff || isTyped) {
                if (isArray(objValue)) {
                  newValue = objValue;
                } else if (isArrayLikeObject(objValue)) {
                  newValue = copyArray(objValue);
                } else if (isBuff) {
                  isCommon = false;
                  newValue = cloneBuffer(srcValue, true);
                } else if (isTyped) {
                  isCommon = false;
                  newValue = cloneTypedArray(srcValue, true);
                } else {
                  newValue = [];
                }
              } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                newValue = objValue;
                if (isArguments(objValue)) {
                  newValue = toPlainObject(objValue);
                } else if (!isObject(objValue) || isFunction(objValue)) {
                  newValue = initCloneObject(srcValue);
                }
              } else {
                isCommon = false;
              }
            }
            if (isCommon) {
              // Recursively merge objects and arrays (susceptible to call stack limits).
              stack.set(srcValue, newValue);
              mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
              stack['delete'](srcValue);
            }
            assignMergeValue(object, key, newValue);
          }

          /**
           * The base implementation of `_.nth` which doesn't coerce arguments.
           *
           * @private
           * @param {Array} array The array to query.
           * @param {number} n The index of the element to return.
           * @returns {*} Returns the nth element of `array`.
           */
          function baseNth(array, n) {
            var length = array.length;
            if (!length) {
              return;
            }
            n += n < 0 ? length : 0;
            return isIndex(n, length) ? array[n] : undefined;
          }

          /**
           * The base implementation of `_.orderBy` without param guards.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
           * @param {string[]} orders The sort orders of `iteratees`.
           * @returns {Array} Returns the new sorted array.
           */
          function baseOrderBy(collection, iteratees, orders) {
            if (iteratees.length) {
              iteratees = arrayMap(iteratees, function (iteratee) {
                if (isArray(iteratee)) {
                  return function (value) {
                    return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
                  };
                }
                return iteratee;
              });
            } else {
              iteratees = [identity];
            }
            var index = -1;
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            var result = baseMap(collection, function (value, key, collection) {
              var criteria = arrayMap(iteratees, function (iteratee) {
                return iteratee(value);
              });
              return {
                'criteria': criteria,
                'index': ++index,
                'value': value
              };
            });
            return baseSortBy(result, function (object, other) {
              return compareMultiple(object, other, orders);
            });
          }

          /**
           * The base implementation of `_.pick` without support for individual
           * property identifiers.
           *
           * @private
           * @param {Object} object The source object.
           * @param {string[]} paths The property paths to pick.
           * @returns {Object} Returns the new object.
           */
          function basePick(object, paths) {
            return basePickBy(object, paths, function (value, path) {
              return hasIn(object, path);
            });
          }

          /**
           * The base implementation of  `_.pickBy` without support for iteratee shorthands.
           *
           * @private
           * @param {Object} object The source object.
           * @param {string[]} paths The property paths to pick.
           * @param {Function} predicate The function invoked per property.
           * @returns {Object} Returns the new object.
           */
          function basePickBy(object, paths, predicate) {
            var index = -1,
              length = paths.length,
              result = {};
            while (++index < length) {
              var path = paths[index],
                value = baseGet(object, path);
              if (predicate(value, path)) {
                baseSet(result, castPath(path, object), value);
              }
            }
            return result;
          }

          /**
           * A specialized version of `baseProperty` which supports deep paths.
           *
           * @private
           * @param {Array|string} path The path of the property to get.
           * @returns {Function} Returns the new accessor function.
           */
          function basePropertyDeep(path) {
            return function (object) {
              return baseGet(object, path);
            };
          }

          /**
           * The base implementation of `_.pullAllBy` without support for iteratee
           * shorthands.
           *
           * @private
           * @param {Array} array The array to modify.
           * @param {Array} values The values to remove.
           * @param {Function} [iteratee] The iteratee invoked per element.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns `array`.
           */
          function basePullAll(array, values, iteratee, comparator) {
            var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
              index = -1,
              length = values.length,
              seen = array;
            if (array === values) {
              values = copyArray(values);
            }
            if (iteratee) {
              seen = arrayMap(array, baseUnary(iteratee));
            }
            while (++index < length) {
              var fromIndex = 0,
                value = values[index],
                computed = iteratee ? iteratee(value) : value;
              while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
                if (seen !== array) {
                  splice.call(seen, fromIndex, 1);
                }
                splice.call(array, fromIndex, 1);
              }
            }
            return array;
          }

          /**
           * The base implementation of `_.pullAt` without support for individual
           * indexes or capturing the removed elements.
           *
           * @private
           * @param {Array} array The array to modify.
           * @param {number[]} indexes The indexes of elements to remove.
           * @returns {Array} Returns `array`.
           */
          function basePullAt(array, indexes) {
            var length = array ? indexes.length : 0,
              lastIndex = length - 1;
            while (length--) {
              var index = indexes[length];
              if (length == lastIndex || index !== previous) {
                var previous = index;
                if (isIndex(index)) {
                  splice.call(array, index, 1);
                } else {
                  baseUnset(array, index);
                }
              }
            }
            return array;
          }

          /**
           * The base implementation of `_.random` without support for returning
           * floating-point numbers.
           *
           * @private
           * @param {number} lower The lower bound.
           * @param {number} upper The upper bound.
           * @returns {number} Returns the random number.
           */
          function baseRandom(lower, upper) {
            return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
          }

          /**
           * The base implementation of `_.range` and `_.rangeRight` which doesn't
           * coerce arguments.
           *
           * @private
           * @param {number} start The start of the range.
           * @param {number} end The end of the range.
           * @param {number} step The value to increment or decrement by.
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {Array} Returns the range of numbers.
           */
          function baseRange(start, end, step, fromRight) {
            var index = -1,
              length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
              result = Array(length);
            while (length--) {
              result[fromRight ? length : ++index] = start;
              start += step;
            }
            return result;
          }

          /**
           * The base implementation of `_.repeat` which doesn't coerce arguments.
           *
           * @private
           * @param {string} string The string to repeat.
           * @param {number} n The number of times to repeat the string.
           * @returns {string} Returns the repeated string.
           */
          function baseRepeat(string, n) {
            var result = '';
            if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
              return result;
            }
            // Leverage the exponentiation by squaring algorithm for a faster repeat.
            // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
            do {
              if (n % 2) {
                result += string;
              }
              n = nativeFloor(n / 2);
              if (n) {
                string += string;
              }
            } while (n);
            return result;
          }

          /**
           * The base implementation of `_.rest` which doesn't validate or coerce arguments.
           *
           * @private
           * @param {Function} func The function to apply a rest parameter to.
           * @param {number} [start=func.length-1] The start position of the rest parameter.
           * @returns {Function} Returns the new function.
           */
          function baseRest(func, start) {
            return setToString(overRest(func, start, identity), func + '');
          }

          /**
           * The base implementation of `_.sample`.
           *
           * @private
           * @param {Array|Object} collection The collection to sample.
           * @returns {*} Returns the random element.
           */
          function baseSample(collection) {
            return arraySample(values(collection));
          }

          /**
           * The base implementation of `_.sampleSize` without param guards.
           *
           * @private
           * @param {Array|Object} collection The collection to sample.
           * @param {number} n The number of elements to sample.
           * @returns {Array} Returns the random elements.
           */
          function baseSampleSize(collection, n) {
            var array = values(collection);
            return shuffleSelf(array, baseClamp(n, 0, array.length));
          }

          /**
           * The base implementation of `_.set`.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {Array|string} path The path of the property to set.
           * @param {*} value The value to set.
           * @param {Function} [customizer] The function to customize path creation.
           * @returns {Object} Returns `object`.
           */
          function baseSet(object, path, value, customizer) {
            if (!isObject(object)) {
              return object;
            }
            path = castPath(path, object);
            var index = -1,
              length = path.length,
              lastIndex = length - 1,
              nested = object;
            while (nested != null && ++index < length) {
              var key = toKey(path[index]),
                newValue = value;
              if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
                return object;
              }
              if (index != lastIndex) {
                var objValue = nested[key];
                newValue = customizer ? customizer(objValue, key, nested) : undefined;
                if (newValue === undefined) {
                  newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
                }
              }
              assignValue(nested, key, newValue);
              nested = nested[key];
            }
            return object;
          }

          /**
           * The base implementation of `setData` without support for hot loop shorting.
           *
           * @private
           * @param {Function} func The function to associate metadata with.
           * @param {*} data The metadata.
           * @returns {Function} Returns `func`.
           */
          var baseSetData = !metaMap ? identity : function (func, data) {
            metaMap.set(func, data);
            return func;
          };

          /**
           * The base implementation of `setToString` without support for hot loop shorting.
           *
           * @private
           * @param {Function} func The function to modify.
           * @param {Function} string The `toString` result.
           * @returns {Function} Returns `func`.
           */
          var baseSetToString = !defineProperty ? identity : function (func, string) {
            return defineProperty(func, 'toString', {
              'configurable': true,
              'enumerable': false,
              'value': constant(string),
              'writable': true
            });
          };

          /**
           * The base implementation of `_.shuffle`.
           *
           * @private
           * @param {Array|Object} collection The collection to shuffle.
           * @returns {Array} Returns the new shuffled array.
           */
          function baseShuffle(collection) {
            return shuffleSelf(values(collection));
          }

          /**
           * The base implementation of `_.slice` without an iteratee call guard.
           *
           * @private
           * @param {Array} array The array to slice.
           * @param {number} [start=0] The start position.
           * @param {number} [end=array.length] The end position.
           * @returns {Array} Returns the slice of `array`.
           */
          function baseSlice(array, start, end) {
            var index = -1,
              length = array.length;
            if (start < 0) {
              start = -start > length ? 0 : length + start;
            }
            end = end > length ? length : end;
            if (end < 0) {
              end += length;
            }
            length = start > end ? 0 : end - start >>> 0;
            start >>>= 0;
            var result = Array(length);
            while (++index < length) {
              result[index] = array[index + start];
            }
            return result;
          }

          /**
           * The base implementation of `_.some` without support for iteratee shorthands.
           *
           * @private
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} predicate The function invoked per iteration.
           * @returns {boolean} Returns `true` if any element passes the predicate check,
           *  else `false`.
           */
          function baseSome(collection, predicate) {
            var result;
            baseEach(collection, function (value, index, collection) {
              result = predicate(value, index, collection);
              return !result;
            });
            return !!result;
          }

          /**
           * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
           * performs a binary search of `array` to determine the index at which `value`
           * should be inserted into `array` in order to maintain its sort order.
           *
           * @private
           * @param {Array} array The sorted array to inspect.
           * @param {*} value The value to evaluate.
           * @param {boolean} [retHighest] Specify returning the highest qualified index.
           * @returns {number} Returns the index at which `value` should be inserted
           *  into `array`.
           */
          function baseSortedIndex(array, value, retHighest) {
            var low = 0,
              high = array == null ? low : array.length;
            if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
              while (low < high) {
                var mid = low + high >>> 1,
                  computed = array[mid];
                if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
                  low = mid + 1;
                } else {
                  high = mid;
                }
              }
              return high;
            }
            return baseSortedIndexBy(array, value, identity, retHighest);
          }

          /**
           * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
           * which invokes `iteratee` for `value` and each element of `array` to compute
           * their sort ranking. The iteratee is invoked with one argument; (value).
           *
           * @private
           * @param {Array} array The sorted array to inspect.
           * @param {*} value The value to evaluate.
           * @param {Function} iteratee The iteratee invoked per element.
           * @param {boolean} [retHighest] Specify returning the highest qualified index.
           * @returns {number} Returns the index at which `value` should be inserted
           *  into `array`.
           */
          function baseSortedIndexBy(array, value, iteratee, retHighest) {
            var low = 0,
              high = array == null ? 0 : array.length;
            if (high === 0) {
              return 0;
            }
            value = iteratee(value);
            var valIsNaN = value !== value,
              valIsNull = value === null,
              valIsSymbol = isSymbol(value),
              valIsUndefined = value === undefined;
            while (low < high) {
              var mid = nativeFloor((low + high) / 2),
                computed = iteratee(array[mid]),
                othIsDefined = computed !== undefined,
                othIsNull = computed === null,
                othIsReflexive = computed === computed,
                othIsSymbol = isSymbol(computed);
              if (valIsNaN) {
                var setLow = retHighest || othIsReflexive;
              } else if (valIsUndefined) {
                setLow = othIsReflexive && (retHighest || othIsDefined);
              } else if (valIsNull) {
                setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
              } else if (valIsSymbol) {
                setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
              } else if (othIsNull || othIsSymbol) {
                setLow = false;
              } else {
                setLow = retHighest ? computed <= value : computed < value;
              }
              if (setLow) {
                low = mid + 1;
              } else {
                high = mid;
              }
            }
            return nativeMin(high, MAX_ARRAY_INDEX);
          }

          /**
           * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
           * support for iteratee shorthands.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {Function} [iteratee] The iteratee invoked per element.
           * @returns {Array} Returns the new duplicate free array.
           */
          function baseSortedUniq(array, iteratee) {
            var index = -1,
              length = array.length,
              resIndex = 0,
              result = [];
            while (++index < length) {
              var value = array[index],
                computed = iteratee ? iteratee(value) : value;
              if (!index || !eq(computed, seen)) {
                var seen = computed;
                result[resIndex++] = value === 0 ? 0 : value;
              }
            }
            return result;
          }

          /**
           * The base implementation of `_.toNumber` which doesn't ensure correct
           * conversions of binary, hexadecimal, or octal string values.
           *
           * @private
           * @param {*} value The value to process.
           * @returns {number} Returns the number.
           */
          function baseToNumber(value) {
            if (typeof value == 'number') {
              return value;
            }
            if (isSymbol(value)) {
              return NAN;
            }
            return +value;
          }

          /**
           * The base implementation of `_.toString` which doesn't convert nullish
           * values to empty strings.
           *
           * @private
           * @param {*} value The value to process.
           * @returns {string} Returns the string.
           */
          function baseToString(value) {
            // Exit early for strings to avoid a performance hit in some environments.
            if (typeof value == 'string') {
              return value;
            }
            if (isArray(value)) {
              // Recursively convert values (susceptible to call stack limits).
              return arrayMap(value, baseToString) + '';
            }
            if (isSymbol(value)) {
              return symbolToString ? symbolToString.call(value) : '';
            }
            var result = value + '';
            return result == '0' && 1 / value == -INFINITY ? '-0' : result;
          }

          /**
           * The base implementation of `_.uniqBy` without support for iteratee shorthands.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {Function} [iteratee] The iteratee invoked per element.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns the new duplicate free array.
           */
          function baseUniq(array, iteratee, comparator) {
            var index = -1,
              includes = arrayIncludes,
              length = array.length,
              isCommon = true,
              result = [],
              seen = result;
            if (comparator) {
              isCommon = false;
              includes = arrayIncludesWith;
            } else if (length >= LARGE_ARRAY_SIZE) {
              var set = iteratee ? null : createSet(array);
              if (set) {
                return setToArray(set);
              }
              isCommon = false;
              includes = cacheHas;
              seen = new SetCache();
            } else {
              seen = iteratee ? [] : result;
            }
            outer: while (++index < length) {
              var value = array[index],
                computed = iteratee ? iteratee(value) : value;
              value = comparator || value !== 0 ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen.length;
                while (seenIndex--) {
                  if (seen[seenIndex] === computed) {
                    continue outer;
                  }
                }
                if (iteratee) {
                  seen.push(computed);
                }
                result.push(value);
              } else if (!includes(seen, computed, comparator)) {
                if (seen !== result) {
                  seen.push(computed);
                }
                result.push(value);
              }
            }
            return result;
          }

          /**
           * The base implementation of `_.unset`.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {Array|string} path The property path to unset.
           * @returns {boolean} Returns `true` if the property is deleted, else `false`.
           */
          function baseUnset(object, path) {
            path = castPath(path, object);
            object = parent(object, path);
            return object == null || delete object[toKey(last(path))];
          }

          /**
           * The base implementation of `_.update`.
           *
           * @private
           * @param {Object} object The object to modify.
           * @param {Array|string} path The path of the property to update.
           * @param {Function} updater The function to produce the updated value.
           * @param {Function} [customizer] The function to customize path creation.
           * @returns {Object} Returns `object`.
           */
          function baseUpdate(object, path, updater, customizer) {
            return baseSet(object, path, updater(baseGet(object, path)), customizer);
          }

          /**
           * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
           * without support for iteratee shorthands.
           *
           * @private
           * @param {Array} array The array to query.
           * @param {Function} predicate The function invoked per iteration.
           * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {Array} Returns the slice of `array`.
           */
          function baseWhile(array, predicate, isDrop, fromRight) {
            var length = array.length,
              index = fromRight ? length : -1;
            while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}
            return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
          }

          /**
           * The base implementation of `wrapperValue` which returns the result of
           * performing a sequence of actions on the unwrapped `value`, where each
           * successive action is supplied the return value of the previous.
           *
           * @private
           * @param {*} value The unwrapped value.
           * @param {Array} actions Actions to perform to resolve the unwrapped value.
           * @returns {*} Returns the resolved value.
           */
          function baseWrapperValue(value, actions) {
            var result = value;
            if (result instanceof LazyWrapper) {
              result = result.value();
            }
            return arrayReduce(actions, function (result, action) {
              return action.func.apply(action.thisArg, arrayPush([result], action.args));
            }, result);
          }

          /**
           * The base implementation of methods like `_.xor`, without support for
           * iteratee shorthands, that accepts an array of arrays to inspect.
           *
           * @private
           * @param {Array} arrays The arrays to inspect.
           * @param {Function} [iteratee] The iteratee invoked per element.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns the new array of values.
           */
          function baseXor(arrays, iteratee, comparator) {
            var length = arrays.length;
            if (length < 2) {
              return length ? baseUniq(arrays[0]) : [];
            }
            var index = -1,
              result = Array(length);
            while (++index < length) {
              var array = arrays[index],
                othIndex = -1;
              while (++othIndex < length) {
                if (othIndex != index) {
                  result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
                }
              }
            }
            return baseUniq(baseFlatten(result, 1), iteratee, comparator);
          }

          /**
           * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
           *
           * @private
           * @param {Array} props The property identifiers.
           * @param {Array} values The property values.
           * @param {Function} assignFunc The function to assign values.
           * @returns {Object} Returns the new object.
           */
          function baseZipObject(props, values, assignFunc) {
            var index = -1,
              length = props.length,
              valsLength = values.length,
              result = {};
            while (++index < length) {
              var value = index < valsLength ? values[index] : undefined;
              assignFunc(result, props[index], value);
            }
            return result;
          }

          /**
           * Casts `value` to an empty array if it's not an array like object.
           *
           * @private
           * @param {*} value The value to inspect.
           * @returns {Array|Object} Returns the cast array-like object.
           */
          function castArrayLikeObject(value) {
            return isArrayLikeObject(value) ? value : [];
          }

          /**
           * Casts `value` to `identity` if it's not a function.
           *
           * @private
           * @param {*} value The value to inspect.
           * @returns {Function} Returns cast function.
           */
          function castFunction(value) {
            return typeof value == 'function' ? value : identity;
          }

          /**
           * Casts `value` to a path array if it's not one.
           *
           * @private
           * @param {*} value The value to inspect.
           * @param {Object} [object] The object to query keys on.
           * @returns {Array} Returns the cast property path array.
           */
          function castPath(value, object) {
            if (isArray(value)) {
              return value;
            }
            return isKey(value, object) ? [value] : stringToPath(toString(value));
          }

          /**
           * A `baseRest` alias which can be replaced with `identity` by module
           * replacement plugins.
           *
           * @private
           * @type {Function}
           * @param {Function} func The function to apply a rest parameter to.
           * @returns {Function} Returns the new function.
           */
          var castRest = baseRest;

          /**
           * Casts `array` to a slice if it's needed.
           *
           * @private
           * @param {Array} array The array to inspect.
           * @param {number} start The start position.
           * @param {number} [end=array.length] The end position.
           * @returns {Array} Returns the cast slice.
           */
          function castSlice(array, start, end) {
            var length = array.length;
            end = end === undefined ? length : end;
            return !start && end >= length ? array : baseSlice(array, start, end);
          }

          /**
           * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
           *
           * @private
           * @param {number|Object} id The timer id or timeout object of the timer to clear.
           */
          var clearTimeout = ctxClearTimeout || function (id) {
            return root.clearTimeout(id);
          };

          /**
           * Creates a clone of  `buffer`.
           *
           * @private
           * @param {Buffer} buffer The buffer to clone.
           * @param {boolean} [isDeep] Specify a deep clone.
           * @returns {Buffer} Returns the cloned buffer.
           */
          function cloneBuffer(buffer, isDeep) {
            if (isDeep) {
              return buffer.slice();
            }
            var length = buffer.length,
              result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
            buffer.copy(result);
            return result;
          }

          /**
           * Creates a clone of `arrayBuffer`.
           *
           * @private
           * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
           * @returns {ArrayBuffer} Returns the cloned array buffer.
           */
          function cloneArrayBuffer(arrayBuffer) {
            var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array(result).set(new Uint8Array(arrayBuffer));
            return result;
          }

          /**
           * Creates a clone of `dataView`.
           *
           * @private
           * @param {Object} dataView The data view to clone.
           * @param {boolean} [isDeep] Specify a deep clone.
           * @returns {Object} Returns the cloned data view.
           */
          function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
          }

          /**
           * Creates a clone of `regexp`.
           *
           * @private
           * @param {Object} regexp The regexp to clone.
           * @returns {Object} Returns the cloned regexp.
           */
          function cloneRegExp(regexp) {
            var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
            result.lastIndex = regexp.lastIndex;
            return result;
          }

          /**
           * Creates a clone of the `symbol` object.
           *
           * @private
           * @param {Object} symbol The symbol object to clone.
           * @returns {Object} Returns the cloned symbol object.
           */
          function cloneSymbol(symbol) {
            return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
          }

          /**
           * Creates a clone of `typedArray`.
           *
           * @private
           * @param {Object} typedArray The typed array to clone.
           * @param {boolean} [isDeep] Specify a deep clone.
           * @returns {Object} Returns the cloned typed array.
           */
          function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
          }

          /**
           * Compares values to sort them in ascending order.
           *
           * @private
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {number} Returns the sort order indicator for `value`.
           */
          function compareAscending(value, other) {
            if (value !== other) {
              var valIsDefined = value !== undefined,
                valIsNull = value === null,
                valIsReflexive = value === value,
                valIsSymbol = isSymbol(value);
              var othIsDefined = other !== undefined,
                othIsNull = other === null,
                othIsReflexive = other === other,
                othIsSymbol = isSymbol(other);
              if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
                return 1;
              }
              if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
                return -1;
              }
            }
            return 0;
          }

          /**
           * Used by `_.orderBy` to compare multiple properties of a value to another
           * and stable sort them.
           *
           * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
           * specify an order of "desc" for descending or "asc" for ascending sort order
           * of corresponding values.
           *
           * @private
           * @param {Object} object The object to compare.
           * @param {Object} other The other object to compare.
           * @param {boolean[]|string[]} orders The order to sort by for each property.
           * @returns {number} Returns the sort order indicator for `object`.
           */
          function compareMultiple(object, other, orders) {
            var index = -1,
              objCriteria = object.criteria,
              othCriteria = other.criteria,
              length = objCriteria.length,
              ordersLength = orders.length;
            while (++index < length) {
              var result = compareAscending(objCriteria[index], othCriteria[index]);
              if (result) {
                if (index >= ordersLength) {
                  return result;
                }
                var order = orders[index];
                return result * (order == 'desc' ? -1 : 1);
              }
            }
            // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
            // that causes it, under certain circumstances, to provide the same value for
            // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
            // for more details.
            //
            // This also ensures a stable sort in V8 and other engines.
            // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
            return object.index - other.index;
          }

          /**
           * Creates an array that is the composition of partially applied arguments,
           * placeholders, and provided arguments into a single array of arguments.
           *
           * @private
           * @param {Array} args The provided arguments.
           * @param {Array} partials The arguments to prepend to those provided.
           * @param {Array} holders The `partials` placeholder indexes.
           * @params {boolean} [isCurried] Specify composing for a curried function.
           * @returns {Array} Returns the new array of composed arguments.
           */
          function composeArgs(args, partials, holders, isCurried) {
            var argsIndex = -1,
              argsLength = args.length,
              holdersLength = holders.length,
              leftIndex = -1,
              leftLength = partials.length,
              rangeLength = nativeMax(argsLength - holdersLength, 0),
              result = Array(leftLength + rangeLength),
              isUncurried = !isCurried;
            while (++leftIndex < leftLength) {
              result[leftIndex] = partials[leftIndex];
            }
            while (++argsIndex < holdersLength) {
              if (isUncurried || argsIndex < argsLength) {
                result[holders[argsIndex]] = args[argsIndex];
              }
            }
            while (rangeLength--) {
              result[leftIndex++] = args[argsIndex++];
            }
            return result;
          }

          /**
           * This function is like `composeArgs` except that the arguments composition
           * is tailored for `_.partialRight`.
           *
           * @private
           * @param {Array} args The provided arguments.
           * @param {Array} partials The arguments to append to those provided.
           * @param {Array} holders The `partials` placeholder indexes.
           * @params {boolean} [isCurried] Specify composing for a curried function.
           * @returns {Array} Returns the new array of composed arguments.
           */
          function composeArgsRight(args, partials, holders, isCurried) {
            var argsIndex = -1,
              argsLength = args.length,
              holdersIndex = -1,
              holdersLength = holders.length,
              rightIndex = -1,
              rightLength = partials.length,
              rangeLength = nativeMax(argsLength - holdersLength, 0),
              result = Array(rangeLength + rightLength),
              isUncurried = !isCurried;
            while (++argsIndex < rangeLength) {
              result[argsIndex] = args[argsIndex];
            }
            var offset = argsIndex;
            while (++rightIndex < rightLength) {
              result[offset + rightIndex] = partials[rightIndex];
            }
            while (++holdersIndex < holdersLength) {
              if (isUncurried || argsIndex < argsLength) {
                result[offset + holders[holdersIndex]] = args[argsIndex++];
              }
            }
            return result;
          }

          /**
           * Copies the values of `source` to `array`.
           *
           * @private
           * @param {Array} source The array to copy values from.
           * @param {Array} [array=[]] The array to copy values to.
           * @returns {Array} Returns `array`.
           */
          function copyArray(source, array) {
            var index = -1,
              length = source.length;
            array || (array = Array(length));
            while (++index < length) {
              array[index] = source[index];
            }
            return array;
          }

          /**
           * Copies properties of `source` to `object`.
           *
           * @private
           * @param {Object} source The object to copy properties from.
           * @param {Array} props The property identifiers to copy.
           * @param {Object} [object={}] The object to copy properties to.
           * @param {Function} [customizer] The function to customize copied values.
           * @returns {Object} Returns `object`.
           */
          function copyObject(source, props, object, customizer) {
            var isNew = !object;
            object || (object = {});
            var index = -1,
              length = props.length;
            while (++index < length) {
              var key = props[index];
              var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
              if (newValue === undefined) {
                newValue = source[key];
              }
              if (isNew) {
                baseAssignValue(object, key, newValue);
              } else {
                assignValue(object, key, newValue);
              }
            }
            return object;
          }

          /**
           * Copies own symbols of `source` to `object`.
           *
           * @private
           * @param {Object} source The object to copy symbols from.
           * @param {Object} [object={}] The object to copy symbols to.
           * @returns {Object} Returns `object`.
           */
          function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
          }

          /**
           * Copies own and inherited symbols of `source` to `object`.
           *
           * @private
           * @param {Object} source The object to copy symbols from.
           * @param {Object} [object={}] The object to copy symbols to.
           * @returns {Object} Returns `object`.
           */
          function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object);
          }

          /**
           * Creates a function like `_.groupBy`.
           *
           * @private
           * @param {Function} setter The function to set accumulator values.
           * @param {Function} [initializer] The accumulator object initializer.
           * @returns {Function} Returns the new aggregator function.
           */
          function createAggregator(setter, initializer) {
            return function (collection, iteratee) {
              var func = isArray(collection) ? arrayAggregator : baseAggregator,
                accumulator = initializer ? initializer() : {};
              return func(collection, setter, getIteratee(iteratee, 2), accumulator);
            };
          }

          /**
           * Creates a function like `_.assign`.
           *
           * @private
           * @param {Function} assigner The function to assign values.
           * @returns {Function} Returns the new assigner function.
           */
          function createAssigner(assigner) {
            return baseRest(function (object, sources) {
              var index = -1,
                length = sources.length,
                customizer = length > 1 ? sources[length - 1] : undefined,
                guard = length > 2 ? sources[2] : undefined;
              customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;
              if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                customizer = length < 3 ? undefined : customizer;
                length = 1;
              }
              object = Object(object);
              while (++index < length) {
                var source = sources[index];
                if (source) {
                  assigner(object, source, index, customizer);
                }
              }
              return object;
            });
          }

          /**
           * Creates a `baseEach` or `baseEachRight` function.
           *
           * @private
           * @param {Function} eachFunc The function to iterate over a collection.
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {Function} Returns the new base function.
           */
          function createBaseEach(eachFunc, fromRight) {
            return function (collection, iteratee) {
              if (collection == null) {
                return collection;
              }
              if (!isArrayLike(collection)) {
                return eachFunc(collection, iteratee);
              }
              var length = collection.length,
                index = fromRight ? length : -1,
                iterable = Object(collection);
              while (fromRight ? index-- : ++index < length) {
                if (iteratee(iterable[index], index, iterable) === false) {
                  break;
                }
              }
              return collection;
            };
          }

          /**
           * Creates a base function for methods like `_.forIn` and `_.forOwn`.
           *
           * @private
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {Function} Returns the new base function.
           */
          function createBaseFor(fromRight) {
            return function (object, iteratee, keysFunc) {
              var index = -1,
                iterable = Object(object),
                props = keysFunc(object),
                length = props.length;
              while (length--) {
                var key = props[fromRight ? length : ++index];
                if (iteratee(iterable[key], key, iterable) === false) {
                  break;
                }
              }
              return object;
            };
          }

          /**
           * Creates a function that wraps `func` to invoke it with the optional `this`
           * binding of `thisArg`.
           *
           * @private
           * @param {Function} func The function to wrap.
           * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
           * @param {*} [thisArg] The `this` binding of `func`.
           * @returns {Function} Returns the new wrapped function.
           */
          function createBind(func, bitmask, thisArg) {
            var isBind = bitmask & WRAP_BIND_FLAG,
              Ctor = createCtor(func);
            function wrapper() {
              var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              return fn.apply(isBind ? thisArg : this, arguments);
            }
            return wrapper;
          }

          /**
           * Creates a function like `_.lowerFirst`.
           *
           * @private
           * @param {string} methodName The name of the `String` case method to use.
           * @returns {Function} Returns the new case function.
           */
          function createCaseFirst(methodName) {
            return function (string) {
              string = toString(string);
              var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
              var chr = strSymbols ? strSymbols[0] : string.charAt(0);
              var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
              return chr[methodName]() + trailing;
            };
          }

          /**
           * Creates a function like `_.camelCase`.
           *
           * @private
           * @param {Function} callback The function to combine each word.
           * @returns {Function} Returns the new compounder function.
           */
          function createCompounder(callback) {
            return function (string) {
              return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
            };
          }

          /**
           * Creates a function that produces an instance of `Ctor` regardless of
           * whether it was invoked as part of a `new` expression or by `call` or `apply`.
           *
           * @private
           * @param {Function} Ctor The constructor to wrap.
           * @returns {Function} Returns the new wrapped function.
           */
          function createCtor(Ctor) {
            return function () {
              // Use a `switch` statement to work with class constructors. See
              // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
              // for more details.
              var args = arguments;
              switch (args.length) {
                case 0:
                  return new Ctor();
                case 1:
                  return new Ctor(args[0]);
                case 2:
                  return new Ctor(args[0], args[1]);
                case 3:
                  return new Ctor(args[0], args[1], args[2]);
                case 4:
                  return new Ctor(args[0], args[1], args[2], args[3]);
                case 5:
                  return new Ctor(args[0], args[1], args[2], args[3], args[4]);
                case 6:
                  return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
                case 7:
                  return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
              }
              var thisBinding = baseCreate(Ctor.prototype),
                result = Ctor.apply(thisBinding, args);

              // Mimic the constructor's `return` behavior.
              // See https://es5.github.io/#x13.2.2 for more details.
              return isObject(result) ? result : thisBinding;
            };
          }

          /**
           * Creates a function that wraps `func` to enable currying.
           *
           * @private
           * @param {Function} func The function to wrap.
           * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
           * @param {number} arity The arity of `func`.
           * @returns {Function} Returns the new wrapped function.
           */
          function createCurry(func, bitmask, arity) {
            var Ctor = createCtor(func);
            function wrapper() {
              var length = arguments.length,
                args = Array(length),
                index = length,
                placeholder = getHolder(wrapper);
              while (index--) {
                args[index] = arguments[index];
              }
              var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
              length -= holders.length;
              if (length < arity) {
                return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
              }
              var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              return apply(fn, this, args);
            }
            return wrapper;
          }

          /**
           * Creates a `_.find` or `_.findLast` function.
           *
           * @private
           * @param {Function} findIndexFunc The function to find the collection index.
           * @returns {Function} Returns the new find function.
           */
          function createFind(findIndexFunc) {
            return function (collection, predicate, fromIndex) {
              var iterable = Object(collection);
              if (!isArrayLike(collection)) {
                var iteratee = getIteratee(predicate, 3);
                collection = keys(collection);
                predicate = function predicate(key) {
                  return iteratee(iterable[key], key, iterable);
                };
              }
              var index = findIndexFunc(collection, predicate, fromIndex);
              return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
            };
          }

          /**
           * Creates a `_.flow` or `_.flowRight` function.
           *
           * @private
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {Function} Returns the new flow function.
           */
          function createFlow(fromRight) {
            return flatRest(function (funcs) {
              var length = funcs.length,
                index = length,
                prereq = LodashWrapper.prototype.thru;
              if (fromRight) {
                funcs.reverse();
              }
              while (index--) {
                var func = funcs[index];
                if (typeof func != 'function') {
                  throw new TypeError(FUNC_ERROR_TEXT);
                }
                if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
                  var wrapper = new LodashWrapper([], true);
                }
              }
              index = wrapper ? index : length;
              while (++index < length) {
                func = funcs[index];
                var funcName = getFuncName(func),
                  data = funcName == 'wrapper' ? getData(func) : undefined;
                if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
                  wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
                } else {
                  wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
                }
              }
              return function () {
                var args = arguments,
                  value = args[0];
                if (wrapper && args.length == 1 && isArray(value)) {
                  return wrapper.plant(value).value();
                }
                var index = 0,
                  result = length ? funcs[index].apply(this, args) : value;
                while (++index < length) {
                  result = funcs[index].call(this, result);
                }
                return result;
              };
            });
          }

          /**
           * Creates a function that wraps `func` to invoke it with optional `this`
           * binding of `thisArg`, partial application, and currying.
           *
           * @private
           * @param {Function|string} func The function or method name to wrap.
           * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
           * @param {*} [thisArg] The `this` binding of `func`.
           * @param {Array} [partials] The arguments to prepend to those provided to
           *  the new function.
           * @param {Array} [holders] The `partials` placeholder indexes.
           * @param {Array} [partialsRight] The arguments to append to those provided
           *  to the new function.
           * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
           * @param {Array} [argPos] The argument positions of the new function.
           * @param {number} [ary] The arity cap of `func`.
           * @param {number} [arity] The arity of `func`.
           * @returns {Function} Returns the new wrapped function.
           */
          function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
            var isAry = bitmask & WRAP_ARY_FLAG,
              isBind = bitmask & WRAP_BIND_FLAG,
              isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
              isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
              isFlip = bitmask & WRAP_FLIP_FLAG,
              Ctor = isBindKey ? undefined : createCtor(func);
            function wrapper() {
              var length = arguments.length,
                args = Array(length),
                index = length;
              while (index--) {
                args[index] = arguments[index];
              }
              if (isCurried) {
                var placeholder = getHolder(wrapper),
                  holdersCount = countHolders(args, placeholder);
              }
              if (partials) {
                args = composeArgs(args, partials, holders, isCurried);
              }
              if (partialsRight) {
                args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
              }
              length -= holdersCount;
              if (isCurried && length < arity) {
                var newHolders = replaceHolders(args, placeholder);
                return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
              }
              var thisBinding = isBind ? thisArg : this,
                fn = isBindKey ? thisBinding[func] : func;
              length = args.length;
              if (argPos) {
                args = reorder(args, argPos);
              } else if (isFlip && length > 1) {
                args.reverse();
              }
              if (isAry && ary < length) {
                args.length = ary;
              }
              if (this && this !== root && this instanceof wrapper) {
                fn = Ctor || createCtor(fn);
              }
              return fn.apply(thisBinding, args);
            }
            return wrapper;
          }

          /**
           * Creates a function like `_.invertBy`.
           *
           * @private
           * @param {Function} setter The function to set accumulator values.
           * @param {Function} toIteratee The function to resolve iteratees.
           * @returns {Function} Returns the new inverter function.
           */
          function createInverter(setter, toIteratee) {
            return function (object, iteratee) {
              return baseInverter(object, setter, toIteratee(iteratee), {});
            };
          }

          /**
           * Creates a function that performs a mathematical operation on two values.
           *
           * @private
           * @param {Function} operator The function to perform the operation.
           * @param {number} [defaultValue] The value used for `undefined` arguments.
           * @returns {Function} Returns the new mathematical operation function.
           */
          function createMathOperation(operator, defaultValue) {
            return function (value, other) {
              var result;
              if (value === undefined && other === undefined) {
                return defaultValue;
              }
              if (value !== undefined) {
                result = value;
              }
              if (other !== undefined) {
                if (result === undefined) {
                  return other;
                }
                if (typeof value == 'string' || typeof other == 'string') {
                  value = baseToString(value);
                  other = baseToString(other);
                } else {
                  value = baseToNumber(value);
                  other = baseToNumber(other);
                }
                result = operator(value, other);
              }
              return result;
            };
          }

          /**
           * Creates a function like `_.over`.
           *
           * @private
           * @param {Function} arrayFunc The function to iterate over iteratees.
           * @returns {Function} Returns the new over function.
           */
          function createOver(arrayFunc) {
            return flatRest(function (iteratees) {
              iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
              return baseRest(function (args) {
                var thisArg = this;
                return arrayFunc(iteratees, function (iteratee) {
                  return apply(iteratee, thisArg, args);
                });
              });
            });
          }

          /**
           * Creates the padding for `string` based on `length`. The `chars` string
           * is truncated if the number of characters exceeds `length`.
           *
           * @private
           * @param {number} length The padding length.
           * @param {string} [chars=' '] The string used as padding.
           * @returns {string} Returns the padding for `string`.
           */
          function createPadding(length, chars) {
            chars = chars === undefined ? ' ' : baseToString(chars);
            var charsLength = chars.length;
            if (charsLength < 2) {
              return charsLength ? baseRepeat(chars, length) : chars;
            }
            var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
            return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
          }

          /**
           * Creates a function that wraps `func` to invoke it with the `this` binding
           * of `thisArg` and `partials` prepended to the arguments it receives.
           *
           * @private
           * @param {Function} func The function to wrap.
           * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
           * @param {*} thisArg The `this` binding of `func`.
           * @param {Array} partials The arguments to prepend to those provided to
           *  the new function.
           * @returns {Function} Returns the new wrapped function.
           */
          function createPartial(func, bitmask, thisArg, partials) {
            var isBind = bitmask & WRAP_BIND_FLAG,
              Ctor = createCtor(func);
            function wrapper() {
              var argsIndex = -1,
                argsLength = arguments.length,
                leftIndex = -1,
                leftLength = partials.length,
                args = Array(leftLength + argsLength),
                fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              while (++leftIndex < leftLength) {
                args[leftIndex] = partials[leftIndex];
              }
              while (argsLength--) {
                args[leftIndex++] = arguments[++argsIndex];
              }
              return apply(fn, isBind ? thisArg : this, args);
            }
            return wrapper;
          }

          /**
           * Creates a `_.range` or `_.rangeRight` function.
           *
           * @private
           * @param {boolean} [fromRight] Specify iterating from right to left.
           * @returns {Function} Returns the new range function.
           */
          function createRange(fromRight) {
            return function (start, end, step) {
              if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
                end = step = undefined;
              }
              // Ensure the sign of `-0` is preserved.
              start = toFinite(start);
              if (end === undefined) {
                end = start;
                start = 0;
              } else {
                end = toFinite(end);
              }
              step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
              return baseRange(start, end, step, fromRight);
            };
          }

          /**
           * Creates a function that performs a relational operation on two values.
           *
           * @private
           * @param {Function} operator The function to perform the operation.
           * @returns {Function} Returns the new relational operation function.
           */
          function createRelationalOperation(operator) {
            return function (value, other) {
              if (!(typeof value == 'string' && typeof other == 'string')) {
                value = toNumber(value);
                other = toNumber(other);
              }
              return operator(value, other);
            };
          }

          /**
           * Creates a function that wraps `func` to continue currying.
           *
           * @private
           * @param {Function} func The function to wrap.
           * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
           * @param {Function} wrapFunc The function to create the `func` wrapper.
           * @param {*} placeholder The placeholder value.
           * @param {*} [thisArg] The `this` binding of `func`.
           * @param {Array} [partials] The arguments to prepend to those provided to
           *  the new function.
           * @param {Array} [holders] The `partials` placeholder indexes.
           * @param {Array} [argPos] The argument positions of the new function.
           * @param {number} [ary] The arity cap of `func`.
           * @param {number} [arity] The arity of `func`.
           * @returns {Function} Returns the new wrapped function.
           */
          function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
            var isCurry = bitmask & WRAP_CURRY_FLAG,
              newHolders = isCurry ? holders : undefined,
              newHoldersRight = isCurry ? undefined : holders,
              newPartials = isCurry ? partials : undefined,
              newPartialsRight = isCurry ? undefined : partials;
            bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
            bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
            if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
              bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
            }
            var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
            var result = wrapFunc.apply(undefined, newData);
            if (isLaziable(func)) {
              setData(result, newData);
            }
            result.placeholder = placeholder;
            return setWrapToString(result, func, bitmask);
          }

          /**
           * Creates a function like `_.round`.
           *
           * @private
           * @param {string} methodName The name of the `Math` method to use when rounding.
           * @returns {Function} Returns the new round function.
           */
          function createRound(methodName) {
            var func = Math[methodName];
            return function (number, precision) {
              number = toNumber(number);
              precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
              if (precision && nativeIsFinite(number)) {
                // Shift with exponential notation to avoid floating-point issues.
                // See [MDN](https://mdn.io/round#Examples) for more details.
                var pair = (toString(number) + 'e').split('e'),
                  value = func(pair[0] + 'e' + (+pair[1] + precision));
                pair = (toString(value) + 'e').split('e');
                return +(pair[0] + 'e' + (+pair[1] - precision));
              }
              return func(number);
            };
          }

          /**
           * Creates a set object of `values`.
           *
           * @private
           * @param {Array} values The values to add to the set.
           * @returns {Object} Returns the new set.
           */
          var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
            return new Set(values);
          };

          /**
           * Creates a `_.toPairs` or `_.toPairsIn` function.
           *
           * @private
           * @param {Function} keysFunc The function to get the keys of a given object.
           * @returns {Function} Returns the new pairs function.
           */
          function createToPairs(keysFunc) {
            return function (object) {
              var tag = getTag(object);
              if (tag == mapTag) {
                return mapToArray(object);
              }
              if (tag == setTag) {
                return setToPairs(object);
              }
              return baseToPairs(object, keysFunc(object));
            };
          }

          /**
           * Creates a function that either curries or invokes `func` with optional
           * `this` binding and partially applied arguments.
           *
           * @private
           * @param {Function|string} func The function or method name to wrap.
           * @param {number} bitmask The bitmask flags.
           *    1 - `_.bind`
           *    2 - `_.bindKey`
           *    4 - `_.curry` or `_.curryRight` of a bound function
           *    8 - `_.curry`
           *   16 - `_.curryRight`
           *   32 - `_.partial`
           *   64 - `_.partialRight`
           *  128 - `_.rearg`
           *  256 - `_.ary`
           *  512 - `_.flip`
           * @param {*} [thisArg] The `this` binding of `func`.
           * @param {Array} [partials] The arguments to be partially applied.
           * @param {Array} [holders] The `partials` placeholder indexes.
           * @param {Array} [argPos] The argument positions of the new function.
           * @param {number} [ary] The arity cap of `func`.
           * @param {number} [arity] The arity of `func`.
           * @returns {Function} Returns the new wrapped function.
           */
          function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
            var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
            if (!isBindKey && typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            var length = partials ? partials.length : 0;
            if (!length) {
              bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
              partials = holders = undefined;
            }
            ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
            arity = arity === undefined ? arity : toInteger(arity);
            length -= holders ? holders.length : 0;
            if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
              var partialsRight = partials,
                holdersRight = holders;
              partials = holders = undefined;
            }
            var data = isBindKey ? undefined : getData(func);
            var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];
            if (data) {
              mergeData(newData, data);
            }
            func = newData[0];
            bitmask = newData[1];
            thisArg = newData[2];
            partials = newData[3];
            holders = newData[4];
            arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
            if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
              bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
            }
            if (!bitmask || bitmask == WRAP_BIND_FLAG) {
              var result = createBind(func, bitmask, thisArg);
            } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
              result = createCurry(func, bitmask, arity);
            } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
              result = createPartial(func, bitmask, thisArg, partials);
            } else {
              result = createHybrid.apply(undefined, newData);
            }
            var setter = data ? baseSetData : setData;
            return setWrapToString(setter(result, newData), func, bitmask);
          }

          /**
           * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
           * of source objects to the destination object for all destination properties
           * that resolve to `undefined`.
           *
           * @private
           * @param {*} objValue The destination value.
           * @param {*} srcValue The source value.
           * @param {string} key The key of the property to assign.
           * @param {Object} object The parent object of `objValue`.
           * @returns {*} Returns the value to assign.
           */
          function customDefaultsAssignIn(objValue, srcValue, key, object) {
            if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
              return srcValue;
            }
            return objValue;
          }

          /**
           * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
           * objects into destination objects that are passed thru.
           *
           * @private
           * @param {*} objValue The destination value.
           * @param {*} srcValue The source value.
           * @param {string} key The key of the property to merge.
           * @param {Object} object The parent object of `objValue`.
           * @param {Object} source The parent object of `srcValue`.
           * @param {Object} [stack] Tracks traversed source values and their merged
           *  counterparts.
           * @returns {*} Returns the value to assign.
           */
          function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
            if (isObject(objValue) && isObject(srcValue)) {
              // Recursively merge objects and arrays (susceptible to call stack limits).
              stack.set(srcValue, objValue);
              baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
              stack['delete'](srcValue);
            }
            return objValue;
          }

          /**
           * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
           * objects.
           *
           * @private
           * @param {*} value The value to inspect.
           * @param {string} key The key of the property to inspect.
           * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
           */
          function customOmitClone(value) {
            return isPlainObject(value) ? undefined : value;
          }

          /**
           * A specialized version of `baseIsEqualDeep` for arrays with support for
           * partial deep comparisons.
           *
           * @private
           * @param {Array} array The array to compare.
           * @param {Array} other The other array to compare.
           * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
           * @param {Function} customizer The function to customize comparisons.
           * @param {Function} equalFunc The function to determine equivalents of values.
           * @param {Object} stack Tracks traversed `array` and `other` objects.
           * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
           */
          function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
              arrLength = array.length,
              othLength = other.length;
            if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
              return false;
            }
            // Check that cyclic values are equal.
            var arrStacked = stack.get(array);
            var othStacked = stack.get(other);
            if (arrStacked && othStacked) {
              return arrStacked == other && othStacked == array;
            }
            var index = -1,
              result = true,
              seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
            stack.set(array, other);
            stack.set(other, array);

            // Ignore non-index properties.
            while (++index < arrLength) {
              var arrValue = array[index],
                othValue = other[index];
              if (customizer) {
                var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
              }
              if (compared !== undefined) {
                if (compared) {
                  continue;
                }
                result = false;
                break;
              }
              // Recursively compare arrays (susceptible to call stack limits).
              if (seen) {
                if (!arraySome(other, function (othValue, othIndex) {
                  if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                    return seen.push(othIndex);
                  }
                })) {
                  result = false;
                  break;
                }
              } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                result = false;
                break;
              }
            }
            stack['delete'](array);
            stack['delete'](other);
            return result;
          }

          /**
           * A specialized version of `baseIsEqualDeep` for comparing objects of
           * the same `toStringTag`.
           *
           * **Note:** This function only supports comparing values with tags of
           * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
           *
           * @private
           * @param {Object} object The object to compare.
           * @param {Object} other The other object to compare.
           * @param {string} tag The `toStringTag` of the objects to compare.
           * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
           * @param {Function} customizer The function to customize comparisons.
           * @param {Function} equalFunc The function to determine equivalents of values.
           * @param {Object} stack Tracks traversed `object` and `other` objects.
           * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
           */
          function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
            switch (tag) {
              case dataViewTag:
                if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                  return false;
                }
                object = object.buffer;
                other = other.buffer;
              case arrayBufferTag:
                if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
                  return false;
                }
                return true;
              case boolTag:
              case dateTag:
              case numberTag:
                // Coerce booleans to `1` or `0` and dates to milliseconds.
                // Invalid dates are coerced to `NaN`.
                return eq(+object, +other);
              case errorTag:
                return object.name == other.name && object.message == other.message;
              case regexpTag:
              case stringTag:
                // Coerce regexes to strings and treat strings, primitives and objects,
                // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
                // for more details.
                return object == other + '';
              case mapTag:
                var convert = mapToArray;
              case setTag:
                var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                convert || (convert = setToArray);
                if (object.size != other.size && !isPartial) {
                  return false;
                }
                // Assume cyclic values are equal.
                var stacked = stack.get(object);
                if (stacked) {
                  return stacked == other;
                }
                bitmask |= COMPARE_UNORDERED_FLAG;

                // Recursively compare objects (susceptible to call stack limits).
                stack.set(object, other);
                var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                stack['delete'](object);
                return result;
              case symbolTag:
                if (symbolValueOf) {
                  return symbolValueOf.call(object) == symbolValueOf.call(other);
                }
            }
            return false;
          }

          /**
           * A specialized version of `baseIsEqualDeep` for objects with support for
           * partial deep comparisons.
           *
           * @private
           * @param {Object} object The object to compare.
           * @param {Object} other The other object to compare.
           * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
           * @param {Function} customizer The function to customize comparisons.
           * @param {Function} equalFunc The function to determine equivalents of values.
           * @param {Object} stack Tracks traversed `object` and `other` objects.
           * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
           */
          function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
              objProps = getAllKeys(object),
              objLength = objProps.length,
              othProps = getAllKeys(other),
              othLength = othProps.length;
            if (objLength != othLength && !isPartial) {
              return false;
            }
            var index = objLength;
            while (index--) {
              var key = objProps[index];
              if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
                return false;
              }
            }
            // Check that cyclic values are equal.
            var objStacked = stack.get(object);
            var othStacked = stack.get(other);
            if (objStacked && othStacked) {
              return objStacked == other && othStacked == object;
            }
            var result = true;
            stack.set(object, other);
            stack.set(other, object);
            var skipCtor = isPartial;
            while (++index < objLength) {
              key = objProps[index];
              var objValue = object[key],
                othValue = other[key];
              if (customizer) {
                var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
              }
              // Recursively compare objects (susceptible to call stack limits).
              if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                result = false;
                break;
              }
              skipCtor || (skipCtor = key == 'constructor');
            }
            if (result && !skipCtor) {
              var objCtor = object.constructor,
                othCtor = other.constructor;

              // Non `Object` object instances with different constructors are not equal.
              if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
                result = false;
              }
            }
            stack['delete'](object);
            stack['delete'](other);
            return result;
          }

          /**
           * A specialized version of `baseRest` which flattens the rest array.
           *
           * @private
           * @param {Function} func The function to apply a rest parameter to.
           * @returns {Function} Returns the new function.
           */
          function flatRest(func) {
            return setToString(overRest(func, undefined, flatten), func + '');
          }

          /**
           * Creates an array of own enumerable property names and symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names and symbols.
           */
          function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
          }

          /**
           * Creates an array of own and inherited enumerable property names and
           * symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names and symbols.
           */
          function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn);
          }

          /**
           * Gets metadata for `func`.
           *
           * @private
           * @param {Function} func The function to query.
           * @returns {*} Returns the metadata for `func`.
           */
          var getData = !metaMap ? noop : function (func) {
            return metaMap.get(func);
          };

          /**
           * Gets the name of `func`.
           *
           * @private
           * @param {Function} func The function to query.
           * @returns {string} Returns the function name.
           */
          function getFuncName(func) {
            var result = func.name + '',
              array = realNames[result],
              length = hasOwnProperty.call(realNames, result) ? array.length : 0;
            while (length--) {
              var data = array[length],
                otherFunc = data.func;
              if (otherFunc == null || otherFunc == func) {
                return data.name;
              }
            }
            return result;
          }

          /**
           * Gets the argument placeholder value for `func`.
           *
           * @private
           * @param {Function} func The function to inspect.
           * @returns {*} Returns the placeholder value.
           */
          function getHolder(func) {
            var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
            return object.placeholder;
          }

          /**
           * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
           * this function returns the custom method, otherwise it returns `baseIteratee`.
           * If arguments are provided, the chosen function is invoked with them and
           * its result is returned.
           *
           * @private
           * @param {*} [value] The value to convert to an iteratee.
           * @param {number} [arity] The arity of the created iteratee.
           * @returns {Function} Returns the chosen function or its result.
           */
          function getIteratee() {
            var result = lodash.iteratee || iteratee;
            result = result === iteratee ? baseIteratee : result;
            return arguments.length ? result(arguments[0], arguments[1]) : result;
          }

          /**
           * Gets the data for `map`.
           *
           * @private
           * @param {Object} map The map to query.
           * @param {string} key The reference key.
           * @returns {*} Returns the map data.
           */
          function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
          }

          /**
           * Gets the property names, values, and compare flags of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the match data of `object`.
           */
          function getMatchData(object) {
            var result = keys(object),
              length = result.length;
            while (length--) {
              var key = result[length],
                value = object[key];
              result[length] = [key, value, isStrictComparable(value)];
            }
            return result;
          }

          /**
           * Gets the native function at `key` of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {string} key The key of the method to get.
           * @returns {*} Returns the function if it's native, else `undefined`.
           */
          function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : undefined;
          }

          /**
           * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
           *
           * @private
           * @param {*} value The value to query.
           * @returns {string} Returns the raw `toStringTag`.
           */
          function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag),
              tag = value[symToStringTag];
            try {
              value[symToStringTag] = undefined;
              var unmasked = true;
            } catch (e) {}
            var result = nativeObjectToString.call(value);
            if (unmasked) {
              if (isOwn) {
                value[symToStringTag] = tag;
              } else {
                delete value[symToStringTag];
              }
            }
            return result;
          }

          /**
           * Creates an array of the own enumerable symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of symbols.
           */
          var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
            if (object == null) {
              return [];
            }
            object = Object(object);
            return arrayFilter(nativeGetSymbols(object), function (symbol) {
              return propertyIsEnumerable.call(object, symbol);
            });
          };

          /**
           * Creates an array of the own and inherited enumerable symbols of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of symbols.
           */
          var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
            var result = [];
            while (object) {
              arrayPush(result, getSymbols(object));
              object = getPrototype(object);
            }
            return result;
          };

          /**
           * Gets the `toStringTag` of `value`.
           *
           * @private
           * @param {*} value The value to query.
           * @returns {string} Returns the `toStringTag`.
           */
          var getTag = baseGetTag;

          // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
          if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
            getTag = function getTag(value) {
              var result = baseGetTag(value),
                Ctor = result == objectTag ? value.constructor : undefined,
                ctorString = Ctor ? toSource(Ctor) : '';
              if (ctorString) {
                switch (ctorString) {
                  case dataViewCtorString:
                    return dataViewTag;
                  case mapCtorString:
                    return mapTag;
                  case promiseCtorString:
                    return promiseTag;
                  case setCtorString:
                    return setTag;
                  case weakMapCtorString:
                    return weakMapTag;
                }
              }
              return result;
            };
          }

          /**
           * Gets the view, applying any `transforms` to the `start` and `end` positions.
           *
           * @private
           * @param {number} start The start of the view.
           * @param {number} end The end of the view.
           * @param {Array} transforms The transformations to apply to the view.
           * @returns {Object} Returns an object containing the `start` and `end`
           *  positions of the view.
           */
          function getView(start, end, transforms) {
            var index = -1,
              length = transforms.length;
            while (++index < length) {
              var data = transforms[index],
                size = data.size;
              switch (data.type) {
                case 'drop':
                  start += size;
                  break;
                case 'dropRight':
                  end -= size;
                  break;
                case 'take':
                  end = nativeMin(end, start + size);
                  break;
                case 'takeRight':
                  start = nativeMax(start, end - size);
                  break;
              }
            }
            return {
              'start': start,
              'end': end
            };
          }

          /**
           * Extracts wrapper details from the `source` body comment.
           *
           * @private
           * @param {string} source The source to inspect.
           * @returns {Array} Returns the wrapper details.
           */
          function getWrapDetails(source) {
            var match = source.match(reWrapDetails);
            return match ? match[1].split(reSplitDetails) : [];
          }

          /**
           * Checks if `path` exists on `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Array|string} path The path to check.
           * @param {Function} hasFunc The function to check properties.
           * @returns {boolean} Returns `true` if `path` exists, else `false`.
           */
          function hasPath(object, path, hasFunc) {
            path = castPath(path, object);
            var index = -1,
              length = path.length,
              result = false;
            while (++index < length) {
              var key = toKey(path[index]);
              if (!(result = object != null && hasFunc(object, key))) {
                break;
              }
              object = object[key];
            }
            if (result || ++index != length) {
              return result;
            }
            length = object == null ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
          }

          /**
           * Initializes an array clone.
           *
           * @private
           * @param {Array} array The array to clone.
           * @returns {Array} Returns the initialized clone.
           */
          function initCloneArray(array) {
            var length = array.length,
              result = new array.constructor(length);

            // Add properties assigned by `RegExp#exec`.
            if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
              result.index = array.index;
              result.input = array.input;
            }
            return result;
          }

          /**
           * Initializes an object clone.
           *
           * @private
           * @param {Object} object The object to clone.
           * @returns {Object} Returns the initialized clone.
           */
          function initCloneObject(object) {
            return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
          }

          /**
           * Initializes an object clone based on its `toStringTag`.
           *
           * **Note:** This function only supports cloning values with tags of
           * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
           *
           * @private
           * @param {Object} object The object to clone.
           * @param {string} tag The `toStringTag` of the object to clone.
           * @param {boolean} [isDeep] Specify a deep clone.
           * @returns {Object} Returns the initialized clone.
           */
          function initCloneByTag(object, tag, isDeep) {
            var Ctor = object.constructor;
            switch (tag) {
              case arrayBufferTag:
                return cloneArrayBuffer(object);
              case boolTag:
              case dateTag:
                return new Ctor(+object);
              case dataViewTag:
                return cloneDataView(object, isDeep);
              case float32Tag:
              case float64Tag:
              case int8Tag:
              case int16Tag:
              case int32Tag:
              case uint8Tag:
              case uint8ClampedTag:
              case uint16Tag:
              case uint32Tag:
                return cloneTypedArray(object, isDeep);
              case mapTag:
                return new Ctor();
              case numberTag:
              case stringTag:
                return new Ctor(object);
              case regexpTag:
                return cloneRegExp(object);
              case setTag:
                return new Ctor();
              case symbolTag:
                return cloneSymbol(object);
            }
          }

          /**
           * Inserts wrapper `details` in a comment at the top of the `source` body.
           *
           * @private
           * @param {string} source The source to modify.
           * @returns {Array} details The details to insert.
           * @returns {string} Returns the modified source.
           */
          function insertWrapDetails(source, details) {
            var length = details.length;
            if (!length) {
              return source;
            }
            var lastIndex = length - 1;
            details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
            details = details.join(length > 2 ? ', ' : ' ');
            return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
          }

          /**
           * Checks if `value` is a flattenable `arguments` object or array.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
           */
          function isFlattenable(value) {
            return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
          }

          /**
           * Checks if `value` is a valid array-like index.
           *
           * @private
           * @param {*} value The value to check.
           * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
           * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
           */
          function isIndex(value, length) {
            var type = typeof value;
            length = length == null ? MAX_SAFE_INTEGER : length;
            return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
          }

          /**
           * Checks if the given arguments are from an iteratee call.
           *
           * @private
           * @param {*} value The potential iteratee value argument.
           * @param {*} index The potential iteratee index or key argument.
           * @param {*} object The potential iteratee object argument.
           * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
           *  else `false`.
           */
          function isIterateeCall(value, index, object) {
            if (!isObject(object)) {
              return false;
            }
            var type = typeof index;
            if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
              return eq(object[index], value);
            }
            return false;
          }

          /**
           * Checks if `value` is a property name and not a property path.
           *
           * @private
           * @param {*} value The value to check.
           * @param {Object} [object] The object to query keys on.
           * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
           */
          function isKey(value, object) {
            if (isArray(value)) {
              return false;
            }
            var type = typeof value;
            if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
              return true;
            }
            return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
          }

          /**
           * Checks if `value` is suitable for use as unique object key.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
           */
          function isKeyable(value) {
            var type = typeof value;
            return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
          }

          /**
           * Checks if `func` has a lazy counterpart.
           *
           * @private
           * @param {Function} func The function to check.
           * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
           *  else `false`.
           */
          function isLaziable(func) {
            var funcName = getFuncName(func),
              other = lodash[funcName];
            if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
              return false;
            }
            if (func === other) {
              return true;
            }
            var data = getData(other);
            return !!data && func === data[0];
          }

          /**
           * Checks if `func` has its source masked.
           *
           * @private
           * @param {Function} func The function to check.
           * @returns {boolean} Returns `true` if `func` is masked, else `false`.
           */
          function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
          }

          /**
           * Checks if `func` is capable of being masked.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
           */
          var isMaskable = coreJsData ? isFunction : stubFalse;

          /**
           * Checks if `value` is likely a prototype object.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
           */
          function isPrototype(value) {
            var Ctor = value && value.constructor,
              proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
            return value === proto;
          }

          /**
           * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
           *
           * @private
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` if suitable for strict
           *  equality comparisons, else `false`.
           */
          function isStrictComparable(value) {
            return value === value && !isObject(value);
          }

          /**
           * A specialized version of `matchesProperty` for source values suitable
           * for strict equality comparisons, i.e. `===`.
           *
           * @private
           * @param {string} key The key of the property to get.
           * @param {*} srcValue The value to match.
           * @returns {Function} Returns the new spec function.
           */
          function matchesStrictComparable(key, srcValue) {
            return function (object) {
              if (object == null) {
                return false;
              }
              return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
            };
          }

          /**
           * A specialized version of `_.memoize` which clears the memoized function's
           * cache when it exceeds `MAX_MEMOIZE_SIZE`.
           *
           * @private
           * @param {Function} func The function to have its output memoized.
           * @returns {Function} Returns the new memoized function.
           */
          function memoizeCapped(func) {
            var result = memoize(func, function (key) {
              if (cache.size === MAX_MEMOIZE_SIZE) {
                cache.clear();
              }
              return key;
            });
            var cache = result.cache;
            return result;
          }

          /**
           * Merges the function metadata of `source` into `data`.
           *
           * Merging metadata reduces the number of wrappers used to invoke a function.
           * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
           * may be applied regardless of execution order. Methods like `_.ary` and
           * `_.rearg` modify function arguments, making the order in which they are
           * executed important, preventing the merging of metadata. However, we make
           * an exception for a safe combined case where curried functions have `_.ary`
           * and or `_.rearg` applied.
           *
           * @private
           * @param {Array} data The destination metadata.
           * @param {Array} source The source metadata.
           * @returns {Array} Returns `data`.
           */
          function mergeData(data, source) {
            var bitmask = data[1],
              srcBitmask = source[1],
              newBitmask = bitmask | srcBitmask,
              isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
            var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;

            // Exit early if metadata can't be merged.
            if (!(isCommon || isCombo)) {
              return data;
            }
            // Use source `thisArg` if available.
            if (srcBitmask & WRAP_BIND_FLAG) {
              data[2] = source[2];
              // Set when currying a bound function.
              newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
            }
            // Compose partial arguments.
            var value = source[3];
            if (value) {
              var partials = data[3];
              data[3] = partials ? composeArgs(partials, value, source[4]) : value;
              data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
            }
            // Compose partial right arguments.
            value = source[5];
            if (value) {
              partials = data[5];
              data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
              data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
            }
            // Use source `argPos` if available.
            value = source[7];
            if (value) {
              data[7] = value;
            }
            // Use source `ary` if it's smaller.
            if (srcBitmask & WRAP_ARY_FLAG) {
              data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
            }
            // Use source `arity` if one is not provided.
            if (data[9] == null) {
              data[9] = source[9];
            }
            // Use source `func` and merge bitmasks.
            data[0] = source[0];
            data[1] = newBitmask;
            return data;
          }

          /**
           * This function is like
           * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
           * except that it includes inherited enumerable properties.
           *
           * @private
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           */
          function nativeKeysIn(object) {
            var result = [];
            if (object != null) {
              for (var key in Object(object)) {
                result.push(key);
              }
            }
            return result;
          }

          /**
           * Converts `value` to a string using `Object.prototype.toString`.
           *
           * @private
           * @param {*} value The value to convert.
           * @returns {string} Returns the converted string.
           */
          function objectToString(value) {
            return nativeObjectToString.call(value);
          }

          /**
           * A specialized version of `baseRest` which transforms the rest array.
           *
           * @private
           * @param {Function} func The function to apply a rest parameter to.
           * @param {number} [start=func.length-1] The start position of the rest parameter.
           * @param {Function} transform The rest array transform.
           * @returns {Function} Returns the new function.
           */
          function overRest(func, start, transform) {
            start = nativeMax(start === undefined ? func.length - 1 : start, 0);
            return function () {
              var args = arguments,
                index = -1,
                length = nativeMax(args.length - start, 0),
                array = Array(length);
              while (++index < length) {
                array[index] = args[start + index];
              }
              index = -1;
              var otherArgs = Array(start + 1);
              while (++index < start) {
                otherArgs[index] = args[index];
              }
              otherArgs[start] = transform(array);
              return apply(func, this, otherArgs);
            };
          }

          /**
           * Gets the parent value at `path` of `object`.
           *
           * @private
           * @param {Object} object The object to query.
           * @param {Array} path The path to get the parent value of.
           * @returns {*} Returns the parent value.
           */
          function parent(object, path) {
            return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
          }

          /**
           * Reorder `array` according to the specified indexes where the element at
           * the first index is assigned as the first element, the element at
           * the second index is assigned as the second element, and so on.
           *
           * @private
           * @param {Array} array The array to reorder.
           * @param {Array} indexes The arranged array indexes.
           * @returns {Array} Returns `array`.
           */
          function reorder(array, indexes) {
            var arrLength = array.length,
              length = nativeMin(indexes.length, arrLength),
              oldArray = copyArray(array);
            while (length--) {
              var index = indexes[length];
              array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
            }
            return array;
          }

          /**
           * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
           *
           * @private
           * @param {Object} object The object to query.
           * @param {string} key The key of the property to get.
           * @returns {*} Returns the property value.
           */
          function safeGet(object, key) {
            if (key === 'constructor' && typeof object[key] === 'function') {
              return;
            }
            if (key == '__proto__') {
              return;
            }
            return object[key];
          }

          /**
           * Sets metadata for `func`.
           *
           * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
           * period of time, it will trip its breaker and transition to an identity
           * function to avoid garbage collection pauses in V8. See
           * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
           * for more details.
           *
           * @private
           * @param {Function} func The function to associate metadata with.
           * @param {*} data The metadata.
           * @returns {Function} Returns `func`.
           */
          var setData = shortOut(baseSetData);

          /**
           * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
           *
           * @private
           * @param {Function} func The function to delay.
           * @param {number} wait The number of milliseconds to delay invocation.
           * @returns {number|Object} Returns the timer id or timeout object.
           */
          var setTimeout = ctxSetTimeout || function (func, wait) {
            return root.setTimeout(func, wait);
          };

          /**
           * Sets the `toString` method of `func` to return `string`.
           *
           * @private
           * @param {Function} func The function to modify.
           * @param {Function} string The `toString` result.
           * @returns {Function} Returns `func`.
           */
          var setToString = shortOut(baseSetToString);

          /**
           * Sets the `toString` method of `wrapper` to mimic the source of `reference`
           * with wrapper details in a comment at the top of the source body.
           *
           * @private
           * @param {Function} wrapper The function to modify.
           * @param {Function} reference The reference function.
           * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
           * @returns {Function} Returns `wrapper`.
           */
          function setWrapToString(wrapper, reference, bitmask) {
            var source = reference + '';
            return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
          }

          /**
           * Creates a function that'll short out and invoke `identity` instead
           * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
           * milliseconds.
           *
           * @private
           * @param {Function} func The function to restrict.
           * @returns {Function} Returns the new shortable function.
           */
          function shortOut(func) {
            var count = 0,
              lastCalled = 0;
            return function () {
              var stamp = nativeNow(),
                remaining = HOT_SPAN - (stamp - lastCalled);
              lastCalled = stamp;
              if (remaining > 0) {
                if (++count >= HOT_COUNT) {
                  return arguments[0];
                }
              } else {
                count = 0;
              }
              return func.apply(undefined, arguments);
            };
          }

          /**
           * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
           *
           * @private
           * @param {Array} array The array to shuffle.
           * @param {number} [size=array.length] The size of `array`.
           * @returns {Array} Returns `array`.
           */
          function shuffleSelf(array, size) {
            var index = -1,
              length = array.length,
              lastIndex = length - 1;
            size = size === undefined ? length : size;
            while (++index < size) {
              var rand = baseRandom(index, lastIndex),
                value = array[rand];
              array[rand] = array[index];
              array[index] = value;
            }
            array.length = size;
            return array;
          }

          /**
           * Converts `string` to a property path array.
           *
           * @private
           * @param {string} string The string to convert.
           * @returns {Array} Returns the property path array.
           */
          var stringToPath = memoizeCapped(function (string) {
            var result = [];
            if (string.charCodeAt(0) === 46 /* . */) {
              result.push('');
            }
            string.replace(rePropName, function (match, number, quote, subString) {
              result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
            });
            return result;
          });

          /**
           * Converts `value` to a string key if it's not a string or symbol.
           *
           * @private
           * @param {*} value The value to inspect.
           * @returns {string|symbol} Returns the key.
           */
          function toKey(value) {
            if (typeof value == 'string' || isSymbol(value)) {
              return value;
            }
            var result = value + '';
            return result == '0' && 1 / value == -INFINITY ? '-0' : result;
          }

          /**
           * Converts `func` to its source code.
           *
           * @private
           * @param {Function} func The function to convert.
           * @returns {string} Returns the source code.
           */
          function toSource(func) {
            if (func != null) {
              try {
                return funcToString.call(func);
              } catch (e) {}
              try {
                return func + '';
              } catch (e) {}
            }
            return '';
          }

          /**
           * Updates wrapper `details` based on `bitmask` flags.
           *
           * @private
           * @returns {Array} details The details to modify.
           * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
           * @returns {Array} Returns `details`.
           */
          function updateWrapDetails(details, bitmask) {
            arrayEach(wrapFlags, function (pair) {
              var value = '_.' + pair[0];
              if (bitmask & pair[1] && !arrayIncludes(details, value)) {
                details.push(value);
              }
            });
            return details.sort();
          }

          /**
           * Creates a clone of `wrapper`.
           *
           * @private
           * @param {Object} wrapper The wrapper to clone.
           * @returns {Object} Returns the cloned wrapper.
           */
          function wrapperClone(wrapper) {
            if (wrapper instanceof LazyWrapper) {
              return wrapper.clone();
            }
            var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
            result.__actions__ = copyArray(wrapper.__actions__);
            result.__index__ = wrapper.__index__;
            result.__values__ = wrapper.__values__;
            return result;
          }

          /*------------------------------------------------------------------------*/

          /**
           * Creates an array of elements split into groups the length of `size`.
           * If `array` can't be split evenly, the final chunk will be the remaining
           * elements.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to process.
           * @param {number} [size=1] The length of each chunk
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Array} Returns the new array of chunks.
           * @example
           *
           * _.chunk(['a', 'b', 'c', 'd'], 2);
           * // => [['a', 'b'], ['c', 'd']]
           *
           * _.chunk(['a', 'b', 'c', 'd'], 3);
           * // => [['a', 'b', 'c'], ['d']]
           */
          function chunk(array, size, guard) {
            if (guard ? isIterateeCall(array, size, guard) : size === undefined) {
              size = 1;
            } else {
              size = nativeMax(toInteger(size), 0);
            }
            var length = array == null ? 0 : array.length;
            if (!length || size < 1) {
              return [];
            }
            var index = 0,
              resIndex = 0,
              result = Array(nativeCeil(length / size));
            while (index < length) {
              result[resIndex++] = baseSlice(array, index, index += size);
            }
            return result;
          }

          /**
           * Creates an array with all falsey values removed. The values `false`, `null`,
           * `0`, `""`, `undefined`, and `NaN` are falsey.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to compact.
           * @returns {Array} Returns the new array of filtered values.
           * @example
           *
           * _.compact([0, 1, false, 2, '', 3]);
           * // => [1, 2, 3]
           */
          function compact(array) {
            var index = -1,
              length = array == null ? 0 : array.length,
              resIndex = 0,
              result = [];
            while (++index < length) {
              var value = array[index];
              if (value) {
                result[resIndex++] = value;
              }
            }
            return result;
          }

          /**
           * Creates a new array concatenating `array` with any additional arrays
           * and/or values.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to concatenate.
           * @param {...*} [values] The values to concatenate.
           * @returns {Array} Returns the new concatenated array.
           * @example
           *
           * var array = [1];
           * var other = _.concat(array, 2, [3], [[4]]);
           *
           * console.log(other);
           * // => [1, 2, 3, [4]]
           *
           * console.log(array);
           * // => [1]
           */
          function concat() {
            var length = arguments.length;
            if (!length) {
              return [];
            }
            var args = Array(length - 1),
              array = arguments[0],
              index = length;
            while (index--) {
              args[index - 1] = arguments[index];
            }
            return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
          }

          /**
           * Creates an array of `array` values not included in the other given arrays
           * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons. The order and references of result values are
           * determined by the first array.
           *
           * **Note:** Unlike `_.pullAll`, this method returns a new array.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {...Array} [values] The values to exclude.
           * @returns {Array} Returns the new array of filtered values.
           * @see _.without, _.xor
           * @example
           *
           * _.difference([2, 1], [2, 3]);
           * // => [1]
           */
          var difference = baseRest(function (array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
          });

          /**
           * This method is like `_.difference` except that it accepts `iteratee` which
           * is invoked for each element of `array` and `values` to generate the criterion
           * by which they're compared. The order and references of result values are
           * determined by the first array. The iteratee is invoked with one argument:
           * (value).
           *
           * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {...Array} [values] The values to exclude.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {Array} Returns the new array of filtered values.
           * @example
           *
           * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
           * // => [1.2]
           *
           * // The `_.property` iteratee shorthand.
           * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
           * // => [{ 'x': 2 }]
           */
          var differenceBy = baseRest(function (array, values) {
            var iteratee = last(values);
            if (isArrayLikeObject(iteratee)) {
              iteratee = undefined;
            }
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
          });

          /**
           * This method is like `_.difference` except that it accepts `comparator`
           * which is invoked to compare elements of `array` to `values`. The order and
           * references of result values are determined by the first array. The comparator
           * is invoked with two arguments: (arrVal, othVal).
           *
           * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {...Array} [values] The values to exclude.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns the new array of filtered values.
           * @example
           *
           * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
           *
           * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
           * // => [{ 'x': 2, 'y': 1 }]
           */
          var differenceWith = baseRest(function (array, values) {
            var comparator = last(values);
            if (isArrayLikeObject(comparator)) {
              comparator = undefined;
            }
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
          });

          /**
           * Creates a slice of `array` with `n` elements dropped from the beginning.
           *
           * @static
           * @memberOf _
           * @since 0.5.0
           * @category Array
           * @param {Array} array The array to query.
           * @param {number} [n=1] The number of elements to drop.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * _.drop([1, 2, 3]);
           * // => [2, 3]
           *
           * _.drop([1, 2, 3], 2);
           * // => [3]
           *
           * _.drop([1, 2, 3], 5);
           * // => []
           *
           * _.drop([1, 2, 3], 0);
           * // => [1, 2, 3]
           */
          function drop(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, n < 0 ? 0 : n, length);
          }

          /**
           * Creates a slice of `array` with `n` elements dropped from the end.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to query.
           * @param {number} [n=1] The number of elements to drop.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * _.dropRight([1, 2, 3]);
           * // => [1, 2]
           *
           * _.dropRight([1, 2, 3], 2);
           * // => [1]
           *
           * _.dropRight([1, 2, 3], 5);
           * // => []
           *
           * _.dropRight([1, 2, 3], 0);
           * // => [1, 2, 3]
           */
          function dropRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, 0, n < 0 ? 0 : n);
          }

          /**
           * Creates a slice of `array` excluding elements dropped from the end.
           * Elements are dropped until `predicate` returns falsey. The predicate is
           * invoked with three arguments: (value, index, array).
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to query.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * var users = [
           *   { 'user': 'barney',  'active': true },
           *   { 'user': 'fred',    'active': false },
           *   { 'user': 'pebbles', 'active': false }
           * ];
           *
           * _.dropRightWhile(users, function(o) { return !o.active; });
           * // => objects for ['barney']
           *
           * // The `_.matches` iteratee shorthand.
           * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
           * // => objects for ['barney', 'fred']
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.dropRightWhile(users, ['active', false]);
           * // => objects for ['barney']
           *
           * // The `_.property` iteratee shorthand.
           * _.dropRightWhile(users, 'active');
           * // => objects for ['barney', 'fred', 'pebbles']
           */
          function dropRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
          }

          /**
           * Creates a slice of `array` excluding elements dropped from the beginning.
           * Elements are dropped until `predicate` returns falsey. The predicate is
           * invoked with three arguments: (value, index, array).
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to query.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * var users = [
           *   { 'user': 'barney',  'active': false },
           *   { 'user': 'fred',    'active': false },
           *   { 'user': 'pebbles', 'active': true }
           * ];
           *
           * _.dropWhile(users, function(o) { return !o.active; });
           * // => objects for ['pebbles']
           *
           * // The `_.matches` iteratee shorthand.
           * _.dropWhile(users, { 'user': 'barney', 'active': false });
           * // => objects for ['fred', 'pebbles']
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.dropWhile(users, ['active', false]);
           * // => objects for ['pebbles']
           *
           * // The `_.property` iteratee shorthand.
           * _.dropWhile(users, 'active');
           * // => objects for ['barney', 'fred', 'pebbles']
           */
          function dropWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
          }

          /**
           * Fills elements of `array` with `value` from `start` up to, but not
           * including, `end`.
           *
           * **Note:** This method mutates `array`.
           *
           * @static
           * @memberOf _
           * @since 3.2.0
           * @category Array
           * @param {Array} array The array to fill.
           * @param {*} value The value to fill `array` with.
           * @param {number} [start=0] The start position.
           * @param {number} [end=array.length] The end position.
           * @returns {Array} Returns `array`.
           * @example
           *
           * var array = [1, 2, 3];
           *
           * _.fill(array, 'a');
           * console.log(array);
           * // => ['a', 'a', 'a']
           *
           * _.fill(Array(3), 2);
           * // => [2, 2, 2]
           *
           * _.fill([4, 6, 8, 10], '*', 1, 3);
           * // => [4, '*', '*', 10]
           */
          function fill(array, value, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
              start = 0;
              end = length;
            }
            return baseFill(array, value, start, end);
          }

          /**
           * This method is like `_.find` except that it returns the index of the first
           * element `predicate` returns truthy for instead of the element itself.
           *
           * @static
           * @memberOf _
           * @since 1.1.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @param {number} [fromIndex=0] The index to search from.
           * @returns {number} Returns the index of the found element, else `-1`.
           * @example
           *
           * var users = [
           *   { 'user': 'barney',  'active': false },
           *   { 'user': 'fred',    'active': false },
           *   { 'user': 'pebbles', 'active': true }
           * ];
           *
           * _.findIndex(users, function(o) { return o.user == 'barney'; });
           * // => 0
           *
           * // The `_.matches` iteratee shorthand.
           * _.findIndex(users, { 'user': 'fred', 'active': false });
           * // => 1
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.findIndex(users, ['active', false]);
           * // => 0
           *
           * // The `_.property` iteratee shorthand.
           * _.findIndex(users, 'active');
           * // => 2
           */
          function findIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) {
              index = nativeMax(length + index, 0);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index);
          }

          /**
           * This method is like `_.findIndex` except that it iterates over elements
           * of `collection` from right to left.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @param {number} [fromIndex=array.length-1] The index to search from.
           * @returns {number} Returns the index of the found element, else `-1`.
           * @example
           *
           * var users = [
           *   { 'user': 'barney',  'active': true },
           *   { 'user': 'fred',    'active': false },
           *   { 'user': 'pebbles', 'active': false }
           * ];
           *
           * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
           * // => 2
           *
           * // The `_.matches` iteratee shorthand.
           * _.findLastIndex(users, { 'user': 'barney', 'active': true });
           * // => 0
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.findLastIndex(users, ['active', false]);
           * // => 2
           *
           * // The `_.property` iteratee shorthand.
           * _.findLastIndex(users, 'active');
           * // => 0
           */
          function findLastIndex(array, predicate, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = length - 1;
            if (fromIndex !== undefined) {
              index = toInteger(fromIndex);
              index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index, true);
          }

          /**
           * Flattens `array` a single level deep.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to flatten.
           * @returns {Array} Returns the new flattened array.
           * @example
           *
           * _.flatten([1, [2, [3, [4]], 5]]);
           * // => [1, 2, [3, [4]], 5]
           */
          function flatten(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, 1) : [];
          }

          /**
           * Recursively flattens `array`.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to flatten.
           * @returns {Array} Returns the new flattened array.
           * @example
           *
           * _.flattenDeep([1, [2, [3, [4]], 5]]);
           * // => [1, 2, 3, 4, 5]
           */
          function flattenDeep(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseFlatten(array, INFINITY) : [];
          }

          /**
           * Recursively flatten `array` up to `depth` times.
           *
           * @static
           * @memberOf _
           * @since 4.4.0
           * @category Array
           * @param {Array} array The array to flatten.
           * @param {number} [depth=1] The maximum recursion depth.
           * @returns {Array} Returns the new flattened array.
           * @example
           *
           * var array = [1, [2, [3, [4]], 5]];
           *
           * _.flattenDepth(array, 1);
           * // => [1, 2, [3, [4]], 5]
           *
           * _.flattenDepth(array, 2);
           * // => [1, 2, 3, [4], 5]
           */
          function flattenDepth(array, depth) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(array, depth);
          }

          /**
           * The inverse of `_.toPairs`; this method returns an object composed
           * from key-value `pairs`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} pairs The key-value pairs.
           * @returns {Object} Returns the new object.
           * @example
           *
           * _.fromPairs([['a', 1], ['b', 2]]);
           * // => { 'a': 1, 'b': 2 }
           */
          function fromPairs(pairs) {
            var index = -1,
              length = pairs == null ? 0 : pairs.length,
              result = {};
            while (++index < length) {
              var pair = pairs[index];
              result[pair[0]] = pair[1];
            }
            return result;
          }

          /**
           * Gets the first element of `array`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @alias first
           * @category Array
           * @param {Array} array The array to query.
           * @returns {*} Returns the first element of `array`.
           * @example
           *
           * _.head([1, 2, 3]);
           * // => 1
           *
           * _.head([]);
           * // => undefined
           */
          function head(array) {
            return array && array.length ? array[0] : undefined;
          }

          /**
           * Gets the index at which the first occurrence of `value` is found in `array`
           * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons. If `fromIndex` is negative, it's used as the
           * offset from the end of `array`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {*} value The value to search for.
           * @param {number} [fromIndex=0] The index to search from.
           * @returns {number} Returns the index of the matched value, else `-1`.
           * @example
           *
           * _.indexOf([1, 2, 1, 2], 2);
           * // => 1
           *
           * // Search from the `fromIndex`.
           * _.indexOf([1, 2, 1, 2], 2, 2);
           * // => 3
           */
          function indexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = fromIndex == null ? 0 : toInteger(fromIndex);
            if (index < 0) {
              index = nativeMax(length + index, 0);
            }
            return baseIndexOf(array, value, index);
          }

          /**
           * Gets all but the last element of `array`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to query.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * _.initial([1, 2, 3]);
           * // => [1, 2]
           */
          function initial(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 0, -1) : [];
          }

          /**
           * Creates an array of unique values that are included in all given arrays
           * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons. The order and references of result values are
           * determined by the first array.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {...Array} [arrays] The arrays to inspect.
           * @returns {Array} Returns the new array of intersecting values.
           * @example
           *
           * _.intersection([2, 1], [2, 3]);
           * // => [2]
           */
          var intersection = baseRest(function (arrays) {
            var mapped = arrayMap(arrays, castArrayLikeObject);
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
          });

          /**
           * This method is like `_.intersection` except that it accepts `iteratee`
           * which is invoked for each element of each `arrays` to generate the criterion
           * by which they're compared. The order and references of result values are
           * determined by the first array. The iteratee is invoked with one argument:
           * (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {...Array} [arrays] The arrays to inspect.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {Array} Returns the new array of intersecting values.
           * @example
           *
           * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
           * // => [2.1]
           *
           * // The `_.property` iteratee shorthand.
           * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
           * // => [{ 'x': 1 }]
           */
          var intersectionBy = baseRest(function (arrays) {
            var iteratee = last(arrays),
              mapped = arrayMap(arrays, castArrayLikeObject);
            if (iteratee === last(mapped)) {
              iteratee = undefined;
            } else {
              mapped.pop();
            }
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
          });

          /**
           * This method is like `_.intersection` except that it accepts `comparator`
           * which is invoked to compare elements of `arrays`. The order and references
           * of result values are determined by the first array. The comparator is
           * invoked with two arguments: (arrVal, othVal).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {...Array} [arrays] The arrays to inspect.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns the new array of intersecting values.
           * @example
           *
           * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
           * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
           *
           * _.intersectionWith(objects, others, _.isEqual);
           * // => [{ 'x': 1, 'y': 2 }]
           */
          var intersectionWith = baseRest(function (arrays) {
            var comparator = last(arrays),
              mapped = arrayMap(arrays, castArrayLikeObject);
            comparator = typeof comparator == 'function' ? comparator : undefined;
            if (comparator) {
              mapped.pop();
            }
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
          });

          /**
           * Converts all elements in `array` into a string separated by `separator`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to convert.
           * @param {string} [separator=','] The element separator.
           * @returns {string} Returns the joined string.
           * @example
           *
           * _.join(['a', 'b', 'c'], '~');
           * // => 'a~b~c'
           */
          function join(array, separator) {
            return array == null ? '' : nativeJoin.call(array, separator);
          }

          /**
           * Gets the last element of `array`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to query.
           * @returns {*} Returns the last element of `array`.
           * @example
           *
           * _.last([1, 2, 3]);
           * // => 3
           */
          function last(array) {
            var length = array == null ? 0 : array.length;
            return length ? array[length - 1] : undefined;
          }

          /**
           * This method is like `_.indexOf` except that it iterates over elements of
           * `array` from right to left.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {*} value The value to search for.
           * @param {number} [fromIndex=array.length-1] The index to search from.
           * @returns {number} Returns the index of the matched value, else `-1`.
           * @example
           *
           * _.lastIndexOf([1, 2, 1, 2], 2);
           * // => 3
           *
           * // Search from the `fromIndex`.
           * _.lastIndexOf([1, 2, 1, 2], 2, 2);
           * // => 1
           */
          function lastIndexOf(array, value, fromIndex) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return -1;
            }
            var index = length;
            if (fromIndex !== undefined) {
              index = toInteger(fromIndex);
              index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
          }

          /**
           * Gets the element at index `n` of `array`. If `n` is negative, the nth
           * element from the end is returned.
           *
           * @static
           * @memberOf _
           * @since 4.11.0
           * @category Array
           * @param {Array} array The array to query.
           * @param {number} [n=0] The index of the element to return.
           * @returns {*} Returns the nth element of `array`.
           * @example
           *
           * var array = ['a', 'b', 'c', 'd'];
           *
           * _.nth(array, 1);
           * // => 'b'
           *
           * _.nth(array, -2);
           * // => 'c';
           */
          function nth(array, n) {
            return array && array.length ? baseNth(array, toInteger(n)) : undefined;
          }

          /**
           * Removes all given values from `array` using
           * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons.
           *
           * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
           * to remove elements from an array by predicate.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @category Array
           * @param {Array} array The array to modify.
           * @param {...*} [values] The values to remove.
           * @returns {Array} Returns `array`.
           * @example
           *
           * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
           *
           * _.pull(array, 'a', 'c');
           * console.log(array);
           * // => ['b', 'b']
           */
          var pull = baseRest(pullAll);

          /**
           * This method is like `_.pull` except that it accepts an array of values to remove.
           *
           * **Note:** Unlike `_.difference`, this method mutates `array`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to modify.
           * @param {Array} values The values to remove.
           * @returns {Array} Returns `array`.
           * @example
           *
           * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
           *
           * _.pullAll(array, ['a', 'c']);
           * console.log(array);
           * // => ['b', 'b']
           */
          function pullAll(array, values) {
            return array && array.length && values && values.length ? basePullAll(array, values) : array;
          }

          /**
           * This method is like `_.pullAll` except that it accepts `iteratee` which is
           * invoked for each element of `array` and `values` to generate the criterion
           * by which they're compared. The iteratee is invoked with one argument: (value).
           *
           * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to modify.
           * @param {Array} values The values to remove.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {Array} Returns `array`.
           * @example
           *
           * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
           *
           * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
           * console.log(array);
           * // => [{ 'x': 2 }]
           */
          function pullAllBy(array, values, iteratee) {
            return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
          }

          /**
           * This method is like `_.pullAll` except that it accepts `comparator` which
           * is invoked to compare elements of `array` to `values`. The comparator is
           * invoked with two arguments: (arrVal, othVal).
           *
           * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
           *
           * @static
           * @memberOf _
           * @since 4.6.0
           * @category Array
           * @param {Array} array The array to modify.
           * @param {Array} values The values to remove.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns `array`.
           * @example
           *
           * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
           *
           * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
           * console.log(array);
           * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
           */
          function pullAllWith(array, values, comparator) {
            return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
          }

          /**
           * Removes elements from `array` corresponding to `indexes` and returns an
           * array of removed elements.
           *
           * **Note:** Unlike `_.at`, this method mutates `array`.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to modify.
           * @param {...(number|number[])} [indexes] The indexes of elements to remove.
           * @returns {Array} Returns the new array of removed elements.
           * @example
           *
           * var array = ['a', 'b', 'c', 'd'];
           * var pulled = _.pullAt(array, [1, 3]);
           *
           * console.log(array);
           * // => ['a', 'c']
           *
           * console.log(pulled);
           * // => ['b', 'd']
           */
          var pullAt = flatRest(function (array, indexes) {
            var length = array == null ? 0 : array.length,
              result = baseAt(array, indexes);
            basePullAt(array, arrayMap(indexes, function (index) {
              return isIndex(index, length) ? +index : index;
            }).sort(compareAscending));
            return result;
          });

          /**
           * Removes all elements from `array` that `predicate` returns truthy for
           * and returns an array of the removed elements. The predicate is invoked
           * with three arguments: (value, index, array).
           *
           * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
           * to pull elements from an array by value.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @category Array
           * @param {Array} array The array to modify.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the new array of removed elements.
           * @example
           *
           * var array = [1, 2, 3, 4];
           * var evens = _.remove(array, function(n) {
           *   return n % 2 == 0;
           * });
           *
           * console.log(array);
           * // => [1, 3]
           *
           * console.log(evens);
           * // => [2, 4]
           */
          function remove(array, predicate) {
            var result = [];
            if (!(array && array.length)) {
              return result;
            }
            var index = -1,
              indexes = [],
              length = array.length;
            predicate = getIteratee(predicate, 3);
            while (++index < length) {
              var value = array[index];
              if (predicate(value, index, array)) {
                result.push(value);
                indexes.push(index);
              }
            }
            basePullAt(array, indexes);
            return result;
          }

          /**
           * Reverses `array` so that the first element becomes the last, the second
           * element becomes the second to last, and so on.
           *
           * **Note:** This method mutates `array` and is based on
           * [`Array#reverse`](https://mdn.io/Array/reverse).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to modify.
           * @returns {Array} Returns `array`.
           * @example
           *
           * var array = [1, 2, 3];
           *
           * _.reverse(array);
           * // => [3, 2, 1]
           *
           * console.log(array);
           * // => [3, 2, 1]
           */
          function reverse(array) {
            return array == null ? array : nativeReverse.call(array);
          }

          /**
           * Creates a slice of `array` from `start` up to, but not including, `end`.
           *
           * **Note:** This method is used instead of
           * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
           * returned.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to slice.
           * @param {number} [start=0] The start position.
           * @param {number} [end=array.length] The end position.
           * @returns {Array} Returns the slice of `array`.
           */
          function slice(array, start, end) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
              start = 0;
              end = length;
            } else {
              start = start == null ? 0 : toInteger(start);
              end = end === undefined ? length : toInteger(end);
            }
            return baseSlice(array, start, end);
          }

          /**
           * Uses a binary search to determine the lowest index at which `value`
           * should be inserted into `array` in order to maintain its sort order.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The sorted array to inspect.
           * @param {*} value The value to evaluate.
           * @returns {number} Returns the index at which `value` should be inserted
           *  into `array`.
           * @example
           *
           * _.sortedIndex([30, 50], 40);
           * // => 1
           */
          function sortedIndex(array, value) {
            return baseSortedIndex(array, value);
          }

          /**
           * This method is like `_.sortedIndex` except that it accepts `iteratee`
           * which is invoked for `value` and each element of `array` to compute their
           * sort ranking. The iteratee is invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The sorted array to inspect.
           * @param {*} value The value to evaluate.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {number} Returns the index at which `value` should be inserted
           *  into `array`.
           * @example
           *
           * var objects = [{ 'x': 4 }, { 'x': 5 }];
           *
           * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
           * // => 0
           *
           * // The `_.property` iteratee shorthand.
           * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
           * // => 0
           */
          function sortedIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
          }

          /**
           * This method is like `_.indexOf` except that it performs a binary
           * search on a sorted `array`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {*} value The value to search for.
           * @returns {number} Returns the index of the matched value, else `-1`.
           * @example
           *
           * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
           * // => 1
           */
          function sortedIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
              var index = baseSortedIndex(array, value);
              if (index < length && eq(array[index], value)) {
                return index;
              }
            }
            return -1;
          }

          /**
           * This method is like `_.sortedIndex` except that it returns the highest
           * index at which `value` should be inserted into `array` in order to
           * maintain its sort order.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The sorted array to inspect.
           * @param {*} value The value to evaluate.
           * @returns {number} Returns the index at which `value` should be inserted
           *  into `array`.
           * @example
           *
           * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
           * // => 4
           */
          function sortedLastIndex(array, value) {
            return baseSortedIndex(array, value, true);
          }

          /**
           * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
           * which is invoked for `value` and each element of `array` to compute their
           * sort ranking. The iteratee is invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The sorted array to inspect.
           * @param {*} value The value to evaluate.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {number} Returns the index at which `value` should be inserted
           *  into `array`.
           * @example
           *
           * var objects = [{ 'x': 4 }, { 'x': 5 }];
           *
           * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
           * // => 1
           *
           * // The `_.property` iteratee shorthand.
           * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
           * // => 1
           */
          function sortedLastIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
          }

          /**
           * This method is like `_.lastIndexOf` except that it performs a binary
           * search on a sorted `array`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {*} value The value to search for.
           * @returns {number} Returns the index of the matched value, else `-1`.
           * @example
           *
           * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
           * // => 3
           */
          function sortedLastIndexOf(array, value) {
            var length = array == null ? 0 : array.length;
            if (length) {
              var index = baseSortedIndex(array, value, true) - 1;
              if (eq(array[index], value)) {
                return index;
              }
            }
            return -1;
          }

          /**
           * This method is like `_.uniq` except that it's designed and optimized
           * for sorted arrays.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @returns {Array} Returns the new duplicate free array.
           * @example
           *
           * _.sortedUniq([1, 1, 2]);
           * // => [1, 2]
           */
          function sortedUniq(array) {
            return array && array.length ? baseSortedUniq(array) : [];
          }

          /**
           * This method is like `_.uniqBy` except that it's designed and optimized
           * for sorted arrays.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {Function} [iteratee] The iteratee invoked per element.
           * @returns {Array} Returns the new duplicate free array.
           * @example
           *
           * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
           * // => [1.1, 2.3]
           */
          function sortedUniqBy(array, iteratee) {
            return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
          }

          /**
           * Gets all but the first element of `array`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to query.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * _.tail([1, 2, 3]);
           * // => [2, 3]
           */
          function tail(array) {
            var length = array == null ? 0 : array.length;
            return length ? baseSlice(array, 1, length) : [];
          }

          /**
           * Creates a slice of `array` with `n` elements taken from the beginning.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to query.
           * @param {number} [n=1] The number of elements to take.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * _.take([1, 2, 3]);
           * // => [1]
           *
           * _.take([1, 2, 3], 2);
           * // => [1, 2]
           *
           * _.take([1, 2, 3], 5);
           * // => [1, 2, 3]
           *
           * _.take([1, 2, 3], 0);
           * // => []
           */
          function take(array, n, guard) {
            if (!(array && array.length)) {
              return [];
            }
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, 0, n < 0 ? 0 : n);
          }

          /**
           * Creates a slice of `array` with `n` elements taken from the end.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to query.
           * @param {number} [n=1] The number of elements to take.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * _.takeRight([1, 2, 3]);
           * // => [3]
           *
           * _.takeRight([1, 2, 3], 2);
           * // => [2, 3]
           *
           * _.takeRight([1, 2, 3], 5);
           * // => [1, 2, 3]
           *
           * _.takeRight([1, 2, 3], 0);
           * // => []
           */
          function takeRight(array, n, guard) {
            var length = array == null ? 0 : array.length;
            if (!length) {
              return [];
            }
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, n < 0 ? 0 : n, length);
          }

          /**
           * Creates a slice of `array` with elements taken from the end. Elements are
           * taken until `predicate` returns falsey. The predicate is invoked with
           * three arguments: (value, index, array).
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to query.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * var users = [
           *   { 'user': 'barney',  'active': true },
           *   { 'user': 'fred',    'active': false },
           *   { 'user': 'pebbles', 'active': false }
           * ];
           *
           * _.takeRightWhile(users, function(o) { return !o.active; });
           * // => objects for ['fred', 'pebbles']
           *
           * // The `_.matches` iteratee shorthand.
           * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
           * // => objects for ['pebbles']
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.takeRightWhile(users, ['active', false]);
           * // => objects for ['fred', 'pebbles']
           *
           * // The `_.property` iteratee shorthand.
           * _.takeRightWhile(users, 'active');
           * // => []
           */
          function takeRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
          }

          /**
           * Creates a slice of `array` with elements taken from the beginning. Elements
           * are taken until `predicate` returns falsey. The predicate is invoked with
           * three arguments: (value, index, array).
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Array
           * @param {Array} array The array to query.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the slice of `array`.
           * @example
           *
           * var users = [
           *   { 'user': 'barney',  'active': false },
           *   { 'user': 'fred',    'active': false },
           *   { 'user': 'pebbles', 'active': true }
           * ];
           *
           * _.takeWhile(users, function(o) { return !o.active; });
           * // => objects for ['barney', 'fred']
           *
           * // The `_.matches` iteratee shorthand.
           * _.takeWhile(users, { 'user': 'barney', 'active': false });
           * // => objects for ['barney']
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.takeWhile(users, ['active', false]);
           * // => objects for ['barney', 'fred']
           *
           * // The `_.property` iteratee shorthand.
           * _.takeWhile(users, 'active');
           * // => []
           */
          function takeWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
          }

          /**
           * Creates an array of unique values, in order, from all given arrays using
           * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {...Array} [arrays] The arrays to inspect.
           * @returns {Array} Returns the new array of combined values.
           * @example
           *
           * _.union([2], [1, 2]);
           * // => [2, 1]
           */
          var union = baseRest(function (arrays) {
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
          });

          /**
           * This method is like `_.union` except that it accepts `iteratee` which is
           * invoked for each element of each `arrays` to generate the criterion by
           * which uniqueness is computed. Result values are chosen from the first
           * array in which the value occurs. The iteratee is invoked with one argument:
           * (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {...Array} [arrays] The arrays to inspect.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {Array} Returns the new array of combined values.
           * @example
           *
           * _.unionBy([2.1], [1.2, 2.3], Math.floor);
           * // => [2.1, 1.2]
           *
           * // The `_.property` iteratee shorthand.
           * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
           * // => [{ 'x': 1 }, { 'x': 2 }]
           */
          var unionBy = baseRest(function (arrays) {
            var iteratee = last(arrays);
            if (isArrayLikeObject(iteratee)) {
              iteratee = undefined;
            }
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
          });

          /**
           * This method is like `_.union` except that it accepts `comparator` which
           * is invoked to compare elements of `arrays`. Result values are chosen from
           * the first array in which the value occurs. The comparator is invoked
           * with two arguments: (arrVal, othVal).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {...Array} [arrays] The arrays to inspect.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns the new array of combined values.
           * @example
           *
           * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
           * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
           *
           * _.unionWith(objects, others, _.isEqual);
           * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
           */
          var unionWith = baseRest(function (arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == 'function' ? comparator : undefined;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
          });

          /**
           * Creates a duplicate-free version of an array, using
           * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons, in which only the first occurrence of each element
           * is kept. The order of result values is determined by the order they occur
           * in the array.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @returns {Array} Returns the new duplicate free array.
           * @example
           *
           * _.uniq([2, 1, 2]);
           * // => [2, 1]
           */
          function uniq(array) {
            return array && array.length ? baseUniq(array) : [];
          }

          /**
           * This method is like `_.uniq` except that it accepts `iteratee` which is
           * invoked for each element in `array` to generate the criterion by which
           * uniqueness is computed. The order of result values is determined by the
           * order they occur in the array. The iteratee is invoked with one argument:
           * (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {Array} Returns the new duplicate free array.
           * @example
           *
           * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
           * // => [2.1, 1.2]
           *
           * // The `_.property` iteratee shorthand.
           * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
           * // => [{ 'x': 1 }, { 'x': 2 }]
           */
          function uniqBy(array, iteratee) {
            return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
          }

          /**
           * This method is like `_.uniq` except that it accepts `comparator` which
           * is invoked to compare elements of `array`. The order of result values is
           * determined by the order they occur in the array.The comparator is invoked
           * with two arguments: (arrVal, othVal).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns the new duplicate free array.
           * @example
           *
           * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
           *
           * _.uniqWith(objects, _.isEqual);
           * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
           */
          function uniqWith(array, comparator) {
            comparator = typeof comparator == 'function' ? comparator : undefined;
            return array && array.length ? baseUniq(array, undefined, comparator) : [];
          }

          /**
           * This method is like `_.zip` except that it accepts an array of grouped
           * elements and creates an array regrouping the elements to their pre-zip
           * configuration.
           *
           * @static
           * @memberOf _
           * @since 1.2.0
           * @category Array
           * @param {Array} array The array of grouped elements to process.
           * @returns {Array} Returns the new array of regrouped elements.
           * @example
           *
           * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
           * // => [['a', 1, true], ['b', 2, false]]
           *
           * _.unzip(zipped);
           * // => [['a', 'b'], [1, 2], [true, false]]
           */
          function unzip(array) {
            if (!(array && array.length)) {
              return [];
            }
            var length = 0;
            array = arrayFilter(array, function (group) {
              if (isArrayLikeObject(group)) {
                length = nativeMax(group.length, length);
                return true;
              }
            });
            return baseTimes(length, function (index) {
              return arrayMap(array, baseProperty(index));
            });
          }

          /**
           * This method is like `_.unzip` except that it accepts `iteratee` to specify
           * how regrouped values should be combined. The iteratee is invoked with the
           * elements of each group: (...group).
           *
           * @static
           * @memberOf _
           * @since 3.8.0
           * @category Array
           * @param {Array} array The array of grouped elements to process.
           * @param {Function} [iteratee=_.identity] The function to combine
           *  regrouped values.
           * @returns {Array} Returns the new array of regrouped elements.
           * @example
           *
           * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
           * // => [[1, 10, 100], [2, 20, 200]]
           *
           * _.unzipWith(zipped, _.add);
           * // => [3, 30, 300]
           */
          function unzipWith(array, iteratee) {
            if (!(array && array.length)) {
              return [];
            }
            var result = unzip(array);
            if (iteratee == null) {
              return result;
            }
            return arrayMap(result, function (group) {
              return apply(iteratee, undefined, group);
            });
          }

          /**
           * Creates an array excluding all given values using
           * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * for equality comparisons.
           *
           * **Note:** Unlike `_.pull`, this method returns a new array.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {Array} array The array to inspect.
           * @param {...*} [values] The values to exclude.
           * @returns {Array} Returns the new array of filtered values.
           * @see _.difference, _.xor
           * @example
           *
           * _.without([2, 1, 2, 3], 1, 2);
           * // => [3]
           */
          var without = baseRest(function (array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, values) : [];
          });

          /**
           * Creates an array of unique values that is the
           * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
           * of the given arrays. The order of result values is determined by the order
           * they occur in the arrays.
           *
           * @static
           * @memberOf _
           * @since 2.4.0
           * @category Array
           * @param {...Array} [arrays] The arrays to inspect.
           * @returns {Array} Returns the new array of filtered values.
           * @see _.difference, _.without
           * @example
           *
           * _.xor([2, 1], [2, 3]);
           * // => [1, 3]
           */
          var xor = baseRest(function (arrays) {
            return baseXor(arrayFilter(arrays, isArrayLikeObject));
          });

          /**
           * This method is like `_.xor` except that it accepts `iteratee` which is
           * invoked for each element of each `arrays` to generate the criterion by
           * which by which they're compared. The order of result values is determined
           * by the order they occur in the arrays. The iteratee is invoked with one
           * argument: (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {...Array} [arrays] The arrays to inspect.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {Array} Returns the new array of filtered values.
           * @example
           *
           * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
           * // => [1.2, 3.4]
           *
           * // The `_.property` iteratee shorthand.
           * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
           * // => [{ 'x': 2 }]
           */
          var xorBy = baseRest(function (arrays) {
            var iteratee = last(arrays);
            if (isArrayLikeObject(iteratee)) {
              iteratee = undefined;
            }
            return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
          });

          /**
           * This method is like `_.xor` except that it accepts `comparator` which is
           * invoked to compare elements of `arrays`. The order of result values is
           * determined by the order they occur in the arrays. The comparator is invoked
           * with two arguments: (arrVal, othVal).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Array
           * @param {...Array} [arrays] The arrays to inspect.
           * @param {Function} [comparator] The comparator invoked per element.
           * @returns {Array} Returns the new array of filtered values.
           * @example
           *
           * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
           * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
           *
           * _.xorWith(objects, others, _.isEqual);
           * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
           */
          var xorWith = baseRest(function (arrays) {
            var comparator = last(arrays);
            comparator = typeof comparator == 'function' ? comparator : undefined;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
          });

          /**
           * Creates an array of grouped elements, the first of which contains the
           * first elements of the given arrays, the second of which contains the
           * second elements of the given arrays, and so on.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Array
           * @param {...Array} [arrays] The arrays to process.
           * @returns {Array} Returns the new array of grouped elements.
           * @example
           *
           * _.zip(['a', 'b'], [1, 2], [true, false]);
           * // => [['a', 1, true], ['b', 2, false]]
           */
          var zip = baseRest(unzip);

          /**
           * This method is like `_.fromPairs` except that it accepts two arrays,
           * one of property identifiers and one of corresponding values.
           *
           * @static
           * @memberOf _
           * @since 0.4.0
           * @category Array
           * @param {Array} [props=[]] The property identifiers.
           * @param {Array} [values=[]] The property values.
           * @returns {Object} Returns the new object.
           * @example
           *
           * _.zipObject(['a', 'b'], [1, 2]);
           * // => { 'a': 1, 'b': 2 }
           */
          function zipObject(props, values) {
            return baseZipObject(props || [], values || [], assignValue);
          }

          /**
           * This method is like `_.zipObject` except that it supports property paths.
           *
           * @static
           * @memberOf _
           * @since 4.1.0
           * @category Array
           * @param {Array} [props=[]] The property identifiers.
           * @param {Array} [values=[]] The property values.
           * @returns {Object} Returns the new object.
           * @example
           *
           * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
           * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
           */
          function zipObjectDeep(props, values) {
            return baseZipObject(props || [], values || [], baseSet);
          }

          /**
           * This method is like `_.zip` except that it accepts `iteratee` to specify
           * how grouped values should be combined. The iteratee is invoked with the
           * elements of each group: (...group).
           *
           * @static
           * @memberOf _
           * @since 3.8.0
           * @category Array
           * @param {...Array} [arrays] The arrays to process.
           * @param {Function} [iteratee=_.identity] The function to combine
           *  grouped values.
           * @returns {Array} Returns the new array of grouped elements.
           * @example
           *
           * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
           *   return a + b + c;
           * });
           * // => [111, 222]
           */
          var zipWith = baseRest(function (arrays) {
            var length = arrays.length,
              iteratee = length > 1 ? arrays[length - 1] : undefined;
            iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
            return unzipWith(arrays, iteratee);
          });

          /*------------------------------------------------------------------------*/

          /**
           * Creates a `lodash` wrapper instance that wraps `value` with explicit method
           * chain sequences enabled. The result of such sequences must be unwrapped
           * with `_#value`.
           *
           * @static
           * @memberOf _
           * @since 1.3.0
           * @category Seq
           * @param {*} value The value to wrap.
           * @returns {Object} Returns the new `lodash` wrapper instance.
           * @example
           *
           * var users = [
           *   { 'user': 'barney',  'age': 36 },
           *   { 'user': 'fred',    'age': 40 },
           *   { 'user': 'pebbles', 'age': 1 }
           * ];
           *
           * var youngest = _
           *   .chain(users)
           *   .sortBy('age')
           *   .map(function(o) {
           *     return o.user + ' is ' + o.age;
           *   })
           *   .head()
           *   .value();
           * // => 'pebbles is 1'
           */
          function chain(value) {
            var result = lodash(value);
            result.__chain__ = true;
            return result;
          }

          /**
           * This method invokes `interceptor` and returns `value`. The interceptor
           * is invoked with one argument; (value). The purpose of this method is to
           * "tap into" a method chain sequence in order to modify intermediate results.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Seq
           * @param {*} value The value to provide to `interceptor`.
           * @param {Function} interceptor The function to invoke.
           * @returns {*} Returns `value`.
           * @example
           *
           * _([1, 2, 3])
           *  .tap(function(array) {
           *    // Mutate input array.
           *    array.pop();
           *  })
           *  .reverse()
           *  .value();
           * // => [2, 1]
           */
          function tap(value, interceptor) {
            interceptor(value);
            return value;
          }

          /**
           * This method is like `_.tap` except that it returns the result of `interceptor`.
           * The purpose of this method is to "pass thru" values replacing intermediate
           * results in a method chain sequence.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Seq
           * @param {*} value The value to provide to `interceptor`.
           * @param {Function} interceptor The function to invoke.
           * @returns {*} Returns the result of `interceptor`.
           * @example
           *
           * _('  abc  ')
           *  .chain()
           *  .trim()
           *  .thru(function(value) {
           *    return [value];
           *  })
           *  .value();
           * // => ['abc']
           */
          function thru(value, interceptor) {
            return interceptor(value);
          }

          /**
           * This method is the wrapper version of `_.at`.
           *
           * @name at
           * @memberOf _
           * @since 1.0.0
           * @category Seq
           * @param {...(string|string[])} [paths] The property paths to pick.
           * @returns {Object} Returns the new `lodash` wrapper instance.
           * @example
           *
           * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
           *
           * _(object).at(['a[0].b.c', 'a[1]']).value();
           * // => [3, 4]
           */
          var wrapperAt = flatRest(function (paths) {
            var length = paths.length,
              start = length ? paths[0] : 0,
              value = this.__wrapped__,
              interceptor = function interceptor(object) {
                return baseAt(object, paths);
              };
            if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
              return this.thru(interceptor);
            }
            value = value.slice(start, +start + (length ? 1 : 0));
            value.__actions__.push({
              'func': thru,
              'args': [interceptor],
              'thisArg': undefined
            });
            return new LodashWrapper(value, this.__chain__).thru(function (array) {
              if (length && !array.length) {
                array.push(undefined);
              }
              return array;
            });
          });

          /**
           * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
           *
           * @name chain
           * @memberOf _
           * @since 0.1.0
           * @category Seq
           * @returns {Object} Returns the new `lodash` wrapper instance.
           * @example
           *
           * var users = [
           *   { 'user': 'barney', 'age': 36 },
           *   { 'user': 'fred',   'age': 40 }
           * ];
           *
           * // A sequence without explicit chaining.
           * _(users).head();
           * // => { 'user': 'barney', 'age': 36 }
           *
           * // A sequence with explicit chaining.
           * _(users)
           *   .chain()
           *   .head()
           *   .pick('user')
           *   .value();
           * // => { 'user': 'barney' }
           */
          function wrapperChain() {
            return chain(this);
          }

          /**
           * Executes the chain sequence and returns the wrapped result.
           *
           * @name commit
           * @memberOf _
           * @since 3.2.0
           * @category Seq
           * @returns {Object} Returns the new `lodash` wrapper instance.
           * @example
           *
           * var array = [1, 2];
           * var wrapped = _(array).push(3);
           *
           * console.log(array);
           * // => [1, 2]
           *
           * wrapped = wrapped.commit();
           * console.log(array);
           * // => [1, 2, 3]
           *
           * wrapped.last();
           * // => 3
           *
           * console.log(array);
           * // => [1, 2, 3]
           */
          function wrapperCommit() {
            return new LodashWrapper(this.value(), this.__chain__);
          }

          /**
           * Gets the next value on a wrapped object following the
           * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
           *
           * @name next
           * @memberOf _
           * @since 4.0.0
           * @category Seq
           * @returns {Object} Returns the next iterator value.
           * @example
           *
           * var wrapped = _([1, 2]);
           *
           * wrapped.next();
           * // => { 'done': false, 'value': 1 }
           *
           * wrapped.next();
           * // => { 'done': false, 'value': 2 }
           *
           * wrapped.next();
           * // => { 'done': true, 'value': undefined }
           */
          function wrapperNext() {
            if (this.__values__ === undefined) {
              this.__values__ = toArray(this.value());
            }
            var done = this.__index__ >= this.__values__.length,
              value = done ? undefined : this.__values__[this.__index__++];
            return {
              'done': done,
              'value': value
            };
          }

          /**
           * Enables the wrapper to be iterable.
           *
           * @name Symbol.iterator
           * @memberOf _
           * @since 4.0.0
           * @category Seq
           * @returns {Object} Returns the wrapper object.
           * @example
           *
           * var wrapped = _([1, 2]);
           *
           * wrapped[Symbol.iterator]() === wrapped;
           * // => true
           *
           * Array.from(wrapped);
           * // => [1, 2]
           */
          function wrapperToIterator() {
            return this;
          }

          /**
           * Creates a clone of the chain sequence planting `value` as the wrapped value.
           *
           * @name plant
           * @memberOf _
           * @since 3.2.0
           * @category Seq
           * @param {*} value The value to plant.
           * @returns {Object} Returns the new `lodash` wrapper instance.
           * @example
           *
           * function square(n) {
           *   return n * n;
           * }
           *
           * var wrapped = _([1, 2]).map(square);
           * var other = wrapped.plant([3, 4]);
           *
           * other.value();
           * // => [9, 16]
           *
           * wrapped.value();
           * // => [1, 4]
           */
          function wrapperPlant(value) {
            var result,
              parent = this;
            while (parent instanceof baseLodash) {
              var clone = wrapperClone(parent);
              clone.__index__ = 0;
              clone.__values__ = undefined;
              if (result) {
                previous.__wrapped__ = clone;
              } else {
                result = clone;
              }
              var previous = clone;
              parent = parent.__wrapped__;
            }
            previous.__wrapped__ = value;
            return result;
          }

          /**
           * This method is the wrapper version of `_.reverse`.
           *
           * **Note:** This method mutates the wrapped array.
           *
           * @name reverse
           * @memberOf _
           * @since 0.1.0
           * @category Seq
           * @returns {Object} Returns the new `lodash` wrapper instance.
           * @example
           *
           * var array = [1, 2, 3];
           *
           * _(array).reverse().value()
           * // => [3, 2, 1]
           *
           * console.log(array);
           * // => [3, 2, 1]
           */
          function wrapperReverse() {
            var value = this.__wrapped__;
            if (value instanceof LazyWrapper) {
              var wrapped = value;
              if (this.__actions__.length) {
                wrapped = new LazyWrapper(this);
              }
              wrapped = wrapped.reverse();
              wrapped.__actions__.push({
                'func': thru,
                'args': [reverse],
                'thisArg': undefined
              });
              return new LodashWrapper(wrapped, this.__chain__);
            }
            return this.thru(reverse);
          }

          /**
           * Executes the chain sequence to resolve the unwrapped value.
           *
           * @name value
           * @memberOf _
           * @since 0.1.0
           * @alias toJSON, valueOf
           * @category Seq
           * @returns {*} Returns the resolved unwrapped value.
           * @example
           *
           * _([1, 2, 3]).value();
           * // => [1, 2, 3]
           */
          function wrapperValue() {
            return baseWrapperValue(this.__wrapped__, this.__actions__);
          }

          /*------------------------------------------------------------------------*/

          /**
           * Creates an object composed of keys generated from the results of running
           * each element of `collection` thru `iteratee`. The corresponding value of
           * each key is the number of times the key was returned by `iteratee`. The
           * iteratee is invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 0.5.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
           * @returns {Object} Returns the composed aggregate object.
           * @example
           *
           * _.countBy([6.1, 4.2, 6.3], Math.floor);
           * // => { '4': 1, '6': 2 }
           *
           * // The `_.property` iteratee shorthand.
           * _.countBy(['one', 'two', 'three'], 'length');
           * // => { '3': 2, '5': 1 }
           */
          var countBy = createAggregator(function (result, value, key) {
            if (hasOwnProperty.call(result, key)) {
              ++result[key];
            } else {
              baseAssignValue(result, key, 1);
            }
          });

          /**
           * Checks if `predicate` returns truthy for **all** elements of `collection`.
           * Iteration is stopped once `predicate` returns falsey. The predicate is
           * invoked with three arguments: (value, index|key, collection).
           *
           * **Note:** This method returns `true` for
           * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
           * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
           * elements of empty collections.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {boolean} Returns `true` if all elements pass the predicate check,
           *  else `false`.
           * @example
           *
           * _.every([true, 1, null, 'yes'], Boolean);
           * // => false
           *
           * var users = [
           *   { 'user': 'barney', 'age': 36, 'active': false },
           *   { 'user': 'fred',   'age': 40, 'active': false }
           * ];
           *
           * // The `_.matches` iteratee shorthand.
           * _.every(users, { 'user': 'barney', 'active': false });
           * // => false
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.every(users, ['active', false]);
           * // => true
           *
           * // The `_.property` iteratee shorthand.
           * _.every(users, 'active');
           * // => false
           */
          function every(collection, predicate, guard) {
            var func = isArray(collection) ? arrayEvery : baseEvery;
            if (guard && isIterateeCall(collection, predicate, guard)) {
              predicate = undefined;
            }
            return func(collection, getIteratee(predicate, 3));
          }

          /**
           * Iterates over elements of `collection`, returning an array of all elements
           * `predicate` returns truthy for. The predicate is invoked with three
           * arguments: (value, index|key, collection).
           *
           * **Note:** Unlike `_.remove`, this method returns a new array.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the new filtered array.
           * @see _.reject
           * @example
           *
           * var users = [
           *   { 'user': 'barney', 'age': 36, 'active': true },
           *   { 'user': 'fred',   'age': 40, 'active': false }
           * ];
           *
           * _.filter(users, function(o) { return !o.active; });
           * // => objects for ['fred']
           *
           * // The `_.matches` iteratee shorthand.
           * _.filter(users, { 'age': 36, 'active': true });
           * // => objects for ['barney']
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.filter(users, ['active', false]);
           * // => objects for ['fred']
           *
           * // The `_.property` iteratee shorthand.
           * _.filter(users, 'active');
           * // => objects for ['barney']
           *
           * // Combining several predicates using `_.overEvery` or `_.overSome`.
           * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
           * // => objects for ['fred', 'barney']
           */
          function filter(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, getIteratee(predicate, 3));
          }

          /**
           * Iterates over elements of `collection`, returning the first element
           * `predicate` returns truthy for. The predicate is invoked with three
           * arguments: (value, index|key, collection).
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to inspect.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @param {number} [fromIndex=0] The index to search from.
           * @returns {*} Returns the matched element, else `undefined`.
           * @example
           *
           * var users = [
           *   { 'user': 'barney',  'age': 36, 'active': true },
           *   { 'user': 'fred',    'age': 40, 'active': false },
           *   { 'user': 'pebbles', 'age': 1,  'active': true }
           * ];
           *
           * _.find(users, function(o) { return o.age < 40; });
           * // => object for 'barney'
           *
           * // The `_.matches` iteratee shorthand.
           * _.find(users, { 'age': 1, 'active': true });
           * // => object for 'pebbles'
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.find(users, ['active', false]);
           * // => object for 'fred'
           *
           * // The `_.property` iteratee shorthand.
           * _.find(users, 'active');
           * // => object for 'barney'
           */
          var find = createFind(findIndex);

          /**
           * This method is like `_.find` except that it iterates over elements of
           * `collection` from right to left.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @category Collection
           * @param {Array|Object} collection The collection to inspect.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @param {number} [fromIndex=collection.length-1] The index to search from.
           * @returns {*} Returns the matched element, else `undefined`.
           * @example
           *
           * _.findLast([1, 2, 3, 4], function(n) {
           *   return n % 2 == 1;
           * });
           * // => 3
           */
          var findLast = createFind(findLastIndex);

          /**
           * Creates a flattened array of values by running each element in `collection`
           * thru `iteratee` and flattening the mapped results. The iteratee is invoked
           * with three arguments: (value, index|key, collection).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the new flattened array.
           * @example
           *
           * function duplicate(n) {
           *   return [n, n];
           * }
           *
           * _.flatMap([1, 2], duplicate);
           * // => [1, 1, 2, 2]
           */
          function flatMap(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), 1);
          }

          /**
           * This method is like `_.flatMap` except that it recursively flattens the
           * mapped results.
           *
           * @static
           * @memberOf _
           * @since 4.7.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the new flattened array.
           * @example
           *
           * function duplicate(n) {
           *   return [[[n, n]]];
           * }
           *
           * _.flatMapDeep([1, 2], duplicate);
           * // => [1, 1, 2, 2]
           */
          function flatMapDeep(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), INFINITY);
          }

          /**
           * This method is like `_.flatMap` except that it recursively flattens the
           * mapped results up to `depth` times.
           *
           * @static
           * @memberOf _
           * @since 4.7.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @param {number} [depth=1] The maximum recursion depth.
           * @returns {Array} Returns the new flattened array.
           * @example
           *
           * function duplicate(n) {
           *   return [[[n, n]]];
           * }
           *
           * _.flatMapDepth([1, 2], duplicate, 2);
           * // => [[1, 1], [2, 2]]
           */
          function flatMapDepth(collection, iteratee, depth) {
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(map(collection, iteratee), depth);
          }

          /**
           * Iterates over elements of `collection` and invokes `iteratee` for each element.
           * The iteratee is invoked with three arguments: (value, index|key, collection).
           * Iteratee functions may exit iteration early by explicitly returning `false`.
           *
           * **Note:** As with other "Collections" methods, objects with a "length"
           * property are iterated like arrays. To avoid this behavior use `_.forIn`
           * or `_.forOwn` for object iteration.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @alias each
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Array|Object} Returns `collection`.
           * @see _.forEachRight
           * @example
           *
           * _.forEach([1, 2], function(value) {
           *   console.log(value);
           * });
           * // => Logs `1` then `2`.
           *
           * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
           *   console.log(key);
           * });
           * // => Logs 'a' then 'b' (iteration order is not guaranteed).
           */
          function forEach(collection, iteratee) {
            var func = isArray(collection) ? arrayEach : baseEach;
            return func(collection, getIteratee(iteratee, 3));
          }

          /**
           * This method is like `_.forEach` except that it iterates over elements of
           * `collection` from right to left.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @alias eachRight
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Array|Object} Returns `collection`.
           * @see _.forEach
           * @example
           *
           * _.forEachRight([1, 2], function(value) {
           *   console.log(value);
           * });
           * // => Logs `2` then `1`.
           */
          function forEachRight(collection, iteratee) {
            var func = isArray(collection) ? arrayEachRight : baseEachRight;
            return func(collection, getIteratee(iteratee, 3));
          }

          /**
           * Creates an object composed of keys generated from the results of running
           * each element of `collection` thru `iteratee`. The order of grouped values
           * is determined by the order they occur in `collection`. The corresponding
           * value of each key is an array of elements responsible for generating the
           * key. The iteratee is invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
           * @returns {Object} Returns the composed aggregate object.
           * @example
           *
           * _.groupBy([6.1, 4.2, 6.3], Math.floor);
           * // => { '4': [4.2], '6': [6.1, 6.3] }
           *
           * // The `_.property` iteratee shorthand.
           * _.groupBy(['one', 'two', 'three'], 'length');
           * // => { '3': ['one', 'two'], '5': ['three'] }
           */
          var groupBy = createAggregator(function (result, value, key) {
            if (hasOwnProperty.call(result, key)) {
              result[key].push(value);
            } else {
              baseAssignValue(result, key, [value]);
            }
          });

          /**
           * Checks if `value` is in `collection`. If `collection` is a string, it's
           * checked for a substring of `value`, otherwise
           * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * is used for equality comparisons. If `fromIndex` is negative, it's used as
           * the offset from the end of `collection`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object|string} collection The collection to inspect.
           * @param {*} value The value to search for.
           * @param {number} [fromIndex=0] The index to search from.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
           * @returns {boolean} Returns `true` if `value` is found, else `false`.
           * @example
           *
           * _.includes([1, 2, 3], 1);
           * // => true
           *
           * _.includes([1, 2, 3], 1, 2);
           * // => false
           *
           * _.includes({ 'a': 1, 'b': 2 }, 1);
           * // => true
           *
           * _.includes('abcd', 'bc');
           * // => true
           */
          function includes(collection, value, fromIndex, guard) {
            collection = isArrayLike(collection) ? collection : values(collection);
            fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
            var length = collection.length;
            if (fromIndex < 0) {
              fromIndex = nativeMax(length + fromIndex, 0);
            }
            return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
          }

          /**
           * Invokes the method at `path` of each element in `collection`, returning
           * an array of the results of each invoked method. Any additional arguments
           * are provided to each invoked method. If `path` is a function, it's invoked
           * for, and `this` bound to, each element in `collection`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Array|Function|string} path The path of the method to invoke or
           *  the function invoked per iteration.
           * @param {...*} [args] The arguments to invoke each method with.
           * @returns {Array} Returns the array of results.
           * @example
           *
           * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
           * // => [[1, 5, 7], [1, 2, 3]]
           *
           * _.invokeMap([123, 456], String.prototype.split, '');
           * // => [['1', '2', '3'], ['4', '5', '6']]
           */
          var invokeMap = baseRest(function (collection, path, args) {
            var index = -1,
              isFunc = typeof path == 'function',
              result = isArrayLike(collection) ? Array(collection.length) : [];
            baseEach(collection, function (value) {
              result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
            });
            return result;
          });

          /**
           * Creates an object composed of keys generated from the results of running
           * each element of `collection` thru `iteratee`. The corresponding value of
           * each key is the last element responsible for generating the key. The
           * iteratee is invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
           * @returns {Object} Returns the composed aggregate object.
           * @example
           *
           * var array = [
           *   { 'dir': 'left', 'code': 97 },
           *   { 'dir': 'right', 'code': 100 }
           * ];
           *
           * _.keyBy(array, function(o) {
           *   return String.fromCharCode(o.code);
           * });
           * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
           *
           * _.keyBy(array, 'dir');
           * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
           */
          var keyBy = createAggregator(function (result, value, key) {
            baseAssignValue(result, key, value);
          });

          /**
           * Creates an array of values by running each element in `collection` thru
           * `iteratee`. The iteratee is invoked with three arguments:
           * (value, index|key, collection).
           *
           * Many lodash methods are guarded to work as iteratees for methods like
           * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
           *
           * The guarded methods are:
           * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
           * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
           * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
           * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the new mapped array.
           * @example
           *
           * function square(n) {
           *   return n * n;
           * }
           *
           * _.map([4, 8], square);
           * // => [16, 64]
           *
           * _.map({ 'a': 4, 'b': 8 }, square);
           * // => [16, 64] (iteration order is not guaranteed)
           *
           * var users = [
           *   { 'user': 'barney' },
           *   { 'user': 'fred' }
           * ];
           *
           * // The `_.property` iteratee shorthand.
           * _.map(users, 'user');
           * // => ['barney', 'fred']
           */
          function map(collection, iteratee) {
            var func = isArray(collection) ? arrayMap : baseMap;
            return func(collection, getIteratee(iteratee, 3));
          }

          /**
           * This method is like `_.sortBy` except that it allows specifying the sort
           * orders of the iteratees to sort by. If `orders` is unspecified, all values
           * are sorted in ascending order. Otherwise, specify an order of "desc" for
           * descending or "asc" for ascending sort order of corresponding values.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
           *  The iteratees to sort by.
           * @param {string[]} [orders] The sort orders of `iteratees`.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
           * @returns {Array} Returns the new sorted array.
           * @example
           *
           * var users = [
           *   { 'user': 'fred',   'age': 48 },
           *   { 'user': 'barney', 'age': 34 },
           *   { 'user': 'fred',   'age': 40 },
           *   { 'user': 'barney', 'age': 36 }
           * ];
           *
           * // Sort by `user` in ascending order and by `age` in descending order.
           * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
           * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
           */
          function orderBy(collection, iteratees, orders, guard) {
            if (collection == null) {
              return [];
            }
            if (!isArray(iteratees)) {
              iteratees = iteratees == null ? [] : [iteratees];
            }
            orders = guard ? undefined : orders;
            if (!isArray(orders)) {
              orders = orders == null ? [] : [orders];
            }
            return baseOrderBy(collection, iteratees, orders);
          }

          /**
           * Creates an array of elements split into two groups, the first of which
           * contains elements `predicate` returns truthy for, the second of which
           * contains elements `predicate` returns falsey for. The predicate is
           * invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the array of grouped elements.
           * @example
           *
           * var users = [
           *   { 'user': 'barney',  'age': 36, 'active': false },
           *   { 'user': 'fred',    'age': 40, 'active': true },
           *   { 'user': 'pebbles', 'age': 1,  'active': false }
           * ];
           *
           * _.partition(users, function(o) { return o.active; });
           * // => objects for [['fred'], ['barney', 'pebbles']]
           *
           * // The `_.matches` iteratee shorthand.
           * _.partition(users, { 'age': 1, 'active': false });
           * // => objects for [['pebbles'], ['barney', 'fred']]
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.partition(users, ['active', false]);
           * // => objects for [['barney', 'pebbles'], ['fred']]
           *
           * // The `_.property` iteratee shorthand.
           * _.partition(users, 'active');
           * // => objects for [['fred'], ['barney', 'pebbles']]
           */
          var partition = createAggregator(function (result, value, key) {
            result[key ? 0 : 1].push(value);
          }, function () {
            return [[], []];
          });

          /**
           * Reduces `collection` to a value which is the accumulated result of running
           * each element in `collection` thru `iteratee`, where each successive
           * invocation is supplied the return value of the previous. If `accumulator`
           * is not given, the first element of `collection` is used as the initial
           * value. The iteratee is invoked with four arguments:
           * (accumulator, value, index|key, collection).
           *
           * Many lodash methods are guarded to work as iteratees for methods like
           * `_.reduce`, `_.reduceRight`, and `_.transform`.
           *
           * The guarded methods are:
           * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
           * and `sortBy`
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @param {*} [accumulator] The initial value.
           * @returns {*} Returns the accumulated value.
           * @see _.reduceRight
           * @example
           *
           * _.reduce([1, 2], function(sum, n) {
           *   return sum + n;
           * }, 0);
           * // => 3
           *
           * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
           *   (result[value] || (result[value] = [])).push(key);
           *   return result;
           * }, {});
           * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
           */
          function reduce(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduce : baseReduce,
              initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
          }

          /**
           * This method is like `_.reduce` except that it iterates over elements of
           * `collection` from right to left.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @param {*} [accumulator] The initial value.
           * @returns {*} Returns the accumulated value.
           * @see _.reduce
           * @example
           *
           * var array = [[0, 1], [2, 3], [4, 5]];
           *
           * _.reduceRight(array, function(flattened, other) {
           *   return flattened.concat(other);
           * }, []);
           * // => [4, 5, 2, 3, 0, 1]
           */
          function reduceRight(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduceRight : baseReduce,
              initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
          }

          /**
           * The opposite of `_.filter`; this method returns the elements of `collection`
           * that `predicate` does **not** return truthy for.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the new filtered array.
           * @see _.filter
           * @example
           *
           * var users = [
           *   { 'user': 'barney', 'age': 36, 'active': false },
           *   { 'user': 'fred',   'age': 40, 'active': true }
           * ];
           *
           * _.reject(users, function(o) { return !o.active; });
           * // => objects for ['fred']
           *
           * // The `_.matches` iteratee shorthand.
           * _.reject(users, { 'age': 40, 'active': true });
           * // => objects for ['barney']
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.reject(users, ['active', false]);
           * // => objects for ['fred']
           *
           * // The `_.property` iteratee shorthand.
           * _.reject(users, 'active');
           * // => objects for ['barney']
           */
          function reject(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, negate(getIteratee(predicate, 3)));
          }

          /**
           * Gets a random element from `collection`.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @category Collection
           * @param {Array|Object} collection The collection to sample.
           * @returns {*} Returns the random element.
           * @example
           *
           * _.sample([1, 2, 3, 4]);
           * // => 2
           */
          function sample(collection) {
            var func = isArray(collection) ? arraySample : baseSample;
            return func(collection);
          }

          /**
           * Gets `n` random elements at unique keys from `collection` up to the
           * size of `collection`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Collection
           * @param {Array|Object} collection The collection to sample.
           * @param {number} [n=1] The number of elements to sample.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Array} Returns the random elements.
           * @example
           *
           * _.sampleSize([1, 2, 3], 2);
           * // => [3, 1]
           *
           * _.sampleSize([1, 2, 3], 4);
           * // => [2, 3, 1]
           */
          function sampleSize(collection, n, guard) {
            if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {
              n = 1;
            } else {
              n = toInteger(n);
            }
            var func = isArray(collection) ? arraySampleSize : baseSampleSize;
            return func(collection, n);
          }

          /**
           * Creates an array of shuffled values, using a version of the
           * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to shuffle.
           * @returns {Array} Returns the new shuffled array.
           * @example
           *
           * _.shuffle([1, 2, 3, 4]);
           * // => [4, 1, 3, 2]
           */
          function shuffle(collection) {
            var func = isArray(collection) ? arrayShuffle : baseShuffle;
            return func(collection);
          }

          /**
           * Gets the size of `collection` by returning its length for array-like
           * values or the number of own enumerable string keyed properties for objects.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object|string} collection The collection to inspect.
           * @returns {number} Returns the collection size.
           * @example
           *
           * _.size([1, 2, 3]);
           * // => 3
           *
           * _.size({ 'a': 1, 'b': 2 });
           * // => 2
           *
           * _.size('pebbles');
           * // => 7
           */
          function size(collection) {
            if (collection == null) {
              return 0;
            }
            if (isArrayLike(collection)) {
              return isString(collection) ? stringSize(collection) : collection.length;
            }
            var tag = getTag(collection);
            if (tag == mapTag || tag == setTag) {
              return collection.size;
            }
            return baseKeys(collection).length;
          }

          /**
           * Checks if `predicate` returns truthy for **any** element of `collection`.
           * Iteration is stopped once `predicate` returns truthy. The predicate is
           * invoked with three arguments: (value, index|key, collection).
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {boolean} Returns `true` if any element passes the predicate check,
           *  else `false`.
           * @example
           *
           * _.some([null, 0, 'yes', false], Boolean);
           * // => true
           *
           * var users = [
           *   { 'user': 'barney', 'active': true },
           *   { 'user': 'fred',   'active': false }
           * ];
           *
           * // The `_.matches` iteratee shorthand.
           * _.some(users, { 'user': 'barney', 'active': false });
           * // => false
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.some(users, ['active', false]);
           * // => true
           *
           * // The `_.property` iteratee shorthand.
           * _.some(users, 'active');
           * // => true
           */
          function some(collection, predicate, guard) {
            var func = isArray(collection) ? arraySome : baseSome;
            if (guard && isIterateeCall(collection, predicate, guard)) {
              predicate = undefined;
            }
            return func(collection, getIteratee(predicate, 3));
          }

          /**
           * Creates an array of elements, sorted in ascending order by the results of
           * running each element in a collection thru each iteratee. This method
           * performs a stable sort, that is, it preserves the original sort order of
           * equal elements. The iteratees are invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Collection
           * @param {Array|Object} collection The collection to iterate over.
           * @param {...(Function|Function[])} [iteratees=[_.identity]]
           *  The iteratees to sort by.
           * @returns {Array} Returns the new sorted array.
           * @example
           *
           * var users = [
           *   { 'user': 'fred',   'age': 48 },
           *   { 'user': 'barney', 'age': 36 },
           *   { 'user': 'fred',   'age': 30 },
           *   { 'user': 'barney', 'age': 34 }
           * ];
           *
           * _.sortBy(users, [function(o) { return o.user; }]);
           * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
           *
           * _.sortBy(users, ['user', 'age']);
           * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
           */
          var sortBy = baseRest(function (collection, iteratees) {
            if (collection == null) {
              return [];
            }
            var length = iteratees.length;
            if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
              iteratees = [];
            } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
              iteratees = [iteratees[0]];
            }
            return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
          });

          /*------------------------------------------------------------------------*/

          /**
           * Gets the timestamp of the number of milliseconds that have elapsed since
           * the Unix epoch (1 January 1970 00:00:00 UTC).
           *
           * @static
           * @memberOf _
           * @since 2.4.0
           * @category Date
           * @returns {number} Returns the timestamp.
           * @example
           *
           * _.defer(function(stamp) {
           *   console.log(_.now() - stamp);
           * }, _.now());
           * // => Logs the number of milliseconds it took for the deferred invocation.
           */
          var now = ctxNow || function () {
            return root.Date.now();
          };

          /*------------------------------------------------------------------------*/

          /**
           * The opposite of `_.before`; this method creates a function that invokes
           * `func` once it's called `n` or more times.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {number} n The number of calls before `func` is invoked.
           * @param {Function} func The function to restrict.
           * @returns {Function} Returns the new restricted function.
           * @example
           *
           * var saves = ['profile', 'settings'];
           *
           * var done = _.after(saves.length, function() {
           *   console.log('done saving!');
           * });
           *
           * _.forEach(saves, function(type) {
           *   asyncSave({ 'type': type, 'complete': done });
           * });
           * // => Logs 'done saving!' after the two async saves have completed.
           */
          function after(n, func) {
            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            n = toInteger(n);
            return function () {
              if (--n < 1) {
                return func.apply(this, arguments);
              }
            };
          }

          /**
           * Creates a function that invokes `func`, with up to `n` arguments,
           * ignoring any additional arguments.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Function
           * @param {Function} func The function to cap arguments for.
           * @param {number} [n=func.length] The arity cap.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Function} Returns the new capped function.
           * @example
           *
           * _.map(['6', '8', '10'], _.ary(parseInt, 1));
           * // => [6, 8, 10]
           */
          function ary(func, n, guard) {
            n = guard ? undefined : n;
            n = func && n == null ? func.length : n;
            return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
          }

          /**
           * Creates a function that invokes `func`, with the `this` binding and arguments
           * of the created function, while it's called less than `n` times. Subsequent
           * calls to the created function return the result of the last `func` invocation.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Function
           * @param {number} n The number of calls at which `func` is no longer invoked.
           * @param {Function} func The function to restrict.
           * @returns {Function} Returns the new restricted function.
           * @example
           *
           * jQuery(element).on('click', _.before(5, addContactToList));
           * // => Allows adding up to 4 contacts to the list.
           */
          function before(n, func) {
            var result;
            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            n = toInteger(n);
            return function () {
              if (--n > 0) {
                result = func.apply(this, arguments);
              }
              if (n <= 1) {
                func = undefined;
              }
              return result;
            };
          }

          /**
           * Creates a function that invokes `func` with the `this` binding of `thisArg`
           * and `partials` prepended to the arguments it receives.
           *
           * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
           * may be used as a placeholder for partially applied arguments.
           *
           * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
           * property of bound functions.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to bind.
           * @param {*} thisArg The `this` binding of `func`.
           * @param {...*} [partials] The arguments to be partially applied.
           * @returns {Function} Returns the new bound function.
           * @example
           *
           * function greet(greeting, punctuation) {
           *   return greeting + ' ' + this.user + punctuation;
           * }
           *
           * var object = { 'user': 'fred' };
           *
           * var bound = _.bind(greet, object, 'hi');
           * bound('!');
           * // => 'hi fred!'
           *
           * // Bound with placeholders.
           * var bound = _.bind(greet, object, _, '!');
           * bound('hi');
           * // => 'hi fred!'
           */
          var bind = baseRest(function (func, thisArg, partials) {
            var bitmask = WRAP_BIND_FLAG;
            if (partials.length) {
              var holders = replaceHolders(partials, getHolder(bind));
              bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(func, bitmask, thisArg, partials, holders);
          });

          /**
           * Creates a function that invokes the method at `object[key]` with `partials`
           * prepended to the arguments it receives.
           *
           * This method differs from `_.bind` by allowing bound functions to reference
           * methods that may be redefined or don't yet exist. See
           * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
           * for more details.
           *
           * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
           * builds, may be used as a placeholder for partially applied arguments.
           *
           * @static
           * @memberOf _
           * @since 0.10.0
           * @category Function
           * @param {Object} object The object to invoke the method on.
           * @param {string} key The key of the method.
           * @param {...*} [partials] The arguments to be partially applied.
           * @returns {Function} Returns the new bound function.
           * @example
           *
           * var object = {
           *   'user': 'fred',
           *   'greet': function(greeting, punctuation) {
           *     return greeting + ' ' + this.user + punctuation;
           *   }
           * };
           *
           * var bound = _.bindKey(object, 'greet', 'hi');
           * bound('!');
           * // => 'hi fred!'
           *
           * object.greet = function(greeting, punctuation) {
           *   return greeting + 'ya ' + this.user + punctuation;
           * };
           *
           * bound('!');
           * // => 'hiya fred!'
           *
           * // Bound with placeholders.
           * var bound = _.bindKey(object, 'greet', _, '!');
           * bound('hi');
           * // => 'hiya fred!'
           */
          var bindKey = baseRest(function (object, key, partials) {
            var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
            if (partials.length) {
              var holders = replaceHolders(partials, getHolder(bindKey));
              bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(key, bitmask, object, partials, holders);
          });

          /**
           * Creates a function that accepts arguments of `func` and either invokes
           * `func` returning its result, if at least `arity` number of arguments have
           * been provided, or returns a function that accepts the remaining `func`
           * arguments, and so on. The arity of `func` may be specified if `func.length`
           * is not sufficient.
           *
           * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
           * may be used as a placeholder for provided arguments.
           *
           * **Note:** This method doesn't set the "length" property of curried functions.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @category Function
           * @param {Function} func The function to curry.
           * @param {number} [arity=func.length] The arity of `func`.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Function} Returns the new curried function.
           * @example
           *
           * var abc = function(a, b, c) {
           *   return [a, b, c];
           * };
           *
           * var curried = _.curry(abc);
           *
           * curried(1)(2)(3);
           * // => [1, 2, 3]
           *
           * curried(1, 2)(3);
           * // => [1, 2, 3]
           *
           * curried(1, 2, 3);
           * // => [1, 2, 3]
           *
           * // Curried with placeholders.
           * curried(1)(_, 3)(2);
           * // => [1, 2, 3]
           */
          function curry(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curry.placeholder;
            return result;
          }

          /**
           * This method is like `_.curry` except that arguments are applied to `func`
           * in the manner of `_.partialRight` instead of `_.partial`.
           *
           * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
           * builds, may be used as a placeholder for provided arguments.
           *
           * **Note:** This method doesn't set the "length" property of curried functions.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Function
           * @param {Function} func The function to curry.
           * @param {number} [arity=func.length] The arity of `func`.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Function} Returns the new curried function.
           * @example
           *
           * var abc = function(a, b, c) {
           *   return [a, b, c];
           * };
           *
           * var curried = _.curryRight(abc);
           *
           * curried(3)(2)(1);
           * // => [1, 2, 3]
           *
           * curried(2, 3)(1);
           * // => [1, 2, 3]
           *
           * curried(1, 2, 3);
           * // => [1, 2, 3]
           *
           * // Curried with placeholders.
           * curried(3)(1, _)(2);
           * // => [1, 2, 3]
           */
          function curryRight(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curryRight.placeholder;
            return result;
          }

          /**
           * Creates a debounced function that delays invoking `func` until after `wait`
           * milliseconds have elapsed since the last time the debounced function was
           * invoked. The debounced function comes with a `cancel` method to cancel
           * delayed `func` invocations and a `flush` method to immediately invoke them.
           * Provide `options` to indicate whether `func` should be invoked on the
           * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
           * with the last arguments provided to the debounced function. Subsequent
           * calls to the debounced function return the result of the last `func`
           * invocation.
           *
           * **Note:** If `leading` and `trailing` options are `true`, `func` is
           * invoked on the trailing edge of the timeout only if the debounced function
           * is invoked more than once during the `wait` timeout.
           *
           * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
           * until to the next tick, similar to `setTimeout` with a timeout of `0`.
           *
           * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
           * for details over the differences between `_.debounce` and `_.throttle`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to debounce.
           * @param {number} [wait=0] The number of milliseconds to delay.
           * @param {Object} [options={}] The options object.
           * @param {boolean} [options.leading=false]
           *  Specify invoking on the leading edge of the timeout.
           * @param {number} [options.maxWait]
           *  The maximum time `func` is allowed to be delayed before it's invoked.
           * @param {boolean} [options.trailing=true]
           *  Specify invoking on the trailing edge of the timeout.
           * @returns {Function} Returns the new debounced function.
           * @example
           *
           * // Avoid costly calculations while the window size is in flux.
           * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
           *
           * // Invoke `sendMail` when clicked, debouncing subsequent calls.
           * jQuery(element).on('click', _.debounce(sendMail, 300, {
           *   'leading': true,
           *   'trailing': false
           * }));
           *
           * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
           * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
           * var source = new EventSource('/stream');
           * jQuery(source).on('message', debounced);
           *
           * // Cancel the trailing debounced invocation.
           * jQuery(window).on('popstate', debounced.cancel);
           */
          function debounce(func, wait, options) {
            var lastArgs,
              lastThis,
              maxWait,
              result,
              timerId,
              lastCallTime,
              lastInvokeTime = 0,
              leading = false,
              maxing = false,
              trailing = true;
            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            wait = toNumber(wait) || 0;
            if (isObject(options)) {
              leading = !!options.leading;
              maxing = 'maxWait' in options;
              maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
              trailing = 'trailing' in options ? !!options.trailing : trailing;
            }
            function invokeFunc(time) {
              var args = lastArgs,
                thisArg = lastThis;
              lastArgs = lastThis = undefined;
              lastInvokeTime = time;
              result = func.apply(thisArg, args);
              return result;
            }
            function leadingEdge(time) {
              // Reset any `maxWait` timer.
              lastInvokeTime = time;
              // Start the timer for the trailing edge.
              timerId = setTimeout(timerExpired, wait);
              // Invoke the leading edge.
              return leading ? invokeFunc(time) : result;
            }
            function remainingWait(time) {
              var timeSinceLastCall = time - lastCallTime,
                timeSinceLastInvoke = time - lastInvokeTime,
                timeWaiting = wait - timeSinceLastCall;
              return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            }
            function shouldInvoke(time) {
              var timeSinceLastCall = time - lastCallTime,
                timeSinceLastInvoke = time - lastInvokeTime;

              // Either this is the first call, activity has stopped and we're at the
              // trailing edge, the system time has gone backwards and we're treating
              // it as the trailing edge, or we've hit the `maxWait` limit.
              return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
            }
            function timerExpired() {
              var time = now();
              if (shouldInvoke(time)) {
                return trailingEdge(time);
              }
              // Restart the timer.
              timerId = setTimeout(timerExpired, remainingWait(time));
            }
            function trailingEdge(time) {
              timerId = undefined;

              // Only invoke if we have `lastArgs` which means `func` has been
              // debounced at least once.
              if (trailing && lastArgs) {
                return invokeFunc(time);
              }
              lastArgs = lastThis = undefined;
              return result;
            }
            function cancel() {
              if (timerId !== undefined) {
                clearTimeout(timerId);
              }
              lastInvokeTime = 0;
              lastArgs = lastCallTime = lastThis = timerId = undefined;
            }
            function flush() {
              return timerId === undefined ? result : trailingEdge(now());
            }
            function debounced() {
              var time = now(),
                isInvoking = shouldInvoke(time);
              lastArgs = arguments;
              lastThis = this;
              lastCallTime = time;
              if (isInvoking) {
                if (timerId === undefined) {
                  return leadingEdge(lastCallTime);
                }
                if (maxing) {
                  // Handle invocations in a tight loop.
                  clearTimeout(timerId);
                  timerId = setTimeout(timerExpired, wait);
                  return invokeFunc(lastCallTime);
                }
              }
              if (timerId === undefined) {
                timerId = setTimeout(timerExpired, wait);
              }
              return result;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
          }

          /**
           * Defers invoking the `func` until the current call stack has cleared. Any
           * additional arguments are provided to `func` when it's invoked.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to defer.
           * @param {...*} [args] The arguments to invoke `func` with.
           * @returns {number} Returns the timer id.
           * @example
           *
           * _.defer(function(text) {
           *   console.log(text);
           * }, 'deferred');
           * // => Logs 'deferred' after one millisecond.
           */
          var defer = baseRest(function (func, args) {
            return baseDelay(func, 1, args);
          });

          /**
           * Invokes `func` after `wait` milliseconds. Any additional arguments are
           * provided to `func` when it's invoked.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to delay.
           * @param {number} wait The number of milliseconds to delay invocation.
           * @param {...*} [args] The arguments to invoke `func` with.
           * @returns {number} Returns the timer id.
           * @example
           *
           * _.delay(function(text) {
           *   console.log(text);
           * }, 1000, 'later');
           * // => Logs 'later' after one second.
           */
          var delay = baseRest(function (func, wait, args) {
            return baseDelay(func, toNumber(wait) || 0, args);
          });

          /**
           * Creates a function that invokes `func` with arguments reversed.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Function
           * @param {Function} func The function to flip arguments for.
           * @returns {Function} Returns the new flipped function.
           * @example
           *
           * var flipped = _.flip(function() {
           *   return _.toArray(arguments);
           * });
           *
           * flipped('a', 'b', 'c', 'd');
           * // => ['d', 'c', 'b', 'a']
           */
          function flip(func) {
            return createWrap(func, WRAP_FLIP_FLAG);
          }

          /**
           * Creates a function that memoizes the result of `func`. If `resolver` is
           * provided, it determines the cache key for storing the result based on the
           * arguments provided to the memoized function. By default, the first argument
           * provided to the memoized function is used as the map cache key. The `func`
           * is invoked with the `this` binding of the memoized function.
           *
           * **Note:** The cache is exposed as the `cache` property on the memoized
           * function. Its creation may be customized by replacing the `_.memoize.Cache`
           * constructor with one whose instances implement the
           * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
           * method interface of `clear`, `delete`, `get`, `has`, and `set`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to have its output memoized.
           * @param {Function} [resolver] The function to resolve the cache key.
           * @returns {Function} Returns the new memoized function.
           * @example
           *
           * var object = { 'a': 1, 'b': 2 };
           * var other = { 'c': 3, 'd': 4 };
           *
           * var values = _.memoize(_.values);
           * values(object);
           * // => [1, 2]
           *
           * values(other);
           * // => [3, 4]
           *
           * object.a = 2;
           * values(object);
           * // => [1, 2]
           *
           * // Modify the result cache.
           * values.cache.set(object, ['a', 'b']);
           * values(object);
           * // => ['a', 'b']
           *
           * // Replace `_.memoize.Cache`.
           * _.memoize.Cache = WeakMap;
           */
          function memoize(func, resolver) {
            if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            var memoized = function memoized() {
              var args = arguments,
                key = resolver ? resolver.apply(this, args) : args[0],
                cache = memoized.cache;
              if (cache.has(key)) {
                return cache.get(key);
              }
              var result = func.apply(this, args);
              memoized.cache = cache.set(key, result) || cache;
              return result;
            };
            memoized.cache = new (memoize.Cache || MapCache)();
            return memoized;
          }

          // Expose `MapCache`.
          memoize.Cache = MapCache;

          /**
           * Creates a function that negates the result of the predicate `func`. The
           * `func` predicate is invoked with the `this` binding and arguments of the
           * created function.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Function
           * @param {Function} predicate The predicate to negate.
           * @returns {Function} Returns the new negated function.
           * @example
           *
           * function isEven(n) {
           *   return n % 2 == 0;
           * }
           *
           * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
           * // => [1, 3, 5]
           */
          function negate(predicate) {
            if (typeof predicate != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            return function () {
              var args = arguments;
              switch (args.length) {
                case 0:
                  return !predicate.call(this);
                case 1:
                  return !predicate.call(this, args[0]);
                case 2:
                  return !predicate.call(this, args[0], args[1]);
                case 3:
                  return !predicate.call(this, args[0], args[1], args[2]);
              }
              return !predicate.apply(this, args);
            };
          }

          /**
           * Creates a function that is restricted to invoking `func` once. Repeat calls
           * to the function return the value of the first invocation. The `func` is
           * invoked with the `this` binding and arguments of the created function.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to restrict.
           * @returns {Function} Returns the new restricted function.
           * @example
           *
           * var initialize = _.once(createApplication);
           * initialize();
           * initialize();
           * // => `createApplication` is invoked once
           */
          function once(func) {
            return before(2, func);
          }

          /**
           * Creates a function that invokes `func` with its arguments transformed.
           *
           * @static
           * @since 4.0.0
           * @memberOf _
           * @category Function
           * @param {Function} func The function to wrap.
           * @param {...(Function|Function[])} [transforms=[_.identity]]
           *  The argument transforms.
           * @returns {Function} Returns the new function.
           * @example
           *
           * function doubled(n) {
           *   return n * 2;
           * }
           *
           * function square(n) {
           *   return n * n;
           * }
           *
           * var func = _.overArgs(function(x, y) {
           *   return [x, y];
           * }, [square, doubled]);
           *
           * func(9, 3);
           * // => [81, 6]
           *
           * func(10, 5);
           * // => [100, 10]
           */
          var overArgs = castRest(function (func, transforms) {
            transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
            var funcsLength = transforms.length;
            return baseRest(function (args) {
              var index = -1,
                length = nativeMin(args.length, funcsLength);
              while (++index < length) {
                args[index] = transforms[index].call(this, args[index]);
              }
              return apply(func, this, args);
            });
          });

          /**
           * Creates a function that invokes `func` with `partials` prepended to the
           * arguments it receives. This method is like `_.bind` except it does **not**
           * alter the `this` binding.
           *
           * The `_.partial.placeholder` value, which defaults to `_` in monolithic
           * builds, may be used as a placeholder for partially applied arguments.
           *
           * **Note:** This method doesn't set the "length" property of partially
           * applied functions.
           *
           * @static
           * @memberOf _
           * @since 0.2.0
           * @category Function
           * @param {Function} func The function to partially apply arguments to.
           * @param {...*} [partials] The arguments to be partially applied.
           * @returns {Function} Returns the new partially applied function.
           * @example
           *
           * function greet(greeting, name) {
           *   return greeting + ' ' + name;
           * }
           *
           * var sayHelloTo = _.partial(greet, 'hello');
           * sayHelloTo('fred');
           * // => 'hello fred'
           *
           * // Partially applied with placeholders.
           * var greetFred = _.partial(greet, _, 'fred');
           * greetFred('hi');
           * // => 'hi fred'
           */
          var partial = baseRest(function (func, partials) {
            var holders = replaceHolders(partials, getHolder(partial));
            return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
          });

          /**
           * This method is like `_.partial` except that partially applied arguments
           * are appended to the arguments it receives.
           *
           * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
           * builds, may be used as a placeholder for partially applied arguments.
           *
           * **Note:** This method doesn't set the "length" property of partially
           * applied functions.
           *
           * @static
           * @memberOf _
           * @since 1.0.0
           * @category Function
           * @param {Function} func The function to partially apply arguments to.
           * @param {...*} [partials] The arguments to be partially applied.
           * @returns {Function} Returns the new partially applied function.
           * @example
           *
           * function greet(greeting, name) {
           *   return greeting + ' ' + name;
           * }
           *
           * var greetFred = _.partialRight(greet, 'fred');
           * greetFred('hi');
           * // => 'hi fred'
           *
           * // Partially applied with placeholders.
           * var sayHelloTo = _.partialRight(greet, 'hello', _);
           * sayHelloTo('fred');
           * // => 'hello fred'
           */
          var partialRight = baseRest(function (func, partials) {
            var holders = replaceHolders(partials, getHolder(partialRight));
            return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
          });

          /**
           * Creates a function that invokes `func` with arguments arranged according
           * to the specified `indexes` where the argument value at the first index is
           * provided as the first argument, the argument value at the second index is
           * provided as the second argument, and so on.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Function
           * @param {Function} func The function to rearrange arguments for.
           * @param {...(number|number[])} indexes The arranged argument indexes.
           * @returns {Function} Returns the new function.
           * @example
           *
           * var rearged = _.rearg(function(a, b, c) {
           *   return [a, b, c];
           * }, [2, 0, 1]);
           *
           * rearged('b', 'c', 'a')
           * // => ['a', 'b', 'c']
           */
          var rearg = flatRest(function (func, indexes) {
            return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
          });

          /**
           * Creates a function that invokes `func` with the `this` binding of the
           * created function and arguments from `start` and beyond provided as
           * an array.
           *
           * **Note:** This method is based on the
           * [rest parameter](https://mdn.io/rest_parameters).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Function
           * @param {Function} func The function to apply a rest parameter to.
           * @param {number} [start=func.length-1] The start position of the rest parameter.
           * @returns {Function} Returns the new function.
           * @example
           *
           * var say = _.rest(function(what, names) {
           *   return what + ' ' + _.initial(names).join(', ') +
           *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
           * });
           *
           * say('hello', 'fred', 'barney', 'pebbles');
           * // => 'hello fred, barney, & pebbles'
           */
          function rest(func, start) {
            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            start = start === undefined ? start : toInteger(start);
            return baseRest(func, start);
          }

          /**
           * Creates a function that invokes `func` with the `this` binding of the
           * create function and an array of arguments much like
           * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
           *
           * **Note:** This method is based on the
           * [spread operator](https://mdn.io/spread_operator).
           *
           * @static
           * @memberOf _
           * @since 3.2.0
           * @category Function
           * @param {Function} func The function to spread arguments over.
           * @param {number} [start=0] The start position of the spread.
           * @returns {Function} Returns the new function.
           * @example
           *
           * var say = _.spread(function(who, what) {
           *   return who + ' says ' + what;
           * });
           *
           * say(['fred', 'hello']);
           * // => 'fred says hello'
           *
           * var numbers = Promise.all([
           *   Promise.resolve(40),
           *   Promise.resolve(36)
           * ]);
           *
           * numbers.then(_.spread(function(x, y) {
           *   return x + y;
           * }));
           * // => a Promise of 76
           */
          function spread(func, start) {
            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            start = start == null ? 0 : nativeMax(toInteger(start), 0);
            return baseRest(function (args) {
              var array = args[start],
                otherArgs = castSlice(args, 0, start);
              if (array) {
                arrayPush(otherArgs, array);
              }
              return apply(func, this, otherArgs);
            });
          }

          /**
           * Creates a throttled function that only invokes `func` at most once per
           * every `wait` milliseconds. The throttled function comes with a `cancel`
           * method to cancel delayed `func` invocations and a `flush` method to
           * immediately invoke them. Provide `options` to indicate whether `func`
           * should be invoked on the leading and/or trailing edge of the `wait`
           * timeout. The `func` is invoked with the last arguments provided to the
           * throttled function. Subsequent calls to the throttled function return the
           * result of the last `func` invocation.
           *
           * **Note:** If `leading` and `trailing` options are `true`, `func` is
           * invoked on the trailing edge of the timeout only if the throttled function
           * is invoked more than once during the `wait` timeout.
           *
           * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
           * until to the next tick, similar to `setTimeout` with a timeout of `0`.
           *
           * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
           * for details over the differences between `_.throttle` and `_.debounce`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to throttle.
           * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
           * @param {Object} [options={}] The options object.
           * @param {boolean} [options.leading=true]
           *  Specify invoking on the leading edge of the timeout.
           * @param {boolean} [options.trailing=true]
           *  Specify invoking on the trailing edge of the timeout.
           * @returns {Function} Returns the new throttled function.
           * @example
           *
           * // Avoid excessively updating the position while scrolling.
           * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
           *
           * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
           * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
           * jQuery(element).on('click', throttled);
           *
           * // Cancel the trailing throttled invocation.
           * jQuery(window).on('popstate', throttled.cancel);
           */
          function throttle(func, wait, options) {
            var leading = true,
              trailing = true;
            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            if (isObject(options)) {
              leading = 'leading' in options ? !!options.leading : leading;
              trailing = 'trailing' in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
              'leading': leading,
              'maxWait': wait,
              'trailing': trailing
            });
          }

          /**
           * Creates a function that accepts up to one argument, ignoring any
           * additional arguments.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Function
           * @param {Function} func The function to cap arguments for.
           * @returns {Function} Returns the new capped function.
           * @example
           *
           * _.map(['6', '8', '10'], _.unary(parseInt));
           * // => [6, 8, 10]
           */
          function unary(func) {
            return ary(func, 1);
          }

          /**
           * Creates a function that provides `value` to `wrapper` as its first
           * argument. Any additional arguments provided to the function are appended
           * to those provided to the `wrapper`. The wrapper is invoked with the `this`
           * binding of the created function.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {*} value The value to wrap.
           * @param {Function} [wrapper=identity] The wrapper function.
           * @returns {Function} Returns the new function.
           * @example
           *
           * var p = _.wrap(_.escape, function(func, text) {
           *   return '<p>' + func(text) + '</p>';
           * });
           *
           * p('fred, barney, & pebbles');
           * // => '<p>fred, barney, &amp; pebbles</p>'
           */
          function wrap(value, wrapper) {
            return partial(castFunction(wrapper), value);
          }

          /*------------------------------------------------------------------------*/

          /**
           * Casts `value` as an array if it's not one.
           *
           * @static
           * @memberOf _
           * @since 4.4.0
           * @category Lang
           * @param {*} value The value to inspect.
           * @returns {Array} Returns the cast array.
           * @example
           *
           * _.castArray(1);
           * // => [1]
           *
           * _.castArray({ 'a': 1 });
           * // => [{ 'a': 1 }]
           *
           * _.castArray('abc');
           * // => ['abc']
           *
           * _.castArray(null);
           * // => [null]
           *
           * _.castArray(undefined);
           * // => [undefined]
           *
           * _.castArray();
           * // => []
           *
           * var array = [1, 2, 3];
           * console.log(_.castArray(array) === array);
           * // => true
           */
          function castArray() {
            if (!arguments.length) {
              return [];
            }
            var value = arguments[0];
            return isArray(value) ? value : [value];
          }

          /**
           * Creates a shallow clone of `value`.
           *
           * **Note:** This method is loosely based on the
           * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
           * and supports cloning arrays, array buffers, booleans, date objects, maps,
           * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
           * arrays. The own enumerable properties of `arguments` objects are cloned
           * as plain objects. An empty object is returned for uncloneable values such
           * as error objects, functions, DOM nodes, and WeakMaps.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to clone.
           * @returns {*} Returns the cloned value.
           * @see _.cloneDeep
           * @example
           *
           * var objects = [{ 'a': 1 }, { 'b': 2 }];
           *
           * var shallow = _.clone(objects);
           * console.log(shallow[0] === objects[0]);
           * // => true
           */
          function clone(value) {
            return baseClone(value, CLONE_SYMBOLS_FLAG);
          }

          /**
           * This method is like `_.clone` except that it accepts `customizer` which
           * is invoked to produce the cloned value. If `customizer` returns `undefined`,
           * cloning is handled by the method instead. The `customizer` is invoked with
           * up to four arguments; (value [, index|key, object, stack]).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to clone.
           * @param {Function} [customizer] The function to customize cloning.
           * @returns {*} Returns the cloned value.
           * @see _.cloneDeepWith
           * @example
           *
           * function customizer(value) {
           *   if (_.isElement(value)) {
           *     return value.cloneNode(false);
           *   }
           * }
           *
           * var el = _.cloneWith(document.body, customizer);
           *
           * console.log(el === document.body);
           * // => false
           * console.log(el.nodeName);
           * // => 'BODY'
           * console.log(el.childNodes.length);
           * // => 0
           */
          function cloneWith(value, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
          }

          /**
           * This method is like `_.clone` except that it recursively clones `value`.
           *
           * @static
           * @memberOf _
           * @since 1.0.0
           * @category Lang
           * @param {*} value The value to recursively clone.
           * @returns {*} Returns the deep cloned value.
           * @see _.clone
           * @example
           *
           * var objects = [{ 'a': 1 }, { 'b': 2 }];
           *
           * var deep = _.cloneDeep(objects);
           * console.log(deep[0] === objects[0]);
           * // => false
           */
          function cloneDeep(value) {
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
          }

          /**
           * This method is like `_.cloneWith` except that it recursively clones `value`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to recursively clone.
           * @param {Function} [customizer] The function to customize cloning.
           * @returns {*} Returns the deep cloned value.
           * @see _.cloneWith
           * @example
           *
           * function customizer(value) {
           *   if (_.isElement(value)) {
           *     return value.cloneNode(true);
           *   }
           * }
           *
           * var el = _.cloneDeepWith(document.body, customizer);
           *
           * console.log(el === document.body);
           * // => false
           * console.log(el.nodeName);
           * // => 'BODY'
           * console.log(el.childNodes.length);
           * // => 20
           */
          function cloneDeepWith(value, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
          }

          /**
           * Checks if `object` conforms to `source` by invoking the predicate
           * properties of `source` with the corresponding property values of `object`.
           *
           * **Note:** This method is equivalent to `_.conforms` when `source` is
           * partially applied.
           *
           * @static
           * @memberOf _
           * @since 4.14.0
           * @category Lang
           * @param {Object} object The object to inspect.
           * @param {Object} source The object of property predicates to conform to.
           * @returns {boolean} Returns `true` if `object` conforms, else `false`.
           * @example
           *
           * var object = { 'a': 1, 'b': 2 };
           *
           * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
           * // => true
           *
           * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
           * // => false
           */
          function conformsTo(object, source) {
            return source == null || baseConformsTo(object, source, keys(source));
          }

          /**
           * Performs a
           * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
           * comparison between two values to determine if they are equivalent.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
           * @example
           *
           * var object = { 'a': 1 };
           * var other = { 'a': 1 };
           *
           * _.eq(object, object);
           * // => true
           *
           * _.eq(object, other);
           * // => false
           *
           * _.eq('a', 'a');
           * // => true
           *
           * _.eq('a', Object('a'));
           * // => false
           *
           * _.eq(NaN, NaN);
           * // => true
           */
          function eq(value, other) {
            return value === other || value !== value && other !== other;
          }

          /**
           * Checks if `value` is greater than `other`.
           *
           * @static
           * @memberOf _
           * @since 3.9.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if `value` is greater than `other`,
           *  else `false`.
           * @see _.lt
           * @example
           *
           * _.gt(3, 1);
           * // => true
           *
           * _.gt(3, 3);
           * // => false
           *
           * _.gt(1, 3);
           * // => false
           */
          var gt = createRelationalOperation(baseGt);

          /**
           * Checks if `value` is greater than or equal to `other`.
           *
           * @static
           * @memberOf _
           * @since 3.9.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if `value` is greater than or equal to
           *  `other`, else `false`.
           * @see _.lte
           * @example
           *
           * _.gte(3, 1);
           * // => true
           *
           * _.gte(3, 3);
           * // => true
           *
           * _.gte(1, 3);
           * // => false
           */
          var gte = createRelationalOperation(function (value, other) {
            return value >= other;
          });

          /**
           * Checks if `value` is likely an `arguments` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an `arguments` object,
           *  else `false`.
           * @example
           *
           * _.isArguments(function() { return arguments; }());
           * // => true
           *
           * _.isArguments([1, 2, 3]);
           * // => false
           */
          var isArguments = baseIsArguments(function () {
            return arguments;
          }()) ? baseIsArguments : function (value) {
            return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
          };

          /**
           * Checks if `value` is classified as an `Array` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array, else `false`.
           * @example
           *
           * _.isArray([1, 2, 3]);
           * // => true
           *
           * _.isArray(document.body.children);
           * // => false
           *
           * _.isArray('abc');
           * // => false
           *
           * _.isArray(_.noop);
           * // => false
           */
          var isArray = Array.isArray;

          /**
           * Checks if `value` is classified as an `ArrayBuffer` object.
           *
           * @static
           * @memberOf _
           * @since 4.3.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
           * @example
           *
           * _.isArrayBuffer(new ArrayBuffer(2));
           * // => true
           *
           * _.isArrayBuffer(new Array(2));
           * // => false
           */
          var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

          /**
           * Checks if `value` is array-like. A value is considered array-like if it's
           * not a function and has a `value.length` that's an integer greater than or
           * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
           * @example
           *
           * _.isArrayLike([1, 2, 3]);
           * // => true
           *
           * _.isArrayLike(document.body.children);
           * // => true
           *
           * _.isArrayLike('abc');
           * // => true
           *
           * _.isArrayLike(_.noop);
           * // => false
           */
          function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
          }

          /**
           * This method is like `_.isArrayLike` except that it also checks if `value`
           * is an object.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an array-like object,
           *  else `false`.
           * @example
           *
           * _.isArrayLikeObject([1, 2, 3]);
           * // => true
           *
           * _.isArrayLikeObject(document.body.children);
           * // => true
           *
           * _.isArrayLikeObject('abc');
           * // => false
           *
           * _.isArrayLikeObject(_.noop);
           * // => false
           */
          function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value);
          }

          /**
           * Checks if `value` is classified as a boolean primitive or object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
           * @example
           *
           * _.isBoolean(false);
           * // => true
           *
           * _.isBoolean(null);
           * // => false
           */
          function isBoolean(value) {
            return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
          }

          /**
           * Checks if `value` is a buffer.
           *
           * @static
           * @memberOf _
           * @since 4.3.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
           * @example
           *
           * _.isBuffer(new Buffer(2));
           * // => true
           *
           * _.isBuffer(new Uint8Array(2));
           * // => false
           */
          var isBuffer = nativeIsBuffer || stubFalse;

          /**
           * Checks if `value` is classified as a `Date` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
           * @example
           *
           * _.isDate(new Date);
           * // => true
           *
           * _.isDate('Mon April 23 2012');
           * // => false
           */
          var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

          /**
           * Checks if `value` is likely a DOM element.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
           * @example
           *
           * _.isElement(document.body);
           * // => true
           *
           * _.isElement('<body>');
           * // => false
           */
          function isElement(value) {
            return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
          }

          /**
           * Checks if `value` is an empty object, collection, map, or set.
           *
           * Objects are considered empty if they have no own enumerable string keyed
           * properties.
           *
           * Array-like values such as `arguments` objects, arrays, buffers, strings, or
           * jQuery-like collections are considered empty if they have a `length` of `0`.
           * Similarly, maps and sets are considered empty if they have a `size` of `0`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is empty, else `false`.
           * @example
           *
           * _.isEmpty(null);
           * // => true
           *
           * _.isEmpty(true);
           * // => true
           *
           * _.isEmpty(1);
           * // => true
           *
           * _.isEmpty([1, 2, 3]);
           * // => false
           *
           * _.isEmpty({ 'a': 1 });
           * // => false
           */
          function isEmpty(value) {
            if (value == null) {
              return true;
            }
            if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
              return !value.length;
            }
            var tag = getTag(value);
            if (tag == mapTag || tag == setTag) {
              return !value.size;
            }
            if (isPrototype(value)) {
              return !baseKeys(value).length;
            }
            for (var key in value) {
              if (hasOwnProperty.call(value, key)) {
                return false;
              }
            }
            return true;
          }

          /**
           * Performs a deep comparison between two values to determine if they are
           * equivalent.
           *
           * **Note:** This method supports comparing arrays, array buffers, booleans,
           * date objects, error objects, maps, numbers, `Object` objects, regexes,
           * sets, strings, symbols, and typed arrays. `Object` objects are compared
           * by their own, not inherited, enumerable properties. Functions and DOM
           * nodes are compared by strict equality, i.e. `===`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
           * @example
           *
           * var object = { 'a': 1 };
           * var other = { 'a': 1 };
           *
           * _.isEqual(object, other);
           * // => true
           *
           * object === other;
           * // => false
           */
          function isEqual(value, other) {
            return baseIsEqual(value, other);
          }

          /**
           * This method is like `_.isEqual` except that it accepts `customizer` which
           * is invoked to compare values. If `customizer` returns `undefined`, comparisons
           * are handled by the method instead. The `customizer` is invoked with up to
           * six arguments: (objValue, othValue [, index|key, object, other, stack]).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @param {Function} [customizer] The function to customize comparisons.
           * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
           * @example
           *
           * function isGreeting(value) {
           *   return /^h(?:i|ello)$/.test(value);
           * }
           *
           * function customizer(objValue, othValue) {
           *   if (isGreeting(objValue) && isGreeting(othValue)) {
           *     return true;
           *   }
           * }
           *
           * var array = ['hello', 'goodbye'];
           * var other = ['hi', 'goodbye'];
           *
           * _.isEqualWith(array, other, customizer);
           * // => true
           */
          function isEqualWith(value, other, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            var result = customizer ? customizer(value, other) : undefined;
            return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
          }

          /**
           * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
           * `SyntaxError`, `TypeError`, or `URIError` object.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
           * @example
           *
           * _.isError(new Error);
           * // => true
           *
           * _.isError(Error);
           * // => false
           */
          function isError(value) {
            if (!isObjectLike(value)) {
              return false;
            }
            var tag = baseGetTag(value);
            return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
          }

          /**
           * Checks if `value` is a finite primitive number.
           *
           * **Note:** This method is based on
           * [`Number.isFinite`](https://mdn.io/Number/isFinite).
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
           * @example
           *
           * _.isFinite(3);
           * // => true
           *
           * _.isFinite(Number.MIN_VALUE);
           * // => true
           *
           * _.isFinite(Infinity);
           * // => false
           *
           * _.isFinite('3');
           * // => false
           */
          function isFinite(value) {
            return typeof value == 'number' && nativeIsFinite(value);
          }

          /**
           * Checks if `value` is classified as a `Function` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a function, else `false`.
           * @example
           *
           * _.isFunction(_);
           * // => true
           *
           * _.isFunction(/abc/);
           * // => false
           */
          function isFunction(value) {
            if (!isObject(value)) {
              return false;
            }
            // The use of `Object#toString` avoids issues with the `typeof` operator
            // in Safari 9 which returns 'object' for typed arrays and other constructors.
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
          }

          /**
           * Checks if `value` is an integer.
           *
           * **Note:** This method is based on
           * [`Number.isInteger`](https://mdn.io/Number/isInteger).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
           * @example
           *
           * _.isInteger(3);
           * // => true
           *
           * _.isInteger(Number.MIN_VALUE);
           * // => false
           *
           * _.isInteger(Infinity);
           * // => false
           *
           * _.isInteger('3');
           * // => false
           */
          function isInteger(value) {
            return typeof value == 'number' && value == toInteger(value);
          }

          /**
           * Checks if `value` is a valid array-like length.
           *
           * **Note:** This method is loosely based on
           * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
           * @example
           *
           * _.isLength(3);
           * // => true
           *
           * _.isLength(Number.MIN_VALUE);
           * // => false
           *
           * _.isLength(Infinity);
           * // => false
           *
           * _.isLength('3');
           * // => false
           */
          function isLength(value) {
            return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
          }

          /**
           * Checks if `value` is the
           * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
           * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an object, else `false`.
           * @example
           *
           * _.isObject({});
           * // => true
           *
           * _.isObject([1, 2, 3]);
           * // => true
           *
           * _.isObject(_.noop);
           * // => true
           *
           * _.isObject(null);
           * // => false
           */
          function isObject(value) {
            var type = typeof value;
            return value != null && (type == 'object' || type == 'function');
          }

          /**
           * Checks if `value` is object-like. A value is object-like if it's not `null`
           * and has a `typeof` result of "object".
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
           * @example
           *
           * _.isObjectLike({});
           * // => true
           *
           * _.isObjectLike([1, 2, 3]);
           * // => true
           *
           * _.isObjectLike(_.noop);
           * // => false
           *
           * _.isObjectLike(null);
           * // => false
           */
          function isObjectLike(value) {
            return value != null && typeof value == 'object';
          }

          /**
           * Checks if `value` is classified as a `Map` object.
           *
           * @static
           * @memberOf _
           * @since 4.3.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a map, else `false`.
           * @example
           *
           * _.isMap(new Map);
           * // => true
           *
           * _.isMap(new WeakMap);
           * // => false
           */
          var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

          /**
           * Performs a partial deep comparison between `object` and `source` to
           * determine if `object` contains equivalent property values.
           *
           * **Note:** This method is equivalent to `_.matches` when `source` is
           * partially applied.
           *
           * Partial comparisons will match empty array and empty object `source`
           * values against any array or object value, respectively. See `_.isEqual`
           * for a list of supported value comparisons.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Lang
           * @param {Object} object The object to inspect.
           * @param {Object} source The object of property values to match.
           * @returns {boolean} Returns `true` if `object` is a match, else `false`.
           * @example
           *
           * var object = { 'a': 1, 'b': 2 };
           *
           * _.isMatch(object, { 'b': 2 });
           * // => true
           *
           * _.isMatch(object, { 'b': 1 });
           * // => false
           */
          function isMatch(object, source) {
            return object === source || baseIsMatch(object, source, getMatchData(source));
          }

          /**
           * This method is like `_.isMatch` except that it accepts `customizer` which
           * is invoked to compare values. If `customizer` returns `undefined`, comparisons
           * are handled by the method instead. The `customizer` is invoked with five
           * arguments: (objValue, srcValue, index|key, object, source).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {Object} object The object to inspect.
           * @param {Object} source The object of property values to match.
           * @param {Function} [customizer] The function to customize comparisons.
           * @returns {boolean} Returns `true` if `object` is a match, else `false`.
           * @example
           *
           * function isGreeting(value) {
           *   return /^h(?:i|ello)$/.test(value);
           * }
           *
           * function customizer(objValue, srcValue) {
           *   if (isGreeting(objValue) && isGreeting(srcValue)) {
           *     return true;
           *   }
           * }
           *
           * var object = { 'greeting': 'hello' };
           * var source = { 'greeting': 'hi' };
           *
           * _.isMatchWith(object, source, customizer);
           * // => true
           */
          function isMatchWith(object, source, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return baseIsMatch(object, source, getMatchData(source), customizer);
          }

          /**
           * Checks if `value` is `NaN`.
           *
           * **Note:** This method is based on
           * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
           * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
           * `undefined` and other non-number values.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
           * @example
           *
           * _.isNaN(NaN);
           * // => true
           *
           * _.isNaN(new Number(NaN));
           * // => true
           *
           * isNaN(undefined);
           * // => true
           *
           * _.isNaN(undefined);
           * // => false
           */
          function isNaN(value) {
            // An `NaN` primitive is the only value that is not equal to itself.
            // Perform the `toStringTag` check first to avoid errors with some
            // ActiveX objects in IE.
            return isNumber(value) && value != +value;
          }

          /**
           * Checks if `value` is a pristine native function.
           *
           * **Note:** This method can't reliably detect native functions in the presence
           * of the core-js package because core-js circumvents this kind of detection.
           * Despite multiple requests, the core-js maintainer has made it clear: any
           * attempt to fix the detection will be obstructed. As a result, we're left
           * with little choice but to throw an error. Unfortunately, this also affects
           * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
           * which rely on core-js.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a native function,
           *  else `false`.
           * @example
           *
           * _.isNative(Array.prototype.push);
           * // => true
           *
           * _.isNative(_);
           * // => false
           */
          function isNative(value) {
            if (isMaskable(value)) {
              throw new Error(CORE_ERROR_TEXT);
            }
            return baseIsNative(value);
          }

          /**
           * Checks if `value` is `null`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
           * @example
           *
           * _.isNull(null);
           * // => true
           *
           * _.isNull(void 0);
           * // => false
           */
          function isNull(value) {
            return value === null;
          }

          /**
           * Checks if `value` is `null` or `undefined`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
           * @example
           *
           * _.isNil(null);
           * // => true
           *
           * _.isNil(void 0);
           * // => true
           *
           * _.isNil(NaN);
           * // => false
           */
          function isNil(value) {
            return value == null;
          }

          /**
           * Checks if `value` is classified as a `Number` primitive or object.
           *
           * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
           * classified as numbers, use the `_.isFinite` method.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a number, else `false`.
           * @example
           *
           * _.isNumber(3);
           * // => true
           *
           * _.isNumber(Number.MIN_VALUE);
           * // => true
           *
           * _.isNumber(Infinity);
           * // => true
           *
           * _.isNumber('3');
           * // => false
           */
          function isNumber(value) {
            return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
          }

          /**
           * Checks if `value` is a plain object, that is, an object created by the
           * `Object` constructor or one with a `[[Prototype]]` of `null`.
           *
           * @static
           * @memberOf _
           * @since 0.8.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           * }
           *
           * _.isPlainObject(new Foo);
           * // => false
           *
           * _.isPlainObject([1, 2, 3]);
           * // => false
           *
           * _.isPlainObject({ 'x': 0, 'y': 0 });
           * // => true
           *
           * _.isPlainObject(Object.create(null));
           * // => true
           */
          function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
              return false;
            }
            var proto = getPrototype(value);
            if (proto === null) {
              return true;
            }
            var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
            return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
          }

          /**
           * Checks if `value` is classified as a `RegExp` object.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
           * @example
           *
           * _.isRegExp(/abc/);
           * // => true
           *
           * _.isRegExp('/abc/');
           * // => false
           */
          var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

          /**
           * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
           * double precision number which isn't the result of a rounded unsafe integer.
           *
           * **Note:** This method is based on
           * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
           * @example
           *
           * _.isSafeInteger(3);
           * // => true
           *
           * _.isSafeInteger(Number.MIN_VALUE);
           * // => false
           *
           * _.isSafeInteger(Infinity);
           * // => false
           *
           * _.isSafeInteger('3');
           * // => false
           */
          function isSafeInteger(value) {
            return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
          }

          /**
           * Checks if `value` is classified as a `Set` object.
           *
           * @static
           * @memberOf _
           * @since 4.3.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a set, else `false`.
           * @example
           *
           * _.isSet(new Set);
           * // => true
           *
           * _.isSet(new WeakSet);
           * // => false
           */
          var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

          /**
           * Checks if `value` is classified as a `String` primitive or object.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a string, else `false`.
           * @example
           *
           * _.isString('abc');
           * // => true
           *
           * _.isString(1);
           * // => false
           */
          function isString(value) {
            return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
          }

          /**
           * Checks if `value` is classified as a `Symbol` primitive or object.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
           * @example
           *
           * _.isSymbol(Symbol.iterator);
           * // => true
           *
           * _.isSymbol('abc');
           * // => false
           */
          function isSymbol(value) {
            return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
          }

          /**
           * Checks if `value` is classified as a typed array.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
           * @example
           *
           * _.isTypedArray(new Uint8Array);
           * // => true
           *
           * _.isTypedArray([]);
           * // => false
           */
          var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

          /**
           * Checks if `value` is `undefined`.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
           * @example
           *
           * _.isUndefined(void 0);
           * // => true
           *
           * _.isUndefined(null);
           * // => false
           */
          function isUndefined(value) {
            return value === undefined;
          }

          /**
           * Checks if `value` is classified as a `WeakMap` object.
           *
           * @static
           * @memberOf _
           * @since 4.3.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
           * @example
           *
           * _.isWeakMap(new WeakMap);
           * // => true
           *
           * _.isWeakMap(new Map);
           * // => false
           */
          function isWeakMap(value) {
            return isObjectLike(value) && getTag(value) == weakMapTag;
          }

          /**
           * Checks if `value` is classified as a `WeakSet` object.
           *
           * @static
           * @memberOf _
           * @since 4.3.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
           * @example
           *
           * _.isWeakSet(new WeakSet);
           * // => true
           *
           * _.isWeakSet(new Set);
           * // => false
           */
          function isWeakSet(value) {
            return isObjectLike(value) && baseGetTag(value) == weakSetTag;
          }

          /**
           * Checks if `value` is less than `other`.
           *
           * @static
           * @memberOf _
           * @since 3.9.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if `value` is less than `other`,
           *  else `false`.
           * @see _.gt
           * @example
           *
           * _.lt(1, 3);
           * // => true
           *
           * _.lt(3, 3);
           * // => false
           *
           * _.lt(3, 1);
           * // => false
           */
          var lt = createRelationalOperation(baseLt);

          /**
           * Checks if `value` is less than or equal to `other`.
           *
           * @static
           * @memberOf _
           * @since 3.9.0
           * @category Lang
           * @param {*} value The value to compare.
           * @param {*} other The other value to compare.
           * @returns {boolean} Returns `true` if `value` is less than or equal to
           *  `other`, else `false`.
           * @see _.gte
           * @example
           *
           * _.lte(1, 3);
           * // => true
           *
           * _.lte(3, 3);
           * // => true
           *
           * _.lte(3, 1);
           * // => false
           */
          var lte = createRelationalOperation(function (value, other) {
            return value <= other;
          });

          /**
           * Converts `value` to an array.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Lang
           * @param {*} value The value to convert.
           * @returns {Array} Returns the converted array.
           * @example
           *
           * _.toArray({ 'a': 1, 'b': 2 });
           * // => [1, 2]
           *
           * _.toArray('abc');
           * // => ['a', 'b', 'c']
           *
           * _.toArray(1);
           * // => []
           *
           * _.toArray(null);
           * // => []
           */
          function toArray(value) {
            if (!value) {
              return [];
            }
            if (isArrayLike(value)) {
              return isString(value) ? stringToArray(value) : copyArray(value);
            }
            if (symIterator && value[symIterator]) {
              return iteratorToArray(value[symIterator]());
            }
            var tag = getTag(value),
              func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
            return func(value);
          }

          /**
           * Converts `value` to a finite number.
           *
           * @static
           * @memberOf _
           * @since 4.12.0
           * @category Lang
           * @param {*} value The value to convert.
           * @returns {number} Returns the converted number.
           * @example
           *
           * _.toFinite(3.2);
           * // => 3.2
           *
           * _.toFinite(Number.MIN_VALUE);
           * // => 5e-324
           *
           * _.toFinite(Infinity);
           * // => 1.7976931348623157e+308
           *
           * _.toFinite('3.2');
           * // => 3.2
           */
          function toFinite(value) {
            if (!value) {
              return value === 0 ? value : 0;
            }
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
              var sign = value < 0 ? -1 : 1;
              return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
          }

          /**
           * Converts `value` to an integer.
           *
           * **Note:** This method is loosely based on
           * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to convert.
           * @returns {number} Returns the converted integer.
           * @example
           *
           * _.toInteger(3.2);
           * // => 3
           *
           * _.toInteger(Number.MIN_VALUE);
           * // => 0
           *
           * _.toInteger(Infinity);
           * // => 1.7976931348623157e+308
           *
           * _.toInteger('3.2');
           * // => 3
           */
          function toInteger(value) {
            var result = toFinite(value),
              remainder = result % 1;
            return result === result ? remainder ? result - remainder : result : 0;
          }

          /**
           * Converts `value` to an integer suitable for use as the length of an
           * array-like object.
           *
           * **Note:** This method is based on
           * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to convert.
           * @returns {number} Returns the converted integer.
           * @example
           *
           * _.toLength(3.2);
           * // => 3
           *
           * _.toLength(Number.MIN_VALUE);
           * // => 0
           *
           * _.toLength(Infinity);
           * // => 4294967295
           *
           * _.toLength('3.2');
           * // => 3
           */
          function toLength(value) {
            return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
          }

          /**
           * Converts `value` to a number.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to process.
           * @returns {number} Returns the number.
           * @example
           *
           * _.toNumber(3.2);
           * // => 3.2
           *
           * _.toNumber(Number.MIN_VALUE);
           * // => 5e-324
           *
           * _.toNumber(Infinity);
           * // => Infinity
           *
           * _.toNumber('3.2');
           * // => 3.2
           */
          function toNumber(value) {
            if (typeof value == 'number') {
              return value;
            }
            if (isSymbol(value)) {
              return NAN;
            }
            if (isObject(value)) {
              var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
              value = isObject(other) ? other + '' : other;
            }
            if (typeof value != 'string') {
              return value === 0 ? value : +value;
            }
            value = baseTrim(value);
            var isBinary = reIsBinary.test(value);
            return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
          }

          /**
           * Converts `value` to a plain object flattening inherited enumerable string
           * keyed properties of `value` to own properties of the plain object.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Lang
           * @param {*} value The value to convert.
           * @returns {Object} Returns the converted plain object.
           * @example
           *
           * function Foo() {
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.assign({ 'a': 1 }, new Foo);
           * // => { 'a': 1, 'b': 2 }
           *
           * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
           * // => { 'a': 1, 'b': 2, 'c': 3 }
           */
          function toPlainObject(value) {
            return copyObject(value, keysIn(value));
          }

          /**
           * Converts `value` to a safe integer. A safe integer can be compared and
           * represented correctly.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to convert.
           * @returns {number} Returns the converted integer.
           * @example
           *
           * _.toSafeInteger(3.2);
           * // => 3
           *
           * _.toSafeInteger(Number.MIN_VALUE);
           * // => 0
           *
           * _.toSafeInteger(Infinity);
           * // => 9007199254740991
           *
           * _.toSafeInteger('3.2');
           * // => 3
           */
          function toSafeInteger(value) {
            return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
          }

          /**
           * Converts `value` to a string. An empty string is returned for `null`
           * and `undefined` values. The sign of `-0` is preserved.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to convert.
           * @returns {string} Returns the converted string.
           * @example
           *
           * _.toString(null);
           * // => ''
           *
           * _.toString(-0);
           * // => '-0'
           *
           * _.toString([1, 2, 3]);
           * // => '1,2,3'
           */
          function toString(value) {
            return value == null ? '' : baseToString(value);
          }

          /*------------------------------------------------------------------------*/

          /**
           * Assigns own enumerable string keyed properties of source objects to the
           * destination object. Source objects are applied from left to right.
           * Subsequent sources overwrite property assignments of previous sources.
           *
           * **Note:** This method mutates `object` and is loosely based on
           * [`Object.assign`](https://mdn.io/Object/assign).
           *
           * @static
           * @memberOf _
           * @since 0.10.0
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} [sources] The source objects.
           * @returns {Object} Returns `object`.
           * @see _.assignIn
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           * }
           *
           * function Bar() {
           *   this.c = 3;
           * }
           *
           * Foo.prototype.b = 2;
           * Bar.prototype.d = 4;
           *
           * _.assign({ 'a': 0 }, new Foo, new Bar);
           * // => { 'a': 1, 'c': 3 }
           */
          var assign = createAssigner(function (object, source) {
            if (isPrototype(source) || isArrayLike(source)) {
              copyObject(source, keys(source), object);
              return;
            }
            for (var key in source) {
              if (hasOwnProperty.call(source, key)) {
                assignValue(object, key, source[key]);
              }
            }
          });

          /**
           * This method is like `_.assign` except that it iterates over own and
           * inherited source properties.
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @alias extend
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} [sources] The source objects.
           * @returns {Object} Returns `object`.
           * @see _.assign
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           * }
           *
           * function Bar() {
           *   this.c = 3;
           * }
           *
           * Foo.prototype.b = 2;
           * Bar.prototype.d = 4;
           *
           * _.assignIn({ 'a': 0 }, new Foo, new Bar);
           * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
           */
          var assignIn = createAssigner(function (object, source) {
            copyObject(source, keysIn(source), object);
          });

          /**
           * This method is like `_.assignIn` except that it accepts `customizer`
           * which is invoked to produce the assigned values. If `customizer` returns
           * `undefined`, assignment is handled by the method instead. The `customizer`
           * is invoked with five arguments: (objValue, srcValue, key, object, source).
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @alias extendWith
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} sources The source objects.
           * @param {Function} [customizer] The function to customize assigned values.
           * @returns {Object} Returns `object`.
           * @see _.assignWith
           * @example
           *
           * function customizer(objValue, srcValue) {
           *   return _.isUndefined(objValue) ? srcValue : objValue;
           * }
           *
           * var defaults = _.partialRight(_.assignInWith, customizer);
           *
           * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
           * // => { 'a': 1, 'b': 2 }
           */
          var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
            copyObject(source, keysIn(source), object, customizer);
          });

          /**
           * This method is like `_.assign` except that it accepts `customizer`
           * which is invoked to produce the assigned values. If `customizer` returns
           * `undefined`, assignment is handled by the method instead. The `customizer`
           * is invoked with five arguments: (objValue, srcValue, key, object, source).
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} sources The source objects.
           * @param {Function} [customizer] The function to customize assigned values.
           * @returns {Object} Returns `object`.
           * @see _.assignInWith
           * @example
           *
           * function customizer(objValue, srcValue) {
           *   return _.isUndefined(objValue) ? srcValue : objValue;
           * }
           *
           * var defaults = _.partialRight(_.assignWith, customizer);
           *
           * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
           * // => { 'a': 1, 'b': 2 }
           */
          var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
            copyObject(source, keys(source), object, customizer);
          });

          /**
           * Creates an array of values corresponding to `paths` of `object`.
           *
           * @static
           * @memberOf _
           * @since 1.0.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {...(string|string[])} [paths] The property paths to pick.
           * @returns {Array} Returns the picked values.
           * @example
           *
           * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
           *
           * _.at(object, ['a[0].b.c', 'a[1]']);
           * // => [3, 4]
           */
          var at = flatRest(baseAt);

          /**
           * Creates an object that inherits from the `prototype` object. If a
           * `properties` object is given, its own enumerable string keyed properties
           * are assigned to the created object.
           *
           * @static
           * @memberOf _
           * @since 2.3.0
           * @category Object
           * @param {Object} prototype The object to inherit from.
           * @param {Object} [properties] The properties to assign to the object.
           * @returns {Object} Returns the new object.
           * @example
           *
           * function Shape() {
           *   this.x = 0;
           *   this.y = 0;
           * }
           *
           * function Circle() {
           *   Shape.call(this);
           * }
           *
           * Circle.prototype = _.create(Shape.prototype, {
           *   'constructor': Circle
           * });
           *
           * var circle = new Circle;
           * circle instanceof Circle;
           * // => true
           *
           * circle instanceof Shape;
           * // => true
           */
          function create(prototype, properties) {
            var result = baseCreate(prototype);
            return properties == null ? result : baseAssign(result, properties);
          }

          /**
           * Assigns own and inherited enumerable string keyed properties of source
           * objects to the destination object for all destination properties that
           * resolve to `undefined`. Source objects are applied from left to right.
           * Once a property is set, additional values of the same property are ignored.
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} [sources] The source objects.
           * @returns {Object} Returns `object`.
           * @see _.defaultsDeep
           * @example
           *
           * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
           * // => { 'a': 1, 'b': 2 }
           */
          var defaults = baseRest(function (object, sources) {
            object = Object(object);
            var index = -1;
            var length = sources.length;
            var guard = length > 2 ? sources[2] : undefined;
            if (guard && isIterateeCall(sources[0], sources[1], guard)) {
              length = 1;
            }
            while (++index < length) {
              var source = sources[index];
              var props = keysIn(source);
              var propsIndex = -1;
              var propsLength = props.length;
              while (++propsIndex < propsLength) {
                var key = props[propsIndex];
                var value = object[key];
                if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
                  object[key] = source[key];
                }
              }
            }
            return object;
          });

          /**
           * This method is like `_.defaults` except that it recursively assigns
           * default properties.
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 3.10.0
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} [sources] The source objects.
           * @returns {Object} Returns `object`.
           * @see _.defaults
           * @example
           *
           * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
           * // => { 'a': { 'b': 2, 'c': 3 } }
           */
          var defaultsDeep = baseRest(function (args) {
            args.push(undefined, customDefaultsMerge);
            return apply(mergeWith, undefined, args);
          });

          /**
           * This method is like `_.find` except that it returns the key of the first
           * element `predicate` returns truthy for instead of the element itself.
           *
           * @static
           * @memberOf _
           * @since 1.1.0
           * @category Object
           * @param {Object} object The object to inspect.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {string|undefined} Returns the key of the matched element,
           *  else `undefined`.
           * @example
           *
           * var users = {
           *   'barney':  { 'age': 36, 'active': true },
           *   'fred':    { 'age': 40, 'active': false },
           *   'pebbles': { 'age': 1,  'active': true }
           * };
           *
           * _.findKey(users, function(o) { return o.age < 40; });
           * // => 'barney' (iteration order is not guaranteed)
           *
           * // The `_.matches` iteratee shorthand.
           * _.findKey(users, { 'age': 1, 'active': true });
           * // => 'pebbles'
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.findKey(users, ['active', false]);
           * // => 'fred'
           *
           * // The `_.property` iteratee shorthand.
           * _.findKey(users, 'active');
           * // => 'barney'
           */
          function findKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
          }

          /**
           * This method is like `_.findKey` except that it iterates over elements of
           * a collection in the opposite order.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @category Object
           * @param {Object} object The object to inspect.
           * @param {Function} [predicate=_.identity] The function invoked per iteration.
           * @returns {string|undefined} Returns the key of the matched element,
           *  else `undefined`.
           * @example
           *
           * var users = {
           *   'barney':  { 'age': 36, 'active': true },
           *   'fred':    { 'age': 40, 'active': false },
           *   'pebbles': { 'age': 1,  'active': true }
           * };
           *
           * _.findLastKey(users, function(o) { return o.age < 40; });
           * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
           *
           * // The `_.matches` iteratee shorthand.
           * _.findLastKey(users, { 'age': 36, 'active': true });
           * // => 'barney'
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.findLastKey(users, ['active', false]);
           * // => 'fred'
           *
           * // The `_.property` iteratee shorthand.
           * _.findLastKey(users, 'active');
           * // => 'pebbles'
           */
          function findLastKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
          }

          /**
           * Iterates over own and inherited enumerable string keyed properties of an
           * object and invokes `iteratee` for each property. The iteratee is invoked
           * with three arguments: (value, key, object). Iteratee functions may exit
           * iteration early by explicitly returning `false`.
           *
           * @static
           * @memberOf _
           * @since 0.3.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Object} Returns `object`.
           * @see _.forInRight
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.forIn(new Foo, function(value, key) {
           *   console.log(key);
           * });
           * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
           */
          function forIn(object, iteratee) {
            return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
          }

          /**
           * This method is like `_.forIn` except that it iterates over properties of
           * `object` in the opposite order.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Object} Returns `object`.
           * @see _.forIn
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.forInRight(new Foo, function(value, key) {
           *   console.log(key);
           * });
           * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
           */
          function forInRight(object, iteratee) {
            return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
          }

          /**
           * Iterates over own enumerable string keyed properties of an object and
           * invokes `iteratee` for each property. The iteratee is invoked with three
           * arguments: (value, key, object). Iteratee functions may exit iteration
           * early by explicitly returning `false`.
           *
           * @static
           * @memberOf _
           * @since 0.3.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Object} Returns `object`.
           * @see _.forOwnRight
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.forOwn(new Foo, function(value, key) {
           *   console.log(key);
           * });
           * // => Logs 'a' then 'b' (iteration order is not guaranteed).
           */
          function forOwn(object, iteratee) {
            return object && baseForOwn(object, getIteratee(iteratee, 3));
          }

          /**
           * This method is like `_.forOwn` except that it iterates over properties of
           * `object` in the opposite order.
           *
           * @static
           * @memberOf _
           * @since 2.0.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Object} Returns `object`.
           * @see _.forOwn
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.forOwnRight(new Foo, function(value, key) {
           *   console.log(key);
           * });
           * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
           */
          function forOwnRight(object, iteratee) {
            return object && baseForOwnRight(object, getIteratee(iteratee, 3));
          }

          /**
           * Creates an array of function property names from own enumerable properties
           * of `object`.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The object to inspect.
           * @returns {Array} Returns the function names.
           * @see _.functionsIn
           * @example
           *
           * function Foo() {
           *   this.a = _.constant('a');
           *   this.b = _.constant('b');
           * }
           *
           * Foo.prototype.c = _.constant('c');
           *
           * _.functions(new Foo);
           * // => ['a', 'b']
           */
          function functions(object) {
            return object == null ? [] : baseFunctions(object, keys(object));
          }

          /**
           * Creates an array of function property names from own and inherited
           * enumerable properties of `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The object to inspect.
           * @returns {Array} Returns the function names.
           * @see _.functions
           * @example
           *
           * function Foo() {
           *   this.a = _.constant('a');
           *   this.b = _.constant('b');
           * }
           *
           * Foo.prototype.c = _.constant('c');
           *
           * _.functionsIn(new Foo);
           * // => ['a', 'b', 'c']
           */
          function functionsIn(object) {
            return object == null ? [] : baseFunctions(object, keysIn(object));
          }

          /**
           * Gets the value at `path` of `object`. If the resolved value is
           * `undefined`, the `defaultValue` is returned in its place.
           *
           * @static
           * @memberOf _
           * @since 3.7.0
           * @category Object
           * @param {Object} object The object to query.
           * @param {Array|string} path The path of the property to get.
           * @param {*} [defaultValue] The value returned for `undefined` resolved values.
           * @returns {*} Returns the resolved value.
           * @example
           *
           * var object = { 'a': [{ 'b': { 'c': 3 } }] };
           *
           * _.get(object, 'a[0].b.c');
           * // => 3
           *
           * _.get(object, ['a', '0', 'b', 'c']);
           * // => 3
           *
           * _.get(object, 'a.b.c', 'default');
           * // => 'default'
           */
          function get(object, path, defaultValue) {
            var result = object == null ? undefined : baseGet(object, path);
            return result === undefined ? defaultValue : result;
          }

          /**
           * Checks if `path` is a direct property of `object`.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The object to query.
           * @param {Array|string} path The path to check.
           * @returns {boolean} Returns `true` if `path` exists, else `false`.
           * @example
           *
           * var object = { 'a': { 'b': 2 } };
           * var other = _.create({ 'a': _.create({ 'b': 2 }) });
           *
           * _.has(object, 'a');
           * // => true
           *
           * _.has(object, 'a.b');
           * // => true
           *
           * _.has(object, ['a', 'b']);
           * // => true
           *
           * _.has(other, 'a');
           * // => false
           */
          function has(object, path) {
            return object != null && hasPath(object, path, baseHas);
          }

          /**
           * Checks if `path` is a direct or inherited property of `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The object to query.
           * @param {Array|string} path The path to check.
           * @returns {boolean} Returns `true` if `path` exists, else `false`.
           * @example
           *
           * var object = _.create({ 'a': _.create({ 'b': 2 }) });
           *
           * _.hasIn(object, 'a');
           * // => true
           *
           * _.hasIn(object, 'a.b');
           * // => true
           *
           * _.hasIn(object, ['a', 'b']);
           * // => true
           *
           * _.hasIn(object, 'b');
           * // => false
           */
          function hasIn(object, path) {
            return object != null && hasPath(object, path, baseHasIn);
          }

          /**
           * Creates an object composed of the inverted keys and values of `object`.
           * If `object` contains duplicate values, subsequent values overwrite
           * property assignments of previous values.
           *
           * @static
           * @memberOf _
           * @since 0.7.0
           * @category Object
           * @param {Object} object The object to invert.
           * @returns {Object} Returns the new inverted object.
           * @example
           *
           * var object = { 'a': 1, 'b': 2, 'c': 1 };
           *
           * _.invert(object);
           * // => { '1': 'c', '2': 'b' }
           */
          var invert = createInverter(function (result, value, key) {
            if (value != null && typeof value.toString != 'function') {
              value = nativeObjectToString.call(value);
            }
            result[value] = key;
          }, constant(identity));

          /**
           * This method is like `_.invert` except that the inverted object is generated
           * from the results of running each element of `object` thru `iteratee`. The
           * corresponding inverted value of each inverted key is an array of keys
           * responsible for generating the inverted value. The iteratee is invoked
           * with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 4.1.0
           * @category Object
           * @param {Object} object The object to invert.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {Object} Returns the new inverted object.
           * @example
           *
           * var object = { 'a': 1, 'b': 2, 'c': 1 };
           *
           * _.invertBy(object);
           * // => { '1': ['a', 'c'], '2': ['b'] }
           *
           * _.invertBy(object, function(value) {
           *   return 'group' + value;
           * });
           * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
           */
          var invertBy = createInverter(function (result, value, key) {
            if (value != null && typeof value.toString != 'function') {
              value = nativeObjectToString.call(value);
            }
            if (hasOwnProperty.call(result, value)) {
              result[value].push(key);
            } else {
              result[value] = [key];
            }
          }, getIteratee);

          /**
           * Invokes the method at `path` of `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The object to query.
           * @param {Array|string} path The path of the method to invoke.
           * @param {...*} [args] The arguments to invoke the method with.
           * @returns {*} Returns the result of the invoked method.
           * @example
           *
           * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
           *
           * _.invoke(object, 'a[0].b.c.slice', 1, 3);
           * // => [2, 3]
           */
          var invoke = baseRest(baseInvoke);

          /**
           * Creates an array of the own enumerable property names of `object`.
           *
           * **Note:** Non-object values are coerced to objects. See the
           * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
           * for more details.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.keys(new Foo);
           * // => ['a', 'b'] (iteration order is not guaranteed)
           *
           * _.keys('hi');
           * // => ['0', '1']
           */
          function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
          }

          /**
           * Creates an array of the own and inherited enumerable property names of `object`.
           *
           * **Note:** Non-object values are coerced to objects.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property names.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.keysIn(new Foo);
           * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
           */
          function keysIn(object) {
            return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
          }

          /**
           * The opposite of `_.mapValues`; this method creates an object with the
           * same values as `object` and keys generated by running each own enumerable
           * string keyed property of `object` thru `iteratee`. The iteratee is invoked
           * with three arguments: (value, key, object).
           *
           * @static
           * @memberOf _
           * @since 3.8.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Object} Returns the new mapped object.
           * @see _.mapValues
           * @example
           *
           * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
           *   return key + value;
           * });
           * // => { 'a1': 1, 'b2': 2 }
           */
          function mapKeys(object, iteratee) {
            var result = {};
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function (value, key, object) {
              baseAssignValue(result, iteratee(value, key, object), value);
            });
            return result;
          }

          /**
           * Creates an object with the same keys as `object` and values generated
           * by running each own enumerable string keyed property of `object` thru
           * `iteratee`. The iteratee is invoked with three arguments:
           * (value, key, object).
           *
           * @static
           * @memberOf _
           * @since 2.4.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Object} Returns the new mapped object.
           * @see _.mapKeys
           * @example
           *
           * var users = {
           *   'fred':    { 'user': 'fred',    'age': 40 },
           *   'pebbles': { 'user': 'pebbles', 'age': 1 }
           * };
           *
           * _.mapValues(users, function(o) { return o.age; });
           * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
           *
           * // The `_.property` iteratee shorthand.
           * _.mapValues(users, 'age');
           * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
           */
          function mapValues(object, iteratee) {
            var result = {};
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function (value, key, object) {
              baseAssignValue(result, key, iteratee(value, key, object));
            });
            return result;
          }

          /**
           * This method is like `_.assign` except that it recursively merges own and
           * inherited enumerable string keyed properties of source objects into the
           * destination object. Source properties that resolve to `undefined` are
           * skipped if a destination value exists. Array and plain object properties
           * are merged recursively. Other objects and value types are overridden by
           * assignment. Source objects are applied from left to right. Subsequent
           * sources overwrite property assignments of previous sources.
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 0.5.0
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} [sources] The source objects.
           * @returns {Object} Returns `object`.
           * @example
           *
           * var object = {
           *   'a': [{ 'b': 2 }, { 'd': 4 }]
           * };
           *
           * var other = {
           *   'a': [{ 'c': 3 }, { 'e': 5 }]
           * };
           *
           * _.merge(object, other);
           * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
           */
          var merge = createAssigner(function (object, source, srcIndex) {
            baseMerge(object, source, srcIndex);
          });

          /**
           * This method is like `_.merge` except that it accepts `customizer` which
           * is invoked to produce the merged values of the destination and source
           * properties. If `customizer` returns `undefined`, merging is handled by the
           * method instead. The `customizer` is invoked with six arguments:
           * (objValue, srcValue, key, object, source, stack).
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The destination object.
           * @param {...Object} sources The source objects.
           * @param {Function} customizer The function to customize assigned values.
           * @returns {Object} Returns `object`.
           * @example
           *
           * function customizer(objValue, srcValue) {
           *   if (_.isArray(objValue)) {
           *     return objValue.concat(srcValue);
           *   }
           * }
           *
           * var object = { 'a': [1], 'b': [2] };
           * var other = { 'a': [3], 'b': [4] };
           *
           * _.mergeWith(object, other, customizer);
           * // => { 'a': [1, 3], 'b': [2, 4] }
           */
          var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
            baseMerge(object, source, srcIndex, customizer);
          });

          /**
           * The opposite of `_.pick`; this method creates an object composed of the
           * own and inherited enumerable property paths of `object` that are not omitted.
           *
           * **Note:** This method is considerably slower than `_.pick`.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The source object.
           * @param {...(string|string[])} [paths] The property paths to omit.
           * @returns {Object} Returns the new object.
           * @example
           *
           * var object = { 'a': 1, 'b': '2', 'c': 3 };
           *
           * _.omit(object, ['a', 'c']);
           * // => { 'b': '2' }
           */
          var omit = flatRest(function (object, paths) {
            var result = {};
            if (object == null) {
              return result;
            }
            var isDeep = false;
            paths = arrayMap(paths, function (path) {
              path = castPath(path, object);
              isDeep || (isDeep = path.length > 1);
              return path;
            });
            copyObject(object, getAllKeysIn(object), result);
            if (isDeep) {
              result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
            }
            var length = paths.length;
            while (length--) {
              baseUnset(result, paths[length]);
            }
            return result;
          });

          /**
           * The opposite of `_.pickBy`; this method creates an object composed of
           * the own and inherited enumerable string keyed properties of `object` that
           * `predicate` doesn't return truthy for. The predicate is invoked with two
           * arguments: (value, key).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The source object.
           * @param {Function} [predicate=_.identity] The function invoked per property.
           * @returns {Object} Returns the new object.
           * @example
           *
           * var object = { 'a': 1, 'b': '2', 'c': 3 };
           *
           * _.omitBy(object, _.isNumber);
           * // => { 'b': '2' }
           */
          function omitBy(object, predicate) {
            return pickBy(object, negate(getIteratee(predicate)));
          }

          /**
           * Creates an object composed of the picked `object` properties.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The source object.
           * @param {...(string|string[])} [paths] The property paths to pick.
           * @returns {Object} Returns the new object.
           * @example
           *
           * var object = { 'a': 1, 'b': '2', 'c': 3 };
           *
           * _.pick(object, ['a', 'c']);
           * // => { 'a': 1, 'c': 3 }
           */
          var pick = flatRest(function (object, paths) {
            return object == null ? {} : basePick(object, paths);
          });

          /**
           * Creates an object composed of the `object` properties `predicate` returns
           * truthy for. The predicate is invoked with two arguments: (value, key).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The source object.
           * @param {Function} [predicate=_.identity] The function invoked per property.
           * @returns {Object} Returns the new object.
           * @example
           *
           * var object = { 'a': 1, 'b': '2', 'c': 3 };
           *
           * _.pickBy(object, _.isNumber);
           * // => { 'a': 1, 'c': 3 }
           */
          function pickBy(object, predicate) {
            if (object == null) {
              return {};
            }
            var props = arrayMap(getAllKeysIn(object), function (prop) {
              return [prop];
            });
            predicate = getIteratee(predicate);
            return basePickBy(object, props, function (value, path) {
              return predicate(value, path[0]);
            });
          }

          /**
           * This method is like `_.get` except that if the resolved value is a
           * function it's invoked with the `this` binding of its parent object and
           * its result is returned.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The object to query.
           * @param {Array|string} path The path of the property to resolve.
           * @param {*} [defaultValue] The value returned for `undefined` resolved values.
           * @returns {*} Returns the resolved value.
           * @example
           *
           * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
           *
           * _.result(object, 'a[0].b.c1');
           * // => 3
           *
           * _.result(object, 'a[0].b.c2');
           * // => 4
           *
           * _.result(object, 'a[0].b.c3', 'default');
           * // => 'default'
           *
           * _.result(object, 'a[0].b.c3', _.constant('default'));
           * // => 'default'
           */
          function result(object, path, defaultValue) {
            path = castPath(path, object);
            var index = -1,
              length = path.length;

            // Ensure the loop is entered when path is empty.
            if (!length) {
              length = 1;
              object = undefined;
            }
            while (++index < length) {
              var value = object == null ? undefined : object[toKey(path[index])];
              if (value === undefined) {
                index = length;
                value = defaultValue;
              }
              object = isFunction(value) ? value.call(object) : value;
            }
            return object;
          }

          /**
           * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
           * it's created. Arrays are created for missing index properties while objects
           * are created for all other missing properties. Use `_.setWith` to customize
           * `path` creation.
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 3.7.0
           * @category Object
           * @param {Object} object The object to modify.
           * @param {Array|string} path The path of the property to set.
           * @param {*} value The value to set.
           * @returns {Object} Returns `object`.
           * @example
           *
           * var object = { 'a': [{ 'b': { 'c': 3 } }] };
           *
           * _.set(object, 'a[0].b.c', 4);
           * console.log(object.a[0].b.c);
           * // => 4
           *
           * _.set(object, ['x', '0', 'y', 'z'], 5);
           * console.log(object.x[0].y.z);
           * // => 5
           */
          function set(object, path, value) {
            return object == null ? object : baseSet(object, path, value);
          }

          /**
           * This method is like `_.set` except that it accepts `customizer` which is
           * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
           * path creation is handled by the method instead. The `customizer` is invoked
           * with three arguments: (nsValue, key, nsObject).
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The object to modify.
           * @param {Array|string} path The path of the property to set.
           * @param {*} value The value to set.
           * @param {Function} [customizer] The function to customize assigned values.
           * @returns {Object} Returns `object`.
           * @example
           *
           * var object = {};
           *
           * _.setWith(object, '[0][1]', 'a', Object);
           * // => { '0': { '1': 'a' } }
           */
          function setWith(object, path, value, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return object == null ? object : baseSet(object, path, value, customizer);
          }

          /**
           * Creates an array of own enumerable string keyed-value pairs for `object`
           * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
           * entries are returned.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @alias entries
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the key-value pairs.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.toPairs(new Foo);
           * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
           */
          var toPairs = createToPairs(keys);

          /**
           * Creates an array of own and inherited enumerable string keyed-value pairs
           * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
           * or set, its entries are returned.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @alias entriesIn
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the key-value pairs.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.toPairsIn(new Foo);
           * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
           */
          var toPairsIn = createToPairs(keysIn);

          /**
           * An alternative to `_.reduce`; this method transforms `object` to a new
           * `accumulator` object which is the result of running each of its own
           * enumerable string keyed properties thru `iteratee`, with each invocation
           * potentially mutating the `accumulator` object. If `accumulator` is not
           * provided, a new object with the same `[[Prototype]]` will be used. The
           * iteratee is invoked with four arguments: (accumulator, value, key, object).
           * Iteratee functions may exit iteration early by explicitly returning `false`.
           *
           * @static
           * @memberOf _
           * @since 1.3.0
           * @category Object
           * @param {Object} object The object to iterate over.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @param {*} [accumulator] The custom accumulator value.
           * @returns {*} Returns the accumulated value.
           * @example
           *
           * _.transform([2, 3, 4], function(result, n) {
           *   result.push(n *= n);
           *   return n % 2 == 0;
           * }, []);
           * // => [4, 9]
           *
           * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
           *   (result[value] || (result[value] = [])).push(key);
           * }, {});
           * // => { '1': ['a', 'c'], '2': ['b'] }
           */
          function transform(object, iteratee, accumulator) {
            var isArr = isArray(object),
              isArrLike = isArr || isBuffer(object) || isTypedArray(object);
            iteratee = getIteratee(iteratee, 4);
            if (accumulator == null) {
              var Ctor = object && object.constructor;
              if (isArrLike) {
                accumulator = isArr ? new Ctor() : [];
              } else if (isObject(object)) {
                accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
              } else {
                accumulator = {};
              }
            }
            (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
              return iteratee(accumulator, value, index, object);
            });
            return accumulator;
          }

          /**
           * Removes the property at `path` of `object`.
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Object
           * @param {Object} object The object to modify.
           * @param {Array|string} path The path of the property to unset.
           * @returns {boolean} Returns `true` if the property is deleted, else `false`.
           * @example
           *
           * var object = { 'a': [{ 'b': { 'c': 7 } }] };
           * _.unset(object, 'a[0].b.c');
           * // => true
           *
           * console.log(object);
           * // => { 'a': [{ 'b': {} }] };
           *
           * _.unset(object, ['a', '0', 'b', 'c']);
           * // => true
           *
           * console.log(object);
           * // => { 'a': [{ 'b': {} }] };
           */
          function unset(object, path) {
            return object == null ? true : baseUnset(object, path);
          }

          /**
           * This method is like `_.set` except that accepts `updater` to produce the
           * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
           * is invoked with one argument: (value).
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 4.6.0
           * @category Object
           * @param {Object} object The object to modify.
           * @param {Array|string} path The path of the property to set.
           * @param {Function} updater The function to produce the updated value.
           * @returns {Object} Returns `object`.
           * @example
           *
           * var object = { 'a': [{ 'b': { 'c': 3 } }] };
           *
           * _.update(object, 'a[0].b.c', function(n) { return n * n; });
           * console.log(object.a[0].b.c);
           * // => 9
           *
           * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
           * console.log(object.x[0].y.z);
           * // => 0
           */
          function update(object, path, updater) {
            return object == null ? object : baseUpdate(object, path, castFunction(updater));
          }

          /**
           * This method is like `_.update` except that it accepts `customizer` which is
           * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
           * path creation is handled by the method instead. The `customizer` is invoked
           * with three arguments: (nsValue, key, nsObject).
           *
           * **Note:** This method mutates `object`.
           *
           * @static
           * @memberOf _
           * @since 4.6.0
           * @category Object
           * @param {Object} object The object to modify.
           * @param {Array|string} path The path of the property to set.
           * @param {Function} updater The function to produce the updated value.
           * @param {Function} [customizer] The function to customize assigned values.
           * @returns {Object} Returns `object`.
           * @example
           *
           * var object = {};
           *
           * _.updateWith(object, '[0][1]', _.constant('a'), Object);
           * // => { '0': { '1': 'a' } }
           */
          function updateWith(object, path, updater, customizer) {
            customizer = typeof customizer == 'function' ? customizer : undefined;
            return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
          }

          /**
           * Creates an array of the own enumerable string keyed property values of `object`.
           *
           * **Note:** Non-object values are coerced to objects.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property values.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.values(new Foo);
           * // => [1, 2] (iteration order is not guaranteed)
           *
           * _.values('hi');
           * // => ['h', 'i']
           */
          function values(object) {
            return object == null ? [] : baseValues(object, keys(object));
          }

          /**
           * Creates an array of the own and inherited enumerable string keyed property
           * values of `object`.
           *
           * **Note:** Non-object values are coerced to objects.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Object
           * @param {Object} object The object to query.
           * @returns {Array} Returns the array of property values.
           * @example
           *
           * function Foo() {
           *   this.a = 1;
           *   this.b = 2;
           * }
           *
           * Foo.prototype.c = 3;
           *
           * _.valuesIn(new Foo);
           * // => [1, 2, 3] (iteration order is not guaranteed)
           */
          function valuesIn(object) {
            return object == null ? [] : baseValues(object, keysIn(object));
          }

          /*------------------------------------------------------------------------*/

          /**
           * Clamps `number` within the inclusive `lower` and `upper` bounds.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Number
           * @param {number} number The number to clamp.
           * @param {number} [lower] The lower bound.
           * @param {number} upper The upper bound.
           * @returns {number} Returns the clamped number.
           * @example
           *
           * _.clamp(-10, -5, 5);
           * // => -5
           *
           * _.clamp(10, -5, 5);
           * // => 5
           */
          function clamp(number, lower, upper) {
            if (upper === undefined) {
              upper = lower;
              lower = undefined;
            }
            if (upper !== undefined) {
              upper = toNumber(upper);
              upper = upper === upper ? upper : 0;
            }
            if (lower !== undefined) {
              lower = toNumber(lower);
              lower = lower === lower ? lower : 0;
            }
            return baseClamp(toNumber(number), lower, upper);
          }

          /**
           * Checks if `n` is between `start` and up to, but not including, `end`. If
           * `end` is not specified, it's set to `start` with `start` then set to `0`.
           * If `start` is greater than `end` the params are swapped to support
           * negative ranges.
           *
           * @static
           * @memberOf _
           * @since 3.3.0
           * @category Number
           * @param {number} number The number to check.
           * @param {number} [start=0] The start of the range.
           * @param {number} end The end of the range.
           * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
           * @see _.range, _.rangeRight
           * @example
           *
           * _.inRange(3, 2, 4);
           * // => true
           *
           * _.inRange(4, 8);
           * // => true
           *
           * _.inRange(4, 2);
           * // => false
           *
           * _.inRange(2, 2);
           * // => false
           *
           * _.inRange(1.2, 2);
           * // => true
           *
           * _.inRange(5.2, 4);
           * // => false
           *
           * _.inRange(-3, -2, -6);
           * // => true
           */
          function inRange(number, start, end) {
            start = toFinite(start);
            if (end === undefined) {
              end = start;
              start = 0;
            } else {
              end = toFinite(end);
            }
            number = toNumber(number);
            return baseInRange(number, start, end);
          }

          /**
           * Produces a random number between the inclusive `lower` and `upper` bounds.
           * If only one argument is provided a number between `0` and the given number
           * is returned. If `floating` is `true`, or either `lower` or `upper` are
           * floats, a floating-point number is returned instead of an integer.
           *
           * **Note:** JavaScript follows the IEEE-754 standard for resolving
           * floating-point values which can produce unexpected results.
           *
           * @static
           * @memberOf _
           * @since 0.7.0
           * @category Number
           * @param {number} [lower=0] The lower bound.
           * @param {number} [upper=1] The upper bound.
           * @param {boolean} [floating] Specify returning a floating-point number.
           * @returns {number} Returns the random number.
           * @example
           *
           * _.random(0, 5);
           * // => an integer between 0 and 5
           *
           * _.random(5);
           * // => also an integer between 0 and 5
           *
           * _.random(5, true);
           * // => a floating-point number between 0 and 5
           *
           * _.random(1.2, 5.2);
           * // => a floating-point number between 1.2 and 5.2
           */
          function random(lower, upper, floating) {
            if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
              upper = floating = undefined;
            }
            if (floating === undefined) {
              if (typeof upper == 'boolean') {
                floating = upper;
                upper = undefined;
              } else if (typeof lower == 'boolean') {
                floating = lower;
                lower = undefined;
              }
            }
            if (lower === undefined && upper === undefined) {
              lower = 0;
              upper = 1;
            } else {
              lower = toFinite(lower);
              if (upper === undefined) {
                upper = lower;
                lower = 0;
              } else {
                upper = toFinite(upper);
              }
            }
            if (lower > upper) {
              var temp = lower;
              lower = upper;
              upper = temp;
            }
            if (floating || lower % 1 || upper % 1) {
              var rand = nativeRandom();
              return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
            }
            return baseRandom(lower, upper);
          }

          /*------------------------------------------------------------------------*/

          /**
           * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the camel cased string.
           * @example
           *
           * _.camelCase('Foo Bar');
           * // => 'fooBar'
           *
           * _.camelCase('--foo-bar--');
           * // => 'fooBar'
           *
           * _.camelCase('__FOO_BAR__');
           * // => 'fooBar'
           */
          var camelCase = createCompounder(function (result, word, index) {
            word = word.toLowerCase();
            return result + (index ? capitalize(word) : word);
          });

          /**
           * Converts the first character of `string` to upper case and the remaining
           * to lower case.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to capitalize.
           * @returns {string} Returns the capitalized string.
           * @example
           *
           * _.capitalize('FRED');
           * // => 'Fred'
           */
          function capitalize(string) {
            return upperFirst(toString(string).toLowerCase());
          }

          /**
           * Deburrs `string` by converting
           * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
           * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
           * letters to basic Latin letters and removing
           * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to deburr.
           * @returns {string} Returns the deburred string.
           * @example
           *
           * _.deburr('déjà vu');
           * // => 'deja vu'
           */
          function deburr(string) {
            string = toString(string);
            return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
          }

          /**
           * Checks if `string` ends with the given target string.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to inspect.
           * @param {string} [target] The string to search for.
           * @param {number} [position=string.length] The position to search up to.
           * @returns {boolean} Returns `true` if `string` ends with `target`,
           *  else `false`.
           * @example
           *
           * _.endsWith('abc', 'c');
           * // => true
           *
           * _.endsWith('abc', 'b');
           * // => false
           *
           * _.endsWith('abc', 'b', 2);
           * // => true
           */
          function endsWith(string, target, position) {
            string = toString(string);
            target = baseToString(target);
            var length = string.length;
            position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
            var end = position;
            position -= target.length;
            return position >= 0 && string.slice(position, end) == target;
          }

          /**
           * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
           * corresponding HTML entities.
           *
           * **Note:** No other characters are escaped. To escape additional
           * characters use a third-party library like [_he_](https://mths.be/he).
           *
           * Though the ">" character is escaped for symmetry, characters like
           * ">" and "/" don't need escaping in HTML and have no special meaning
           * unless they're part of a tag or unquoted attribute value. See
           * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
           * (under "semi-related fun fact") for more details.
           *
           * When working with HTML you should always
           * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
           * XSS vectors.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category String
           * @param {string} [string=''] The string to escape.
           * @returns {string} Returns the escaped string.
           * @example
           *
           * _.escape('fred, barney, & pebbles');
           * // => 'fred, barney, &amp; pebbles'
           */
          function escape(string) {
            string = toString(string);
            return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
          }

          /**
           * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
           * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to escape.
           * @returns {string} Returns the escaped string.
           * @example
           *
           * _.escapeRegExp('[lodash](https://lodash.com/)');
           * // => '\[lodash\]\(https://lodash\.com/\)'
           */
          function escapeRegExp(string) {
            string = toString(string);
            return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
          }

          /**
           * Converts `string` to
           * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the kebab cased string.
           * @example
           *
           * _.kebabCase('Foo Bar');
           * // => 'foo-bar'
           *
           * _.kebabCase('fooBar');
           * // => 'foo-bar'
           *
           * _.kebabCase('__FOO_BAR__');
           * // => 'foo-bar'
           */
          var kebabCase = createCompounder(function (result, word, index) {
            return result + (index ? '-' : '') + word.toLowerCase();
          });

          /**
           * Converts `string`, as space separated words, to lower case.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the lower cased string.
           * @example
           *
           * _.lowerCase('--Foo-Bar--');
           * // => 'foo bar'
           *
           * _.lowerCase('fooBar');
           * // => 'foo bar'
           *
           * _.lowerCase('__FOO_BAR__');
           * // => 'foo bar'
           */
          var lowerCase = createCompounder(function (result, word, index) {
            return result + (index ? ' ' : '') + word.toLowerCase();
          });

          /**
           * Converts the first character of `string` to lower case.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the converted string.
           * @example
           *
           * _.lowerFirst('Fred');
           * // => 'fred'
           *
           * _.lowerFirst('FRED');
           * // => 'fRED'
           */
          var lowerFirst = createCaseFirst('toLowerCase');

          /**
           * Pads `string` on the left and right sides if it's shorter than `length`.
           * Padding characters are truncated if they can't be evenly divided by `length`.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to pad.
           * @param {number} [length=0] The padding length.
           * @param {string} [chars=' '] The string used as padding.
           * @returns {string} Returns the padded string.
           * @example
           *
           * _.pad('abc', 8);
           * // => '  abc   '
           *
           * _.pad('abc', 8, '_-');
           * // => '_-abc_-_'
           *
           * _.pad('abc', 3);
           * // => 'abc'
           */
          function pad(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            if (!length || strLength >= length) {
              return string;
            }
            var mid = (length - strLength) / 2;
            return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
          }

          /**
           * Pads `string` on the right side if it's shorter than `length`. Padding
           * characters are truncated if they exceed `length`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to pad.
           * @param {number} [length=0] The padding length.
           * @param {string} [chars=' '] The string used as padding.
           * @returns {string} Returns the padded string.
           * @example
           *
           * _.padEnd('abc', 6);
           * // => 'abc   '
           *
           * _.padEnd('abc', 6, '_-');
           * // => 'abc_-_'
           *
           * _.padEnd('abc', 3);
           * // => 'abc'
           */
          function padEnd(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
          }

          /**
           * Pads `string` on the left side if it's shorter than `length`. Padding
           * characters are truncated if they exceed `length`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to pad.
           * @param {number} [length=0] The padding length.
           * @param {string} [chars=' '] The string used as padding.
           * @returns {string} Returns the padded string.
           * @example
           *
           * _.padStart('abc', 6);
           * // => '   abc'
           *
           * _.padStart('abc', 6, '_-');
           * // => '_-_abc'
           *
           * _.padStart('abc', 3);
           * // => 'abc'
           */
          function padStart(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
          }

          /**
           * Converts `string` to an integer of the specified radix. If `radix` is
           * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
           * hexadecimal, in which case a `radix` of `16` is used.
           *
           * **Note:** This method aligns with the
           * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
           *
           * @static
           * @memberOf _
           * @since 1.1.0
           * @category String
           * @param {string} string The string to convert.
           * @param {number} [radix=10] The radix to interpret `value` by.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {number} Returns the converted integer.
           * @example
           *
           * _.parseInt('08');
           * // => 8
           *
           * _.map(['6', '08', '10'], _.parseInt);
           * // => [6, 8, 10]
           */
          function parseInt(string, radix, guard) {
            if (guard || radix == null) {
              radix = 0;
            } else if (radix) {
              radix = +radix;
            }
            return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
          }

          /**
           * Repeats the given string `n` times.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to repeat.
           * @param {number} [n=1] The number of times to repeat the string.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {string} Returns the repeated string.
           * @example
           *
           * _.repeat('*', 3);
           * // => '***'
           *
           * _.repeat('abc', 2);
           * // => 'abcabc'
           *
           * _.repeat('abc', 0);
           * // => ''
           */
          function repeat(string, n, guard) {
            if (guard ? isIterateeCall(string, n, guard) : n === undefined) {
              n = 1;
            } else {
              n = toInteger(n);
            }
            return baseRepeat(toString(string), n);
          }

          /**
           * Replaces matches for `pattern` in `string` with `replacement`.
           *
           * **Note:** This method is based on
           * [`String#replace`](https://mdn.io/String/replace).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to modify.
           * @param {RegExp|string} pattern The pattern to replace.
           * @param {Function|string} replacement The match replacement.
           * @returns {string} Returns the modified string.
           * @example
           *
           * _.replace('Hi Fred', 'Fred', 'Barney');
           * // => 'Hi Barney'
           */
          function replace() {
            var args = arguments,
              string = toString(args[0]);
            return args.length < 3 ? string : string.replace(args[1], args[2]);
          }

          /**
           * Converts `string` to
           * [snake case](https://en.wikipedia.org/wiki/Snake_case).
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the snake cased string.
           * @example
           *
           * _.snakeCase('Foo Bar');
           * // => 'foo_bar'
           *
           * _.snakeCase('fooBar');
           * // => 'foo_bar'
           *
           * _.snakeCase('--FOO-BAR--');
           * // => 'foo_bar'
           */
          var snakeCase = createCompounder(function (result, word, index) {
            return result + (index ? '_' : '') + word.toLowerCase();
          });

          /**
           * Splits `string` by `separator`.
           *
           * **Note:** This method is based on
           * [`String#split`](https://mdn.io/String/split).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to split.
           * @param {RegExp|string} separator The separator pattern to split by.
           * @param {number} [limit] The length to truncate results to.
           * @returns {Array} Returns the string segments.
           * @example
           *
           * _.split('a-b-c', '-', 2);
           * // => ['a', 'b']
           */
          function split(string, separator, limit) {
            if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
              separator = limit = undefined;
            }
            limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
            if (!limit) {
              return [];
            }
            string = toString(string);
            if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
              separator = baseToString(separator);
              if (!separator && hasUnicode(string)) {
                return castSlice(stringToArray(string), 0, limit);
              }
            }
            return string.split(separator, limit);
          }

          /**
           * Converts `string` to
           * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
           *
           * @static
           * @memberOf _
           * @since 3.1.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the start cased string.
           * @example
           *
           * _.startCase('--foo-bar--');
           * // => 'Foo Bar'
           *
           * _.startCase('fooBar');
           * // => 'Foo Bar'
           *
           * _.startCase('__FOO_BAR__');
           * // => 'FOO BAR'
           */
          var startCase = createCompounder(function (result, word, index) {
            return result + (index ? ' ' : '') + upperFirst(word);
          });

          /**
           * Checks if `string` starts with the given target string.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to inspect.
           * @param {string} [target] The string to search for.
           * @param {number} [position=0] The position to search from.
           * @returns {boolean} Returns `true` if `string` starts with `target`,
           *  else `false`.
           * @example
           *
           * _.startsWith('abc', 'a');
           * // => true
           *
           * _.startsWith('abc', 'b');
           * // => false
           *
           * _.startsWith('abc', 'b', 1);
           * // => true
           */
          function startsWith(string, target, position) {
            string = toString(string);
            position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
            target = baseToString(target);
            return string.slice(position, position + target.length) == target;
          }

          /**
           * Creates a compiled template function that can interpolate data properties
           * in "interpolate" delimiters, HTML-escape interpolated data properties in
           * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
           * properties may be accessed as free variables in the template. If a setting
           * object is given, it takes precedence over `_.templateSettings` values.
           *
           * **Note:** In the development build `_.template` utilizes
           * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
           * for easier debugging.
           *
           * For more information on precompiling templates see
           * [lodash's custom builds documentation](https://lodash.com/custom-builds).
           *
           * For more information on Chrome extension sandboxes see
           * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category String
           * @param {string} [string=''] The template string.
           * @param {Object} [options={}] The options object.
           * @param {RegExp} [options.escape=_.templateSettings.escape]
           *  The HTML "escape" delimiter.
           * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
           *  The "evaluate" delimiter.
           * @param {Object} [options.imports=_.templateSettings.imports]
           *  An object to import into the template as free variables.
           * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
           *  The "interpolate" delimiter.
           * @param {string} [options.sourceURL='lodash.templateSources[n]']
           *  The sourceURL of the compiled template.
           * @param {string} [options.variable='obj']
           *  The data object variable name.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Function} Returns the compiled template function.
           * @example
           *
           * // Use the "interpolate" delimiter to create a compiled template.
           * var compiled = _.template('hello <%= user %>!');
           * compiled({ 'user': 'fred' });
           * // => 'hello fred!'
           *
           * // Use the HTML "escape" delimiter to escape data property values.
           * var compiled = _.template('<b><%- value %></b>');
           * compiled({ 'value': '<script>' });
           * // => '<b>&lt;script&gt;</b>'
           *
           * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
           * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
           * compiled({ 'users': ['fred', 'barney'] });
           * // => '<li>fred</li><li>barney</li>'
           *
           * // Use the internal `print` function in "evaluate" delimiters.
           * var compiled = _.template('<% print("hello " + user); %>!');
           * compiled({ 'user': 'barney' });
           * // => 'hello barney!'
           *
           * // Use the ES template literal delimiter as an "interpolate" delimiter.
           * // Disable support by replacing the "interpolate" delimiter.
           * var compiled = _.template('hello ${ user }!');
           * compiled({ 'user': 'pebbles' });
           * // => 'hello pebbles!'
           *
           * // Use backslashes to treat delimiters as plain text.
           * var compiled = _.template('<%= "\\<%- value %\\>" %>');
           * compiled({ 'value': 'ignored' });
           * // => '<%- value %>'
           *
           * // Use the `imports` option to import `jQuery` as `jq`.
           * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
           * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
           * compiled({ 'users': ['fred', 'barney'] });
           * // => '<li>fred</li><li>barney</li>'
           *
           * // Use the `sourceURL` option to specify a custom sourceURL for the template.
           * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
           * compiled(data);
           * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
           *
           * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
           * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
           * compiled.source;
           * // => function(data) {
           * //   var __t, __p = '';
           * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
           * //   return __p;
           * // }
           *
           * // Use custom template delimiters.
           * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
           * var compiled = _.template('hello {{ user }}!');
           * compiled({ 'user': 'mustache' });
           * // => 'hello mustache!'
           *
           * // Use the `source` property to inline compiled templates for meaningful
           * // line numbers in error messages and stack traces.
           * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
           *   var JST = {\
           *     "main": ' + _.template(mainText).source + '\
           *   };\
           * ');
           */
          function template(string, options, guard) {
            // Based on John Resig's `tmpl` implementation
            // (http://ejohn.org/blog/javascript-micro-templating/)
            // and Laura Doktorova's doT.js (https://github.com/olado/doT).
            var settings = lodash.templateSettings;
            if (guard && isIterateeCall(string, options, guard)) {
              options = undefined;
            }
            string = toString(string);
            options = assignInWith({}, options, settings, customDefaultsAssignIn);
            var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
              importsKeys = keys(imports),
              importsValues = baseValues(imports, importsKeys);
            var isEscaping,
              isEvaluating,
              index = 0,
              interpolate = options.interpolate || reNoMatch,
              source = "__p += '";

            // Compile the regexp to match each delimiter.
            var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');

            // Use a sourceURL for easier debugging.
            // The sourceURL gets injected into the source that's eval-ed, so be careful
            // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
            // and escape the comment, thus injecting code that gets evaled.
            var sourceURL = '//# sourceURL=' + (hasOwnProperty.call(options, 'sourceURL') ? (options.sourceURL + '').replace(/\s/g, ' ') : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';
            string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
              interpolateValue || (interpolateValue = esTemplateValue);

              // Escape characters that can't be included in string literals.
              source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

              // Replace delimiters with snippets.
              if (escapeValue) {
                isEscaping = true;
                source += "' +\n__e(" + escapeValue + ") +\n'";
              }
              if (evaluateValue) {
                isEvaluating = true;
                source += "';\n" + evaluateValue + ";\n__p += '";
              }
              if (interpolateValue) {
                source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
              }
              index = offset + match.length;

              // The JS engine embedded in Adobe products needs `match` returned in
              // order to produce the correct `offset` value.
              return match;
            });
            source += "';\n";

            // If `variable` is not specified wrap a with-statement around the generated
            // code to add the data object to the top of the scope chain.
            var variable = hasOwnProperty.call(options, 'variable') && options.variable;
            if (!variable) {
              source = 'with (obj) {\n' + source + '\n}\n';
            }
            // Throw an error if a forbidden character was found in `variable`, to prevent
            // potential command injection attacks.
            else if (reForbiddenIdentifierChars.test(variable)) {
              throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
            }

            // Cleanup code by stripping empty strings.
            source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');

            // Frame code as the function body.
            source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
            var result = attempt(function () {
              return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
            });

            // Provide the compiled function's source by its `toString` method or
            // the `source` property as a convenience for inlining compiled templates.
            result.source = source;
            if (isError(result)) {
              throw result;
            }
            return result;
          }

          /**
           * Converts `string`, as a whole, to lower case just like
           * [String#toLowerCase](https://mdn.io/toLowerCase).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the lower cased string.
           * @example
           *
           * _.toLower('--Foo-Bar--');
           * // => '--foo-bar--'
           *
           * _.toLower('fooBar');
           * // => 'foobar'
           *
           * _.toLower('__FOO_BAR__');
           * // => '__foo_bar__'
           */
          function toLower(value) {
            return toString(value).toLowerCase();
          }

          /**
           * Converts `string`, as a whole, to upper case just like
           * [String#toUpperCase](https://mdn.io/toUpperCase).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the upper cased string.
           * @example
           *
           * _.toUpper('--foo-bar--');
           * // => '--FOO-BAR--'
           *
           * _.toUpper('fooBar');
           * // => 'FOOBAR'
           *
           * _.toUpper('__foo_bar__');
           * // => '__FOO_BAR__'
           */
          function toUpper(value) {
            return toString(value).toUpperCase();
          }

          /**
           * Removes leading and trailing whitespace or specified characters from `string`.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to trim.
           * @param {string} [chars=whitespace] The characters to trim.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {string} Returns the trimmed string.
           * @example
           *
           * _.trim('  abc  ');
           * // => 'abc'
           *
           * _.trim('-_-abc-_-', '_-');
           * // => 'abc'
           *
           * _.map(['  foo  ', '  bar  '], _.trim);
           * // => ['foo', 'bar']
           */
          function trim(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) {
              return baseTrim(string);
            }
            if (!string || !(chars = baseToString(chars))) {
              return string;
            }
            var strSymbols = stringToArray(string),
              chrSymbols = stringToArray(chars),
              start = charsStartIndex(strSymbols, chrSymbols),
              end = charsEndIndex(strSymbols, chrSymbols) + 1;
            return castSlice(strSymbols, start, end).join('');
          }

          /**
           * Removes trailing whitespace or specified characters from `string`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to trim.
           * @param {string} [chars=whitespace] The characters to trim.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {string} Returns the trimmed string.
           * @example
           *
           * _.trimEnd('  abc  ');
           * // => '  abc'
           *
           * _.trimEnd('-_-abc-_-', '_-');
           * // => '-_-abc'
           */
          function trimEnd(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) {
              return string.slice(0, trimmedEndIndex(string) + 1);
            }
            if (!string || !(chars = baseToString(chars))) {
              return string;
            }
            var strSymbols = stringToArray(string),
              end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
            return castSlice(strSymbols, 0, end).join('');
          }

          /**
           * Removes leading whitespace or specified characters from `string`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to trim.
           * @param {string} [chars=whitespace] The characters to trim.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {string} Returns the trimmed string.
           * @example
           *
           * _.trimStart('  abc  ');
           * // => 'abc  '
           *
           * _.trimStart('-_-abc-_-', '_-');
           * // => 'abc-_-'
           */
          function trimStart(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) {
              return string.replace(reTrimStart, '');
            }
            if (!string || !(chars = baseToString(chars))) {
              return string;
            }
            var strSymbols = stringToArray(string),
              start = charsStartIndex(strSymbols, stringToArray(chars));
            return castSlice(strSymbols, start).join('');
          }

          /**
           * Truncates `string` if it's longer than the given maximum string length.
           * The last characters of the truncated string are replaced with the omission
           * string which defaults to "...".
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to truncate.
           * @param {Object} [options={}] The options object.
           * @param {number} [options.length=30] The maximum string length.
           * @param {string} [options.omission='...'] The string to indicate text is omitted.
           * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
           * @returns {string} Returns the truncated string.
           * @example
           *
           * _.truncate('hi-diddly-ho there, neighborino');
           * // => 'hi-diddly-ho there, neighbo...'
           *
           * _.truncate('hi-diddly-ho there, neighborino', {
           *   'length': 24,
           *   'separator': ' '
           * });
           * // => 'hi-diddly-ho there,...'
           *
           * _.truncate('hi-diddly-ho there, neighborino', {
           *   'length': 24,
           *   'separator': /,? +/
           * });
           * // => 'hi-diddly-ho there...'
           *
           * _.truncate('hi-diddly-ho there, neighborino', {
           *   'omission': ' [...]'
           * });
           * // => 'hi-diddly-ho there, neig [...]'
           */
          function truncate(string, options) {
            var length = DEFAULT_TRUNC_LENGTH,
              omission = DEFAULT_TRUNC_OMISSION;
            if (isObject(options)) {
              var separator = 'separator' in options ? options.separator : separator;
              length = 'length' in options ? toInteger(options.length) : length;
              omission = 'omission' in options ? baseToString(options.omission) : omission;
            }
            string = toString(string);
            var strLength = string.length;
            if (hasUnicode(string)) {
              var strSymbols = stringToArray(string);
              strLength = strSymbols.length;
            }
            if (length >= strLength) {
              return string;
            }
            var end = length - stringSize(omission);
            if (end < 1) {
              return omission;
            }
            var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);
            if (separator === undefined) {
              return result + omission;
            }
            if (strSymbols) {
              end += result.length - end;
            }
            if (isRegExp(separator)) {
              if (string.slice(end).search(separator)) {
                var match,
                  substring = result;
                if (!separator.global) {
                  separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
                }
                separator.lastIndex = 0;
                while (match = separator.exec(substring)) {
                  var newEnd = match.index;
                }
                result = result.slice(0, newEnd === undefined ? end : newEnd);
              }
            } else if (string.indexOf(baseToString(separator), end) != end) {
              var index = result.lastIndexOf(separator);
              if (index > -1) {
                result = result.slice(0, index);
              }
            }
            return result + omission;
          }

          /**
           * The inverse of `_.escape`; this method converts the HTML entities
           * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
           * their corresponding characters.
           *
           * **Note:** No other HTML entities are unescaped. To unescape additional
           * HTML entities use a third-party library like [_he_](https://mths.be/he).
           *
           * @static
           * @memberOf _
           * @since 0.6.0
           * @category String
           * @param {string} [string=''] The string to unescape.
           * @returns {string} Returns the unescaped string.
           * @example
           *
           * _.unescape('fred, barney, &amp; pebbles');
           * // => 'fred, barney, & pebbles'
           */
          function unescape(string) {
            string = toString(string);
            return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
          }

          /**
           * Converts `string`, as space separated words, to upper case.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the upper cased string.
           * @example
           *
           * _.upperCase('--foo-bar');
           * // => 'FOO BAR'
           *
           * _.upperCase('fooBar');
           * // => 'FOO BAR'
           *
           * _.upperCase('__foo_bar__');
           * // => 'FOO BAR'
           */
          var upperCase = createCompounder(function (result, word, index) {
            return result + (index ? ' ' : '') + word.toUpperCase();
          });

          /**
           * Converts the first character of `string` to upper case.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category String
           * @param {string} [string=''] The string to convert.
           * @returns {string} Returns the converted string.
           * @example
           *
           * _.upperFirst('fred');
           * // => 'Fred'
           *
           * _.upperFirst('FRED');
           * // => 'FRED'
           */
          var upperFirst = createCaseFirst('toUpperCase');

          /**
           * Splits `string` into an array of its words.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category String
           * @param {string} [string=''] The string to inspect.
           * @param {RegExp|string} [pattern] The pattern to match words.
           * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
           * @returns {Array} Returns the words of `string`.
           * @example
           *
           * _.words('fred, barney, & pebbles');
           * // => ['fred', 'barney', 'pebbles']
           *
           * _.words('fred, barney, & pebbles', /[^, ]+/g);
           * // => ['fred', 'barney', '&', 'pebbles']
           */
          function words(string, pattern, guard) {
            string = toString(string);
            pattern = guard ? undefined : pattern;
            if (pattern === undefined) {
              return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
            }
            return string.match(pattern) || [];
          }

          /*------------------------------------------------------------------------*/

          /**
           * Attempts to invoke `func`, returning either the result or the caught error
           * object. Any additional arguments are provided to `func` when it's invoked.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Util
           * @param {Function} func The function to attempt.
           * @param {...*} [args] The arguments to invoke `func` with.
           * @returns {*} Returns the `func` result or error object.
           * @example
           *
           * // Avoid throwing errors for invalid selectors.
           * var elements = _.attempt(function(selector) {
           *   return document.querySelectorAll(selector);
           * }, '>_>');
           *
           * if (_.isError(elements)) {
           *   elements = [];
           * }
           */
          var attempt = baseRest(function (func, args) {
            try {
              return apply(func, undefined, args);
            } catch (e) {
              return isError(e) ? e : new Error(e);
            }
          });

          /**
           * Binds methods of an object to the object itself, overwriting the existing
           * method.
           *
           * **Note:** This method doesn't set the "length" property of bound functions.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Util
           * @param {Object} object The object to bind and assign the bound methods to.
           * @param {...(string|string[])} methodNames The object method names to bind.
           * @returns {Object} Returns `object`.
           * @example
           *
           * var view = {
           *   'label': 'docs',
           *   'click': function() {
           *     console.log('clicked ' + this.label);
           *   }
           * };
           *
           * _.bindAll(view, ['click']);
           * jQuery(element).on('click', view.click);
           * // => Logs 'clicked docs' when clicked.
           */
          var bindAll = flatRest(function (object, methodNames) {
            arrayEach(methodNames, function (key) {
              key = toKey(key);
              baseAssignValue(object, key, bind(object[key], object));
            });
            return object;
          });

          /**
           * Creates a function that iterates over `pairs` and invokes the corresponding
           * function of the first predicate to return truthy. The predicate-function
           * pairs are invoked with the `this` binding and arguments of the created
           * function.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Util
           * @param {Array} pairs The predicate-function pairs.
           * @returns {Function} Returns the new composite function.
           * @example
           *
           * var func = _.cond([
           *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
           *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
           *   [_.stubTrue,                      _.constant('no match')]
           * ]);
           *
           * func({ 'a': 1, 'b': 2 });
           * // => 'matches A'
           *
           * func({ 'a': 0, 'b': 1 });
           * // => 'matches B'
           *
           * func({ 'a': '1', 'b': '2' });
           * // => 'no match'
           */
          function cond(pairs) {
            var length = pairs == null ? 0 : pairs.length,
              toIteratee = getIteratee();
            pairs = !length ? [] : arrayMap(pairs, function (pair) {
              if (typeof pair[1] != 'function') {
                throw new TypeError(FUNC_ERROR_TEXT);
              }
              return [toIteratee(pair[0]), pair[1]];
            });
            return baseRest(function (args) {
              var index = -1;
              while (++index < length) {
                var pair = pairs[index];
                if (apply(pair[0], this, args)) {
                  return apply(pair[1], this, args);
                }
              }
            });
          }

          /**
           * Creates a function that invokes the predicate properties of `source` with
           * the corresponding property values of a given object, returning `true` if
           * all predicates return truthy, else `false`.
           *
           * **Note:** The created function is equivalent to `_.conformsTo` with
           * `source` partially applied.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Util
           * @param {Object} source The object of property predicates to conform to.
           * @returns {Function} Returns the new spec function.
           * @example
           *
           * var objects = [
           *   { 'a': 2, 'b': 1 },
           *   { 'a': 1, 'b': 2 }
           * ];
           *
           * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
           * // => [{ 'a': 1, 'b': 2 }]
           */
          function conforms(source) {
            return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
          }

          /**
           * Creates a function that returns `value`.
           *
           * @static
           * @memberOf _
           * @since 2.4.0
           * @category Util
           * @param {*} value The value to return from the new function.
           * @returns {Function} Returns the new constant function.
           * @example
           *
           * var objects = _.times(2, _.constant({ 'a': 1 }));
           *
           * console.log(objects);
           * // => [{ 'a': 1 }, { 'a': 1 }]
           *
           * console.log(objects[0] === objects[1]);
           * // => true
           */
          function constant(value) {
            return function () {
              return value;
            };
          }

          /**
           * Checks `value` to determine whether a default value should be returned in
           * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
           * or `undefined`.
           *
           * @static
           * @memberOf _
           * @since 4.14.0
           * @category Util
           * @param {*} value The value to check.
           * @param {*} defaultValue The default value.
           * @returns {*} Returns the resolved value.
           * @example
           *
           * _.defaultTo(1, 10);
           * // => 1
           *
           * _.defaultTo(undefined, 10);
           * // => 10
           */
          function defaultTo(value, defaultValue) {
            return value == null || value !== value ? defaultValue : value;
          }

          /**
           * Creates a function that returns the result of invoking the given functions
           * with the `this` binding of the created function, where each successive
           * invocation is supplied the return value of the previous.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Util
           * @param {...(Function|Function[])} [funcs] The functions to invoke.
           * @returns {Function} Returns the new composite function.
           * @see _.flowRight
           * @example
           *
           * function square(n) {
           *   return n * n;
           * }
           *
           * var addSquare = _.flow([_.add, square]);
           * addSquare(1, 2);
           * // => 9
           */
          var flow = createFlow();

          /**
           * This method is like `_.flow` except that it creates a function that
           * invokes the given functions from right to left.
           *
           * @static
           * @since 3.0.0
           * @memberOf _
           * @category Util
           * @param {...(Function|Function[])} [funcs] The functions to invoke.
           * @returns {Function} Returns the new composite function.
           * @see _.flow
           * @example
           *
           * function square(n) {
           *   return n * n;
           * }
           *
           * var addSquare = _.flowRight([square, _.add]);
           * addSquare(1, 2);
           * // => 9
           */
          var flowRight = createFlow(true);

          /**
           * This method returns the first argument it receives.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Util
           * @param {*} value Any value.
           * @returns {*} Returns `value`.
           * @example
           *
           * var object = { 'a': 1 };
           *
           * console.log(_.identity(object) === object);
           * // => true
           */
          function identity(value) {
            return value;
          }

          /**
           * Creates a function that invokes `func` with the arguments of the created
           * function. If `func` is a property name, the created function returns the
           * property value for a given element. If `func` is an array or object, the
           * created function returns `true` for elements that contain the equivalent
           * source properties, otherwise it returns `false`.
           *
           * @static
           * @since 4.0.0
           * @memberOf _
           * @category Util
           * @param {*} [func=_.identity] The value to convert to a callback.
           * @returns {Function} Returns the callback.
           * @example
           *
           * var users = [
           *   { 'user': 'barney', 'age': 36, 'active': true },
           *   { 'user': 'fred',   'age': 40, 'active': false }
           * ];
           *
           * // The `_.matches` iteratee shorthand.
           * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
           * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
           *
           * // The `_.matchesProperty` iteratee shorthand.
           * _.filter(users, _.iteratee(['user', 'fred']));
           * // => [{ 'user': 'fred', 'age': 40 }]
           *
           * // The `_.property` iteratee shorthand.
           * _.map(users, _.iteratee('user'));
           * // => ['barney', 'fred']
           *
           * // Create custom iteratee shorthands.
           * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
           *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
           *     return func.test(string);
           *   };
           * });
           *
           * _.filter(['abc', 'def'], /ef/);
           * // => ['def']
           */
          function iteratee(func) {
            return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
          }

          /**
           * Creates a function that performs a partial deep comparison between a given
           * object and `source`, returning `true` if the given object has equivalent
           * property values, else `false`.
           *
           * **Note:** The created function is equivalent to `_.isMatch` with `source`
           * partially applied.
           *
           * Partial comparisons will match empty array and empty object `source`
           * values against any array or object value, respectively. See `_.isEqual`
           * for a list of supported value comparisons.
           *
           * **Note:** Multiple values can be checked by combining several matchers
           * using `_.overSome`
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Util
           * @param {Object} source The object of property values to match.
           * @returns {Function} Returns the new spec function.
           * @example
           *
           * var objects = [
           *   { 'a': 1, 'b': 2, 'c': 3 },
           *   { 'a': 4, 'b': 5, 'c': 6 }
           * ];
           *
           * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
           * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
           *
           * // Checking for several possible values
           * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
           * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
           */
          function matches(source) {
            return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
          }

          /**
           * Creates a function that performs a partial deep comparison between the
           * value at `path` of a given object to `srcValue`, returning `true` if the
           * object value is equivalent, else `false`.
           *
           * **Note:** Partial comparisons will match empty array and empty object
           * `srcValue` values against any array or object value, respectively. See
           * `_.isEqual` for a list of supported value comparisons.
           *
           * **Note:** Multiple values can be checked by combining several matchers
           * using `_.overSome`
           *
           * @static
           * @memberOf _
           * @since 3.2.0
           * @category Util
           * @param {Array|string} path The path of the property to get.
           * @param {*} srcValue The value to match.
           * @returns {Function} Returns the new spec function.
           * @example
           *
           * var objects = [
           *   { 'a': 1, 'b': 2, 'c': 3 },
           *   { 'a': 4, 'b': 5, 'c': 6 }
           * ];
           *
           * _.find(objects, _.matchesProperty('a', 4));
           * // => { 'a': 4, 'b': 5, 'c': 6 }
           *
           * // Checking for several possible values
           * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
           * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
           */
          function matchesProperty(path, srcValue) {
            return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
          }

          /**
           * Creates a function that invokes the method at `path` of a given object.
           * Any additional arguments are provided to the invoked method.
           *
           * @static
           * @memberOf _
           * @since 3.7.0
           * @category Util
           * @param {Array|string} path The path of the method to invoke.
           * @param {...*} [args] The arguments to invoke the method with.
           * @returns {Function} Returns the new invoker function.
           * @example
           *
           * var objects = [
           *   { 'a': { 'b': _.constant(2) } },
           *   { 'a': { 'b': _.constant(1) } }
           * ];
           *
           * _.map(objects, _.method('a.b'));
           * // => [2, 1]
           *
           * _.map(objects, _.method(['a', 'b']));
           * // => [2, 1]
           */
          var method = baseRest(function (path, args) {
            return function (object) {
              return baseInvoke(object, path, args);
            };
          });

          /**
           * The opposite of `_.method`; this method creates a function that invokes
           * the method at a given path of `object`. Any additional arguments are
           * provided to the invoked method.
           *
           * @static
           * @memberOf _
           * @since 3.7.0
           * @category Util
           * @param {Object} object The object to query.
           * @param {...*} [args] The arguments to invoke the method with.
           * @returns {Function} Returns the new invoker function.
           * @example
           *
           * var array = _.times(3, _.constant),
           *     object = { 'a': array, 'b': array, 'c': array };
           *
           * _.map(['a[2]', 'c[0]'], _.methodOf(object));
           * // => [2, 0]
           *
           * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
           * // => [2, 0]
           */
          var methodOf = baseRest(function (object, args) {
            return function (path) {
              return baseInvoke(object, path, args);
            };
          });

          /**
           * Adds all own enumerable string keyed function properties of a source
           * object to the destination object. If `object` is a function, then methods
           * are added to its prototype as well.
           *
           * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
           * avoid conflicts caused by modifying the original.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Util
           * @param {Function|Object} [object=lodash] The destination object.
           * @param {Object} source The object of functions to add.
           * @param {Object} [options={}] The options object.
           * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
           * @returns {Function|Object} Returns `object`.
           * @example
           *
           * function vowels(string) {
           *   return _.filter(string, function(v) {
           *     return /[aeiou]/i.test(v);
           *   });
           * }
           *
           * _.mixin({ 'vowels': vowels });
           * _.vowels('fred');
           * // => ['e']
           *
           * _('fred').vowels().value();
           * // => ['e']
           *
           * _.mixin({ 'vowels': vowels }, { 'chain': false });
           * _('fred').vowels();
           * // => ['e']
           */
          function mixin(object, source, options) {
            var props = keys(source),
              methodNames = baseFunctions(source, props);
            if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
              options = source;
              source = object;
              object = this;
              methodNames = baseFunctions(source, keys(source));
            }
            var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
              isFunc = isFunction(object);
            arrayEach(methodNames, function (methodName) {
              var func = source[methodName];
              object[methodName] = func;
              if (isFunc) {
                object.prototype[methodName] = function () {
                  var chainAll = this.__chain__;
                  if (chain || chainAll) {
                    var result = object(this.__wrapped__),
                      actions = result.__actions__ = copyArray(this.__actions__);
                    actions.push({
                      'func': func,
                      'args': arguments,
                      'thisArg': object
                    });
                    result.__chain__ = chainAll;
                    return result;
                  }
                  return func.apply(object, arrayPush([this.value()], arguments));
                };
              }
            });
            return object;
          }

          /**
           * Reverts the `_` variable to its previous value and returns a reference to
           * the `lodash` function.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Util
           * @returns {Function} Returns the `lodash` function.
           * @example
           *
           * var lodash = _.noConflict();
           */
          function noConflict() {
            if (root._ === this) {
              root._ = oldDash;
            }
            return this;
          }

          /**
           * This method returns `undefined`.
           *
           * @static
           * @memberOf _
           * @since 2.3.0
           * @category Util
           * @example
           *
           * _.times(2, _.noop);
           * // => [undefined, undefined]
           */
          function noop() {
            // No operation performed.
          }

          /**
           * Creates a function that gets the argument at index `n`. If `n` is negative,
           * the nth argument from the end is returned.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Util
           * @param {number} [n=0] The index of the argument to return.
           * @returns {Function} Returns the new pass-thru function.
           * @example
           *
           * var func = _.nthArg(1);
           * func('a', 'b', 'c', 'd');
           * // => 'b'
           *
           * var func = _.nthArg(-2);
           * func('a', 'b', 'c', 'd');
           * // => 'c'
           */
          function nthArg(n) {
            n = toInteger(n);
            return baseRest(function (args) {
              return baseNth(args, n);
            });
          }

          /**
           * Creates a function that invokes `iteratees` with the arguments it receives
           * and returns their results.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Util
           * @param {...(Function|Function[])} [iteratees=[_.identity]]
           *  The iteratees to invoke.
           * @returns {Function} Returns the new function.
           * @example
           *
           * var func = _.over([Math.max, Math.min]);
           *
           * func(1, 2, 3, 4);
           * // => [4, 1]
           */
          var over = createOver(arrayMap);

          /**
           * Creates a function that checks if **all** of the `predicates` return
           * truthy when invoked with the arguments it receives.
           *
           * Following shorthands are possible for providing predicates.
           * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
           * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Util
           * @param {...(Function|Function[])} [predicates=[_.identity]]
           *  The predicates to check.
           * @returns {Function} Returns the new function.
           * @example
           *
           * var func = _.overEvery([Boolean, isFinite]);
           *
           * func('1');
           * // => true
           *
           * func(null);
           * // => false
           *
           * func(NaN);
           * // => false
           */
          var overEvery = createOver(arrayEvery);

          /**
           * Creates a function that checks if **any** of the `predicates` return
           * truthy when invoked with the arguments it receives.
           *
           * Following shorthands are possible for providing predicates.
           * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
           * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Util
           * @param {...(Function|Function[])} [predicates=[_.identity]]
           *  The predicates to check.
           * @returns {Function} Returns the new function.
           * @example
           *
           * var func = _.overSome([Boolean, isFinite]);
           *
           * func('1');
           * // => true
           *
           * func(null);
           * // => true
           *
           * func(NaN);
           * // => false
           *
           * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
           * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
           */
          var overSome = createOver(arraySome);

          /**
           * Creates a function that returns the value at `path` of a given object.
           *
           * @static
           * @memberOf _
           * @since 2.4.0
           * @category Util
           * @param {Array|string} path The path of the property to get.
           * @returns {Function} Returns the new accessor function.
           * @example
           *
           * var objects = [
           *   { 'a': { 'b': 2 } },
           *   { 'a': { 'b': 1 } }
           * ];
           *
           * _.map(objects, _.property('a.b'));
           * // => [2, 1]
           *
           * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
           * // => [1, 2]
           */
          function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
          }

          /**
           * The opposite of `_.property`; this method creates a function that returns
           * the value at a given path of `object`.
           *
           * @static
           * @memberOf _
           * @since 3.0.0
           * @category Util
           * @param {Object} object The object to query.
           * @returns {Function} Returns the new accessor function.
           * @example
           *
           * var array = [0, 1, 2],
           *     object = { 'a': array, 'b': array, 'c': array };
           *
           * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
           * // => [2, 0]
           *
           * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
           * // => [2, 0]
           */
          function propertyOf(object) {
            return function (path) {
              return object == null ? undefined : baseGet(object, path);
            };
          }

          /**
           * Creates an array of numbers (positive and/or negative) progressing from
           * `start` up to, but not including, `end`. A step of `-1` is used if a negative
           * `start` is specified without an `end` or `step`. If `end` is not specified,
           * it's set to `start` with `start` then set to `0`.
           *
           * **Note:** JavaScript follows the IEEE-754 standard for resolving
           * floating-point values which can produce unexpected results.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Util
           * @param {number} [start=0] The start of the range.
           * @param {number} end The end of the range.
           * @param {number} [step=1] The value to increment or decrement by.
           * @returns {Array} Returns the range of numbers.
           * @see _.inRange, _.rangeRight
           * @example
           *
           * _.range(4);
           * // => [0, 1, 2, 3]
           *
           * _.range(-4);
           * // => [0, -1, -2, -3]
           *
           * _.range(1, 5);
           * // => [1, 2, 3, 4]
           *
           * _.range(0, 20, 5);
           * // => [0, 5, 10, 15]
           *
           * _.range(0, -4, -1);
           * // => [0, -1, -2, -3]
           *
           * _.range(1, 4, 0);
           * // => [1, 1, 1]
           *
           * _.range(0);
           * // => []
           */
          var range = createRange();

          /**
           * This method is like `_.range` except that it populates values in
           * descending order.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Util
           * @param {number} [start=0] The start of the range.
           * @param {number} end The end of the range.
           * @param {number} [step=1] The value to increment or decrement by.
           * @returns {Array} Returns the range of numbers.
           * @see _.inRange, _.range
           * @example
           *
           * _.rangeRight(4);
           * // => [3, 2, 1, 0]
           *
           * _.rangeRight(-4);
           * // => [-3, -2, -1, 0]
           *
           * _.rangeRight(1, 5);
           * // => [4, 3, 2, 1]
           *
           * _.rangeRight(0, 20, 5);
           * // => [15, 10, 5, 0]
           *
           * _.rangeRight(0, -4, -1);
           * // => [-3, -2, -1, 0]
           *
           * _.rangeRight(1, 4, 0);
           * // => [1, 1, 1]
           *
           * _.rangeRight(0);
           * // => []
           */
          var rangeRight = createRange(true);

          /**
           * This method returns a new empty array.
           *
           * @static
           * @memberOf _
           * @since 4.13.0
           * @category Util
           * @returns {Array} Returns the new empty array.
           * @example
           *
           * var arrays = _.times(2, _.stubArray);
           *
           * console.log(arrays);
           * // => [[], []]
           *
           * console.log(arrays[0] === arrays[1]);
           * // => false
           */
          function stubArray() {
            return [];
          }

          /**
           * This method returns `false`.
           *
           * @static
           * @memberOf _
           * @since 4.13.0
           * @category Util
           * @returns {boolean} Returns `false`.
           * @example
           *
           * _.times(2, _.stubFalse);
           * // => [false, false]
           */
          function stubFalse() {
            return false;
          }

          /**
           * This method returns a new empty object.
           *
           * @static
           * @memberOf _
           * @since 4.13.0
           * @category Util
           * @returns {Object} Returns the new empty object.
           * @example
           *
           * var objects = _.times(2, _.stubObject);
           *
           * console.log(objects);
           * // => [{}, {}]
           *
           * console.log(objects[0] === objects[1]);
           * // => false
           */
          function stubObject() {
            return {};
          }

          /**
           * This method returns an empty string.
           *
           * @static
           * @memberOf _
           * @since 4.13.0
           * @category Util
           * @returns {string} Returns the empty string.
           * @example
           *
           * _.times(2, _.stubString);
           * // => ['', '']
           */
          function stubString() {
            return '';
          }

          /**
           * This method returns `true`.
           *
           * @static
           * @memberOf _
           * @since 4.13.0
           * @category Util
           * @returns {boolean} Returns `true`.
           * @example
           *
           * _.times(2, _.stubTrue);
           * // => [true, true]
           */
          function stubTrue() {
            return true;
          }

          /**
           * Invokes the iteratee `n` times, returning an array of the results of
           * each invocation. The iteratee is invoked with one argument; (index).
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Util
           * @param {number} n The number of times to invoke `iteratee`.
           * @param {Function} [iteratee=_.identity] The function invoked per iteration.
           * @returns {Array} Returns the array of results.
           * @example
           *
           * _.times(3, String);
           * // => ['0', '1', '2']
           *
           *  _.times(4, _.constant(0));
           * // => [0, 0, 0, 0]
           */
          function times(n, iteratee) {
            n = toInteger(n);
            if (n < 1 || n > MAX_SAFE_INTEGER) {
              return [];
            }
            var index = MAX_ARRAY_LENGTH,
              length = nativeMin(n, MAX_ARRAY_LENGTH);
            iteratee = getIteratee(iteratee);
            n -= MAX_ARRAY_LENGTH;
            var result = baseTimes(length, iteratee);
            while (++index < n) {
              iteratee(index);
            }
            return result;
          }

          /**
           * Converts `value` to a property path array.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Util
           * @param {*} value The value to convert.
           * @returns {Array} Returns the new property path array.
           * @example
           *
           * _.toPath('a.b.c');
           * // => ['a', 'b', 'c']
           *
           * _.toPath('a[0].b.c');
           * // => ['a', '0', 'b', 'c']
           */
          function toPath(value) {
            if (isArray(value)) {
              return arrayMap(value, toKey);
            }
            return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
          }

          /**
           * Generates a unique ID. If `prefix` is given, the ID is appended to it.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Util
           * @param {string} [prefix=''] The value to prefix the ID with.
           * @returns {string} Returns the unique ID.
           * @example
           *
           * _.uniqueId('contact_');
           * // => 'contact_104'
           *
           * _.uniqueId();
           * // => '105'
           */
          function uniqueId(prefix) {
            var id = ++idCounter;
            return toString(prefix) + id;
          }

          /*------------------------------------------------------------------------*/

          /**
           * Adds two numbers.
           *
           * @static
           * @memberOf _
           * @since 3.4.0
           * @category Math
           * @param {number} augend The first number in an addition.
           * @param {number} addend The second number in an addition.
           * @returns {number} Returns the total.
           * @example
           *
           * _.add(6, 4);
           * // => 10
           */
          var add = createMathOperation(function (augend, addend) {
            return augend + addend;
          }, 0);

          /**
           * Computes `number` rounded up to `precision`.
           *
           * @static
           * @memberOf _
           * @since 3.10.0
           * @category Math
           * @param {number} number The number to round up.
           * @param {number} [precision=0] The precision to round up to.
           * @returns {number} Returns the rounded up number.
           * @example
           *
           * _.ceil(4.006);
           * // => 5
           *
           * _.ceil(6.004, 2);
           * // => 6.01
           *
           * _.ceil(6040, -2);
           * // => 6100
           */
          var ceil = createRound('ceil');

          /**
           * Divide two numbers.
           *
           * @static
           * @memberOf _
           * @since 4.7.0
           * @category Math
           * @param {number} dividend The first number in a division.
           * @param {number} divisor The second number in a division.
           * @returns {number} Returns the quotient.
           * @example
           *
           * _.divide(6, 4);
           * // => 1.5
           */
          var divide = createMathOperation(function (dividend, divisor) {
            return dividend / divisor;
          }, 1);

          /**
           * Computes `number` rounded down to `precision`.
           *
           * @static
           * @memberOf _
           * @since 3.10.0
           * @category Math
           * @param {number} number The number to round down.
           * @param {number} [precision=0] The precision to round down to.
           * @returns {number} Returns the rounded down number.
           * @example
           *
           * _.floor(4.006);
           * // => 4
           *
           * _.floor(0.046, 2);
           * // => 0.04
           *
           * _.floor(4060, -2);
           * // => 4000
           */
          var floor = createRound('floor');

          /**
           * Computes the maximum value of `array`. If `array` is empty or falsey,
           * `undefined` is returned.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Math
           * @param {Array} array The array to iterate over.
           * @returns {*} Returns the maximum value.
           * @example
           *
           * _.max([4, 2, 8, 6]);
           * // => 8
           *
           * _.max([]);
           * // => undefined
           */
          function max(array) {
            return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
          }

          /**
           * This method is like `_.max` except that it accepts `iteratee` which is
           * invoked for each element in `array` to generate the criterion by which
           * the value is ranked. The iteratee is invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Math
           * @param {Array} array The array to iterate over.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {*} Returns the maximum value.
           * @example
           *
           * var objects = [{ 'n': 1 }, { 'n': 2 }];
           *
           * _.maxBy(objects, function(o) { return o.n; });
           * // => { 'n': 2 }
           *
           * // The `_.property` iteratee shorthand.
           * _.maxBy(objects, 'n');
           * // => { 'n': 2 }
           */
          function maxBy(array, iteratee) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
          }

          /**
           * Computes the mean of the values in `array`.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Math
           * @param {Array} array The array to iterate over.
           * @returns {number} Returns the mean.
           * @example
           *
           * _.mean([4, 2, 8, 6]);
           * // => 5
           */
          function mean(array) {
            return baseMean(array, identity);
          }

          /**
           * This method is like `_.mean` except that it accepts `iteratee` which is
           * invoked for each element in `array` to generate the value to be averaged.
           * The iteratee is invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 4.7.0
           * @category Math
           * @param {Array} array The array to iterate over.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {number} Returns the mean.
           * @example
           *
           * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
           *
           * _.meanBy(objects, function(o) { return o.n; });
           * // => 5
           *
           * // The `_.property` iteratee shorthand.
           * _.meanBy(objects, 'n');
           * // => 5
           */
          function meanBy(array, iteratee) {
            return baseMean(array, getIteratee(iteratee, 2));
          }

          /**
           * Computes the minimum value of `array`. If `array` is empty or falsey,
           * `undefined` is returned.
           *
           * @static
           * @since 0.1.0
           * @memberOf _
           * @category Math
           * @param {Array} array The array to iterate over.
           * @returns {*} Returns the minimum value.
           * @example
           *
           * _.min([4, 2, 8, 6]);
           * // => 2
           *
           * _.min([]);
           * // => undefined
           */
          function min(array) {
            return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
          }

          /**
           * This method is like `_.min` except that it accepts `iteratee` which is
           * invoked for each element in `array` to generate the criterion by which
           * the value is ranked. The iteratee is invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Math
           * @param {Array} array The array to iterate over.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {*} Returns the minimum value.
           * @example
           *
           * var objects = [{ 'n': 1 }, { 'n': 2 }];
           *
           * _.minBy(objects, function(o) { return o.n; });
           * // => { 'n': 1 }
           *
           * // The `_.property` iteratee shorthand.
           * _.minBy(objects, 'n');
           * // => { 'n': 1 }
           */
          function minBy(array, iteratee) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
          }

          /**
           * Multiply two numbers.
           *
           * @static
           * @memberOf _
           * @since 4.7.0
           * @category Math
           * @param {number} multiplier The first number in a multiplication.
           * @param {number} multiplicand The second number in a multiplication.
           * @returns {number} Returns the product.
           * @example
           *
           * _.multiply(6, 4);
           * // => 24
           */
          var multiply = createMathOperation(function (multiplier, multiplicand) {
            return multiplier * multiplicand;
          }, 1);

          /**
           * Computes `number` rounded to `precision`.
           *
           * @static
           * @memberOf _
           * @since 3.10.0
           * @category Math
           * @param {number} number The number to round.
           * @param {number} [precision=0] The precision to round to.
           * @returns {number} Returns the rounded number.
           * @example
           *
           * _.round(4.006);
           * // => 4
           *
           * _.round(4.006, 2);
           * // => 4.01
           *
           * _.round(4060, -2);
           * // => 4100
           */
          var round = createRound('round');

          /**
           * Subtract two numbers.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Math
           * @param {number} minuend The first number in a subtraction.
           * @param {number} subtrahend The second number in a subtraction.
           * @returns {number} Returns the difference.
           * @example
           *
           * _.subtract(6, 4);
           * // => 2
           */
          var subtract = createMathOperation(function (minuend, subtrahend) {
            return minuend - subtrahend;
          }, 0);

          /**
           * Computes the sum of the values in `array`.
           *
           * @static
           * @memberOf _
           * @since 3.4.0
           * @category Math
           * @param {Array} array The array to iterate over.
           * @returns {number} Returns the sum.
           * @example
           *
           * _.sum([4, 2, 8, 6]);
           * // => 20
           */
          function sum(array) {
            return array && array.length ? baseSum(array, identity) : 0;
          }

          /**
           * This method is like `_.sum` except that it accepts `iteratee` which is
           * invoked for each element in `array` to generate the value to be summed.
           * The iteratee is invoked with one argument: (value).
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Math
           * @param {Array} array The array to iterate over.
           * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
           * @returns {number} Returns the sum.
           * @example
           *
           * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
           *
           * _.sumBy(objects, function(o) { return o.n; });
           * // => 20
           *
           * // The `_.property` iteratee shorthand.
           * _.sumBy(objects, 'n');
           * // => 20
           */
          function sumBy(array, iteratee) {
            return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
          }

          /*------------------------------------------------------------------------*/

          // Add methods that return wrapped values in chain sequences.
          lodash.after = after;
          lodash.ary = ary;
          lodash.assign = assign;
          lodash.assignIn = assignIn;
          lodash.assignInWith = assignInWith;
          lodash.assignWith = assignWith;
          lodash.at = at;
          lodash.before = before;
          lodash.bind = bind;
          lodash.bindAll = bindAll;
          lodash.bindKey = bindKey;
          lodash.castArray = castArray;
          lodash.chain = chain;
          lodash.chunk = chunk;
          lodash.compact = compact;
          lodash.concat = concat;
          lodash.cond = cond;
          lodash.conforms = conforms;
          lodash.constant = constant;
          lodash.countBy = countBy;
          lodash.create = create;
          lodash.curry = curry;
          lodash.curryRight = curryRight;
          lodash.debounce = debounce;
          lodash.defaults = defaults;
          lodash.defaultsDeep = defaultsDeep;
          lodash.defer = defer;
          lodash.delay = delay;
          lodash.difference = difference;
          lodash.differenceBy = differenceBy;
          lodash.differenceWith = differenceWith;
          lodash.drop = drop;
          lodash.dropRight = dropRight;
          lodash.dropRightWhile = dropRightWhile;
          lodash.dropWhile = dropWhile;
          lodash.fill = fill;
          lodash.filter = filter;
          lodash.flatMap = flatMap;
          lodash.flatMapDeep = flatMapDeep;
          lodash.flatMapDepth = flatMapDepth;
          lodash.flatten = flatten;
          lodash.flattenDeep = flattenDeep;
          lodash.flattenDepth = flattenDepth;
          lodash.flip = flip;
          lodash.flow = flow;
          lodash.flowRight = flowRight;
          lodash.fromPairs = fromPairs;
          lodash.functions = functions;
          lodash.functionsIn = functionsIn;
          lodash.groupBy = groupBy;
          lodash.initial = initial;
          lodash.intersection = intersection;
          lodash.intersectionBy = intersectionBy;
          lodash.intersectionWith = intersectionWith;
          lodash.invert = invert;
          lodash.invertBy = invertBy;
          lodash.invokeMap = invokeMap;
          lodash.iteratee = iteratee;
          lodash.keyBy = keyBy;
          lodash.keys = keys;
          lodash.keysIn = keysIn;
          lodash.map = map;
          lodash.mapKeys = mapKeys;
          lodash.mapValues = mapValues;
          lodash.matches = matches;
          lodash.matchesProperty = matchesProperty;
          lodash.memoize = memoize;
          lodash.merge = merge;
          lodash.mergeWith = mergeWith;
          lodash.method = method;
          lodash.methodOf = methodOf;
          lodash.mixin = mixin;
          lodash.negate = negate;
          lodash.nthArg = nthArg;
          lodash.omit = omit;
          lodash.omitBy = omitBy;
          lodash.once = once;
          lodash.orderBy = orderBy;
          lodash.over = over;
          lodash.overArgs = overArgs;
          lodash.overEvery = overEvery;
          lodash.overSome = overSome;
          lodash.partial = partial;
          lodash.partialRight = partialRight;
          lodash.partition = partition;
          lodash.pick = pick;
          lodash.pickBy = pickBy;
          lodash.property = property;
          lodash.propertyOf = propertyOf;
          lodash.pull = pull;
          lodash.pullAll = pullAll;
          lodash.pullAllBy = pullAllBy;
          lodash.pullAllWith = pullAllWith;
          lodash.pullAt = pullAt;
          lodash.range = range;
          lodash.rangeRight = rangeRight;
          lodash.rearg = rearg;
          lodash.reject = reject;
          lodash.remove = remove;
          lodash.rest = rest;
          lodash.reverse = reverse;
          lodash.sampleSize = sampleSize;
          lodash.set = set;
          lodash.setWith = setWith;
          lodash.shuffle = shuffle;
          lodash.slice = slice;
          lodash.sortBy = sortBy;
          lodash.sortedUniq = sortedUniq;
          lodash.sortedUniqBy = sortedUniqBy;
          lodash.split = split;
          lodash.spread = spread;
          lodash.tail = tail;
          lodash.take = take;
          lodash.takeRight = takeRight;
          lodash.takeRightWhile = takeRightWhile;
          lodash.takeWhile = takeWhile;
          lodash.tap = tap;
          lodash.throttle = throttle;
          lodash.thru = thru;
          lodash.toArray = toArray;
          lodash.toPairs = toPairs;
          lodash.toPairsIn = toPairsIn;
          lodash.toPath = toPath;
          lodash.toPlainObject = toPlainObject;
          lodash.transform = transform;
          lodash.unary = unary;
          lodash.union = union;
          lodash.unionBy = unionBy;
          lodash.unionWith = unionWith;
          lodash.uniq = uniq;
          lodash.uniqBy = uniqBy;
          lodash.uniqWith = uniqWith;
          lodash.unset = unset;
          lodash.unzip = unzip;
          lodash.unzipWith = unzipWith;
          lodash.update = update;
          lodash.updateWith = updateWith;
          lodash.values = values;
          lodash.valuesIn = valuesIn;
          lodash.without = without;
          lodash.words = words;
          lodash.wrap = wrap;
          lodash.xor = xor;
          lodash.xorBy = xorBy;
          lodash.xorWith = xorWith;
          lodash.zip = zip;
          lodash.zipObject = zipObject;
          lodash.zipObjectDeep = zipObjectDeep;
          lodash.zipWith = zipWith;

          // Add aliases.
          lodash.entries = toPairs;
          lodash.entriesIn = toPairsIn;
          lodash.extend = assignIn;
          lodash.extendWith = assignInWith;

          // Add methods to `lodash.prototype`.
          mixin(lodash, lodash);

          /*------------------------------------------------------------------------*/

          // Add methods that return unwrapped values in chain sequences.
          lodash.add = add;
          lodash.attempt = attempt;
          lodash.camelCase = camelCase;
          lodash.capitalize = capitalize;
          lodash.ceil = ceil;
          lodash.clamp = clamp;
          lodash.clone = clone;
          lodash.cloneDeep = cloneDeep;
          lodash.cloneDeepWith = cloneDeepWith;
          lodash.cloneWith = cloneWith;
          lodash.conformsTo = conformsTo;
          lodash.deburr = deburr;
          lodash.defaultTo = defaultTo;
          lodash.divide = divide;
          lodash.endsWith = endsWith;
          lodash.eq = eq;
          lodash.escape = escape;
          lodash.escapeRegExp = escapeRegExp;
          lodash.every = every;
          lodash.find = find;
          lodash.findIndex = findIndex;
          lodash.findKey = findKey;
          lodash.findLast = findLast;
          lodash.findLastIndex = findLastIndex;
          lodash.findLastKey = findLastKey;
          lodash.floor = floor;
          lodash.forEach = forEach;
          lodash.forEachRight = forEachRight;
          lodash.forIn = forIn;
          lodash.forInRight = forInRight;
          lodash.forOwn = forOwn;
          lodash.forOwnRight = forOwnRight;
          lodash.get = get;
          lodash.gt = gt;
          lodash.gte = gte;
          lodash.has = has;
          lodash.hasIn = hasIn;
          lodash.head = head;
          lodash.identity = identity;
          lodash.includes = includes;
          lodash.indexOf = indexOf;
          lodash.inRange = inRange;
          lodash.invoke = invoke;
          lodash.isArguments = isArguments;
          lodash.isArray = isArray;
          lodash.isArrayBuffer = isArrayBuffer;
          lodash.isArrayLike = isArrayLike;
          lodash.isArrayLikeObject = isArrayLikeObject;
          lodash.isBoolean = isBoolean;
          lodash.isBuffer = isBuffer;
          lodash.isDate = isDate;
          lodash.isElement = isElement;
          lodash.isEmpty = isEmpty;
          lodash.isEqual = isEqual;
          lodash.isEqualWith = isEqualWith;
          lodash.isError = isError;
          lodash.isFinite = isFinite;
          lodash.isFunction = isFunction;
          lodash.isInteger = isInteger;
          lodash.isLength = isLength;
          lodash.isMap = isMap;
          lodash.isMatch = isMatch;
          lodash.isMatchWith = isMatchWith;
          lodash.isNaN = isNaN;
          lodash.isNative = isNative;
          lodash.isNil = isNil;
          lodash.isNull = isNull;
          lodash.isNumber = isNumber;
          lodash.isObject = isObject;
          lodash.isObjectLike = isObjectLike;
          lodash.isPlainObject = isPlainObject;
          lodash.isRegExp = isRegExp;
          lodash.isSafeInteger = isSafeInteger;
          lodash.isSet = isSet;
          lodash.isString = isString;
          lodash.isSymbol = isSymbol;
          lodash.isTypedArray = isTypedArray;
          lodash.isUndefined = isUndefined;
          lodash.isWeakMap = isWeakMap;
          lodash.isWeakSet = isWeakSet;
          lodash.join = join;
          lodash.kebabCase = kebabCase;
          lodash.last = last;
          lodash.lastIndexOf = lastIndexOf;
          lodash.lowerCase = lowerCase;
          lodash.lowerFirst = lowerFirst;
          lodash.lt = lt;
          lodash.lte = lte;
          lodash.max = max;
          lodash.maxBy = maxBy;
          lodash.mean = mean;
          lodash.meanBy = meanBy;
          lodash.min = min;
          lodash.minBy = minBy;
          lodash.stubArray = stubArray;
          lodash.stubFalse = stubFalse;
          lodash.stubObject = stubObject;
          lodash.stubString = stubString;
          lodash.stubTrue = stubTrue;
          lodash.multiply = multiply;
          lodash.nth = nth;
          lodash.noConflict = noConflict;
          lodash.noop = noop;
          lodash.now = now;
          lodash.pad = pad;
          lodash.padEnd = padEnd;
          lodash.padStart = padStart;
          lodash.parseInt = parseInt;
          lodash.random = random;
          lodash.reduce = reduce;
          lodash.reduceRight = reduceRight;
          lodash.repeat = repeat;
          lodash.replace = replace;
          lodash.result = result;
          lodash.round = round;
          lodash.runInContext = runInContext;
          lodash.sample = sample;
          lodash.size = size;
          lodash.snakeCase = snakeCase;
          lodash.some = some;
          lodash.sortedIndex = sortedIndex;
          lodash.sortedIndexBy = sortedIndexBy;
          lodash.sortedIndexOf = sortedIndexOf;
          lodash.sortedLastIndex = sortedLastIndex;
          lodash.sortedLastIndexBy = sortedLastIndexBy;
          lodash.sortedLastIndexOf = sortedLastIndexOf;
          lodash.startCase = startCase;
          lodash.startsWith = startsWith;
          lodash.subtract = subtract;
          lodash.sum = sum;
          lodash.sumBy = sumBy;
          lodash.template = template;
          lodash.times = times;
          lodash.toFinite = toFinite;
          lodash.toInteger = toInteger;
          lodash.toLength = toLength;
          lodash.toLower = toLower;
          lodash.toNumber = toNumber;
          lodash.toSafeInteger = toSafeInteger;
          lodash.toString = toString;
          lodash.toUpper = toUpper;
          lodash.trim = trim;
          lodash.trimEnd = trimEnd;
          lodash.trimStart = trimStart;
          lodash.truncate = truncate;
          lodash.unescape = unescape;
          lodash.uniqueId = uniqueId;
          lodash.upperCase = upperCase;
          lodash.upperFirst = upperFirst;

          // Add aliases.
          lodash.each = forEach;
          lodash.eachRight = forEachRight;
          lodash.first = head;
          mixin(lodash, function () {
            var source = {};
            baseForOwn(lodash, function (func, methodName) {
              if (!hasOwnProperty.call(lodash.prototype, methodName)) {
                source[methodName] = func;
              }
            });
            return source;
          }(), {
            'chain': false
          });

          /*------------------------------------------------------------------------*/

          /**
           * The semantic version number.
           *
           * @static
           * @memberOf _
           * @type {string}
           */
          lodash.VERSION = VERSION;

          // Assign default placeholders.
          arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
            lodash[methodName].placeholder = lodash;
          });

          // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
          arrayEach(['drop', 'take'], function (methodName, index) {
            LazyWrapper.prototype[methodName] = function (n) {
              n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
              var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
              if (result.__filtered__) {
                result.__takeCount__ = nativeMin(n, result.__takeCount__);
              } else {
                result.__views__.push({
                  'size': nativeMin(n, MAX_ARRAY_LENGTH),
                  'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
                });
              }
              return result;
            };
            LazyWrapper.prototype[methodName + 'Right'] = function (n) {
              return this.reverse()[methodName](n).reverse();
            };
          });

          // Add `LazyWrapper` methods that accept an `iteratee` value.
          arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
            var type = index + 1,
              isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
            LazyWrapper.prototype[methodName] = function (iteratee) {
              var result = this.clone();
              result.__iteratees__.push({
                'iteratee': getIteratee(iteratee, 3),
                'type': type
              });
              result.__filtered__ = result.__filtered__ || isFilter;
              return result;
            };
          });

          // Add `LazyWrapper` methods for `_.head` and `_.last`.
          arrayEach(['head', 'last'], function (methodName, index) {
            var takeName = 'take' + (index ? 'Right' : '');
            LazyWrapper.prototype[methodName] = function () {
              return this[takeName](1).value()[0];
            };
          });

          // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
          arrayEach(['initial', 'tail'], function (methodName, index) {
            var dropName = 'drop' + (index ? '' : 'Right');
            LazyWrapper.prototype[methodName] = function () {
              return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
            };
          });
          LazyWrapper.prototype.compact = function () {
            return this.filter(identity);
          };
          LazyWrapper.prototype.find = function (predicate) {
            return this.filter(predicate).head();
          };
          LazyWrapper.prototype.findLast = function (predicate) {
            return this.reverse().find(predicate);
          };
          LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
            if (typeof path == 'function') {
              return new LazyWrapper(this);
            }
            return this.map(function (value) {
              return baseInvoke(value, path, args);
            });
          });
          LazyWrapper.prototype.reject = function (predicate) {
            return this.filter(negate(getIteratee(predicate)));
          };
          LazyWrapper.prototype.slice = function (start, end) {
            start = toInteger(start);
            var result = this;
            if (result.__filtered__ && (start > 0 || end < 0)) {
              return new LazyWrapper(result);
            }
            if (start < 0) {
              result = result.takeRight(-start);
            } else if (start) {
              result = result.drop(start);
            }
            if (end !== undefined) {
              end = toInteger(end);
              result = end < 0 ? result.dropRight(-end) : result.take(end - start);
            }
            return result;
          };
          LazyWrapper.prototype.takeRightWhile = function (predicate) {
            return this.reverse().takeWhile(predicate).reverse();
          };
          LazyWrapper.prototype.toArray = function () {
            return this.take(MAX_ARRAY_LENGTH);
          };

          // Add `LazyWrapper` methods to `lodash.prototype`.
          baseForOwn(LazyWrapper.prototype, function (func, methodName) {
            var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
              isTaker = /^(?:head|last)$/.test(methodName),
              lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
              retUnwrapped = isTaker || /^find/.test(methodName);
            if (!lodashFunc) {
              return;
            }
            lodash.prototype[methodName] = function () {
              var value = this.__wrapped__,
                args = isTaker ? [1] : arguments,
                isLazy = value instanceof LazyWrapper,
                iteratee = args[0],
                useLazy = isLazy || isArray(value);
              var interceptor = function interceptor(value) {
                var result = lodashFunc.apply(lodash, arrayPush([value], args));
                return isTaker && chainAll ? result[0] : result;
              };
              if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
                // Avoid lazy use if the iteratee has a "length" value other than `1`.
                isLazy = useLazy = false;
              }
              var chainAll = this.__chain__,
                isHybrid = !!this.__actions__.length,
                isUnwrapped = retUnwrapped && !chainAll,
                onlyLazy = isLazy && !isHybrid;
              if (!retUnwrapped && useLazy) {
                value = onlyLazy ? value : new LazyWrapper(this);
                var result = func.apply(value, args);
                result.__actions__.push({
                  'func': thru,
                  'args': [interceptor],
                  'thisArg': undefined
                });
                return new LodashWrapper(result, chainAll);
              }
              if (isUnwrapped && onlyLazy) {
                return func.apply(this, args);
              }
              result = this.thru(interceptor);
              return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
            };
          });

          // Add `Array` methods to `lodash.prototype`.
          arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
            var func = arrayProto[methodName],
              chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
              retUnwrapped = /^(?:pop|shift)$/.test(methodName);
            lodash.prototype[methodName] = function () {
              var args = arguments;
              if (retUnwrapped && !this.__chain__) {
                var value = this.value();
                return func.apply(isArray(value) ? value : [], args);
              }
              return this[chainName](function (value) {
                return func.apply(isArray(value) ? value : [], args);
              });
            };
          });

          // Map minified method names to their real names.
          baseForOwn(LazyWrapper.prototype, function (func, methodName) {
            var lodashFunc = lodash[methodName];
            if (lodashFunc) {
              var key = lodashFunc.name + '';
              if (!hasOwnProperty.call(realNames, key)) {
                realNames[key] = [];
              }
              realNames[key].push({
                'name': methodName,
                'func': lodashFunc
              });
            }
          });
          realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
            'name': 'wrapper',
            'func': undefined
          }];

          // Add methods to `LazyWrapper`.
          LazyWrapper.prototype.clone = lazyClone;
          LazyWrapper.prototype.reverse = lazyReverse;
          LazyWrapper.prototype.value = lazyValue;

          // Add chain sequence methods to the `lodash` wrapper.
          lodash.prototype.at = wrapperAt;
          lodash.prototype.chain = wrapperChain;
          lodash.prototype.commit = wrapperCommit;
          lodash.prototype.next = wrapperNext;
          lodash.prototype.plant = wrapperPlant;
          lodash.prototype.reverse = wrapperReverse;
          lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

          // Add lazy aliases.
          lodash.prototype.first = lodash.prototype.head;
          if (symIterator) {
            lodash.prototype[symIterator] = wrapperToIterator;
          }
          return lodash;
        };

        /*--------------------------------------------------------------------------*/

        // Export lodash.
        var _ = runInContext();

        // Some AMD build optimizers, like r.js, check for condition patterns like:
        if (true) {
          // Expose Lodash on the global object to prevent errors when Lodash is
          // loaded by a script tag in the presence of an AMD loader.
          // See http://requirejs.org/docs/errors.html#mismatch for more details.
          // Use `_.noConflict` to remove Lodash from the global object.
          root._ = _;

          // Define as an anonymous module so, through path mapping, it can be
          // referenced as the "underscore" module.
          !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
            return _;
          }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        }
        // Check for `exports` after `define` in case a build optimizer adds it.
        else {}
      }).call(this);

      /***/
    },

    /***/27580:
    /*!*******************************************************************!*\
      !*** ./node_modules/socket.io-client/build/esm/contrib/backo2.js ***!
      \*******************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Backoff": function Backoff() {
          return (/* binding */_Backoff
          );
        }
        /* harmony export */
      });
      /**
       * Initialize backoff timer with `opts`.
       *
       * - `min` initial timeout in milliseconds [100]
       * - `max` max timeout [10000]
       * - `jitter` [0]
       * - `factor` [2]
       *
       * @param {Object} opts
       * @api public
       */
      function _Backoff(opts) {
        opts = opts || {};
        this.ms = opts.min || 100;
        this.max = opts.max || 10000;
        this.factor = opts.factor || 2;
        this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
        this.attempts = 0;
      }
      /**
       * Return the backoff duration.
       *
       * @return {Number}
       * @api public
       */
      _Backoff.prototype.duration = function () {
        var ms = this.ms * Math.pow(this.factor, this.attempts++);
        if (this.jitter) {
          var rand = Math.random();
          var deviation = Math.floor(rand * this.jitter * ms);
          ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
        }
        return Math.min(ms, this.max) | 0;
      };
      /**
       * Reset the number of attempts.
       *
       * @api public
       */
      _Backoff.prototype.reset = function () {
        this.attempts = 0;
      };
      /**
       * Set the minimum duration
       *
       * @api public
       */
      _Backoff.prototype.setMin = function (min) {
        this.ms = min;
      };
      /**
       * Set the maximum duration
       *
       * @api public
       */
      _Backoff.prototype.setMax = function (max) {
        this.max = max;
      };
      /**
       * Set the jitter
       *
       * @api public
       */
      _Backoff.prototype.setJitter = function (jitter) {
        this.jitter = jitter;
      };

      /***/
    },

    /***/43289:
    /*!**********************************************************!*\
      !*** ./node_modules/socket.io-client/build/esm/index.js ***!
      \**********************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"protocol": function protocol() {
          return (/* reexport safe */socket_io_parser__WEBPACK_IMPORTED_MODULE_3__.protocol
          );
        },
        /* harmony export */"Manager": function Manager() {
          return (/* reexport safe */_manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager
          );
        },
        /* harmony export */"Socket": function Socket() {
          return (/* reexport safe */_socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket
          );
        },
        /* harmony export */"io": function io() {
          return (/* binding */lookup
          );
        },
        /* harmony export */"connect": function connect() {
          return (/* binding */lookup
          );
        },
        /* harmony export */"default": function _default() {
          return (/* binding */lookup
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./url.js */21428);
      /* harmony import */
      var _manager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./manager.js */92399);
      /* harmony import */
      var _socket_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./socket.js */73708);
      /* harmony import */
      var socket_io_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! socket.io-parser */2950);

      /**
       * Managers cache.
       */
      var cache = {};
      function lookup(uri, opts) {
        if (typeof uri === "object") {
          opts = uri;
          uri = undefined;
        }
        opts = opts || {};
        var parsed = (0, _url_js__WEBPACK_IMPORTED_MODULE_0__.url)(uri, opts.path || "/socket.io");
        var source = parsed.source;
        var id = parsed.id;
        var path = parsed.path;
        var sameNamespace = cache[id] && path in cache[id]["nsps"];
        var newConnection = opts.forceNew || opts["force new connection"] || false === opts.multiplex || sameNamespace;
        var io;
        if (newConnection) {
          io = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);
        } else {
          if (!cache[id]) {
            cache[id] = new _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager(source, opts);
          }
          io = cache[id];
        }
        if (parsed.query && !opts.query) {
          opts.query = parsed.queryKey;
        }
        return io.socket(parsed.path, opts);
      }
      // so that "lookup" can be used both as a function (e.g. `io(...)`) and as a
      // namespace (e.g. `io.connect(...)`), for backward compatibility
      Object.assign(lookup, {
        Manager: _manager_js__WEBPACK_IMPORTED_MODULE_1__.Manager,
        Socket: _socket_js__WEBPACK_IMPORTED_MODULE_2__.Socket,
        io: lookup,
        connect: lookup
      });
      /**
       * Protocol version.
       *
       * @public
       */

      /**
       * Expose constructors for standalone build.
       *
       * @public
       */

      /***/
    },

    /***/92399:
    /*!************************************************************!*\
      !*** ./node_modules/socket.io-client/build/esm/manager.js ***!
      \************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Manager": function Manager() {
          return (/* binding */_Manager
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! engine.io-client */88813);
      /* harmony import */
      var _socket_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./socket.js */73708);
      /* harmony import */
      var socket_io_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! socket.io-parser */2950);
      /* harmony import */
      var _on_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! ./on.js */86567);
      /* harmony import */
      var _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ./contrib/backo2.js */27580);
      /* harmony import */
      var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! @socket.io/component-emitter */88760);
      var _Manager = /*#__PURE__*/function (_socket_io_component_4) {
        _inherits(_Manager, _socket_io_component_4);
        var _super7 = _createSuper(_Manager);
        function _Manager(uri, opts) {
          var _this32;
          _classCallCheck(this, _Manager);
          var _a;
          _this32 = _super7.call(this);
          _this32.nsps = {};
          _this32.subs = [];
          if (uri && "object" === typeof uri) {
            opts = uri;
            uri = undefined;
          }
          opts = opts || {};
          opts.path = opts.path || "/socket.io";
          _this32.opts = opts;
          (0, engine_io_client__WEBPACK_IMPORTED_MODULE_0__.installTimerFunctions)(_assertThisInitialized(_this32), opts);
          _this32.reconnection(opts.reconnection !== false);
          _this32.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
          _this32.reconnectionDelay(opts.reconnectionDelay || 1000);
          _this32.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
          _this32.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);
          _this32.backoff = new _contrib_backo2_js__WEBPACK_IMPORTED_MODULE_4__.Backoff({
            min: _this32.reconnectionDelay(),
            max: _this32.reconnectionDelayMax(),
            jitter: _this32.randomizationFactor()
          });
          _this32.timeout(null == opts.timeout ? 20000 : opts.timeout);
          _this32._readyState = "closed";
          _this32.uri = uri;
          var _parser = opts.parser || socket_io_parser__WEBPACK_IMPORTED_MODULE_2__;
          _this32.encoder = new _parser.Encoder();
          _this32.decoder = new _parser.Decoder();
          _this32._autoConnect = opts.autoConnect !== false;
          if (_this32._autoConnect) _this32.open();
          return _this32;
        }
        _createClass(_Manager, [{
          key: "reconnection",
          value: function reconnection(v) {
            if (!arguments.length) return this._reconnection;
            this._reconnection = !!v;
            return this;
          }
        }, {
          key: "reconnectionAttempts",
          value: function reconnectionAttempts(v) {
            if (v === undefined) return this._reconnectionAttempts;
            this._reconnectionAttempts = v;
            return this;
          }
        }, {
          key: "reconnectionDelay",
          value: function reconnectionDelay(v) {
            var _a;
            if (v === undefined) return this._reconnectionDelay;
            this._reconnectionDelay = v;
            (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);
            return this;
          }
        }, {
          key: "randomizationFactor",
          value: function randomizationFactor(v) {
            var _a;
            if (v === undefined) return this._randomizationFactor;
            this._randomizationFactor = v;
            (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);
            return this;
          }
        }, {
          key: "reconnectionDelayMax",
          value: function reconnectionDelayMax(v) {
            var _a;
            if (v === undefined) return this._reconnectionDelayMax;
            this._reconnectionDelayMax = v;
            (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);
            return this;
          }
        }, {
          key: "timeout",
          value: function timeout(v) {
            if (!arguments.length) return this._timeout;
            this._timeout = v;
            return this;
          }
          /**
           * Starts trying to reconnect if reconnection is enabled and we have not
           * started reconnecting yet
           *
           * @private
           */
        }, {
          key: "maybeReconnectOnOpen",
          value: function maybeReconnectOnOpen() {
            // Only try to reconnect if it's the first time we're connecting
            if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) {
              // keeps reconnection from firing twice for the same reconnection loop
              this.reconnect();
            }
          }
          /**
           * Sets the current transport `socket`.
           *
           * @param {Function} fn - optional, callback
           * @return self
           * @public
           */
        }, {
          key: "open",
          value: function open(fn) {
            var _this33 = this;
            if (~this._readyState.indexOf("open")) return this;
            this.engine = new engine_io_client__WEBPACK_IMPORTED_MODULE_0__.Socket(this.uri, this.opts);
            var socket = this.engine;
            var self = this;
            this._readyState = "opening";
            this.skipReconnect = false;
            // emit `open`
            var openSubDestroy = (0, _on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, "open", function () {
              self.onopen();
              fn && fn();
            });
            // emit `error`
            var errorSub = (0, _on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, "error", function (err) {
              self.cleanup();
              self._readyState = "closed";
              _this33.emitReserved("error", err);
              if (fn) {
                fn(err);
              } else {
                // Only do this if there is no fn to handle the error
                self.maybeReconnectOnOpen();
              }
            });
            if (false !== this._timeout) {
              var timeout = this._timeout;
              if (timeout === 0) {
                openSubDestroy(); // prevents a race condition with the 'open' event
              }
              // set timer
              var timer = this.setTimeoutFn(function () {
                openSubDestroy();
                socket.close();
                // @ts-ignore
                socket.emit("error", new Error("timeout"));
              }, timeout);
              if (this.opts.autoUnref) {
                timer.unref();
              }
              this.subs.push(function subDestroy() {
                clearTimeout(timer);
              });
            }
            this.subs.push(openSubDestroy);
            this.subs.push(errorSub);
            return this;
          }
          /**
           * Alias for open()
           *
           * @return self
           * @public
           */
        }, {
          key: "connect",
          value: function connect(fn) {
            return this.open(fn);
          }
          /**
           * Called upon transport open.
           *
           * @private
           */
        }, {
          key: "onopen",
          value: function onopen() {
            // clear old subs
            this.cleanup();
            // mark as open
            this._readyState = "open";
            this.emitReserved("open");
            // add new subs
            var socket = this.engine;
            this.subs.push((0, _on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, "ping", this.onping.bind(this)), (0, _on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, "data", this.ondata.bind(this)), (0, _on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, "error", this.onerror.bind(this)), (0, _on_js__WEBPACK_IMPORTED_MODULE_3__.on)(socket, "close", this.onclose.bind(this)), (0, _on_js__WEBPACK_IMPORTED_MODULE_3__.on)(this.decoder, "decoded", this.ondecoded.bind(this)));
          }
          /**
           * Called upon a ping.
           *
           * @private
           */
        }, {
          key: "onping",
          value: function onping() {
            this.emitReserved("ping");
          }
          /**
           * Called with data.
           *
           * @private
           */
        }, {
          key: "ondata",
          value: function ondata(data) {
            try {
              this.decoder.add(data);
            } catch (e) {
              this.onclose("parse error", e);
            }
          }
          /**
           * Called when parser fully decodes a packet.
           *
           * @private
           */
        }, {
          key: "ondecoded",
          value: function ondecoded(packet) {
            var _this34 = this;
            // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a "parse error"
            (0, engine_io_client__WEBPACK_IMPORTED_MODULE_0__.nextTick)(function () {
              _this34.emitReserved("packet", packet);
            }, this.setTimeoutFn);
          }
          /**
           * Called upon socket error.
           *
           * @private
           */
        }, {
          key: "onerror",
          value: function onerror(err) {
            this.emitReserved("error", err);
          }
          /**
           * Creates a new socket for the given `nsp`.
           *
           * @return {Socket}
           * @public
           */
        }, {
          key: "socket",
          value: function socket(nsp, opts) {
            var socket = this.nsps[nsp];
            if (!socket) {
              socket = new _socket_js__WEBPACK_IMPORTED_MODULE_1__.Socket(this, nsp, opts);
              this.nsps[nsp] = socket;
            }
            return socket;
          }
          /**
           * Called upon a socket close.
           *
           * @param socket
           * @private
           */
        }, {
          key: "_destroy",
          value: function _destroy(socket) {
            var nsps = Object.keys(this.nsps);
            for (var _i3 = 0, _nsps = nsps; _i3 < _nsps.length; _i3++) {
              var nsp = _nsps[_i3];
              var _socket = this.nsps[nsp];
              if (_socket.active) {
                return;
              }
            }
            this._close();
          }
          /**
           * Writes a packet.
           *
           * @param packet
           * @private
           */
        }, {
          key: "_packet",
          value: function _packet(packet) {
            var encodedPackets = this.encoder.encode(packet);
            for (var i = 0; i < encodedPackets.length; i++) {
              this.engine.write(encodedPackets[i], packet.options);
            }
          }
          /**
           * Clean up transport subscriptions and packet buffer.
           *
           * @private
           */
        }, {
          key: "cleanup",
          value: function cleanup() {
            this.subs.forEach(function (subDestroy) {
              return subDestroy();
            });
            this.subs.length = 0;
            this.decoder.destroy();
          }
          /**
           * Close the current socket.
           *
           * @private
           */
        }, {
          key: "_close",
          value: function _close() {
            this.skipReconnect = true;
            this._reconnecting = false;
            this.onclose("forced close");
            if (this.engine) this.engine.close();
          }
          /**
           * Alias for close()
           *
           * @private
           */
        }, {
          key: "disconnect",
          value: function disconnect() {
            return this._close();
          }
          /**
           * Called upon engine close.
           *
           * @private
           */
        }, {
          key: "onclose",
          value: function onclose(reason, description) {
            this.cleanup();
            this.backoff.reset();
            this._readyState = "closed";
            this.emitReserved("close", reason, description);
            if (this._reconnection && !this.skipReconnect) {
              this.reconnect();
            }
          }
          /**
           * Attempt a reconnection.
           *
           * @private
           */
        }, {
          key: "reconnect",
          value: function reconnect() {
            var _this35 = this;
            if (this._reconnecting || this.skipReconnect) return this;
            var self = this;
            if (this.backoff.attempts >= this._reconnectionAttempts) {
              this.backoff.reset();
              this.emitReserved("reconnect_failed");
              this._reconnecting = false;
            } else {
              var delay = this.backoff.duration();
              this._reconnecting = true;
              var timer = this.setTimeoutFn(function () {
                if (self.skipReconnect) return;
                _this35.emitReserved("reconnect_attempt", self.backoff.attempts);
                // check again for the case socket closed in above events
                if (self.skipReconnect) return;
                self.open(function (err) {
                  if (err) {
                    self._reconnecting = false;
                    self.reconnect();
                    _this35.emitReserved("reconnect_error", err);
                  } else {
                    self.onreconnect();
                  }
                });
              }, delay);
              if (this.opts.autoUnref) {
                timer.unref();
              }
              this.subs.push(function subDestroy() {
                clearTimeout(timer);
              });
            }
          }
          /**
           * Called upon successful reconnect.
           *
           * @private
           */
        }, {
          key: "onreconnect",
          value: function onreconnect() {
            var attempt = this.backoff.attempts;
            this._reconnecting = false;
            this.backoff.reset();
            this.emitReserved("reconnect", attempt);
          }
        }]);
        return _Manager;
      }(_socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_5__.Emitter);
      /***/
    },
    /***/86567:
    /*!*******************************************************!*\
      !*** ./node_modules/socket.io-client/build/esm/on.js ***!
      \*******************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"on": function on() {
          return (/* binding */_on
          );
        }
        /* harmony export */
      });
      function _on(obj, ev, fn) {
        obj.on(ev, fn);
        return function subDestroy() {
          obj.off(ev, fn);
        };
      }

      /***/
    },

    /***/73708:
    /*!***********************************************************!*\
      !*** ./node_modules/socket.io-client/build/esm/socket.js ***!
      \***********************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Socket": function Socket() {
          return (/* binding */_Socket2
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var socket_io_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! socket.io-parser */2950);
      /* harmony import */
      var _on_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./on.js */86567);
      /* harmony import */
      var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! @socket.io/component-emitter */88760);

      /**
       * Internal events.
       * These events can't be emitted by the user.
       */
      var RESERVED_EVENTS = Object.freeze({
        connect: 1,
        connect_error: 1,
        disconnect: 1,
        disconnecting: 1,
        // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener
        newListener: 1,
        removeListener: 1
      });
      /**
       * A Socket is the fundamental class for interacting with the server.
       *
       * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.
       *
       * @example
       * const socket = io();
       *
       * socket.on("connect", () => {
       *   console.log("connected");
       * });
       *
       * // send an event to the server
       * socket.emit("foo", "bar");
       *
       * socket.on("foobar", () => {
       *   // an event was received from the server
       * });
       *
       * // upon disconnection
       * socket.on("disconnect", (reason) => {
       *   console.log(`disconnected due to ${reason}`);
       * });
       */
      var _Socket2 = /*#__PURE__*/function (_socket_io_component_5) {
        _inherits(_Socket2, _socket_io_component_5);
        var _super8 = _createSuper(_Socket2);
        /**
         * `Socket` constructor.
         */
        function _Socket2(io, nsp, opts) {
          var _this36;
          _classCallCheck(this, _Socket2);
          _this36 = _super8.call(this);
          /**
           * Whether the socket is currently connected to the server.
           *
           * @example
           * const socket = io();
           *
           * socket.on("connect", () => {
           *   console.log(socket.connected); // true
           * });
           *
           * socket.on("disconnect", () => {
           *   console.log(socket.connected); // false
           * });
           */
          _this36.connected = false;
          /**
           * Buffer for packets received before the CONNECT packet
           */
          _this36.receiveBuffer = [];
          /**
           * Buffer for packets that will be sent once the socket is connected
           */
          _this36.sendBuffer = [];
          _this36.ids = 0;
          _this36.acks = {};
          _this36.flags = {};
          _this36.io = io;
          _this36.nsp = nsp;
          if (opts && opts.auth) {
            _this36.auth = opts.auth;
          }
          if (_this36.io._autoConnect) _this36.open();
          return _this36;
        }
        /**
         * Whether the socket is currently disconnected
         *
         * @example
         * const socket = io();
         *
         * socket.on("connect", () => {
         *   console.log(socket.disconnected); // false
         * });
         *
         * socket.on("disconnect", () => {
         *   console.log(socket.disconnected); // true
         * });
         */
        _createClass(_Socket2, [{
          key: "disconnected",
          get: function get() {
            return !this.connected;
          }
          /**
           * Subscribe to open, close and packet events
           *
           * @private
           */
        }, {
          key: "subEvents",
          value: function subEvents() {
            if (this.subs) return;
            var io = this.io;
            this.subs = [(0, _on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, "open", this.onopen.bind(this)), (0, _on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, "packet", this.onpacket.bind(this)), (0, _on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, "error", this.onerror.bind(this)), (0, _on_js__WEBPACK_IMPORTED_MODULE_1__.on)(io, "close", this.onclose.bind(this))];
          }
          /**
           * Whether the Socket will try to reconnect when its Manager connects or reconnects.
           *
           * @example
           * const socket = io();
           *
           * console.log(socket.active); // true
           *
           * socket.on("disconnect", (reason) => {
           *   if (reason === "io server disconnect") {
           *     // the disconnection was initiated by the server, you need to manually reconnect
           *     console.log(socket.active); // false
           *   }
           *   // else the socket will automatically try to reconnect
           *   console.log(socket.active); // true
           * });
           */
        }, {
          key: "active",
          get: function get() {
            return !!this.subs;
          }
          /**
           * "Opens" the socket.
           *
           * @example
           * const socket = io({
           *   autoConnect: false
           * });
           *
           * socket.connect();
           */
        }, {
          key: "connect",
          value: function connect() {
            if (this.connected) return this;
            this.subEvents();
            if (!this.io["_reconnecting"]) this.io.open(); // ensure open
            if ("open" === this.io._readyState) this.onopen();
            return this;
          }
          /**
           * Alias for {@link connect()}.
           */
        }, {
          key: "open",
          value: function open() {
            return this.connect();
          }
          /**
           * Sends a `message` event.
           *
           * This method mimics the WebSocket.send() method.
           *
           * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send
           *
           * @example
           * socket.send("hello");
           *
           * // this is equivalent to
           * socket.emit("message", "hello");
           *
           * @return self
           */
        }, {
          key: "send",
          value: function send() {
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }
            args.unshift("message");
            this.emit.apply(this, args);
            return this;
          }
          /**
           * Override `emit`.
           * If the event is in `events`, it's emitted normally.
           *
           * @example
           * socket.emit("hello", "world");
           *
           * // all serializable datastructures are supported (no need to call JSON.stringify)
           * socket.emit("hello", 1, "2", { 3: ["4"], 5: Uint8Array.from([6]) });
           *
           * // with an acknowledgement from the server
           * socket.emit("hello", "world", (val) => {
           *   // ...
           * });
           *
           * @return self
           */
        }, {
          key: "emit",
          value: function emit(ev) {
            if (RESERVED_EVENTS.hasOwnProperty(ev)) {
              throw new Error('"' + ev.toString() + '" is a reserved event name');
            }
            for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
              args[_key3 - 1] = arguments[_key3];
            }
            args.unshift(ev);
            var packet = {
              type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT,
              data: args
            };
            packet.options = {};
            packet.options.compress = this.flags.compress !== false;
            // event ack callback
            if ("function" === typeof args[args.length - 1]) {
              var id = this.ids++;
              var ack = args.pop();
              this._registerAckCallback(id, ack);
              packet.id = id;
            }
            var isTransportWritable = this.io.engine && this.io.engine.transport && this.io.engine.transport.writable;
            var discardPacket = this.flags["volatile"] && (!isTransportWritable || !this.connected);
            if (discardPacket) {} else if (this.connected) {
              this.notifyOutgoingListeners(packet);
              this.packet(packet);
            } else {
              this.sendBuffer.push(packet);
            }
            this.flags = {};
            return this;
          }
          /**
           * @private
           */
        }, {
          key: "_registerAckCallback",
          value: function _registerAckCallback(id, ack) {
            var _this37 = this;
            var timeout = this.flags.timeout;
            if (timeout === undefined) {
              this.acks[id] = ack;
              return;
            }
            // @ts-ignore
            var timer = this.io.setTimeoutFn(function () {
              delete _this37.acks[id];
              for (var i = 0; i < _this37.sendBuffer.length; i++) {
                if (_this37.sendBuffer[i].id === id) {
                  _this37.sendBuffer.splice(i, 1);
                }
              }
              ack.call(_this37, new Error("operation has timed out"));
            }, timeout);
            this.acks[id] = function () {
              // @ts-ignore
              _this37.io.clearTimeoutFn(timer);
              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
                args[_key4] = arguments[_key4];
              }
              ack.apply(_this37, [null].concat(args));
            };
          }
          /**
           * Sends a packet.
           *
           * @param packet
           * @private
           */
        }, {
          key: "packet",
          value: function packet(_packet2) {
            _packet2.nsp = this.nsp;
            this.io._packet(_packet2);
          }
          /**
           * Called upon engine `open`.
           *
           * @private
           */
        }, {
          key: "onopen",
          value: function onopen() {
            var _this38 = this;
            if (typeof this.auth == "function") {
              this.auth(function (data) {
                _this38.packet({
                  type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT,
                  data: data
                });
              });
            } else {
              this.packet({
                type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT,
                data: this.auth
              });
            }
          }
          /**
           * Called upon engine or manager `error`.
           *
           * @param err
           * @private
           */
        }, {
          key: "onerror",
          value: function onerror(err) {
            if (!this.connected) {
              this.emitReserved("connect_error", err);
            }
          }
          /**
           * Called upon engine `close`.
           *
           * @param reason
           * @param description
           * @private
           */
        }, {
          key: "onclose",
          value: function onclose(reason, description) {
            this.connected = false;
            delete this.id;
            this.emitReserved("disconnect", reason, description);
          }
          /**
           * Called with socket packet.
           *
           * @param packet
           * @private
           */
        }, {
          key: "onpacket",
          value: function onpacket(packet) {
            var sameNamespace = packet.nsp === this.nsp;
            if (!sameNamespace) return;
            switch (packet.type) {
              case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT:
                if (packet.data && packet.data.sid) {
                  var id = packet.data.sid;
                  this.onconnect(id);
                } else {
                  this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));
                }
                break;
              case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.EVENT:
              case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_EVENT:
                this.onevent(packet);
                break;
              case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK:
              case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.BINARY_ACK:
                this.onack(packet);
                break;
              case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT:
                this.ondisconnect();
                break;
              case socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.CONNECT_ERROR:
                this.destroy();
                var err = new Error(packet.data.message);
                // @ts-ignore
                err.data = packet.data.data;
                this.emitReserved("connect_error", err);
                break;
            }
          }
          /**
           * Called upon a server event.
           *
           * @param packet
           * @private
           */
        }, {
          key: "onevent",
          value: function onevent(packet) {
            var args = packet.data || [];
            if (null != packet.id) {
              args.push(this.ack(packet.id));
            }
            if (this.connected) {
              this.emitEvent(args);
            } else {
              this.receiveBuffer.push(Object.freeze(args));
            }
          }
        }, {
          key: "emitEvent",
          value: function emitEvent(args) {
            if (this._anyListeners && this._anyListeners.length) {
              var listeners = this._anyListeners.slice();
              var _iterator6 = _createForOfIteratorHelper(listeners),
                _step6;
              try {
                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                  var listener = _step6.value;
                  listener.apply(this, args);
                }
              } catch (err) {
                _iterator6.e(err);
              } finally {
                _iterator6.f();
              }
            }
            _get(_getPrototypeOf(_Socket2.prototype), "emit", this).apply(this, args);
          }
          /**
           * Produces an ack callback to emit with an event.
           *
           * @private
           */
        }, {
          key: "ack",
          value: function ack(id) {
            var self = this;
            var sent = false;
            return function () {
              // prevent double callbacks
              if (sent) return;
              sent = true;
              for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
                args[_key5] = arguments[_key5];
              }
              self.packet({
                type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.ACK,
                id: id,
                data: args
              });
            };
          }
          /**
           * Called upon a server acknowlegement.
           *
           * @param packet
           * @private
           */
        }, {
          key: "onack",
          value: function onack(packet) {
            var ack = this.acks[packet.id];
            if ("function" === typeof ack) {
              ack.apply(this, packet.data);
              delete this.acks[packet.id];
            } else {}
          }
          /**
           * Called upon server connect.
           *
           * @private
           */
        }, {
          key: "onconnect",
          value: function onconnect(id) {
            this.id = id;
            this.connected = true;
            this.emitBuffered();
            this.emitReserved("connect");
          }
          /**
           * Emit buffered events (received and emitted).
           *
           * @private
           */
        }, {
          key: "emitBuffered",
          value: function emitBuffered() {
            var _this39 = this;
            this.receiveBuffer.forEach(function (args) {
              return _this39.emitEvent(args);
            });
            this.receiveBuffer = [];
            this.sendBuffer.forEach(function (packet) {
              _this39.notifyOutgoingListeners(packet);
              _this39.packet(packet);
            });
            this.sendBuffer = [];
          }
          /**
           * Called upon server disconnect.
           *
           * @private
           */
        }, {
          key: "ondisconnect",
          value: function ondisconnect() {
            this.destroy();
            this.onclose("io server disconnect");
          }
          /**
           * Called upon forced client/server side disconnections,
           * this method ensures the manager stops tracking us and
           * that reconnections don't get triggered for this.
           *
           * @private
           */
        }, {
          key: "destroy",
          value: function destroy() {
            if (this.subs) {
              // clean subscriptions to avoid reconnections
              this.subs.forEach(function (subDestroy) {
                return subDestroy();
              });
              this.subs = undefined;
            }
            this.io["_destroy"](this);
          }
          /**
           * Disconnects the socket manually. In that case, the socket will not try to reconnect.
           *
           * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.
           *
           * @example
           * const socket = io();
           *
           * socket.on("disconnect", (reason) => {
           *   // console.log(reason); prints "io client disconnect"
           * });
           *
           * socket.disconnect();
           *
           * @return self
           */
        }, {
          key: "disconnect",
          value: function disconnect() {
            if (this.connected) {
              this.packet({
                type: socket_io_parser__WEBPACK_IMPORTED_MODULE_0__.PacketType.DISCONNECT
              });
            }
            // remove socket from pool
            this.destroy();
            if (this.connected) {
              // fire events
              this.onclose("io client disconnect");
            }
            return this;
          }
          /**
           * Alias for {@link disconnect()}.
           *
           * @return self
           */
        }, {
          key: "close",
          value: function close() {
            return this.disconnect();
          }
          /**
           * Sets the compress flag.
           *
           * @example
           * socket.compress(false).emit("hello");
           *
           * @param compress - if `true`, compresses the sending data
           * @return self
           */
        }, {
          key: "compress",
          value: function compress(_compress) {
            this.flags.compress = _compress;
            return this;
          }
          /**
           * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not
           * ready to send messages.
           *
           * @example
           * socket.volatile.emit("hello"); // the server may or may not receive it
           *
           * @returns self
           */
        }, {
          key: "volatile",
          get: function get() {
            this.flags["volatile"] = true;
            return this;
          }
          /**
           * Sets a modifier for a subsequent event emission that the callback will be called with an error when the
           * given number of milliseconds have elapsed without an acknowledgement from the server:
           *
           * @example
           * socket.timeout(5000).emit("my-event", (err) => {
           *   if (err) {
           *     // the server did not acknowledge the event in the given delay
           *   }
           * });
           *
           * @returns self
           */
        }, {
          key: "timeout",
          value: function timeout(_timeout) {
            this.flags.timeout = _timeout;
            return this;
          }
          /**
           * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
           * callback.
           *
           * @example
           * socket.onAny((event, ...args) => {
           *   console.log(`got ${event}`);
           * });
           *
           * @param listener
           */
        }, {
          key: "onAny",
          value: function onAny(listener) {
            this._anyListeners = this._anyListeners || [];
            this._anyListeners.push(listener);
            return this;
          }
          /**
           * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
           * callback. The listener is added to the beginning of the listeners array.
           *
           * @example
           * socket.prependAny((event, ...args) => {
           *   console.log(`got event ${event}`);
           * });
           *
           * @param listener
           */
        }, {
          key: "prependAny",
          value: function prependAny(listener) {
            this._anyListeners = this._anyListeners || [];
            this._anyListeners.unshift(listener);
            return this;
          }
          /**
           * Removes the listener that will be fired when any event is emitted.
           *
           * @example
           * const catchAllListener = (event, ...args) => {
           *   console.log(`got event ${event}`);
           * }
           *
           * socket.onAny(catchAllListener);
           *
           * // remove a specific listener
           * socket.offAny(catchAllListener);
           *
           * // or remove all listeners
           * socket.offAny();
           *
           * @param listener
           */
        }, {
          key: "offAny",
          value: function offAny(listener) {
            if (!this._anyListeners) {
              return this;
            }
            if (listener) {
              var listeners = this._anyListeners;
              for (var i = 0; i < listeners.length; i++) {
                if (listener === listeners[i]) {
                  listeners.splice(i, 1);
                  return this;
                }
              }
            } else {
              this._anyListeners = [];
            }
            return this;
          }
          /**
           * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
           * e.g. to remove listeners.
           */
        }, {
          key: "listenersAny",
          value: function listenersAny() {
            return this._anyListeners || [];
          }
          /**
           * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
           * callback.
           *
           * Note: acknowledgements sent to the server are not included.
           *
           * @example
           * socket.onAnyOutgoing((event, ...args) => {
           *   console.log(`sent event ${event}`);
           * });
           *
           * @param listener
           */
        }, {
          key: "onAnyOutgoing",
          value: function onAnyOutgoing(listener) {
            this._anyOutgoingListeners = this._anyOutgoingListeners || [];
            this._anyOutgoingListeners.push(listener);
            return this;
          }
          /**
           * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
           * callback. The listener is added to the beginning of the listeners array.
           *
           * Note: acknowledgements sent to the server are not included.
           *
           * @example
           * socket.prependAnyOutgoing((event, ...args) => {
           *   console.log(`sent event ${event}`);
           * });
           *
           * @param listener
           */
        }, {
          key: "prependAnyOutgoing",
          value: function prependAnyOutgoing(listener) {
            this._anyOutgoingListeners = this._anyOutgoingListeners || [];
            this._anyOutgoingListeners.unshift(listener);
            return this;
          }
          /**
           * Removes the listener that will be fired when any event is emitted.
           *
           * @example
           * const catchAllListener = (event, ...args) => {
           *   console.log(`sent event ${event}`);
           * }
           *
           * socket.onAnyOutgoing(catchAllListener);
           *
           * // remove a specific listener
           * socket.offAnyOutgoing(catchAllListener);
           *
           * // or remove all listeners
           * socket.offAnyOutgoing();
           *
           * @param [listener] - the catch-all listener (optional)
           */
        }, {
          key: "offAnyOutgoing",
          value: function offAnyOutgoing(listener) {
            if (!this._anyOutgoingListeners) {
              return this;
            }
            if (listener) {
              var listeners = this._anyOutgoingListeners;
              for (var i = 0; i < listeners.length; i++) {
                if (listener === listeners[i]) {
                  listeners.splice(i, 1);
                  return this;
                }
              }
            } else {
              this._anyOutgoingListeners = [];
            }
            return this;
          }
          /**
           * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
           * e.g. to remove listeners.
           */
        }, {
          key: "listenersAnyOutgoing",
          value: function listenersAnyOutgoing() {
            return this._anyOutgoingListeners || [];
          }
          /**
           * Notify the listeners for each packet sent
           *
           * @param packet
           *
           * @private
           */
        }, {
          key: "notifyOutgoingListeners",
          value: function notifyOutgoingListeners(packet) {
            if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {
              var listeners = this._anyOutgoingListeners.slice();
              var _iterator7 = _createForOfIteratorHelper(listeners),
                _step7;
              try {
                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                  var listener = _step7.value;
                  listener.apply(this, packet.data);
                }
              } catch (err) {
                _iterator7.e(err);
              } finally {
                _iterator7.f();
              }
            }
          }
        }]);
        return _Socket2;
      }(_socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_2__.Emitter);
      /***/
    },
    /***/21428:
    /*!********************************************************!*\
      !*** ./node_modules/socket.io-client/build/esm/url.js ***!
      \********************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"url": function url() {
          return (/* binding */_url
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var engine_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! engine.io-client */88813);

      /**
       * URL parser.
       *
       * @param uri - url
       * @param path - the request path of the connection
       * @param loc - An object meant to mimic window.location.
       *        Defaults to window.location.
       * @public
       */
      function _url(uri) {
        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
        var loc = arguments.length > 2 ? arguments[2] : undefined;
        var obj = uri;
        // default to window.location
        loc = loc || typeof location !== "undefined" && location;
        if (null == uri) uri = loc.protocol + "//" + loc.host;
        // relative path support
        if (typeof uri === "string") {
          if ("/" === uri.charAt(0)) {
            if ("/" === uri.charAt(1)) {
              uri = loc.protocol + uri;
            } else {
              uri = loc.host + uri;
            }
          }
          if (!/^(https?|wss?):\/\//.test(uri)) {
            if ("undefined" !== typeof loc) {
              uri = loc.protocol + "//" + uri;
            } else {
              uri = "https://" + uri;
            }
          }
          // parse
          obj = (0, engine_io_client__WEBPACK_IMPORTED_MODULE_0__.parse)(uri);
        }
        // make sure we treat `localhost:80` and `localhost` equally
        if (!obj.port) {
          if (/^(http|ws)$/.test(obj.protocol)) {
            obj.port = "80";
          } else if (/^(http|ws)s$/.test(obj.protocol)) {
            obj.port = "443";
          }
        }
        obj.path = obj.path || "/";
        var ipv6 = obj.host.indexOf(":") !== -1;
        var host = ipv6 ? "[" + obj.host + "]" : obj.host;
        // define unique id
        obj.id = obj.protocol + "://" + host + ":" + obj.port + path;
        // define href
        obj.href = obj.protocol + "://" + host + (loc && loc.port === obj.port ? "" : ":" + obj.port);
        return obj;
      }

      /***/
    },

    /***/79277:
    /*!***********************************************************!*\
      !*** ./node_modules/socket.io-parser/build/esm/binary.js ***!
      \***********************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"deconstructPacket": function deconstructPacket() {
          return (/* binding */_deconstructPacket2
          );
        },
        /* harmony export */"reconstructPacket": function reconstructPacket() {
          return (/* binding */_reconstructPacket2
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _is_binary_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./is-binary.js */3520);

      /**
       * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.
       *
       * @param {Object} packet - socket.io event packet
       * @return {Object} with deconstructed packet and list of buffers
       * @public
       */
      function _deconstructPacket2(packet) {
        var buffers = [];
        var packetData = packet.data;
        var pack = packet;
        pack.data = _deconstructPacket(packetData, buffers);
        pack.attachments = buffers.length; // number of binary 'attachments'
        return {
          packet: pack,
          buffers: buffers
        };
      }
      function _deconstructPacket(data, buffers) {
        if (!data) return data;
        if ((0, _is_binary_js__WEBPACK_IMPORTED_MODULE_0__.isBinary)(data)) {
          var placeholder = {
            _placeholder: true,
            num: buffers.length
          };
          buffers.push(data);
          return placeholder;
        } else if (Array.isArray(data)) {
          var newData = new Array(data.length);
          for (var i = 0; i < data.length; i++) {
            newData[i] = _deconstructPacket(data[i], buffers);
          }
          return newData;
        } else if (typeof data === "object" && !(data instanceof Date)) {
          var _newData = {};
          for (var key in data) {
            if (Object.prototype.hasOwnProperty.call(data, key)) {
              _newData[key] = _deconstructPacket(data[key], buffers);
            }
          }
          return _newData;
        }
        return data;
      }
      /**
       * Reconstructs a binary packet from its placeholder packet and buffers
       *
       * @param {Object} packet - event packet with placeholders
       * @param {Array} buffers - binary buffers to put in placeholder positions
       * @return {Object} reconstructed packet
       * @public
       */
      function _reconstructPacket2(packet, buffers) {
        packet.data = _reconstructPacket(packet.data, buffers);
        packet.attachments = undefined; // no longer useful
        return packet;
      }
      function _reconstructPacket(data, buffers) {
        if (!data) return data;
        if (data && data._placeholder === true) {
          var isIndexValid = typeof data.num === "number" && data.num >= 0 && data.num < buffers.length;
          if (isIndexValid) {
            return buffers[data.num]; // appropriate buffer (should be natural order anyway)
          } else {
            throw new Error("illegal attachments");
          }
        } else if (Array.isArray(data)) {
          for (var i = 0; i < data.length; i++) {
            data[i] = _reconstructPacket(data[i], buffers);
          }
        } else if (typeof data === "object") {
          for (var key in data) {
            if (Object.prototype.hasOwnProperty.call(data, key)) {
              data[key] = _reconstructPacket(data[key], buffers);
            }
          }
        }
        return data;
      }

      /***/
    },

    /***/2950:
    /*!**********************************************************!*\
      !*** ./node_modules/socket.io-parser/build/esm/index.js ***!
      \**********************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"protocol": function protocol() {
          return (/* binding */_protocol3
          );
        },
        /* harmony export */"PacketType": function PacketType() {
          return (/* binding */_PacketType
          );
        },
        /* harmony export */"Encoder": function Encoder() {
          return (/* binding */_Encoder
          );
        },
        /* harmony export */"Decoder": function Decoder() {
          return (/* binding */_Decoder
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! @socket.io/component-emitter */88760);
      /* harmony import */
      var _binary_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./binary.js */79277);
      /* harmony import */
      var _is_binary_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./is-binary.js */3520);

      /**
       * Protocol version.
       *
       * @public
       */
      var _protocol3 = 5;
      var _PacketType;
      (function (PacketType) {
        PacketType[PacketType["CONNECT"] = 0] = "CONNECT";
        PacketType[PacketType["DISCONNECT"] = 1] = "DISCONNECT";
        PacketType[PacketType["EVENT"] = 2] = "EVENT";
        PacketType[PacketType["ACK"] = 3] = "ACK";
        PacketType[PacketType["CONNECT_ERROR"] = 4] = "CONNECT_ERROR";
        PacketType[PacketType["BINARY_EVENT"] = 5] = "BINARY_EVENT";
        PacketType[PacketType["BINARY_ACK"] = 6] = "BINARY_ACK";
      })(_PacketType || (_PacketType = {}));
      /**
       * A socket.io Encoder instance
       */
      var _Encoder = /*#__PURE__*/function () {
        /**
         * Encoder constructor
         *
         * @param {function} replacer - custom replacer to pass down to JSON.parse
         */
        function _Encoder(replacer) {
          _classCallCheck(this, _Encoder);
          this.replacer = replacer;
        }
        /**
         * Encode a packet as a single string if non-binary, or as a
         * buffer sequence, depending on packet type.
         *
         * @param {Object} obj - packet object
         */
        _createClass(_Encoder, [{
          key: "encode",
          value: function encode(obj) {
            if (obj.type === _PacketType.EVENT || obj.type === _PacketType.ACK) {
              if ((0, _is_binary_js__WEBPACK_IMPORTED_MODULE_2__.hasBinary)(obj)) {
                obj.type = obj.type === _PacketType.EVENT ? _PacketType.BINARY_EVENT : _PacketType.BINARY_ACK;
                return this.encodeAsBinary(obj);
              }
            }
            return [this.encodeAsString(obj)];
          }
          /**
           * Encode packet as string.
           */
        }, {
          key: "encodeAsString",
          value: function encodeAsString(obj) {
            // first is type
            var str = "" + obj.type;
            // attachments if we have them
            if (obj.type === _PacketType.BINARY_EVENT || obj.type === _PacketType.BINARY_ACK) {
              str += obj.attachments + "-";
            }
            // if we have a namespace other than `/`
            // we append it followed by a comma `,`
            if (obj.nsp && "/" !== obj.nsp) {
              str += obj.nsp + ",";
            }
            // immediately followed by the id
            if (null != obj.id) {
              str += obj.id;
            }
            // json data
            if (null != obj.data) {
              str += JSON.stringify(obj.data, this.replacer);
            }
            return str;
          }
          /**
           * Encode packet as 'buffer sequence' by removing blobs, and
           * deconstructing packet into object with placeholders and
           * a list of buffers.
           */
        }, {
          key: "encodeAsBinary",
          value: function encodeAsBinary(obj) {
            var deconstruction = (0, _binary_js__WEBPACK_IMPORTED_MODULE_1__.deconstructPacket)(obj);
            var pack = this.encodeAsString(deconstruction.packet);
            var buffers = deconstruction.buffers;
            buffers.unshift(pack); // add packet info to beginning of data list
            return buffers; // write all the buffers
          }
        }]);
        return _Encoder;
      }();
      /**
       * A socket.io Decoder instance
       *
       * @return {Object} decoder
       */
      var _Decoder = /*#__PURE__*/function (_socket_io_component_6) {
        _inherits(_Decoder, _socket_io_component_6);
        var _super9 = _createSuper(_Decoder);
        /**
         * Decoder constructor
         *
         * @param {function} reviver - custom reviver to pass down to JSON.stringify
         */
        function _Decoder(reviver) {
          var _this40;
          _classCallCheck(this, _Decoder);
          _this40 = _super9.call(this);
          _this40.reviver = reviver;
          return _this40;
        }
        /**
         * Decodes an encoded packet string into packet JSON.
         *
         * @param {String} obj - encoded packet
         */
        _createClass(_Decoder, [{
          key: "add",
          value: function add(obj) {
            var packet;
            if (typeof obj === "string") {
              if (this.reconstructor) {
                throw new Error("got plaintext data when reconstructing a packet");
              }
              packet = this.decodeString(obj);
              if (packet.type === _PacketType.BINARY_EVENT || packet.type === _PacketType.BINARY_ACK) {
                // binary packet's json
                this.reconstructor = new BinaryReconstructor(packet);
                // no attachments, labeled binary but no binary data to follow
                if (packet.attachments === 0) {
                  _get(_getPrototypeOf(_Decoder.prototype), "emitReserved", this).call(this, "decoded", packet);
                }
              } else {
                // non-binary full packet
                _get(_getPrototypeOf(_Decoder.prototype), "emitReserved", this).call(this, "decoded", packet);
              }
            } else if ((0, _is_binary_js__WEBPACK_IMPORTED_MODULE_2__.isBinary)(obj) || obj.base64) {
              // raw binary data
              if (!this.reconstructor) {
                throw new Error("got binary data when not reconstructing a packet");
              } else {
                packet = this.reconstructor.takeBinaryData(obj);
                if (packet) {
                  // received final buffer
                  this.reconstructor = null;
                  _get(_getPrototypeOf(_Decoder.prototype), "emitReserved", this).call(this, "decoded", packet);
                }
              }
            } else {
              throw new Error("Unknown type: " + obj);
            }
          }
          /**
           * Decode a packet String (JSON data)
           *
           * @param {String} str
           * @return {Object} packet
           */
        }, {
          key: "decodeString",
          value: function decodeString(str) {
            var i = 0;
            // look up type
            var p = {
              type: Number(str.charAt(0))
            };
            if (_PacketType[p.type] === undefined) {
              throw new Error("unknown packet type " + p.type);
            }
            // look up attachments if type binary
            if (p.type === _PacketType.BINARY_EVENT || p.type === _PacketType.BINARY_ACK) {
              var start = i + 1;
              while (str.charAt(++i) !== "-" && i != str.length) {}
              var buf = str.substring(start, i);
              if (buf != Number(buf) || str.charAt(i) !== "-") {
                throw new Error("Illegal attachments");
              }
              p.attachments = Number(buf);
            }
            // look up namespace (if any)
            if ("/" === str.charAt(i + 1)) {
              var _start = i + 1;
              while (++i) {
                var c = str.charAt(i);
                if ("," === c) break;
                if (i === str.length) break;
              }
              p.nsp = str.substring(_start, i);
            } else {
              p.nsp = "/";
            }
            // look up id
            var next = str.charAt(i + 1);
            if ("" !== next && Number(next) == next) {
              var _start2 = i + 1;
              while (++i) {
                var _c7 = str.charAt(i);
                if (null == _c7 || Number(_c7) != _c7) {
                  --i;
                  break;
                }
                if (i === str.length) break;
              }
              p.id = Number(str.substring(_start2, i + 1));
            }
            // look up json data
            if (str.charAt(++i)) {
              var payload = this.tryParse(str.substr(i));
              if (_Decoder.isPayloadValid(p.type, payload)) {
                p.data = payload;
              } else {
                throw new Error("invalid payload");
              }
            }
            return p;
          }
        }, {
          key: "tryParse",
          value: function tryParse(str) {
            try {
              return JSON.parse(str, this.reviver);
            } catch (e) {
              return false;
            }
          }
        }, {
          key: "destroy",
          value:
          /**
           * Deallocates a parser's resources
           */
          function destroy() {
            if (this.reconstructor) {
              this.reconstructor.finishedReconstruction();
            }
          }
        }], [{
          key: "isPayloadValid",
          value: function isPayloadValid(type, payload) {
            switch (type) {
              case _PacketType.CONNECT:
                return typeof payload === "object";
              case _PacketType.DISCONNECT:
                return payload === undefined;
              case _PacketType.CONNECT_ERROR:
                return typeof payload === "string" || typeof payload === "object";
              case _PacketType.EVENT:
              case _PacketType.BINARY_EVENT:
                return Array.isArray(payload) && payload.length > 0;
              case _PacketType.ACK:
              case _PacketType.BINARY_ACK:
                return Array.isArray(payload);
            }
          }
        }]);
        return _Decoder;
      }(_socket_io_component_emitter__WEBPACK_IMPORTED_MODULE_0__.Emitter);
      /**
       * A manager of a binary event's 'buffer sequence'. Should
       * be constructed whenever a packet of type BINARY_EVENT is
       * decoded.
       *
       * @param {Object} packet
       * @return {BinaryReconstructor} initialized reconstructor
       */
      var BinaryReconstructor = /*#__PURE__*/function () {
        function BinaryReconstructor(packet) {
          _classCallCheck(this, BinaryReconstructor);
          this.packet = packet;
          this.buffers = [];
          this.reconPack = packet;
        }
        /**
         * Method to be called when binary data received from connection
         * after a BINARY_EVENT packet.
         *
         * @param {Buffer | ArrayBuffer} binData - the raw binary data received
         * @return {null | Object} returns null if more binary data is expected or
         *   a reconstructed packet object if all buffers have been received.
         */
        _createClass(BinaryReconstructor, [{
          key: "takeBinaryData",
          value: function takeBinaryData(binData) {
            this.buffers.push(binData);
            if (this.buffers.length === this.reconPack.attachments) {
              // done with buffer list
              var packet = (0, _binary_js__WEBPACK_IMPORTED_MODULE_1__.reconstructPacket)(this.reconPack, this.buffers);
              this.finishedReconstruction();
              return packet;
            }
            return null;
          }
          /**
           * Cleans up binary packet reconstruction variables.
           */
        }, {
          key: "finishedReconstruction",
          value: function finishedReconstruction() {
            this.reconPack = null;
            this.buffers = [];
          }
        }]);
        return BinaryReconstructor;
      }();
      /***/
    },
    /***/3520:
    /*!**************************************************************!*\
      !*** ./node_modules/socket.io-parser/build/esm/is-binary.js ***!
      \**************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"isBinary": function isBinary() {
          return (/* binding */_isBinary
          );
        },
        /* harmony export */"hasBinary": function hasBinary() {
          return (/* binding */_hasBinary
          );
        }
        /* harmony export */
      });
      var withNativeArrayBuffer = typeof ArrayBuffer === "function";
      var isView = function isView(obj) {
        return typeof ArrayBuffer.isView === "function" ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;
      };
      var toString = Object.prototype.toString;
      var withNativeBlob = typeof Blob === "function" || typeof Blob !== "undefined" && toString.call(Blob) === "[object BlobConstructor]";
      var withNativeFile = typeof File === "function" || typeof File !== "undefined" && toString.call(File) === "[object FileConstructor]";
      /**
       * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.
       *
       * @private
       */
      function _isBinary(obj) {
        return withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)) || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File;
      }
      function _hasBinary(obj, toJSON) {
        if (!obj || typeof obj !== "object") {
          return false;
        }
        if (Array.isArray(obj)) {
          for (var i = 0, l = obj.length; i < l; i++) {
            if (_hasBinary(obj[i])) {
              return true;
            }
          }
          return false;
        }
        if (_isBinary(obj)) {
          return true;
        }
        if (obj.toJSON && typeof obj.toJSON === "function" && arguments.length === 1) {
          return _hasBinary(obj.toJSON(), true);
        }
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {
            return true;
          }
        }
        return false;
      }

      /***/
    },

    /***/72040:
    /*!*************************************************************!*\
      !*** ./src/app/components/apps/chat/chat-routing.module.ts ***!
      \*************************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"chatRoutingModule": function chatRoutingModule() {
          return (/* binding */_chatRoutingModule
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! @angular/router */39895);
      /* harmony import */
      var _chat_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ./chat.component */13762);
      /* harmony import */
      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! @angular/core */37716);
      var routes = [{
        path: '',
        children: [{
          path: '',
          component: _chat_component__WEBPACK_IMPORTED_MODULE_0__.chatComponent
        }]
      }];
      var _chatRoutingModule = /*#__PURE__*/_createClass(function _chatRoutingModule() {
        _classCallCheck(this, _chatRoutingModule);
      });
      _chatRoutingModule.ɵfac = function chatRoutingModule_Factory(t) {
        return new (t || _chatRoutingModule)();
      };
      _chatRoutingModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
        type: _chatRoutingModule
      });
      _chatRoutingModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
        imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_2__.RouterModule.forChild(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_2__.RouterModule]
      });
      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](_chatRoutingModule, {
          imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__.RouterModule],
          exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__.RouterModule]
        });
      })();

      /***/
    },

    /***/13762:
    /*!********************************************************!*\
      !*** ./src/app/components/apps/chat/chat.component.ts ***!
      \********************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"chatComponent": function chatComponent() {
          return (/* binding */_chatComponent
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var socket_io_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! socket.io-client */43289);
      /* harmony import */
      var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! lodash */23815);
      /* harmony import */
      var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
      /* harmony import */
      var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! @angular/core */37716);
      /* harmony import */
      var src_app_shared_services_firebase_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! src/app/shared/services/firebase/auth.service */35873);
      /* harmony import */
      var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! ngx-toastr */49344);
      /* harmony import */
      var src_app_shared_services_local_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! src/app/shared/services/local.service */30652);
      /* harmony import */
      var _shared_components_breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! ../../../shared/components/breadcrumb/breadcrumb.component */41299);
      /* harmony import */
      var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! @angular/forms */3679);
      /* harmony import */
      var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! @ng-select/ng-select */86640);
      /* harmony import */
      var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__( /*! @angular/common */38583);
      /* harmony import */
      var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__( /*! @ng-bootstrap/ng-bootstrap */12664);
      /* harmony import */
      var _ctrl_ngx_emoji_mart__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__( /*! @ctrl/ngx-emoji-mart */46180);
      var _c0 = ["scrollMe"];
      function chatComponent_ng_option_20_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "ng-option", 25);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var searchUser_r5 = ctx.$implicit;
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("value", searchUser_r5);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](searchUser_r5.label);
        }
      }
      function chatComponent_li_22_Template(rf, ctx) {
        if (rf & 1) {
          var _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "li", 26);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "a", 27);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function chatComponent_li_22_Template_a_click_1_listener() {
            var restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r8);
            var message_r6 = restoredCtx.$implicit;
            var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
            return ctx_r7.userChat(message_r6);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "h1", 9);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "div", 10);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "div", 11);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](6);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "div", 12);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](8);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var message_r6 = ctx.$implicit;
          var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"]("", (message_r6 == null ? null : message_r6.from_id) == (ctx_r1.userDetails == null ? null : ctx_r1.userDetails.userId) ? message_r6 == null ? null : message_r6.to_name == null ? null : message_r6.to_name.toString().substring(0, 1) : message_r6 == null ? null : message_r6.from_name == null ? null : message_r6.from_name.toString().substring(0, 1), " ");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"]((message_r6 == null ? null : message_r6.from_id) == (ctx_r1.userDetails == null ? null : ctx_r1.userDetails.userId) ? message_r6 == null ? null : message_r6.to_name : message_r6 == null ? null : message_r6.from_name);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](message_r6 == null ? null : message_r6.message);
        }
      }
      function chatComponent_ng_container_23_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerStart"](0);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 28);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](3, "img", 29);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "p");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](5, "Sorry, We didn't find any results matching this search");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerEnd"]();
        }
      }
      function chatComponent_div_25_div_21_div_1_Template(rf, ctx) {
        if (rf & 1) {
          var _r18 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 59);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](1, "button", 60);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "p");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "p", 61);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](5);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipe"](6, "date");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "div", 39);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](8, "button", 40);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function chatComponent_div_25_div_21_div_1_Template_button_click_8_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r18);
            var chat_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]().$implicit;
            var ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
            return ctx_r16.editMessage(chat_r13);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](9, "Edit");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](10, "button", 40);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function chatComponent_div_25_div_21_div_1_Template_button_click_10_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r18);
            var chat_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]().$implicit;
            var ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
            return ctx_r19.deleteMessage(chat_r13);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](11, "Delete");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var chat_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]().$implicit;
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](chat_r13 == null ? null : chat_r13.message);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipeBind2"](6, 2, chat_r13 == null ? null : chat_r13.timestamp, "shortTime"));
        }
      }
      function chatComponent_div_25_div_21_div_2_Template(rf, ctx) {
        if (rf & 1) {
          var _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 62);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](1, "button", 63);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "p");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "p", 61);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](5);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipe"](6, "date");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "div", 39);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](8, "button", 40);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function chatComponent_div_25_div_21_div_2_Template_button_click_8_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r24);
            var chat_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]().$implicit;
            var ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
            return ctx_r22.deleteMessage(chat_r13);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](9, "Delete");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var chat_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]().$implicit;
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](chat_r13 == null ? null : chat_r13.message);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipeBind2"](6, 2, chat_r13 == null ? null : chat_r13.timestamp, "shortTime"));
        }
      }
      function chatComponent_div_25_div_21_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 56);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](1, chatComponent_div_25_div_21_div_1_Template, 12, 5, "div", 57);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](2, chatComponent_div_25_div_21_div_2_Template, 10, 5, "div", 58);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var chat_r13 = ctx.$implicit;
          var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", (chat_r13 == null ? null : chat_r13.to_id) == ((ctx_r10.toUser == null ? null : ctx_r10.toUser.from_id) == (ctx_r10.userDetails == null ? null : ctx_r10.userDetails.userId) ? ctx_r10.toUser == null ? null : ctx_r10.toUser.to_id : ctx_r10.toUser == null ? null : ctx_r10.toUser.from_id) && (chat_r13 == null ? null : chat_r13.from_id) == (ctx_r10.userDetails == null ? null : ctx_r10.userDetails.userId) && (chat_r13 == null ? null : chat_r13.to_id) != (ctx_r10.userDetails == null ? null : ctx_r10.userDetails.userId));
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", (chat_r13 == null ? null : chat_r13.to_id) == (ctx_r10.userDetails == null ? null : ctx_r10.userDetails.userId) && (chat_r13 == null ? null : chat_r13.from_id) == ((ctx_r10.toUser == null ? null : ctx_r10.toUser.from_id) == (ctx_r10.userDetails == null ? null : ctx_r10.userDetails.userId) ? ctx_r10.toUser == null ? null : ctx_r10.toUser.to_id : ctx_r10.toUser == null ? null : ctx_r10.toUser.from_id) && (chat_r13 == null ? null : chat_r13.to_id) != ((ctx_r10.toUser == null ? null : ctx_r10.toUser.from_id) == (ctx_r10.userDetails == null ? null : ctx_r10.userDetails.userId) ? ctx_r10.toUser == null ? null : ctx_r10.toUser.to_id : ctx_r10.toUser == null ? null : ctx_r10.toUser.from_id));
        }
      }
      function chatComponent_div_25_ng_container_32_Template(rf, ctx) {
        if (rf & 1) {
          var _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerStart"](0);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "emoji-mart", 64);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("emojiClick", function chatComponent_div_25_ng_container_32_Template_emoji_mart_emojiClick_1_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r27);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
            var _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵreference"](23);
            var ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
            return ctx_r26.addEmoji($event, _r11);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerEnd"]();
        }
      }
      function chatComponent_div_25_Template(rf, ctx) {
        if (rf & 1) {
          var _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 4);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 30);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div", 31);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "div", 32);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "div", 33);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "div", 34);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "div", 35);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "h1", 9);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](8);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](9, "div", 10);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](10, "div", 11);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](11);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](12, "ul", 36);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](13, "li", 37);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](14, "button", 38);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](15, "div", 39);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](16, "button", 40);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function chatComponent_div_25_Template_button_click_16_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r29);
            var ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
            return ctx_r28.deleteChat(ctx_r28.toUser);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](17, "Delete");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](18, "div", 41, 42);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](20, "div", 43);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](21, chatComponent_div_25_div_21_Template, 3, 2, "div", 44);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](22, "form", 45, 46);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngSubmit", function chatComponent_div_25_Template_form_ngSubmit_22_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r29);
            var _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵreference"](23);
            var ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
            return ctx_r30.sendMessage(_r11);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](24, "div", 47);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](25, "div", 2);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](26, "div", 48);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](27, "div", 49);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](28, "div", 50);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](29, "img", 51);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function chatComponent_div_25_Template_img_click_29_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r29);
            var ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
            return ctx_r31.toggleEmojiPicker();
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](30, "div", 52);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](31, "input", 53);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngModelChange", function chatComponent_div_25_Template_input_ngModelChange_31_listener($event) {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r29);
            var ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
            return ctx_r32.chatText = $event;
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](32, chatComponent_div_25_ng_container_32_Template, 2, 0, "ng-container", 21);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](33, "div", 54);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](34, "button", 55);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function chatComponent_div_25_Template_button_click_34_listener() {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r29);
            var _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵreference"](23);
            var ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
            return ctx_r33.sendMessage(_r11);
          });
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](35, "SEND");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        }
        if (rf & 2) {
          var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](8);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"]((ctx_r3.toUser == null ? null : ctx_r3.toUser.hasOwnProperty("label")) ? ctx_r3.toUser == null ? null : ctx_r3.toUser.label.toString().substring(0, 1) : (ctx_r3.toUser == null ? null : ctx_r3.toUser.from_id) == (ctx_r3.userDetails == null ? null : ctx_r3.userDetails.userId) ? ctx_r3.toUser == null ? null : ctx_r3.toUser.to_name == null ? null : ctx_r3.toUser.to_name.toString().substring(0, 1) : ctx_r3.toUser == null ? null : ctx_r3.toUser.from_name == null ? null : ctx_r3.toUser.from_name.toString().substring(0, 1));
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"]("", (ctx_r3.toUser == null ? null : ctx_r3.toUser.hasOwnProperty("label")) ? ctx_r3.toUser == null ? null : ctx_r3.toUser.label : (ctx_r3.toUser == null ? null : ctx_r3.toUser.from_id) == (ctx_r3.userDetails == null ? null : ctx_r3.userDetails.userId) ? ctx_r3.toUser == null ? null : ctx_r3.toUser.to_name : ctx_r3.toUser == null ? null : ctx_r3.toUser.from_name, " ");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](10);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r3.chatMessages);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](10);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵclassProp"]("border-danger", ctx_r3.error);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngModel", ctx_r3.chatText);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r3.showEmojiPicker);
        }
      }
      function chatComponent_div_26_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 65);
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "p");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](2, "No User Selected");
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        }
      }
      var _chatComponent = /*#__PURE__*/function () {
        function _chatComponent(http, toaster, localService) {
          _classCallCheck(this, _chatComponent);
          this.http = http;
          this.toaster = toaster;
          this.localService = localService;
          this.openTab = "call";
          this.users = [];
          this.searchUsers = [];
          this.error = false;
          this.notFound = false;
          this.showEmojiPicker = false;
          this.mobileToggle = false;
          this.messageLists = [];
          this.toUser = [];
          this.editMsg = false;
          this.socket = (0, socket_io_client__WEBPACK_IMPORTED_MODULE_0__.io)();
          this.searchTerm = (0, lodash__WEBPACK_IMPORTED_MODULE_1__.debounce)(this.searchTerm, 1000);
        }
        _createClass(_chatComponent, [{
          key: "ngOnInit",
          value: function ngOnInit() {
            var _this41 = this;
            this.getRecentUser();
            this.socket.on('message', function (messageInfo) {
              _this41.userChat(_this41.messageLists[0]);
              _this41.getRecentUser();
            });
            this.socket.on('delete', function (message) {
              _this41.getRecentUser();
            });
            this.socket.on('deleteChat', function (message) {
              _this41.getRecentUser();
            });
          }
        }, {
          key: "toggleEmojiPicker",
          value: function toggleEmojiPicker() {
            this.showEmojiPicker = !this.showEmojiPicker;
          }
        }, {
          key: "addEmoji",
          value: function addEmoji(event, form) {
            var text = "".concat(event.emoji["native"]);
            // if(!form.value.message){
            this.chatText = form.value.message + text;
            // }
            // else{
            //   this.chatText = text;
            // }
            this.showEmojiPicker = false;
          }
        }, {
          key: "tabbed",
          value: function tabbed(val) {
            this.openTab = val;
          }
          // User Chat
        }, {
          key: "userChat",
          value: function userChat(user) {
            var _this42 = this;
            var _a, _b, _c, _d, _e, _f, _g, _h;
            this.toUser = user;
            if ((_a = this.toUser) === null || _a === void 0 ? void 0 : _a.hasOwnProperty('label')) {
              this.http.getChat("getChat?to_id=".concat((_b = this.toUser) === null || _b === void 0 ? void 0 : _b.id, "&from_id=").concat((_c = this.userDetails) === null || _c === void 0 ? void 0 : _c.userId), true).subscribe(function (res) {
                var _a;
                _this42.chatMessages = (_a = res === null || res === void 0 ? void 0 : res.data) === null || _a === void 0 ? void 0 : _a.data;
                setTimeout(function () {
                  _this42.scrollToBottom();
                }, 500);
              }), function (err) {
                console.log('====================================');
                console.log(err);
                console.log('====================================');
              };
            } else {
              this.http.getChat("getChat?to_id=".concat(((_d = this.toUser) === null || _d === void 0 ? void 0 : _d.to_id) == ((_e = this.userDetails) === null || _e === void 0 ? void 0 : _e.userId) ? (_f = this.toUser) === null || _f === void 0 ? void 0 : _f.from_id : (_g = this.toUser) === null || _g === void 0 ? void 0 : _g.to_id, "&from_id=").concat((_h = this.userDetails) === null || _h === void 0 ? void 0 : _h.userId), true).subscribe(function (res) {
                var _a;
                _this42.chatMessages = (_a = res === null || res === void 0 ? void 0 : res.data) === null || _a === void 0 ? void 0 : _a.data;
                setTimeout(function () {
                  _this42.scrollToBottom();
                }, 500);
              }), function (err) {
                console.log('====================================');
                console.log(err);
                console.log('====================================');
              };
            }
          }
          // Send Message to User
        }, {
          key: "sendMessage",
          value: function sendMessage(form) {
            var _this43 = this;
            var _a, _b, _c, _d, _e, _f, _g;
            var time = new Date().getTime();
            if (!form.value.message) {
              this.error = true;
              return false;
            }
            this.error = false;
            if (!this.editMsg) {
              this.http.postChat("sendMessage?to_id=".concat(((_a = this.toUser) === null || _a === void 0 ? void 0 : _a.hasOwnProperty('label')) ? (_b = this.toUser) === null || _b === void 0 ? void 0 : _b.id : ((_c = this.toUser) === null || _c === void 0 ? void 0 : _c.to_id) == ((_d = this.userDetails) === null || _d === void 0 ? void 0 : _d.userId) ? (_e = this.toUser) === null || _e === void 0 ? void 0 : _e.from_id : (_f = this.toUser) === null || _f === void 0 ? void 0 : _f.to_id, "&from_id=").concat((_g = this.userDetails) === null || _g === void 0 ? void 0 : _g.userId, "&message=").concat(form.value.message, "&timestamp=").concat(time)).subscribe(function (res) {
                var _a, _b, _c, _d, _e;
                _this43.socket.emit('message', {
                  message: form.value.message,
                  to_id: ((_a = _this43.toUser) === null || _a === void 0 ? void 0 : _a.to_id) == ((_b = _this43.userDetails) === null || _b === void 0 ? void 0 : _b.userId) ? (_c = _this43.toUser) === null || _c === void 0 ? void 0 : _c.from_id : (_d = _this43.toUser) === null || _d === void 0 ? void 0 : _d.to_id,
                  from_id: (_e = _this43.userDetails) === null || _e === void 0 ? void 0 : _e.userId,
                  timestamp: time
                });
                _this43.chatText = '';
              }), function (err) {
                console.log('====================================');
                console.log(err);
                console.log('====================================');
              };
            } else {
              this.http.postChat("updateMessage?id=".concat(this.editId, "&message=").concat(form.value.message)).subscribe(function (res) {
                var _a, _b, _c, _d, _e;
                _this43.socket.emit('message', {
                  message: form.value.message,
                  to_id: ((_a = _this43.toUser) === null || _a === void 0 ? void 0 : _a.to_id) == ((_b = _this43.userDetails) === null || _b === void 0 ? void 0 : _b.userId) ? (_c = _this43.toUser) === null || _c === void 0 ? void 0 : _c.from_id : (_d = _this43.toUser) === null || _d === void 0 ? void 0 : _d.to_id,
                  from_id: (_e = _this43.userDetails) === null || _e === void 0 ? void 0 : _e.userId,
                  timestamp: time
                });
                _this43.chatText = '';
                _this43.editMsg = false;
              }), function (err) {
                console.log('====================================');
                console.log(err);
                console.log('====================================');
              };
            }
          }
        }, {
          key: "searchTerm",
          value: function searchTerm(event) {
            var _this44 = this;
            var _a;
            if (!event.target.value) {
              return;
            } else {
              this.http.getChat("getUsers?keyword=".concat((_a = event === null || event === void 0 ? void 0 : event.target) === null || _a === void 0 ? void 0 : _a.value), true).subscribe(function (res) {
                var _a;
                var users = [];
                (_a = res === null || res === void 0 ? void 0 : res.data) === null || _a === void 0 ? void 0 : _a.map(function (v) {
                  var _a;
                  if ((v === null || v === void 0 ? void 0 : v.id) == ((_a = _this44.userDetails) === null || _a === void 0 ? void 0 : _a.userId)) {
                    return;
                  } else {
                    // users.push(v)
                    users.push({
                      label: v.name,
                      value: v.name,
                      id: v.id,
                      email: v.email
                    });
                  }
                });
                _this44.searchUsers = users;
              }), function (err) {
                console.log('====================================');
                console.log(err);
                console.log('====================================');
              };
            }
            // term = term.toLowerCase();
            // let user = []
            // this.users.filter(users => {
            //   if (users.name.toLowerCase().includes(term)) {
            //     user.push(users)
            //   }
            // })
            // this.searchUsers = user
          }
        }, {
          key: "mobileMenu",
          value: function mobileMenu() {
            this.mobileToggle = !this.mobileToggle;
          }
        }, {
          key: "scrollToBottom",
          value: function scrollToBottom() {
            try {
              this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;
            } catch (err) {}
          }
        }, {
          key: "getRecentUser",
          value: function getRecentUser() {
            var _this45 = this;
            var _a;
            this.userDetails = this.localService.getJsonValue('authUser');
            this.http.getChat("getChatList?user_id=".concat((_a = this.userDetails) === null || _a === void 0 ? void 0 : _a.userId), true).subscribe(function (res) {
              var _a;
              _this45.messageLists = [];
              (_a = res === null || res === void 0 ? void 0 : res.data) === null || _a === void 0 ? void 0 : _a.map(function (v) {
                var _a, _b;
                if (v.from_id == ((_a = _this45.userDetails) === null || _a === void 0 ? void 0 : _a.userId) && v.to_id == ((_b = _this45.userDetails) === null || _b === void 0 ? void 0 : _b.userId)) {
                  return;
                } else {
                  _this45.messageLists.push(v);
                }
              });
              _this45.userChat(_this45.messageLists[0]);
            }), function (err) {
              console.log('====================================');
              console.log(err);
              console.log('====================================');
            };
          }
        }, {
          key: "deleteMessage",
          value: function deleteMessage(chat) {
            var _this46 = this;
            this.http.postChat("deleteMessage?id=".concat(chat === null || chat === void 0 ? void 0 : chat.id)).subscribe(function (res) {
              var _a;
              if (res === null || res === void 0 ? void 0 : res.hasOwnProperty('messages')) {
                (_a = res === null || res === void 0 ? void 0 : res.messages) === null || _a === void 0 ? void 0 : _a.map(function (v) {
                  if (v == "Record deleted successfully") {
                    _this46.toaster.success("Message deleted successfully");
                  }
                });
              }
              _this46.socket.emit('delete', {});
              //  this.chatText = ''
            }), function (err) {
              console.log('====================================');
              console.log(err);
              console.log('====================================');
            };
          }
        }, {
          key: "editMessage",
          value: function editMessage(chat) {
            this.editMsg = true;
            this.chatText = chat === null || chat === void 0 ? void 0 : chat.message;
            this.editId = chat === null || chat === void 0 ? void 0 : chat.id;
          }
        }, {
          key: "deleteChat",
          value: function deleteChat(toUser) {
            var _this47 = this;
            this.http.postChat("deleteChat?to_id=".concat(toUser === null || toUser === void 0 ? void 0 : toUser.to_id, "&from_id=").concat(toUser === null || toUser === void 0 ? void 0 : toUser.from_id)).subscribe(function (res) {
              var _a;
              console.log('====================================');
              console.log(res);
              console.log('====================================');
              if (res === null || res === void 0 ? void 0 : res.hasOwnProperty('messages')) {
                (_a = res === null || res === void 0 ? void 0 : res.messages) === null || _a === void 0 ? void 0 : _a.map(function (v) {
                  if (v == "Chat deleted successfully") {
                    _this47.toaster.success("Chat deleted successfully");
                  }
                });
              }
              _this47.socket.emit('deleteChat', {
                "delete": 'deleteChat'
              });
              //  this.chatText = ''
            }), function (err) {
              console.log('====================================');
              console.log(err);
              console.log('====================================');
            };
          }
        }, {
          key: "selectUser",
          value: function selectUser(event) {
            this.userChat(event);
          }
        }]);
        return _chatComponent;
      }();
      _chatComponent.ɵfac = function chatComponent_Factory(t) {
        return new (t || _chatComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_app_shared_services_firebase_auth_service__WEBPACK_IMPORTED_MODULE_2__.AuthService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](ngx_toastr__WEBPACK_IMPORTED_MODULE_6__.ToastrService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_app_shared_services_local_service__WEBPACK_IMPORTED_MODULE_3__.LocalService));
      };
      _chatComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
        type: _chatComponent,
        selectors: [["app-chat"]],
        viewQuery: function chatComponent_Query(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_c0, 5);
          }
          if (rf & 2) {
            var _t;
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.myScrollContainer = _t.first);
          }
        },
        decls: 27,
        vars: 10,
        consts: [[3, "title", "active_item"], [1, "container-fluid"], [1, "row"], [1, "col", "call-chat-sidebar", "col-sm-12"], [1, "card"], [1, "card-body", "chat-body"], [1, "chat-box"], [1, "chat-left-aside"], [1, "media"], [1, "ProfileInitial"], [1, "about"], [1, "name"], [1, "status"], ["id", "people-list", 1, "people-list"], [1, "search"], [1, "theme-form"], [1, "form-group"], ["placeholder", "search", 3, "ngModel", "ngModelChange", "keyup", "change"], [3, "value", 4, "ngFor", "ngForOf"], [1, "list"], ["class", "clearfix", 4, "ngFor", "ngForOf"], [4, "ngIf"], [1, "col", "call-chat-body"], ["class", "card", 4, "ngIf"], ["class", "noChat", 4, "ngIf"], [3, "value"], [1, "clearfix"], ["href", "javascript:void(0)", 1, "d-flex", "flex-end", 3, "click"], [1, "search-not-found", "chat-search", "text-center"], ["src", "assets/images/search-not-found.png", "alt", "", 1, "second-search"], [1, "card-body", "p-0"], [1, "row", "chat-box"], [1, "col", "pr-0", "chat-right-aside"], [1, "chat"], [1, "chat-header", "clearfix", "d-flex", "justify-content-between"], [1, "d-flex", "align-items-center", "mr-auto"], [1, "list-inline", "float-left", "float-sm-right", "chat-menu-icons"], ["ngbDropdown", "", 1, "list-inline-item"], ["id", "dropdownBasic3", "ngbDropdownToggle", ""], ["ngbDropdownMenu", ""], ["ngbDropdownItem", "", 3, "click"], [1, "chat-history", "chat-msg-box", "custom-scrollbar"], ["scrollMe", ""], [1, "messageBody", "d-flex", "flex-column"], ["class", "box", 4, "ngFor", "ngForOf"], [3, "ngSubmit"], ["chatForm", "ngForm"], [1, "chat-message", "clearfix"], [1, "col-xl-12", "d-flex"], [1, "smiley-box", "bg-primary"], [1, "picker"], ["src", "assets/images/smiley.png", "alt", "", 3, "click"], [1, "input-group", "text-box"], ["id", "message-to-send", "type", "text", "name", "message", "placeholder", "Type a message......", 1, "form-control", "input-txt-bx", 3, "ngModel", "ngModelChange"], [1, "input-group-append"], ["type", "button", 1, "btn", "btn-primary", 3, "click"], [1, "box"], ["class", "sendMessage", "ngbDropdown", "", 4, "ngIf"], ["class", "recivedMessage", "ngbDropdown", "", 4, "ngIf"], ["ngbDropdown", "", 1, "sendMessage"], ["id", "dropdownBasic1", "ngbDropdownToggle", ""], [1, "time"], ["ngbDropdown", "", 1, "recivedMessage"], ["id", "dropdownBasic2", "ngbDropdownToggle", ""], ["set", "apple", "useButton", "true", 3, "emojiClick"], [1, "noChat"]],
        template: function chatComponent_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "app-breadcrumb", 0);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 1);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div", 2);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "div", 3);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "div", 4);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "div", 5);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](6, "div", 6);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "div", 7);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](8, "div", 8);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](9, "h1", 9);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](10);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](11, "div", 10);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](12, "div", 11);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](13);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](14, "div", 12);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](15, "div", 13);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](16, "div", 14);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](17, "form", 15);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](18, "div", 16);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](19, "ng-select", 17);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngModelChange", function chatComponent_Template_ng_select_ngModelChange_19_listener($event) {
              return ctx.searchText = $event;
            })("keyup", function chatComponent_Template_ng_select_keyup_19_listener($event) {
              return ctx.searchTerm($event);
            })("change", function chatComponent_Template_ng_select_change_19_listener($event) {
              return ctx.selectUser($event);
            });
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](20, chatComponent_ng_option_20_Template, 2, 2, "ng-option", 18);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](21, "ul", 19);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](22, chatComponent_li_22_Template, 9, 3, "li", 20);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](23, chatComponent_ng_container_23_Template, 6, 0, "ng-container", 21);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](24, "div", 22);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](25, chatComponent_div_25_Template, 36, 7, "div", 23);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](26, chatComponent_div_26_Template, 3, 0, "div", 24);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
          }
          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("title", "Chats")("active_item", "Chats");
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](10);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.userDetails == null ? null : ctx.userDetails.name == null ? null : ctx.userDetails.name.toString().substring(0, 1));
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.userDetails == null ? null : ctx.userDetails.name);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](6);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngModel", ctx.searchText);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx.searchUsers);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx.messageLists);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", !(ctx.searchUsers == null ? null : ctx.searchUsers.length) && !(ctx.messageLists == null ? null : ctx.messageLists.length));
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.toUser);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
            _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", !ctx.toUser);
          }
        },
        directives: [_shared_components_breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_4__.BreadcrumbComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgForm, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_8__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.NgModel, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_8__["ɵr"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbDropdown, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbDropdownToggle, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbDropdownMenu, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__.NgbDropdownItem, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.DefaultValueAccessor, _ctrl_ngx_emoji_mart__WEBPACK_IMPORTED_MODULE_11__.PickerComponent],
        pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_9__.DatePipe],
        styles: [".ProfileInitial[_ngcontent-%COMP%] {\n  transform: none;\n}\n\n.hideChat[_ngcontent-%COMP%] {\n  height: 100% !important;\n  margin-bottom: 0 !important;\n}\n\n.sendMessage[_ngcontent-%COMP%] {\n  margin-left: auto;\n  width: 48%;\n  background-color: var(--theme-deafult);\n}\n\n.sendMessage[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\n  color: #fff;\n}\n\n.recivedMessage[_ngcontent-%COMP%] {\n  width: 48%;\n  background-color: #fff;\n  box-shadow: 0px 0px 14px -11px var(--theme-deafult);\n}\n\n.recivedMessage[_ngcontent-%COMP%], .sendMessage[_ngcontent-%COMP%] {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  border-radius: 15px;\n  padding: 15px;\n}\n\n.time[_ngcontent-%COMP%] {\n  width: -moz-fit-content;\n  width: fit-content;\n  margin-left: auto;\n}\n\n#dropdownBasic1[_ngcontent-%COMP%] {\n  color: #fff;\n}\n\n#dropdownBasic1[_ngcontent-%COMP%], #dropdownBasic2[_ngcontent-%COMP%] {\n  float: right;\n}\n\n#dropdownBasic1[_ngcontent-%COMP%], #dropdownBasic2[_ngcontent-%COMP%], #dropdownBasic3[_ngcontent-%COMP%] {\n  background: none;\n  border: none;\n}\n\n.noChat[_ngcontent-%COMP%] {\n  height: 95%;\n  border-radius: 15px;\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFBO0FBQ0o7O0FBQ0E7RUFDSSx1QkFBQTtFQUNBLDJCQUFBO0FBRUo7O0FBQUE7RUFDSSxpQkFBQTtFQUNBLFVBQUE7RUFDQSxzQ0FBQTtBQUdKOztBQUZJO0VBQ0ksV0FBQTtBQUlSOztBQURBO0VBQ0ksVUFBQTtFQUNBLHNCQUFBO0VBQ0EsbURBQUE7QUFJSjs7QUFEQTs7RUFFSSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0FBSUo7O0FBRkE7RUFDSSx1QkFBQTtFQUFBLGtCQUFBO0VBQ0EsaUJBQUE7QUFLSjs7QUFIQTtFQUNJLFdBQUE7QUFNSjs7QUFKQTs7RUFFSSxZQUFBO0FBT0o7O0FBTEE7OztFQUdJLGdCQUFBO0VBQ0EsWUFBQTtBQVFKOztBQU5BO0VBQ0ksV0FBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQVNKIiwiZmlsZSI6ImNoYXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuUHJvZmlsZUluaXRpYWx7XHJcbiAgICB0cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuLmhpZGVDaGF0e1xyXG4gICAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XHJcbn1cclxuLnNlbmRNZXNzYWdle1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICB3aWR0aDogNDglO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdGhlbWUtZGVhZnVsdCk7XHJcbiAgICBwe1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG59XHJcbi5yZWNpdmVkTWVzc2FnZXtcclxuICAgIHdpZHRoOiA0OCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAxNHB4IC0xMXB4IHZhcigtLXRoZW1lLWRlYWZ1bHQpO1xyXG4gICAgLy8gYm9yZGVyOiAxcHggc29saWQgIzAwMDtcclxufVxyXG4ucmVjaXZlZE1lc3NhZ2UsXHJcbi5zZW5kTWVzc2FnZXtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuLnRpbWV7XHJcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxufVxyXG4jZHJvcGRvd25CYXNpYzF7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG4jZHJvcGRvd25CYXNpYzEsXHJcbiNkcm9wZG93bkJhc2ljMntcclxuICAgIGZsb2F0OiByaWdodDtcclxufVxyXG4jZHJvcGRvd25CYXNpYzEsXHJcbiNkcm9wZG93bkJhc2ljMixcclxuI2Ryb3Bkb3duQmFzaWMze1xyXG4gICAgYmFja2dyb3VuZDpub25lO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcbi5ub0NoYXR7XHJcbiAgICBoZWlnaHQ6IDk1JTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufSJdfQ== */"]
      });

      /***/
    },

    /***/68470:
    /*!*****************************************************!*\
      !*** ./src/app/components/apps/chat/chat.module.ts ***!
      \*****************************************************/
    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"chatModule": function chatModule() {
          return (/* binding */_chatModule
          );
        }
        /* harmony export */
      });
      /* harmony import */
      var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__( /*! @angular/common */38583);
      /* harmony import */
      var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__( /*! @angular/forms */3679);
      /* harmony import */
      var _ctrl_ngx_emoji_mart__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__( /*! @ctrl/ngx-emoji-mart */46180);
      /* harmony import */
      var _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__( /*! @ctrl/ngx-emoji-mart/ngx-emoji */62558);
      /* harmony import */
      var _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__( /*! ../../../shared/shared.module */44466);
      /* harmony import */
      var _chat_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__( /*! ./chat.component */13762);
      /* harmony import */
      var _chat_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__( /*! ./chat-routing.module */72040);
      /* harmony import */
      var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__( /*! @ng-select/ng-select */86640);
      /* harmony import */
      var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__( /*! @angular/core */37716);
      var _chatModule = /*#__PURE__*/_createClass(function _chatModule() {
        _classCallCheck(this, _chatModule);
      });
      _chatModule.ɵfac = function chatModule_Factory(t) {
        return new (t || _chatModule)();
      };
      _chatModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineNgModule"]({
        type: _chatModule
      });
      _chatModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjector"]({
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _chat_routing_module__WEBPACK_IMPORTED_MODULE_2__.chatRoutingModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.ReactiveFormsModule, _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_6__.EmojiModule, _ctrl_ngx_emoji_mart__WEBPACK_IMPORTED_MODULE_7__.PickerModule, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_8__.NgSelectModule]]
      });
      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵsetNgModuleScope"](_chatModule, {
          declarations: [_chat_component__WEBPACK_IMPORTED_MODULE_1__.chatComponent],
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _chat_routing_module__WEBPACK_IMPORTED_MODULE_2__.chatRoutingModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_5__.ReactiveFormsModule, _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_6__.EmojiModule, _ctrl_ngx_emoji_mart__WEBPACK_IMPORTED_MODULE_7__.PickerModule, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_8__.NgSelectModule]
        });
      })();

      /***/
    },

    /***/88760:
    /*!*************************************************************!*\
      !*** ./node_modules/@socket.io/component-emitter/index.mjs ***!
      \*************************************************************/
    /***/
    function _(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export */
      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */"Emitter": function Emitter() {
          return (/* binding */_Emitter
          );
        }
        /* harmony export */
      });
      /**
       * Initialize a new `Emitter`.
       *
       * @api public
       */

      function _Emitter(obj) {
        if (obj) return mixin(obj);
      }

      /**
       * Mixin the emitter properties.
       *
       * @param {Object} obj
       * @return {Object}
       * @api private
       */

      function mixin(obj) {
        for (var key in _Emitter.prototype) {
          obj[key] = _Emitter.prototype[key];
        }
        return obj;
      }

      /**
       * Listen on the given `event` with `fn`.
       *
       * @param {String} event
       * @param {Function} fn
       * @return {Emitter}
       * @api public
       */

      _Emitter.prototype.on = _Emitter.prototype.addEventListener = function (event, fn) {
        this._callbacks = this._callbacks || {};
        (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);
        return this;
      };

      /**
       * Adds an `event` listener that will be invoked a single
       * time then automatically removed.
       *
       * @param {String} event
       * @param {Function} fn
       * @return {Emitter}
       * @api public
       */

      _Emitter.prototype.once = function (event, fn) {
        function on() {
          this.off(event, on);
          fn.apply(this, arguments);
        }
        on.fn = fn;
        this.on(event, on);
        return this;
      };

      /**
       * Remove the given callback for `event` or all
       * registered callbacks.
       *
       * @param {String} event
       * @param {Function} fn
       * @return {Emitter}
       * @api public
       */

      _Emitter.prototype.off = _Emitter.prototype.removeListener = _Emitter.prototype.removeAllListeners = _Emitter.prototype.removeEventListener = function (event, fn) {
        this._callbacks = this._callbacks || {};

        // all
        if (0 == arguments.length) {
          this._callbacks = {};
          return this;
        }

        // specific event
        var callbacks = this._callbacks['$' + event];
        if (!callbacks) return this;

        // remove all handlers
        if (1 == arguments.length) {
          delete this._callbacks['$' + event];
          return this;
        }

        // remove specific handler
        var cb;
        for (var i = 0; i < callbacks.length; i++) {
          cb = callbacks[i];
          if (cb === fn || cb.fn === fn) {
            callbacks.splice(i, 1);
            break;
          }
        }

        // Remove event specific arrays for event types that no
        // one is subscribed for to avoid memory leak.
        if (callbacks.length === 0) {
          delete this._callbacks['$' + event];
        }
        return this;
      };

      /**
       * Emit `event` with the given args.
       *
       * @param {String} event
       * @param {Mixed} ...
       * @return {Emitter}
       */

      _Emitter.prototype.emit = function (event) {
        this._callbacks = this._callbacks || {};
        var args = new Array(arguments.length - 1),
          callbacks = this._callbacks['$' + event];
        for (var i = 1; i < arguments.length; i++) {
          args[i - 1] = arguments[i];
        }
        if (callbacks) {
          callbacks = callbacks.slice(0);
          for (var i = 0, len = callbacks.length; i < len; ++i) {
            callbacks[i].apply(this, args);
          }
        }
        return this;
      };

      // alias used for reserved events (protected method)
      _Emitter.prototype.emitReserved = _Emitter.prototype.emit;

      /**
       * Return array of callbacks for `event`.
       *
       * @param {String} event
       * @return {Array}
       * @api public
       */

      _Emitter.prototype.listeners = function (event) {
        this._callbacks = this._callbacks || {};
        return this._callbacks['$' + event] || [];
      };

      /**
       * Check if this emitter has `event` handlers.
       *
       * @param {String} event
       * @return {Boolean}
       * @api public
       */

      _Emitter.prototype.hasListeners = function (event) {
        return !!this.listeners(event).length;
      };

      /***/
    }
  }]);
})();
//# sourceMappingURL=src_app_components_apps_chat_chat_module_ts-es5.js.map