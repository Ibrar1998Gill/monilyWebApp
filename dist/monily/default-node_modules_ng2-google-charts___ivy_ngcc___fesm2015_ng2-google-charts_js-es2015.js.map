{"version":3,"sources":["./node_modules/ng2-google-charts/__ivy_ngcc__/fesm2015/ng2-google-charts.js","webpack:///tslib?6a7f"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAmE;AACiG;;AAE5H;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE,+CAA+C,uDAAY;AAC3D,8CAA8C,uDAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,6CAA6C,sDAAe,CAAC,oDAAS,GAAG,sDAAe,6BAA6B;AACrM,kCAAkC,oEAAkB,EAAE,wDAAwD,sCAAsC,0DAAQ,CAAC,oDAAS,GAAG,0DAAQ,6BAA6B,EAAE,wDAAwD;AACxQ,4BAA4B,iDAAU,GAAG,8CAAO,IAAI,qDAAM,CAAC,oDAAS;AACpE,IAAI,8CAAO,IAAI,qDAAM,2BAA2B,8CAAO,IAAI,uDAAQ;AACnE,IAAI,iDAAU;AACd;;AAEA;AACA;AACA;AACA,oCAAoC,uDAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,CAAC,8DAAuB,GAAG;AACnG,2CAA2C,+DAAwB,EAAE,wCAAwC,uCAAuC,EAAE;AACtJ,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAY;AAC3C,sCAAsC,uDAAY;AAClD,8BAA8B,uDAAY;AAC1C,qCAAqC,uDAAY;AACjD,8BAA8B,uDAAY;AAC1C,qCAAqC,uDAAY;AACjD,6BAA6B,uDAAY;AACzC,oCAAoC,uDAAY;AAChD,4BAA4B,uDAAY;AACxC,mCAAmC,uDAAY;AAC/C,+BAA+B,uDAAY;AAC3C,sCAAsC,uDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,kCAAkC,yBAAyB;AAC3D,SAAS;AACT;AACA,yCAAyC,oCAAoC;AAC7E;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,6BAA6B;AAChN,0CAA0C,+DAAwB,EAAE,qEAAqE,eAAe,YAAY,yYAAyY,gFAAgF;AAC7nB,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B,iDAAU;AACV,IAAI,oDAAK;AACT,IAAI,iDAAU;AACd;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,iDAAU;AACV,IAAI,qDAAM;AACV,IAAI,iDAAU,gBAAgB,uDAAY;AAC1C;AACA,uBAAuB,iDAAU,GAAG,iDAAU,uBAAuB,qDAAU;AAC/E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,gDAAS;AACxB,2CAA2C,yBAAyB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,kDAAkD,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,6BAA6B;AAC9O,oDAAoD,+DAAwB,EAAE,0FAA0F,eAAe,0FAA0F;AACjR,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B,iDAAU;AACV,IAAI,oDAAK;AACT,IAAI,iDAAU;AACd;AACA,iCAAiC,iDAAU,GAAG,iDAAU,uBAAuB,qDAAU;AACzF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA;AACA,2CAA2C,yBAAyB;AACpE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sFAAsF,gDAAgD,+DAAwB,CAAC,qDAAiB,GAAG,+DAAwB,6BAA6B;AACxO,kDAAkD,+DAAwB,EAAE,sFAAsF,eAAe,wFAAwF;AACzQ,QAAQ,uDAAgB;AACxB,KAAK,EAAE,oBAAoB;AAC3B,iDAAU;AACV,IAAI,oDAAK;AACT,IAAI,iDAAU;AACd;AACA,+BAA+B,iDAAU,GAAG,iDAAU,uBAAuB,qDAAU;AACvF;AACA;;AAEA;AACA;AACA,wEAAwE,2CAA2C;AACnH,2CAA2C,8DAAuB,EAAE,8BAA8B;AAClG,2CAA2C,8DAAuB,EAAE;AACpE;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA;AACA,2CAA2C,4BAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,gDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,gEAAgE,qCAAqC,sDAAe,6BAA6B;AACjJ,0BAA0B,oEA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","file":"default-node_modules_ng2-google-charts___ivy_ngcc___fesm2015_ng2-google-charts_js-es2015.js","sourcesContent":["import { __awaiter, __decorate, __param, __metadata } from 'tslib';\nimport { EventEmitter, ɵɵdefineInjectable, ɵɵinject, LOCALE_ID, Injectable, Inject, Optional, Output, ElementRef, Input, Component, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nlet GoogleChartsLoaderService = class GoogleChartsLoaderService {\n    constructor(localeId, googleChartsSettings) {\n        this.googleChartsSettings = googleChartsSettings;\n        this.loadedPackages = [];\n        this.loaded = false;\n        const defaultSettings = {\n            googleChartsVersion: '47',\n            language: localeId,\n        };\n        this.googleChartsSettings = Object.assign(Object.assign({}, defaultSettings), this.googleChartsSettings);\n        this.googleScriptLoadingNotifier = new EventEmitter();\n        this.googleChartLoadingNotifier = new EventEmitter();\n        this.googleScriptIsLoading = false;\n        this.googleChartIsLoading = false;\n        this.loadGoogleChartsScriptPromise = new Promise((resolve, reject) => {\n            if (typeof google !== 'undefined' && google.charts) {\n                resolve();\n            }\n            else if (!this.googleScriptIsLoading) {\n                this.googleScriptIsLoading = true;\n                const script = document.createElement('script');\n                script.type = 'text/javascript';\n                script.src = 'https://www.gstatic.com/charts/loader.js';\n                script.async = true;\n                script.defer = true;\n                script.onload = () => {\n                    this.googleScriptIsLoading = false;\n                    this.googleScriptLoadingNotifier.emit(true);\n                    resolve();\n                };\n                script.onerror = () => {\n                    this.googleScriptIsLoading = false;\n                    this.googleScriptLoadingNotifier.emit(false);\n                    reject();\n                };\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n            else {\n                this.googleScriptLoadingNotifier.subscribe((loaded) => {\n                    if (loaded) {\n                        resolve();\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            }\n        });\n    }\n    load(settings) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.loadGoogleChartsScriptPromise;\n            yield new Promise((resolve) => {\n                if (this.googleChartIsLoading) {\n                    this.googleChartLoadingNotifier.subscribe(() => {\n                        this.doLoad(resolve, settings);\n                    });\n                    return;\n                }\n                this.doLoad(resolve, settings);\n            });\n        });\n    }\n    doLoad(resolve, settings) {\n        settings = Object.assign(Object.assign({}, this.googleChartsSettings), settings);\n        if (!settings.packages && this.loaded) {\n            resolve();\n            return;\n        }\n        if (settings.packages) {\n            let pkgs = settings.packages.filter(p => this.loadedPackages.indexOf(p) < 0);\n            if (pkgs.length == 0 && this.loaded) {\n                resolve();\n                return;\n            }\n            settings.packages = pkgs;\n        }\n        const _settings = settings;\n        _settings.callback = () => {\n            this.googleChartIsLoading = false;\n            this.loadedPackages = this.loadedPackages.concat(_settings.packages);\n            this.loaded = true;\n            this.googleChartLoadingNotifier.emit();\n            resolve();\n        };\n        this.googleChartIsLoading = true;\n        google.charts.load(settings.googleChartsVersion, _settings);\n    }\n};\nGoogleChartsLoaderService.ɵfac = function GoogleChartsLoaderService_Factory(t) { return new (t || GoogleChartsLoaderService)(ɵngcc0.ɵɵinject(LOCALE_ID), ɵngcc0.ɵɵinject('googleChartsSettings', 8)); };\nGoogleChartsLoaderService.ɵprov = ɵɵdefineInjectable({ factory: function GoogleChartsLoaderService_Factory() { return new GoogleChartsLoaderService(ɵɵinject(LOCALE_ID), ɵɵinject(\"googleChartsSettings\", 8)); }, token: GoogleChartsLoaderService, providedIn: \"root\" });\nGoogleChartsLoaderService = __decorate([ __param(0, Inject(LOCALE_ID)),\n    __param(1, Inject('googleChartsSettings')), __param(1, Optional()),\n    __metadata(\"design:paramtypes\", [String, Object])\n], GoogleChartsLoaderService);\n\nclass GoogleChartsDataTable {\n    constructor(opt) {\n        this.opt = opt;\n        this.dataTableChanged = new EventEmitter();\n        if (opt) {\n            this._setDataTable(opt.dataTable, opt.firstRowIsData);\n        }\n    }\n    send() {\n        if (this.query === undefined) {\n            return;\n        }\n        this.query.send((queryResponse) => {\n            this.setDataTable(queryResponse.getDataTable());\n            if (this.opt.queryCallback) {\n                this.opt.queryCallback(queryResponse);\n            }\n        });\n    }\n    init(opt) {\n        if (opt) {\n            this.opt = opt;\n        }\n        if (this.tid !== undefined) {\n            // doesn't work, see https://github.com/google/google-visualization-issues/issues/2381\n            // this.query.abort();\n            window.clearInterval(this.tid);\n            this.tid = undefined;\n        }\n        if (this.opt.dataSourceUrl) {\n            this.query = new google.visualization.Query(this.opt.dataSourceUrl);\n            if (this.opt.query) {\n                this.query.setQuery(this.opt.query);\n            }\n            if (this.opt.timeout !== undefined) {\n                this.query.setTimeout(this.opt.timeout);\n            }\n            if (this.opt.refreshInterval) {\n                // this.query.setRefreshInterval(this.opt.refreshInterval);\n                this.tid = window.setInterval(() => {\n                    this.send();\n                }, this.opt.refreshInterval * 1000);\n            }\n            this.send();\n        }\n        else {\n            this.setDataTable(this.opt.dataTable);\n        }\n    }\n    /**\n     * @returns Underlying google.visualization.DataTable\n     */\n    getDataTable() {\n        return this.dataTable;\n    }\n    setDataTable(dt, firstRowIsData) {\n        if (firstRowIsData === undefined) {\n            firstRowIsData = this.opt.firstRowIsData;\n        }\n        this._setDataTable(dt, firstRowIsData);\n        this.dataTableChanged.emit(this.dataTable);\n    }\n    _setDataTable(dt, firstRowIsData) {\n        if (Array.isArray(dt)) {\n            dt = google.visualization.arrayToDataTable(dt, firstRowIsData);\n        }\n        this.dataTable = dt;\n        this.reformat();\n    }\n    /**\n     * Applies formatters to data columns, if defined\n     */\n    reformat() {\n        const dt = this.dataTable;\n        if (dt === undefined) {\n            return;\n        }\n        if (this.opt.formatters === undefined) {\n            return;\n        }\n        for (const formatterConfig of this.opt.formatters) {\n            let formatter;\n            if (formatterConfig.type === 'PatternFormat') {\n                const fmtOptions = formatterConfig.options;\n                formatter = new google.visualization.PatternFormat(fmtOptions.pattern);\n                formatter.format(dt, formatterConfig.columns, fmtOptions.dstColumnIndex);\n                continue;\n            }\n            const formatterConstructor = google.visualization[formatterConfig.type];\n            const formatterOptions = formatterConfig.options;\n            formatter = new formatterConstructor(formatterOptions);\n            if (formatterConfig.type === 'ColorFormat' && formatterOptions) {\n                const fmtOptions = formatterOptions;\n                for (const range of fmtOptions.ranges) {\n                    if (typeof (range.fromBgColor) !== 'undefined'\n                        && typeof (range.toBgColor) !== 'undefined') {\n                        formatter.addGradientRange(range.from, range.to, range.color, range.fromBgColor, range.toBgColor);\n                    }\n                    else {\n                        formatter.addRange(range.from, range.to, range.color, range.bgcolor);\n                    }\n                }\n            }\n            for (const col of formatterConfig.columns) {\n                formatter.format(dt, col);\n            }\n        }\n    }\n}\nGoogleChartsDataTable.ɵfac = function GoogleChartsDataTable_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nGoogleChartsDataTable.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: GoogleChartsDataTable, outputs: { dataTableChanged: \"dataTableChanged\" } });\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartsDataTable.prototype, \"dataTableChanged\", void 0);\n\nclass ChartHTMLTooltip {\n    constructor(el) {\n        this.el = el;\n    }\n    setPosition(x, y) {\n        this.el.nativeElement.style.left = x + ChartHTMLTooltip.PIXELS;\n        this.el.nativeElement.style.top = y + ChartHTMLTooltip.PIXELS;\n    }\n    getDOMElement() {\n        return this.el;\n    }\n}\nChartHTMLTooltip.PIXELS = 'px';\n\nvar GoogleChartType;\n(function (GoogleChartType) {\n    GoogleChartType[\"AnnotationChart\"] = \"AnnotationChart\";\n    GoogleChartType[\"AreaChart\"] = \"AreaChart\";\n    GoogleChartType[\"BarChart\"] = \"BarChart\";\n    GoogleChartType[\"BubbleChart\"] = \"BubbleChart\";\n    GoogleChartType[\"Calendar\"] = \"Calendar\";\n    GoogleChartType[\"CandlestickChart\"] = \"CandlestickChart\";\n    GoogleChartType[\"ColumnChart\"] = \"ColumnChart\";\n    GoogleChartType[\"ComboChart\"] = \"ComboChart\";\n    GoogleChartType[\"Gantt\"] = \"Gantt\";\n    GoogleChartType[\"Gauge\"] = \"Gauge\";\n    GoogleChartType[\"GeoChart\"] = \"GeoChart\";\n    GoogleChartType[\"Histogram\"] = \"Histogram\";\n    GoogleChartType[\"LineChart\"] = \"LineChart\";\n    GoogleChartType[\"Map\"] = \"Map\";\n    GoogleChartType[\"OrgChart\"] = \"OrgChart\";\n    GoogleChartType[\"PieChart\"] = \"PieChart\";\n    GoogleChartType[\"Sankey\"] = \"Sankey\";\n    GoogleChartType[\"ScatterChart\"] = \"ScatterChart\";\n    GoogleChartType[\"SteppedAreaChart\"] = \"SteppedAreaChart\";\n    GoogleChartType[\"Table\"] = \"Table\";\n    GoogleChartType[\"Timeline\"] = \"Timeline\";\n    GoogleChartType[\"TreeMap\"] = \"TreeMap\";\n    GoogleChartType[\"WordTree\"] = \"WordTree\";\n})(GoogleChartType || (GoogleChartType = {}));\nlet GoogleChartComponent = class GoogleChartComponent {\n    constructor(el, loaderService) {\n        this.el = el;\n        this.loaderService = loaderService;\n        this.selectListener = () => {\n            const event = {\n                message: 'select',\n                row: null,\n                column: null,\n                selectedRowValues: [],\n                selectedRowFormattedValues: [],\n                columnLabel: ''\n            };\n            const s = this.wrapper.visualization.getSelection();\n            const gs = s[s.length - 1];\n            if (!gs) {\n                event.message = 'deselect';\n                return event;\n            }\n            const selection = gs;\n            if (gs.row != null) {\n                event.row = selection.row;\n                const selectedRowValues = [];\n                const selectedRowFormattedValues = [];\n                const dataTable = this.wrapper.getDataTable();\n                const numberOfColumns = dataTable.getNumberOfColumns();\n                for (let i = 0; i < numberOfColumns; i++) {\n                    selectedRowValues.push(dataTable.getValue(selection.row, i));\n                    selectedRowFormattedValues.push(dataTable.getFormattedValue(selection.row, i));\n                }\n                event.selectedRowValues = selectedRowValues;\n                event.selectedRowFormattedValues = selectedRowFormattedValues;\n            }\n            if (selection.column != null) {\n                event.column = selection.column;\n                event.columnLabel = this.getColumnLabelAtPosition(selection);\n            }\n            if (gs.name) {\n                event.columnLabel = gs.name;\n            }\n            return event;\n        };\n        this.chartSelect = new EventEmitter();\n        this.chartSelectOneTime = new EventEmitter();\n        this.chartReady = new EventEmitter();\n        this.chartReadyOneTime = new EventEmitter();\n        this.chartError = new EventEmitter();\n        this.chartErrorOneTime = new EventEmitter();\n        this.mouseOver = new EventEmitter();\n        this.mouseOverOneTime = new EventEmitter();\n        this.mouseOut = new EventEmitter();\n        this.mouseOutOneTime = new EventEmitter();\n        this.regionClick = new EventEmitter();\n        this.regionClickOneTime = new EventEmitter();\n    }\n    ngOnInit() {\n        this.HTMLel = this.el.nativeElement.querySelector('div');\n        if (Object.isExtensible(this.data)) {\n            this.data.component = this;\n        }\n        this.options = this.data.options;\n        this.init().then(() => {\n            this.draw();\n        });\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.loaderService.load();\n            this.recreateWrapper();\n        });\n    }\n    recreateWrapper() {\n        if (this.wrapper === undefined || this.wrapper.getChartType() !== this.data.chartType) {\n            this.dataTable = new GoogleChartsDataTable(this.data);\n            this.dataTable.dataTableChanged.subscribe((dt) => {\n                this._draw();\n            });\n            // see dataTable in https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart\n            let temp = this.data;\n            if (this.data.firstRowIsData) {\n                temp = Object.assign(temp, this.data);\n                temp.dataTable = this.dataTable.getDataTable();\n            }\n            this.wrapper = new google.visualization.ChartWrapper(temp);\n            this.registerChartWrapperEvents();\n            /* Calling draw even without data is the only way to pass the HTMl element\n               when using the chart in a dashboard. Don't do this in all other cases:\n               it breaks formatters with remote data source, hence the conditional. */\n            if (temp.dataTable === undefined && temp.dataSourceUrl === undefined) {\n                try {\n                    this.wrapper.draw(this.HTMLel);\n                }\n                catch (err) { }\n            }\n        }\n    }\n    _draw() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dt = this.dataTable.getDataTable();\n            if (dt === undefined) {\n                return;\n            }\n            this.convertOptions();\n            this.recreateWrapper();\n            this.wrapper.setOptions(this.options);\n            this.wrapper.setDataTable(dt);\n            this.wrapper.draw(this.HTMLel);\n        });\n    }\n    getDataTable() {\n        return this.dataTable;\n    }\n    draw(value) {\n        if (value === undefined) {\n            value = this.data;\n        }\n        this.options = value.options;\n        this.dataTable.init(value);\n    }\n    getSelectorBySeriesType(seriesType) {\n        const selectors = {\n            bars: 'bar#%s#%r',\n            haxis: 'hAxis#0#label',\n            line: 'point#%s#%r',\n            legend: 'legendentry#%s',\n            area: 'point#%s#%r'\n        };\n        const selector = selectors[seriesType];\n        return selector;\n    }\n    /**\n     * Given a column number, counts how many\n     * columns have rol==\"data\". Those are mapped\n     * one-to-one to the series array. When rol is not defined\n     * a column of type number means a series column.\n     * @param column to inspect\n     */\n    getSeriesByColumn(column) {\n        let series = 0;\n        const dataTable = this.wrapper.getDataTable();\n        for (let i = column - 1; i >= 0; i--) {\n            const role = dataTable.getColumnRole(i);\n            const type = dataTable.getColumnType(i);\n            if (role === 'data' || type === 'number') {\n                series++;\n            }\n        }\n        return series;\n    }\n    getBoundingBoxForItem(item) {\n        let boundingBox = { top: 0, left: 0, width: 0, height: 0 };\n        if (this.cli) {\n            const column = item.column;\n            const series = this.getSeriesByColumn(column);\n            const row = item.row;\n            let seriesType = this.options.seriesType;\n            if (this.options.series && this.options.series[series] && this.options.series[series].type) {\n                seriesType = this.options.series[series].type;\n            }\n            if (seriesType) {\n                let selector = this.getSelectorBySeriesType(seriesType);\n                if (selector) {\n                    selector = selector.replace('%s', series + '').replace('%c', column + '').replace('%r', row + '');\n                    const box = this.cli.getBoundingBox(selector);\n                    if (box) {\n                        boundingBox = box;\n                    }\n                }\n            }\n        }\n        return boundingBox;\n    }\n    getValueAtPosition(position) {\n        if (position.row == null) {\n            return null;\n        }\n        const dataTable = this.wrapper.getDataTable();\n        const value = dataTable.getValue(position.row, position.column);\n        return value;\n    }\n    getColumnTypeAtPosition(position) {\n        const dataTable = this.wrapper.getDataTable();\n        const type = dataTable.getColumnType(position.column) || '';\n        return type;\n    }\n    getColumnLabelAtPosition(position) {\n        const dataTable = this.wrapper.getDataTable();\n        const type = dataTable.getColumnLabel(position.column) || '';\n        return type;\n    }\n    getHTMLTooltip() {\n        const tooltipER = new ElementRef(this.el.nativeElement.querySelector('.google-visualization-tooltip'));\n        return new ChartHTMLTooltip(tooltipER);\n    }\n    parseMouseEvent(item) {\n        const chartType = this.wrapper.getChartType();\n        let eventColumn = item.column;\n        if (eventColumn == null) {\n            switch (chartType) {\n                case 'Timeline':\n                    eventColumn = this.wrapper.getDataTable().getNumberOfColumns() === 3 ? 0 : 1;\n                    break;\n                default:\n                    eventColumn = 0;\n            }\n        }\n        const eventRow = item.row;\n        const myItem = {\n            row: eventRow,\n            column: eventColumn\n        };\n        const event = {\n            position: item,\n            boundingBox: this.getBoundingBoxForItem(myItem),\n            value: this.getValueAtPosition(myItem),\n            columnType: this.getColumnTypeAtPosition(myItem),\n            columnLabel: this.getColumnLabelAtPosition(myItem)\n        };\n        return event;\n    }\n    registerChartEvents() {\n        const chart = this.wrapper.getChart();\n        this.cli = chart.getChartLayoutInterface ? chart.getChartLayoutInterface() : null;\n        if (this.mouseOver.observers.length > 0) {\n            google.visualization.events.addListener(chart, 'onmouseover', (item) => {\n                const event = this.parseMouseEvent(item);\n                event.tooltip = this.getHTMLTooltip();\n                this.mouseOver.emit(event);\n            });\n        }\n        if (this.mouseOverOneTime.observers.length > 0) {\n            google.visualization.events.addOneTimeListener(chart, 'onmouseover', (item) => {\n                const event = this.parseMouseEvent(item);\n                event.tooltip = this.getHTMLTooltip();\n                this.mouseOverOneTime.emit(event);\n            });\n        }\n        if (this.mouseOut.observers.length > 0) {\n            google.visualization.events.addListener(chart, 'onmouseout', (item) => {\n                const event = this.parseMouseEvent(item);\n                this.mouseOut.emit(event);\n            });\n        }\n        if (this.mouseOutOneTime.observers.length > 0) {\n            google.visualization.events.addOneTimeListener(chart, 'onmouseout', (item) => {\n                const event = this.parseMouseEvent(item);\n                this.mouseOutOneTime.emit(event);\n            });\n        }\n        if (this.data.chartType === 'GeoChart') {\n            if (this.regionClick.observers.length > 0) {\n                google.visualization.events.addListener(chart, 'regionClick', (item) => {\n                    this.regionClick.emit(item);\n                });\n            }\n            if (this.regionClickOneTime.observers.length > 0) {\n                google.visualization.events.addOneTimeListener(chart, 'regionClick', (item) => {\n                    this.regionClick.emit(item);\n                });\n            }\n        }\n    }\n    registerChartWrapperEvents() {\n        google.visualization.events.addListener(this.wrapper, 'ready', () => {\n            this.chartReady.emit({ message: 'Chart ready' });\n        });\n        google.visualization.events.addOneTimeListener(this.wrapper, 'ready', () => {\n            this.chartReadyOneTime.emit({ message: 'Chart ready (one time)' });\n            this.registerChartEvents();\n        });\n        google.visualization.events.addListener(this.wrapper, 'error', (error) => {\n            this.chartError.emit(error);\n        });\n        google.visualization.events.addOneTimeListener(this.wrapper, 'error', (error) => {\n            this.chartErrorOneTime.emit(error);\n        });\n        this.addListener(this.wrapper, 'select', this.selectListener, this.chartSelect);\n        this.addOneTimeListener(this.wrapper, 'select', this.selectListener, this.chartSelectOneTime);\n    }\n    addListener(source, eventType, listenerFn, evEmitter) {\n        google.visualization.events.addListener(source, eventType, () => {\n            evEmitter.emit(listenerFn());\n        });\n    }\n    addOneTimeListener(source, eventType, listenerFn, evEmitter) {\n        google.visualization.events.addOneTimeListener(source, eventType, () => {\n            evEmitter.emit(listenerFn());\n        });\n    }\n    convertOptions() {\n        try {\n            this.options = google.charts[this.data.chartType].convertOptions(this.options);\n        }\n        catch (error) {\n            return;\n        }\n    }\n};\nGoogleChartComponent.ɵfac = function GoogleChartComponent_Factory(t) { return new (t || GoogleChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleChartsLoaderService)); };\nGoogleChartComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: GoogleChartComponent, selectors: [[\"google-chart\"]], inputs: { data: \"data\" }, outputs: { chartSelect: \"chartSelect\", chartSelectOneTime: \"chartSelectOneTime\", chartReady: \"chartReady\", chartReadyOneTime: \"chartReadyOneTime\", chartError: \"chartError\", chartErrorOneTime: \"chartErrorOneTime\", mouseOver: \"mouseOver\", mouseOverOneTime: \"mouseOverOneTime\", mouseOut: \"mouseOut\", mouseOutOneTime: \"mouseOutOneTime\", regionClick: \"regionClick\", regionClickOneTime: \"regionClickOneTime\" }, decls: 1, vars: 0, template: function GoogleChartComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\");\n    } }, encapsulation: 2 });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GoogleChartComponent.prototype, \"data\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartReady\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartReadyOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartError\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartErrorOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartSelect\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"chartSelectOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"mouseOverOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"mouseOutOneTime\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"regionClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], GoogleChartComponent.prototype, \"regionClickOneTime\", void 0);\nGoogleChartComponent = __decorate([ __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleChartsLoaderService])\n], GoogleChartComponent);\n\nlet GoogleChartsDashboardComponent = class GoogleChartsDashboardComponent {\n    constructor(el, loaderService) {\n        this.el = el;\n        this.loaderService = loaderService;\n        this.el = el;\n        this.loaderService = loaderService;\n    }\n    ngOnInit() {\n        this.data.component = this;\n        this.init().then(() => {\n            if (!this.dataTable) {\n                this.dataTable = new GoogleChartsDataTable(this.data);\n                this.dataTable.dataTableChanged.subscribe((dt) => {\n                    this._draw();\n                });\n            }\n            this.draw();\n        });\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.loaderService.load({ packages: ['controls'] });\n            this.dashboard = new google.visualization.Dashboard(this.el.nativeElement.querySelector('div'));\n            for (const b of this.data.bind) {\n                let controls = b[0];\n                let charts = b[1];\n                if (!(controls instanceof Array)) {\n                    controls = [controls];\n                }\n                if (!(charts instanceof Array)) {\n                    charts = [charts];\n                }\n                for (const c of controls) {\n                    yield c.component.ensureInit();\n                }\n                for (const c of charts) {\n                    yield c.component.init();\n                    const data = c.component.data;\n                    if (data.dataTable !== undefined || data.dataSourceUrl !== undefined) {\n                        throw Error('dataTable and dataSourceUrl cannot be specified when ' +\n                            'chart is drawn in a Dashboard');\n                    }\n                }\n                this.dashboard.bind(controls.map(x => x.component.wrapper), charts.map(x => x.component.wrapper));\n            }\n        });\n    }\n    draw(value) {\n        this.dataTable.init(value);\n    }\n    _draw() {\n        this.dashboard.draw(this.dataTable.getDataTable());\n    }\n};\nGoogleChartsDashboardComponent.ɵfac = function GoogleChartsDashboardComponent_Factory(t) { return new (t || GoogleChartsDashboardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleChartsLoaderService)); };\nGoogleChartsDashboardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: GoogleChartsDashboardComponent, selectors: [[\"google-charts-dashboard\"]], inputs: { data: \"data\" }, decls: 1, vars: 0, template: function GoogleChartsDashboardComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\");\n    } }, encapsulation: 2 });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GoogleChartsDashboardComponent.prototype, \"data\", void 0);\nGoogleChartsDashboardComponent = __decorate([ __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleChartsLoaderService])\n], GoogleChartsDashboardComponent);\n\nlet GoogleChartsControlComponent = class GoogleChartsControlComponent {\n    constructor(el, loaderService) {\n        this.el = el;\n        this.loaderService = loaderService;\n        this.el = el;\n        this.loaderService = loaderService;\n    }\n    ngOnInit() {\n        this.data.component = this;\n    }\n    ensureInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.wrapper) {\n                return;\n            }\n            yield this.loaderService.load({ packages: ['controls'] });\n            let opt;\n            opt = Object.create(this.data);\n            opt.containerId = this.el.nativeElement.querySelector('div');\n            this.wrapper = new google.visualization.ControlWrapper(opt);\n        });\n    }\n};\nGoogleChartsControlComponent.ɵfac = function GoogleChartsControlComponent_Factory(t) { return new (t || GoogleChartsControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleChartsLoaderService)); };\nGoogleChartsControlComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: GoogleChartsControlComponent, selectors: [[\"google-charts-control\"]], inputs: { data: \"data\" }, decls: 1, vars: 0, template: function GoogleChartsControlComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\");\n    } }, encapsulation: 2 });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], GoogleChartsControlComponent.prototype, \"data\", void 0);\nGoogleChartsControlComponent = __decorate([ __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleChartsLoaderService])\n], GoogleChartsControlComponent);\n\nlet Ng2GoogleChartsModule = class Ng2GoogleChartsModule {\n};\nNg2GoogleChartsModule.ɵfac = function Ng2GoogleChartsModule_Factory(t) { return new (t || Ng2GoogleChartsModule)(); };\nNg2GoogleChartsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng2GoogleChartsModule });\nNg2GoogleChartsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [\n        GoogleChartsLoaderService\n    ] });\n\nfunction isComponent(chart) {\n    return chart.wrapper !== undefined;\n}\nlet GoogleChartEditor = class GoogleChartEditor {\n    constructor(loaderService) {\n        this.loaderService = loaderService;\n    }\n    createEditor() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.chartEditor !== undefined) {\n                return;\n            }\n            yield this.loaderService.load({ packages: ['charteditor'] });\n            this.chartEditor = new google.visualization.ChartEditor();\n            google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n                const wrapper = this.chartEditor.getChartWrapper();\n                this.comp.wrapper = wrapper;\n                this.comp.data.chartType = wrapper.getChartType();\n                if (this.comp.data.options !== undefined || Object.isExtensible(this.comp.data)) {\n                    this.comp.data.options = wrapper.getOptions();\n                }\n                this.comp.wrapper.draw();\n            });\n        });\n    }\n    openDialog(chart, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.createEditor();\n            return new Promise((resolve, reject) => {\n                this.comp = isComponent(chart) ? chart : chart.component;\n                this.chartEditor.openDialog(this.comp.wrapper, options);\n                google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n                    resolve(this.comp.wrapper);\n                });\n                google.visualization.events.addListener(this.chartEditor, 'cancel', () => {\n                    reject();\n                });\n            });\n        });\n    }\n};\nGoogleChartEditor.ɵfac = function GoogleChartEditor_Factory(t) { return new (t || GoogleChartEditor)(ɵngcc0.ɵɵinject(GoogleChartsLoaderService)); };\nGoogleChartEditor.ɵprov = ɵɵdefineInjectable({ factory: function GoogleChartEditor_Factory() { return new GoogleChartEditor(ɵɵinject(GoogleChartsLoaderService)); }, token: GoogleChartEditor, providedIn: \"root\" });\nGoogleChartEditor = __decorate([ __metadata(\"design:paramtypes\", [GoogleChartsLoaderService])\n], GoogleChartEditor);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleChartsLoaderService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: ['googleChartsSettings']\n            }, {\n                type: Optional\n            }] }]; }, null); })();\n\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleChartComponent, [{\n        type: Component,\n        args: [{\n                selector: 'google-chart',\n                template: '<div></div>'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleChartsLoaderService }]; }, { chartSelect: [{\n            type: Output\n        }], chartSelectOneTime: [{\n            type: Output\n        }], chartReady: [{\n            type: Output\n        }], chartReadyOneTime: [{\n            type: Output\n        }], chartError: [{\n            type: Output\n        }], chartErrorOneTime: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseOverOneTime: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOutOneTime: [{\n            type: Output\n        }], regionClick: [{\n            type: Output\n        }], regionClickOneTime: [{\n            type: Output\n        }], data: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleChartsDashboardComponent, [{\n        type: Component,\n        args: [{\n                selector: 'google-charts-dashboard',\n                template: '<div></div>'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleChartsLoaderService }]; }, { data: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleChartsControlComponent, [{\n        type: Component,\n        args: [{\n                selector: 'google-charts-control',\n                template: '<div></div>'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleChartsLoaderService }]; }, { data: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2GoogleChartsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    GoogleChartComponent,\n                    GoogleChartsDashboardComponent,\n                    GoogleChartsControlComponent,\n                ],\n                providers: [\n                    GoogleChartsLoaderService\n                ],\n                exports: [\n                    GoogleChartComponent,\n                    GoogleChartsDashboardComponent,\n                    GoogleChartsControlComponent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2GoogleChartsModule, { declarations: [GoogleChartComponent, GoogleChartsDashboardComponent, GoogleChartsControlComponent], exports: [GoogleChartComponent, GoogleChartsDashboardComponent, GoogleChartsControlComponent] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GoogleChartEditor, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: GoogleChartsLoaderService }]; }, null); })();\n\n/*\n * Public API Surface of ng2-google-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartHTMLTooltip, GoogleChartComponent, GoogleChartEditor, GoogleChartType, GoogleChartsControlComponent, GoogleChartsDashboardComponent, GoogleChartsLoaderService, Ng2GoogleChartsModule };\n\n//# sourceMappingURL=ng2-google-charts.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n"],"sourceRoot":"webpack:///"}