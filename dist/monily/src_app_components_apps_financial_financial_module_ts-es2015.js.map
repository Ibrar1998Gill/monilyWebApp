{"version":3,"sources":["./src/app/components/apps/financial/financial-routing.module.ts","./src/app/components/apps/financial/financial.component.html","./src/app/components/apps/financial/financial.component.ts","./src/app/components/apps/financial/financial.module.ts"],"names":[],"mappings":"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","file":"src_app_components_apps_financial_financial_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { financialComponent } from './financial.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:financialComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class financialRoutingModule { }\r\n","<app-breadcrumb [title]=\"'Financial Status'\" [active_item]=\"'Financial Status'\"></app-breadcrumb>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body default-accordion\">\r\n          <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"static-1\">\r\n            <ngb-panel title=\"Profit And Loss\" id=\"static-1\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12 mb-3\">\r\n                    <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"expense-1\">\r\n                      <ngb-panel title=\"Income\" id=\"expense-1\" *ngIf=\"(salesHead && salesValue)\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ salesHead ? salesHead : \"Sales\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                salesValue\r\n                                ? (salesValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Expenses\" id=\"expense-2\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                              *ngFor=\"let expense of expenses\">\r\n                              <p>{{ expense.expenseHead ? expense.expenseHead : \"N/A\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                expense.expenseValue\r\n                                ? (expense.expenseValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Summary\" id=\"expense-3\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalIncomeHead ? totalIncomeHead : \"Total Income\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalIncomeValue\r\n                                ? (totalIncomeValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalExpensesHead ? totalExpensesHead : \"Total Expenses\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalExpensesValue\r\n                                ? (totalExpensesValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalNetOperHead ? totalNetOperHead : \"Total Net Operating\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalNetOperValue\r\n                                ? (totalNetOperValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalNetIncHead ? totalNetIncHead : \"Total Net Incoming\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalNetIncValue\r\n                                ? (totalNetIncValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                    </ngb-accordion>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"Balancesheet\" id=\"static-2\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12 mb-3\">\r\n                    <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"balance-1\">\r\n                      <ngb-panel title=\"Bank\" id=\"balance-1\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                              *ngFor=\"let bank of bank\">\r\n                              <p>{{ bank.ColData[0].value ? bank.ColData[0].value : \"N/A\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                bank.ColData[1].value\r\n                                ? (bank.ColData[1].value | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Accounts Recievable\" id=\"balance-2\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                              *ngFor=\"let ar of AR\">\r\n                              <p>{{ ar.ColData[0].value ? ar.ColData[0].value : \"N/A\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                ar.ColData[1].value\r\n                                ? (ar.ColData[1].value | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Other Current Assets\" id=\"balance-3\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                              *ngFor=\"let otherAsset of otherAsset\">\r\n                              <p>{{ otherAsset.ColData[0].value ? otherAsset.ColData[0].value : \"N/A\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                otherAsset.ColData[1].value\r\n                                ? (otherAsset.ColData[1].value | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Summary\" id=\"expense-3\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalCurrentAssetsHead ? totalCurrentAssetsHead : \"Total Current Assets\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalCurrentAssetsValue\r\n                                ? (totalCurrentAssetsValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalAssetsHead ? totalAssetsHead : \"Total Expenses\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalAssetsValue\r\n                                ? (totalAssetsValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                    </ngb-accordion>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"Liabilitites And Equity\" id=\"static-3\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"row\">\r\n                  <div class=\"col-sm-12 mb-3\">\r\n                    <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"liable-1\">\r\n                      <ngb-panel title=\"Liabilitites\" id=\"liable-1\">\r\n                        <ng-template ngbPanelContent>\r\n                          <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"liablity-1\">\r\n                            <ngb-panel title=\"Account Payable\" id=\"liablity-1\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                                    *ngFor=\"let ap of AP\">\r\n                                    <p>{{ ap.ColData[0].value ? ap.ColData[0].value : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      ap.ColData[1].value\r\n                                      ? (ap.ColData[1].value | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalAPHead ? totalAPHead : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalAPValue\r\n                                      ? (totalAPValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                            <ngb-panel title=\"Credit Cards\" id=\"liablity-2\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                                    *ngFor=\"let CreditCard of CreditCards\">\r\n                                    <p>{{ CreditCard.ColData[0].value ? CreditCard.ColData[0].value : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      CreditCard.ColData[1].value\r\n                                      ? (CreditCard.ColData[1].value | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalCreditCardsHead ? totalCreditCardsHead : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalCreditCardsValue\r\n                                      ? (totalCreditCardsValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                            <ngb-panel title=\"Summary\" id=\"liablity-3\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalCurrentLiabilitiesHead ? totalCurrentLiabilitiesHead : \"Total Current Liabilities\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalCurrentLiabilitiesValue\r\n                                      ? (totalCurrentLiabilitiesValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalLiabilitiesHead ? totalLiabilitiesHead : \"Total Liabilities\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalLiabilitiesValue\r\n                                      ? (totalLiabilitiesValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                          </ngb-accordion>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Equities\" id=\"liable-2\">\r\n                        <ng-template ngbPanelContent>\r\n                          <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\" activeIds=\"equity1\">\r\n                            <ngb-panel title=\"Equity\" id=\"equity1\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\"\r\n                                    *ngFor=\"let equity of equities\">\r\n                                    <p>{{ equity.ColData[0].value ? equity.ColData[0].value : \"N/A\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      equity.ColData[1].value\r\n                                      ? (equity.ColData[1].value | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                            <ngb-panel title=\"Summary\" id=\"equity2\">\r\n                              <ng-template ngbPanelContent>\r\n                                <div class=\"row\">\r\n                                  <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                                    <p>{{ totalEquityHead ? totalEquityHead : \"Total Equity\" }}</p>\r\n                                    <p>\r\n                                      {{\r\n                                      totalEquityValue\r\n                                      ? (totalEquityValue | currency: \"USD\")\r\n                                      : \"N/A\"\r\n                                      }}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </ng-template>\r\n                            </ngb-panel>\r\n                          </ngb-accordion>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                      <ngb-panel title=\"Summary\" id=\"liable-2\">\r\n                        <ng-template ngbPanelContent>\r\n                          <div class=\"row\">\r\n                            <div class=\"col-sm-12 d-flex justify-content-between align-items-center\">\r\n                              <p>{{ totalLiabilitiesandEquityHead ? totalLiabilitiesandEquityHead : \"Total Current Assets\" }}</p>\r\n                              <p>\r\n                                {{\r\n                                totalLiabilitiesandEquityValue\r\n                                ? (totalLiabilitiesandEquityValue | currency: \"USD\")\r\n                                : \"N/A\"\r\n                                }}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </ng-template>\r\n                      </ngb-panel>\r\n                    </ngb-accordion>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n          </ngb-accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbPanelChangeEvent } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthService } from 'src/app/shared/services/firebase/auth.service';\r\nimport { LocalService } from 'src/app/shared/services/local.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-financial',\r\n  templateUrl: './financial.component.html',\r\n  styleUrls: ['./financial.component.scss']\r\n})\r\n\r\nexport class financialComponent implements OnInit {\r\n  companyid: any;\r\n  totalIncomeHead: string;\r\n  totalIncomeValue: number;\r\n  totalExpensesHead: string;\r\n  totalExpensesValue: number;\r\n  totalNetOperHead: string;\r\n  totalNetOperValue: number;\r\n  totalNetIncHead: string;\r\n  totalNetIncValue: number;\r\n  salesHead: string;\r\n  salesValue: number;\r\n  expenses: any = [];\r\n  bank: any = [];\r\n  AR: any = [];\r\n  otherAsset: any = [];\r\n  totalCurrentAssetsHead: string;\r\n  totalCurrentAssetsValue: number;\r\n  totalAssetsHead: string;\r\n  totalAssetsValue: number;\r\n  AP: any = [];\r\n  totalAPHead: string;\r\n  totalAPValue: number;\r\n  CreditCards: any = [];\r\n  totalCreditCardsHead: string;\r\n  totalCreditCardsValue: number;\r\n  totalLiabilitiesHead: string;\r\n  totalLiabilitiesValue: number;\r\n  totalCurrentLiabilitiesHead: string;\r\n  totalCurrentLiabilitiesValue: number;\r\n  equities: any = [];\r\n  totalEquityHead: string;\r\n  totalEquityValue: number;\r\n  totalLiabilitiesandEquityHead: string;\r\n  totalLiabilitiesandEquityValue: number;\r\n  constructor(private http: AuthService, private localService: LocalService, private toasterService: ToastrService) { }\r\n  ngOnInit(): void {\r\n    this.companyid = this.localService.getJsonValue(\"company\");\r\n    this.getFinancial()\r\n  }\r\n  getFinancial() {\r\n    this.http.getMonilyData(`report?entity=ProfitAndLoss&id=${this.companyid.id}`, true).subscribe((res: any) => {\r\n      console.log(res, \"hello financial response\");\r\n      if (res?.data != null) {\r\n        res?.data?.Rows.Row.map(e => {\r\n          if (e.hasOwnProperty('group')) {\r\n            if (e.group == \"Income\") {\r\n              e.Rows.Row.map(s => {\r\n                this.salesHead = s.ColData[0].value\r\n                this.salesValue = s.ColData[1].value\r\n              })\r\n              this.totalIncomeHead = e.Summary.ColData[0].value\r\n              this.totalIncomeValue = e.Summary.ColData[1].value\r\n            }\r\n            if (e.group == \"Expenses\") {\r\n              e.Rows.Row.map(ex => {\r\n                const expenseHead = ex.ColData[0].value\r\n                const expenseValue = ex.ColData[1].value\r\n                this.expenses.push({ expenseHead, expenseValue })\r\n              })\r\n              this.totalExpensesHead = e.Summary.ColData[0].value\r\n              this.totalExpensesValue = e.Summary.ColData[1].value\r\n            }\r\n            if (e.group == \"NetOperatingIncome\") {\r\n              this.totalNetOperHead = e.Summary.ColData[0].value\r\n              this.totalNetOperValue = e.Summary.ColData[1].value\r\n            }\r\n            if (e.group == \"NetIncome\") {\r\n              this.totalNetIncHead = e.Summary.ColData[0].value\r\n              this.totalNetIncValue = e.Summary.ColData[1].value\r\n            }\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n    this.http.getMonilyData(`report?entity=BalanceSheet&id=${this.companyid.id}`, true).subscribe((res: any) => {\r\n      console.log(res, \"hello financial response\");\r\n      if (res?.data != null) {\r\n        res?.data?.Rows.Row.map(b => {\r\n          if (b.hasOwnProperty('group')) {\r\n            if (b.group == \"TotalAssets\") {\r\n              b.Rows.Row.map(ba => {\r\n                ba.Rows.Row.map(balAss => {\r\n                  if (balAss.group == \"BankAccounts\") {\r\n                    balAss.Rows.Row.map(bank => {\r\n                      this.bank.push(bank)\r\n                    })\r\n                  }\r\n                  if (balAss.group == \"AR\") {\r\n                    balAss.Rows.Row.map(AR => {\r\n                      this.AR.push(AR)\r\n                    })\r\n                  }\r\n                  if (balAss.group == \"OtherCurrentAssets\") {\r\n                    balAss.Rows.Row.map(otherAsset => {\r\n                      this.otherAsset.push(otherAsset)\r\n                    })\r\n                  }\r\n                })\r\n                if (ba.group == 'CurrentAssets') {\r\n                  this.totalCurrentAssetsHead = ba.Summary.ColData[0].value;\r\n                  this.totalCurrentAssetsValue = ba.Summary.ColData[1].value;\r\n                }\r\n              })\r\n              if (b.group == 'TotalAssets') {\r\n                this.totalAssetsHead = b.Summary.ColData[0].value;\r\n                this.totalAssetsValue = b.Summary.ColData[1].value;\r\n              }\r\n            }\r\n            if (b.group == \"TotalLiabilitiesAndEquity\") {\r\n              b.Rows.Row.map(ba => {\r\n                if (ba.group == \"Liabilities\") {\r\n                  ba.Rows.Row.map(balAss => {\r\n                    if (balAss.group == \"CurrentLiabilities\") {\r\n                      balAss.Rows.Row.map(currentLiablities => {\r\n                        if (currentLiablities.group == \"AP\") {\r\n                          currentLiablities.Rows.Row.map(Ap => {\r\n                            this.AP.push(Ap)\r\n                          })\r\n                          this.totalAPHead = currentLiablities.Summary.ColData[0].value;\r\n                          this.totalAPValue = currentLiablities.Summary.ColData[1].value;\r\n                        }\r\n                        if (currentLiablities.group == \"CreditCards\") {\r\n                          currentLiablities.Rows.Row.map(CreditCards => {\r\n                            this.CreditCards.push(CreditCards)\r\n                          })\r\n                          this.totalCreditCardsHead = currentLiablities.Summary.ColData[0].value;\r\n                          this.totalCreditCardsValue = currentLiablities.Summary.ColData[1].value;\r\n                        }\r\n                      })\r\n                      this.totalCurrentLiabilitiesHead = balAss.Summary.ColData[0].value\r\n                      this.totalCurrentLiabilitiesValue = balAss.Summary.ColData[1].value\r\n                    }\r\n                  })\r\n                  this.totalLiabilitiesHead = ba.Summary.ColData[0].value\r\n                  this.totalLiabilitiesValue = ba.Summary.ColData[1].value\r\n                }\r\n                if (ba.group == \"Equity\") {\r\n                  ba.Rows.Row.map(equity => {\r\n                    this.equities.push(equity)\r\n                  })\r\n                  this.totalEquityHead = ba.Summary.ColData[0].value\r\n                  this.totalEquityValue = ba.Summary.ColData[1].value\r\n                }\r\n              })\r\n              console.log('====================================');\r\n              console.log(b, \"helloba\");\r\n              console.log('====================================');\r\n              this.totalLiabilitiesandEquityHead = b.Summary.ColData[0].value\r\n              this.totalLiabilitiesandEquityValue = b.Summary.ColData[1].value\r\n            }\r\n          }\r\n          console.log('====================================');\r\n          console.log(b, \"helloeu\");\r\n          console.log('====================================');\r\n        })\r\n      }\r\n      else {\r\n        this.toasterService.error(\"No data found, please try again after few minutes\")\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n\r\n    console.log('====================================');\r\n    console.log(this.bank,\r\n      this.CreditCards);\r\n    console.log('====================================');\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport {NgApexchartsModule } from 'ng-apexcharts'\r\nimport {financialComponent} from './financial.component'\r\nimport {financialRoutingModule} from './financial-routing.module'\r\n@NgModule({\r\n  declarations: [financialComponent],\r\n  imports: [\r\n    CommonModule,\r\n    financialRoutingModule,\r\n    NgxDropzoneModule,\r\n    CKEditorModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgApexchartsModule\r\n  ],\r\n})\r\nexport class financialModule { }\r\n"],"sourceRoot":"webpack:///"}