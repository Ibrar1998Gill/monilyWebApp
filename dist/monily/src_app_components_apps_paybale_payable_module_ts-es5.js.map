{"version":3,"sources":["webpack:///src/app/components/apps/paybale/payable-routing.module.ts","webpack:///src/app/components/apps/paybale/payable.component.html","webpack:///src/app/components/apps/paybale/payable.component.ts","webpack:///src/app/components/apps/paybale/payable.module.ts"],"names":["routes","path","children","component","payableComponent","payableRoutingModule","RouterModule","helperService","localService","http","toasterService","recentTransactions","top10Transactions","lastyear","format","startDate","Date","lastMonthStartDate","subtract","endDate","secondary_color","localStorage","getItem","primary_color","dueData","today","quarterMonth","Math","ceil","getMonth","times","value","bar","series","name","data","colors","chart","type","height","plotOptions","horizontal","dataLabels","enabled","xaxis","labels","formatter","categories","verticalBar","vertical","yaxis","timeSelected","companyid","getJsonValue","getpayments","currentSum","totalSum","currentNotDue","notDueSum","currentOverDue","overDueSum","last30DaysSum","last30DaysNotDue","last30DaysOverDue","last6MonthsSum","last6MonthsNotDue","last6MonthsOverDue","updateSeries","mtd","qtd","ytd","getMonilyData","id","replace","subscribe","res","console","log","Rows","Row","map","e","item","ColData","month","split","currentMonth","push","formatMinus","length","MTD","addItems","QTD","YTD","err","array","reduce","prev","curr","Number","payableModule","CommonModule","NgxDropzoneModule","NgSelectModule","FormsModule","ReactiveFormsModule","SharedModule","NgApexchartsModule","NgxDatatableModule","NgxPaginationModule"],"mappings":"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","file":"src_app_components_apps_paybale_payable_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { payableComponent } from './payable.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    children:[\r\n      {\r\n        path:'',\r\n        component:payableComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class payableRoutingModule { }\r\n","<app-breadcrumb\r\n  [title]=\"'Accounts Payable'\"\r\n  [active_item]=\"'Accounts Payable'\"\r\n></app-breadcrumb>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body default-accordion\">\r\n          <ngb-accordion\r\n            #acc=\"ngbAccordion\"\r\n            [closeOthers]=\"true\"\r\n            activeIds=\"static-1\"\r\n          >\r\n            <ngb-panel title=\"Payments\" id=\"static-1\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"card o-hidden cstmCard\">\r\n                  <div class=\"bg-primary b-r-4 card-body\">\r\n                    <div class=\"media static-top-widget flex-column\">\r\n                      <div class=\"media-body w-100\">\r\n                        <div class=\"row mt-3 mb-3\">\r\n                          <div class=\"col-sm-6\">\r\n                            <span class=\"m-0\">Yearly</span>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            \r\n                            <span class=\"mb-0 counter\">{{\r\n                              YTD ? (YTD | currency:'USD') : 0 | currency:'USD'\r\n                            }}</span>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row mt-3 mb-3\">\r\n                          <div class=\"col-sm-6\">\r\n                            <span class=\"m-0\">Quaterly</span>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            \r\n                            <span class=\"mb-0 counter\">{{\r\n                              QTD ? (QTD | currency:'USD') : 0 | currency:'USD'\r\n                            }}</span>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row mt-3 mb-3\">\r\n                          <div class=\"col-sm-6\">\r\n                            <span class=\"m-0\">Monthly</span>\r\n                          </div>\r\n                          <div class=\"col-sm-6\">\r\n                            \r\n                            <span class=\"mb-0 counter\">{{\r\n                              MTD\r\n                                ? (MTD | currency:'USD')\r\n                                : 0 | currency:'USD'\r\n                            }}</span>\r\n                          </div>\r\n                        </div>\r\n                        <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            \r\n            <!-- <ngb-panel title=\"Dues\" id=\"static-2\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12 d-flex justify-content-end\">\r\n                  <ng-select [(ngModel)]=\"timeSelected\" placeholder=\"Select\" (change)=\"selectTime()\">\r\n                    <ng-option *ngFor=\"let time of times\" [value]=\"time.value\">{{time.value}}</ng-option>\r\n                 </ng-select>\r\n                </div>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"card o-hidden cstmCard\">\r\n                    <div class=\"bg-primary b-r-4 card-body\">\r\n                      <div class=\"media static-top-widget\">\r\n                        <div class=\"media-body\">\r\n                          <span class=\"d-flex align-items-center\">\r\n                            <span class=\"mb-0 counter\">{{profitAndLoss + expensesBar | currency:'USD'}}</span>\r\n                          </span>\r\n                          <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n                          <div id=\"basic-bar\" class=\"mt-3\">\r\n                            <apx-chart #chart [series]=\"bar.series\" [chart]=\"bar.chart\" [dataLabels]=\"bar.dataLabels\"\r\n                              [plotOptions]=\"bar.plotOptions\" [xaxis]=\"bar.xaxis\" [colors]=\"bar.colors\"></apx-chart>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel> -->\r\n\r\n            <ngb-panel title=\"Payments Summary\" id=\"static-4\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">#</th>\r\n                          <th scope=\"col\">Date</th>\r\n                          <th scope=\"col\">Name</th>\r\n                          <th scope=\"col\">Memo/Description</th>\r\n                          <th scope=\"col\">Account</th>\r\n                          <th scope=\"col\">Amount</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr\r\n                          *ngFor=\"\r\n                            let due of dueData\r\n                              | paginate\r\n                                : {\r\n                                    itemsPerPage: 20,\r\n                                    currentPage: duePage,\r\n                                    totalItems: total\r\n                                  };let i = index\r\n                          \"\r\n                        >\r\n                          <th scope=\"row\">{{ i }}</th>\r\n                          <td>\r\n                            <label>{{ due?.ColData[0]?.value ? (due?.ColData[0]?.value | date: 'dd/MM/yyyy') : \"N/A\" }}</label>\r\n                          </td>\r\n                          <td><label class=\"descriptionCol\" ngbTooltip={{due?.ColData[4]?.value}}>{{ due?.ColData[4]?.value ? due?.ColData[4]?.value : \"N/A\" }}</label></td>\r\n                          <td><label class=\"descriptionCol\" ngbTooltip={{due?.ColData[6]?.value}}>{{ due?.ColData[6]?.value ? due?.ColData[6]?.value : \"N/A\" }}</label></td>\r\n                          <td><label>{{ due?.ColData[7]?.value ? due?.ColData[7]?.value : \"N/A\" }}</label></td>\r\n                          <td><label>{{ due?.ColData[9]?.value ? (formatMinus(due?.ColData[9]?.value) | currency : \"USD\") : (0 | currency: \"USD\") }}</label></td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <pagination-controls\r\n                      (pageChange)=\"duePage = $event\"\r\n                    ></pagination-controls>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <!-- <ngb-panel title=\"AP Aging\" id=\"static-3\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"card o-hidden cstmCard\">\r\n                    <div class=\"bg-primary b-r-4 card-body\">\r\n                      <div class=\"media static-top-widget\">\r\n                        <div class=\"media-body\">\r\n                          <span class=\"d-flex align-items-center\">\r\n                           <span class=\"mb-0 counter\">{{profitAndLoss + expensesBar | currency:'USD'}}</span>\r\n                          </span>\r\n                          <i class=\"icon-bg\" data-feather=\"dollar-sign\"></i>\r\n                          <div id=\"basic-bar\" class=\"mt-3\">\r\n                            <apx-chart #Verticalchart [series]=\"verticalBar.series\" [chart]=\"verticalBar.chart\" [dataLabels]=\"verticalBar.dataLabels\"\r\n                              [plotOptions]=\"verticalBar.plotOptions\" [xaxis]=\"verticalBar.xaxis\" [colors]=\"verticalBar.colors\"></apx-chart>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"Bill Due Summary\" id=\"static-4\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">#</th>\r\n                          <th scope=\"col\">Customer</th>\r\n                          <th scope=\"col\">Bill Total</th>\r\n                          <th scope=\"col\">Balance</th>\r\n                          <th scope=\"col\">Bill Date</th>\r\n                          <th scope=\"col\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr\r\n                          *ngFor=\"\r\n                            let due of dueData\r\n                              | paginate\r\n                                : {\r\n                                    itemsPerPage: 5,\r\n                                    currentPage: duePage,\r\n                                    totalItems: total\r\n                                  }\r\n                          \"\r\n                        >\r\n                          <th scope=\"row\">{{ due.id }}</th>\r\n                          <td>\r\n                            {{ due.Customer ? due.Customer : \"N/A\" }}\r\n                          </td>\r\n                          <td>{{ due.TotalAmt ? (due.TotalAmt | currency: \"USD\") : \"N/A\" }}</td>\r\n                          <td>{{ due.Amount ? (due.Amount | currency: \"USD\") : \"N/A\" }}</td>\r\n                          <td>{{ due.Date ? due.Date : \"N/A\" }}</td>\r\n                          <td>{{ due.pastDue ? (\"Overdue \" + due.pastDue + \" days\") : \"N/A\" }}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <pagination-controls\r\n                      (pageChange)=\"duePage = $event\"\r\n                    ></pagination-controls>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel>\r\n            <ngb-panel title=\"Bill paid summary\" id=\"static-5\">\r\n              <ng-template ngbPanelContent>\r\n                <div class=\"col-sm-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">#</th>\r\n                          <th scope=\"col\">Customer</th>\r\n                          <th scope=\"col\">Bill Total</th>\r\n                          <th scope=\"col\">Bill Date</th>\r\n                          <th scope=\"col\">Status</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr\r\n                          *ngFor=\"\r\n                            let paid of paidData\r\n                              | paginate\r\n                                : {\r\n                                    itemsPerPage: 5,\r\n                                    currentPage: paidPage,\r\n                                    totalItems: total\r\n                                  }\r\n                          \"\r\n                        >\r\n                          <th scope=\"row\">{{ paid.id }}</th>\r\n                          <td>\r\n                            {{ paid.Customer ? paid.Customer : \"N/A\" }}\r\n                          </td>\r\n                          <td>{{ paid.TotalAmt ? (paid.TotalAmt | currency: \"USD\") : \"N/A\" }}</td>\r\n                          <td>{{ paid.Date ? paid.Date : \"N/A\" }}</td>\r\n                          <td>Paid</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <pagination-controls\r\n                      (pageChange)=\"paidPage = $event\"\r\n                    ></pagination-controls>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n            </ngb-panel> -->\r\n          </ngb-accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\r\nimport * as moment from \"moment\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { AuthService } from \"src/app/shared/services/firebase/auth.service\";\r\nimport { HelperService } from \"src/app/shared/services/helper.service\";\r\nimport { LocalService } from \"src/app/shared/services/local.service\";\r\n\r\n@Component({\r\n  selector: \"app-payable\",\r\n  templateUrl: \"./payable.component.html\",\r\n  styleUrls: [\"./payable.component.scss\"],\r\n})\r\nexport class payableComponent implements OnInit {\r\n  @ViewChild(\"chart\") chart;\r\n  @ViewChild(\"Verticalchart\") Verticalchart;\r\n  public recentTransactions = []\r\n  public top10Transactions = []\r\n\r\n  lastyear: any = moment().format('YYYY')\r\n  startDate: any = moment(new Date(this.lastyear, 0, 1)).format('YYYY-MM-DD')\r\n  lastMonthStartDate: any = moment().subtract(1, \"month\").format('YYYY-MM-DD')\r\n  endDate: any = moment().format('YYYY-MM-DD')\r\n  secondary_color = localStorage.getItem(\"secondary_color\") || \"#f73164\";\r\n  primary_color = localStorage.getItem(\"primary_color\") || \"#5330ab\";\r\n  companyid;\r\n  bills;\r\n  formattedData;\r\n  barData;\r\n  totalSum;\r\n  last30DaysSum;\r\n  last6MonthsSum;\r\n  notDueSum;\r\n  last30DaysNotDue;\r\n  last6MonthsNotDue;\r\n  overDueSum;\r\n  dueDateHead;\r\n  paidHead;\r\n  dueData = [];\r\n  paidData;\r\n  last30DaysOverDue;\r\n  last6MonthsOverDue;\r\n  currentSum;\r\n  currentNotDue;\r\n  currentOverDue;\r\n  timeSelected;\r\n  today:any = new Date();\r\n  quarter:any\r\n  MTD:any;\r\n  YTD:any;\r\n  QTD:any;\r\n  quarterMonth:any = Math.ceil(this.today.getMonth() / 3);\r\n  times: any = [\r\n    { value: \"Last 12 months\" },\r\n    { value: \"Last 6 months\" },\r\n    { value: \"Last 30 days\" },\r\n  ];\r\n  bar: any = {\r\n    series: [\r\n      {\r\n        name: \"USD\",\r\n        data: [0, 0],\r\n      },\r\n    ],\r\n    colors: [this.secondary_color],\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 150,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n    },\r\n    xaxis: {\r\n      labels: {\r\n        formatter: function (value) {\r\n          return \"$\" + value;\r\n        },\r\n      },\r\n      categories: [\"Payments Overdue\", \"Payments not due yet\"],\r\n    },\r\n  };\r\n  verticalBar: any = {\r\n    series: [\r\n      {\r\n        name: \"USD\",\r\n        data: [],\r\n      },\r\n    ],\r\n    colors: [this.secondary_color],\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 150,\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        vertical: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        formatter: function (value) {\r\n          return '$' + value\r\n        }\r\n      }\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ],\r\n    },\r\n  };\r\n  constructor(\r\n    private helperService: HelperService,\r\n    private localService: LocalService,\r\n    private http: AuthService,\r\n    private toasterService: ToastrService\r\n  ) { }\r\n  ngOnInit(): void {\r\n    this.timeSelected = this.times[0].value;\r\n    this.companyid = this.localService.getJsonValue(\"company\");\r\n    // this.observe()\r\n    if (this.companyid != null) {\r\n      this.getpayments();\r\n      // this.selectTime();\r\n    } else return;\r\n  }\r\n  selectTime() {\r\n    if (this.timeSelected == \"Last 12 months\") {\r\n      this.currentSum = this.totalSum;\r\n      this.currentNotDue = this.notDueSum;\r\n      this.currentOverDue = this.overDueSum;\r\n    } else if (this.timeSelected == \"Last 30 days\") {\r\n      this.currentSum = this.last30DaysSum;\r\n      this.currentNotDue = this.last30DaysNotDue;\r\n      this.currentOverDue = this.last30DaysOverDue;\r\n    } else if (this.timeSelected == \"Last 6 months\") {\r\n      this.currentSum = this.last6MonthsSum;\r\n      this.currentNotDue = this.last6MonthsNotDue;\r\n      this.currentOverDue = this.last6MonthsOverDue;\r\n    }\r\n    this.bar.series[0].data[0] = this.currentOverDue;\r\n    this.bar.series[0].data[1] = this.currentNotDue;\r\n    this.chart?.updateSeries([\r\n      {\r\n        name: \"USD\",\r\n        data: [this.currentOverDue, this.currentNotDue],\r\n      },\r\n    ]);\r\n  }\r\n  getpayments() {\r\n    this.dueData = []\r\n    let mtd = []\r\n    let qtd = []\r\n    let ytd = []\r\n    this.http.getMonilyData(`report?entity=TransactionList&id=${this.companyid.id}&transaction_type=bill&start_date=${this.startDate.replace(/['\"]+/g, '')}&end_date=${this.endDate.replace(/['\"]+/g, '')}`,true).subscribe((res:any)=>{\r\n      console.log(res,this.startDate, this.endDate,\"resres\");\r\n      res?.data?.Rows?.Row?.map(e=>{\r\n        var item = e?.ColData?.[9]?.value\r\n        var month = e?.ColData?.[0]?.value.split('-')[1]\r\n        var currentMonth = moment().format(\"MM\")\r\n        if(e?.ColData[9]?.value < 0){\r\n          this.dueData.push(e)\r\n          ytd.push(this.formatMinus(item))\r\n          if(this.quarterMonth == 1 && (month >= 1 && month <= 3)){\r\n            qtd.push(this.formatMinus(item))\r\n          }\r\n          if(this.quarterMonth == 2 && (month >= 4 && month <= 6)){\r\n            qtd.push(this.formatMinus(item))\r\n          }\r\n          if(this.quarterMonth == 3 && (month >= 7 && month <= 9)){\r\n            qtd.push(this.formatMinus(item))\r\n          }\r\n          if(this.quarterMonth == 4 && (month >= 10 && month <= 12)){\r\n            qtd.push(this.formatMinus(item))\r\n          }\r\n          if(month == currentMonth){\r\n            mtd.push(this.formatMinus(item))\r\n          }\r\n        }\r\n      })\r\n      if(mtd?.length > 0) {this.MTD = this.addItems(mtd)}\r\n      if(qtd?.length > 0) {this.QTD = this.addItems(qtd)}\r\n      if(ytd?.length > 0) {this.YTD = this.addItems(ytd)}\r\n    }),err=>{\r\n      console.log(err);\r\n    }\r\n  }\r\n  formatMinus(value){\r\n    return value?.replace(/-/g, '');\r\n  }\r\n  addItems(array){\r\n   return array?.reduce(function(prev, curr){\r\n      return (Number(prev) || 0) + (Number(curr) || 0);\r\n  });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport {NgApexchartsModule } from 'ng-apexcharts'\r\nimport { payableRoutingModule } from './payable-routing.module';\r\nimport { payableComponent } from './payable.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n@NgModule({\r\n  declarations: [payableComponent],\r\n  imports: [\r\n    CommonModule,\r\n    payableRoutingModule,\r\n    NgxDropzoneModule,\r\n    NgSelectModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgApexchartsModule,\r\n    NgxDatatableModule,\r\n    NgxPaginationModule\r\n  ],\r\n})\r\nexport class payableModule { }\r\n"]}